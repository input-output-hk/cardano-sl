version: 0.2.{build}
image: Visual Studio 2015

build: off

environment:
  global:
    # Avoid long paths on Windows
    STACK_ROOT: "c:\\sr"
    STACK_WORK: ".stack-work"
    CSL_SYSTEM_TAG: "win64"
    CACHE_DIR: "c:\\cache"

init:
  - SET BRANCH_CACHE_DIR=%CACHE_DIR%\%APPVEYOR_REPO_BRANCH:/=_%
  - SET CACHED_STACK_ROOT=%BRANCH_CACHE_DIR%\sr
  - SET CACHED_STACK_WORK=%BRANCH_CACHE_DIR%\sw

cache:
  # TODO: https://github.com/commercialhaskell/stack/issues/1176#issuecomment-269520803

  # Appveyor's cache is shared across all branch/PR builds for this project, so
  # dependency/version differences can corrupt the cache. To fix that, we store
  # copies of %STACK_ROOT% and .stack-work in the cache namespaced by branch,
  # but only from branch builds. PR builds, which could make arbitrary changes
  # to the dependency closure, are not allowed to update the cache; however,
  # they get read access to the cache.

  # Another quirk of Appveyor's cache is any cache directory not listed here
  # gets deleted at the end of the build. The hardcoded branch directories will
  # be preserved, even when building a branch which isn't listed. Managing
  # hardcoded branches is necessary because there's an upper limit on supported
  # cache size of any single cache directory. Branches which don't appear
  # explicitly here are optimistically cached for consecutive builds on the same
  # branch; however, their cache directories will be deleted whenever a
  # different branch is built.
  - "%BRANCH_CACHE_DIR%"        # e.g. C:\cache\feature_abc123
  - "%CACHE_DIR%\\master"
  - "%CACHE_DIR%\\cardano-sl-0.2"
  # Add more "%CACHE_DIR%\\<branch_name>" directories as needed

before_test:
- Echo %APPVEYOR_BUILD_VERSION% > build-id
- Echo BRANCH_CACHE_DIR = %BRANCH_CACHE_DIR%
- IF EXIST %CACHE_DIR% dir %CACHE_DIR%
- IF EXIST %CACHED_STACK_ROOT% xcopy /q /s /e /r /k /i /v /h /y %CACHED_STACK_ROOT% %STACK_ROOT%
- IF EXIST %CACHED_STACK_WORK% xcopy /q /s /e /r /k /i /v /h /y %CACHED_STACK_WORK% %STACK_WORK%
- ps: Install-Product node 7
# Install stack
- curl -sSL -o stack.zip --insecure http://www.stackage.org/stack/windows-x86_64
- 7z x stack.zip stack.exe


# Install rocksdb
- git clone https://github.com/facebook/rocksdb.git --branch v4.13.5
- ps: Start-FileDownload 'https://ci.appveyor.com/api/buildjobs/kbpteb8j55p6sa2m/artifacts/rocksdb%2Fbuild%2FRocksdb.zip' -FileName rocksdb.zip
- 7z x rocksdb.zip

test_script:
  - stack setup --no-reinstall
  # Retry transient failures due to https://github.com/haskell/cabal/issues/4005
  - scripts\appveyor-retry call stack --no-terminal --local-bin-path daedalus
      install -j 2 --test --no-haddock-deps --bench --no-run-benchmarks
      --flag cardano-sl:with-web
      --flag cardano-sl:with-wallet
      --flag cardano-sl:-asserts
      --flag cardano-sl:-dev-mode
      --extra-include-dirs="C:\OpenSSL-Win64\include"
      --extra-lib-dirs="C:\OpenSSL-Win64"
      --extra-include-dirs="C:\projects\pos-haskell-prototype\rocksdb\include"
      --extra-lib-dirs="C:\projects\pos-haskell-prototype"
  - stack exec -- cardano-wallet-hs2purs
  - copy log-config-prod.yaml daedalus\log-config-prod.yaml
  - cd daedalus
  - Echo %APPVEYOR_BUILD_VERSION% > build-id
  - ps: Install-Product node 7
  - ..\scripts\appveyor-retry call npm install
  - npm run build:prod

after_test:
 - IF NOT DEFINED APPVEYOR_PULL_REQUEST_NUMBER IF EXIST %STACK_ROOT% xcopy /q /s /e /r /k /i /v /h /y %STACK_ROOT% %CACHED_STACK_ROOT%
 - IF NOT DEFINED APPVEYOR_PULL_REQUEST_NUMBER IF EXIST %STACK_WORK% xcopy /q /s /e /r /k /i /v /h /y %STACK_WORK% %CACHED_STACK_WORK%

artifacts:
  - path: daedalus/
    name: CardanoSL
    type: zip

notifications:
  - provider: Slack
    incoming_webhook:
      secure: 3KXYR8gCzuhyML2adCU1HayVFPi5TfDUhiQcffkf8QNcwqmZRL+IY/idxf951NNYJ8+GJQDhek7LWLhKrr4d08J9erBw8GePrCwTaBfwQkQ=
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: true
