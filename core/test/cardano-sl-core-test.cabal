name:                cardano-sl-core-test
version:             3.0.0
synopsis:            Cardano SL - core functionality (tests)
description:         QuickCheck Arbitrary instances for the Cardano SL core
                     functionality.
license:             MIT
license-file:        LICENSE
author:              IOHK
maintainer:          IOHK <support@iohk.io>
copyright:           2018 IOHK
category:            Currency
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:
                       Test.Pos.Core.Bi
                       Test.Pos.Core.Chrono
                       Test.Pos.Core.Dummy
                       Test.Pos.Core.ExampleHelpers
                       Test.Pos.Core.Gen
                       Test.Pos.Core.Arbitrary
                       Test.Pos.Core.Arbitrary.Unsafe
                       Test.Pos.Core.Arbitrary.Slotting
                       Test.Pos.Core.Json
                       Test.Pos.Core.SafeCopy

  build-depends:       QuickCheck
                     , base
                     , bytestring
                     , cardano-crypto
                     , cardano-sl-binary
                     , cardano-sl-binary-test
                     , cardano-sl-core
                     , cardano-sl-crypto
                     , cardano-sl-crypto-test
                     , cardano-sl-util
                     , cardano-sl-util-test
                     , containers
                     , cryptonite
                     , generic-arbitrary
                     , hedgehog
                     , quickcheck-instances
                     , random
                     , serokell-util
                     , text
                     , time-units
                     , universum
                     , unordered-containers

  default-language:    Haskell2010

  default-extensions:  DeriveDataTypeable
                       DeriveGeneric
                       DeriveFunctor
                       DeriveFoldable
                       DeriveTraversable
                       GeneralizedNewtypeDeriving
                       StandaloneDeriving
                       FlexibleContexts
                       FlexibleInstances
                       MultiParamTypeClasses
                       FunctionalDependencies
                       DefaultSignatures
                       NoImplicitPrelude
                       OverloadedStrings
                       TypeApplications
                       TupleSections
                       ViewPatterns
                       LambdaCase
                       MultiWayIf
                       ConstraintKinds
                       UndecidableInstances
                       BangPatterns
                       TemplateHaskell
                       ScopedTypeVariables
                       MonadFailDesugaring
                       GADTs

  ghc-options:
                       -O2
                       -Wall
