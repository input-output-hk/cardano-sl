name:                cardano-sl-core-test
version:             1.0.0
synopsis:            Cardano SL - arbitrary instances for cardano-sl-core
description:         Cardano SL - arbitrary instances for cardano-sl-core
license:             MIT
license-file:        LICENSE
author:              Rupert Horlick
maintainer:          rupert.horlick@iohk.io
copyright:           2018 IOHK
category:            Currency
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:
                       Test.Pos.Core.Arbitrary
                       Test.Pos.Core.Arbitrary.Unsafe

  build-depends:       QuickCheck
                     , base
                     , bytestring
                     , cardano-sl-binary
                     , cardano-sl-core
                     , cardano-sl-crypto
                     , cardano-sl-crypto-test
                     , cardano-sl-util
                     , cardano-sl-util-test
                     , containers
                     , data-default
                     , generic-arbitrary
                     , quickcheck-instances
                     , random
                     , time-units
                     , universum
                     , vector

  default-language:    Haskell2010

  default-extensions:  DeriveDataTypeable
                       DeriveGeneric
                       GeneralizedNewtypeDeriving
                       StandaloneDeriving
                       FlexibleContexts
                       FlexibleInstances
                       MultiParamTypeClasses
                       FunctionalDependencies
                       DefaultSignatures
                       NoImplicitPrelude
                       OverloadedStrings
                       RecordWildCards
                       TypeApplications
                       TupleSections
                       ViewPatterns
                       LambdaCase
                       MultiWayIf
                       ConstraintKinds
                       UndecidableInstances
                       BangPatterns
                       TemplateHaskell
                       ScopedTypeVariables
                       MonadFailDesugaring

  ghc-options:         -Wall
                       -O2
