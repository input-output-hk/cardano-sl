# Generated using stack2nix 0.1.3.1.
#
# Only works with sufficiently recent nixpkgs, e.g. "NIX_PATH=nixpkgs=https://github.com/NixOS/nixpkgs/archive/21a8239452adae3a4717772f4e490575586b2755.tar.gz".

{ pkgs ? (import <nixpkgs> {})
, compiler ? pkgs.haskell.packages.ghc822
}:

with pkgs.haskell.lib;

let
  stackPackages = { pkgs, stdenv, callPackage }:
    self: {
array = null;
base = null;
binary = null;
bytestring = null;
containers = null;
deepseq = null;
filepath = null;
ghc-boot-th = null;
ghc-prim = null;
hoopl = null;
integer-gmp = null;
pretty = null;
rts = null;
template-haskell = null;
terminfo = null;
time = null;
transformers = null;
unix = null;
"ALUT" = callPackage
({
  mkDerivation
, base
, freealut
, OpenAL
, StateVar
, stdenv
, transformers
}:
mkDerivation {

pname = "ALUT";
version = "2.4.0.2";
sha256 = "b8364da380f5f1d85d13e427851a153be2809e1838d16393e37566f34b384b87";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
OpenAL
StateVar
transformers
];
librarySystemDepends = [
freealut
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-openal/ALUT";
description = "A binding for the OpenAL Utility Toolkit";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) freealut;};
"ANum" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ANum";
version = "0.2.0.2";
sha256 = "f6ae0d1b663100a2aa3dfdab12f4af0851408659eb5c2f78b8b443b0d29dbb1a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/ANum#readme";
description = "Num instance for Applicatives provided via the ANum newtype";
license = stdenv.lib.licenses.bsd3;

}) {};
"Agda" = callPackage
({
  mkDerivation
, alex
, array
, async
, base
, binary
, blaze-html
, boxes
, bytestring
, containers
, cpphs
, data-hash
, deepseq
, directory
, EdisonCore
, edit-distance
, emacs
, equivalence
, filepath
, geniplate-mirror
, gitrev
, happy
, hashable
, hashtables
, haskeline
, ieee754
, monadplus
, mtl
, murmur-hash
, parallel
, pretty
, process
, regex-tdfa
, stdenv
, stm
, strict
, template-haskell
, text
, time
, transformers
, unordered-containers
, uri-encode
, zlib
}:
mkDerivation {

pname = "Agda";
version = "2.5.3";
sha256 = "aa14d4a3582013100f71e64d71c5deff6caa2a286083e20fc16f6dbb0fdf0065";
revision = "5";
editedCabalFile = "0cly9p549phqv86dlqacxrs2w50y5jmsw21657gpn84ryz3cmjbs";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
async
base
binary
blaze-html
boxes
bytestring
containers
data-hash
deepseq
directory
EdisonCore
edit-distance
equivalence
filepath
geniplate-mirror
gitrev
hashable
hashtables
haskeline
ieee754
monadplus
mtl
murmur-hash
parallel
pretty
process
regex-tdfa
stm
strict
template-haskell
text
time
transformers
unordered-containers
uri-encode
zlib
];
libraryToolDepends = [
alex
cpphs
happy
];
executableHaskellDepends = [
base
directory
filepath
process
];
executableToolDepends = [
emacs
];
doHaddock = false;
doCheck = false;
postInstall = ''
  files=("$data/share/ghc-"*"/"*"-ghc-"*"/Agda-"*"/lib/prim/Agda/"{Primitive.agda,Builtin"/"*.agda})
  for f in "''${files[@]}" ; do
    $out/bin/agda $f
  done
  for f in "''${files[@]}" ; do
    $out/bin/agda -c --no-main $f
  done
  $out/bin/agda-mode compile
'';
homepage = "http://wiki.portal.chalmers.se/agda/";
description = "A dependently typed functional programming language and proof assistant";
license = "unknown";

}) {};
"BiobaseNewick" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, binary
, cereal
, cereal-text
, cmdargs
, containers
, fgl
, ForestStructures
, QuickCheck
, stdenv
, text
, text-binary
, vector
}:
mkDerivation {

pname = "BiobaseNewick";
version = "0.0.0.2";
sha256 = "6432f684a75fd8a2cea59a5359a59f48020ead19119efaed7018ecae726d13bd";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
binary
cereal
cereal-text
containers
fgl
ForestStructures
QuickCheck
text
text-binary
vector
];
executableHaskellDepends = [
base
cmdargs
ForestStructures
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/choener/BiobaseNewick";
description = "Newick file format parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"Boolean" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "Boolean";
version = "0.2.4";
sha256 = "67216013b02b8ac5b534a1ef25f409f930eea1a85eae801933a01ad43145eef8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Generalized booleans and numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"BoundedChan" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "BoundedChan";
version = "1.0.3.0";
sha256 = "531ceaed7f62844c2a63a7cbfdcab332ea5eaa218e9922ca3305580438adc46d";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
description = "Implementation of bounded channels";
license = stdenv.lib.licenses.bsd3;

}) {};
"Cabal" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, containers
, deepseq
, directory
, filepath
, pretty
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "Cabal";
version = "2.0.1.1";
sha256 = "802bc6d0113fdb734ea938ad2aadc14f590e372b55d56be6712de319bb343d1b";
revision = "1";
editedCabalFile = "17ydppw8x5cx5whrs44yxirh7xgcaa6gzvxmlgqnbalcf8wkj23l";
libraryHaskellDepends = [
array
base
binary
bytestring
containers
deepseq
directory
filepath
pretty
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/cabal/";
description = "A framework for packaging Haskell software";
license = stdenv.lib.licenses.bsd3;

}) {};
"ChannelT" = callPackage
({
  mkDerivation
, base
, free
, mmorph
, mtl
, stdenv
, transformers-base
}:
mkDerivation {

pname = "ChannelT";
version = "0.0.0.7";
sha256 = "3e215d425e3cfccf2e4d84b1402fb39a2081cb33b6556059db616e722a7c77a0";
libraryHaskellDepends = [
base
free
mmorph
mtl
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pthariensflame/ChannelT";
description = "Generalized stream processors";
license = stdenv.lib.licenses.bsd3;

}) {};
"Chart" = callPackage
({
  mkDerivation
, array
, base
, colour
, data-default-class
, lens
, mtl
, old-locale
, operational
, stdenv
, time
, vector
}:
mkDerivation {

pname = "Chart";
version = "1.8.3";
sha256 = "c1c749007245f016d421793b62868651e2222c7bebcd557a6db35eb1a023468f";
revision = "1";
editedCabalFile = "1z4vpzdhphd6qdab73ar7a7yn3x6z4602ffgai2mccc02w5412fl";
libraryHaskellDepends = [
array
base
colour
data-default-class
lens
mtl
old-locale
operational
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/timbod7/haskell-chart/wiki";
description = "A library for generating 2D Charts and Plots";
license = stdenv.lib.licenses.bsd3;

}) {};
"Chart-cairo" = callPackage
({
  mkDerivation
, array
, base
, cairo
, Chart
, colour
, data-default-class
, lens
, mtl
, old-locale
, operational
, stdenv
, time
}:
mkDerivation {

pname = "Chart-cairo";
version = "1.8.3";
sha256 = "2455baf9bdfae5955d9844906135eeaaa1043b7762b08a0e5048ec3d6d980195";
libraryHaskellDepends = [
array
base
cairo
Chart
colour
data-default-class
lens
mtl
old-locale
operational
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/timbod7/haskell-chart/wiki";
description = "Cairo backend for Charts";
license = stdenv.lib.licenses.bsd3;

}) {};
"Chart-diagrams" = callPackage
({
  mkDerivation
, base
, blaze-markup
, bytestring
, Chart
, colour
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, diagrams-postscript
, diagrams-svg
, lens
, mtl
, old-locale
, operational
, stdenv
, svg-builder
, SVGFonts
, text
, time
}:
mkDerivation {

pname = "Chart-diagrams";
version = "1.8.2";
sha256 = "ca181dec04bac1029101dd75951f48710ebc42f5333e06c57943e3245bba9f41";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
blaze-markup
bytestring
Chart
colour
containers
data-default-class
diagrams-core
diagrams-lib
diagrams-postscript
diagrams-svg
lens
mtl
old-locale
operational
svg-builder
SVGFonts
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/timbod7/haskell-chart/wiki";
description = "Diagrams backend for Charts";
license = stdenv.lib.licenses.bsd3;

}) {};
"ChasingBottoms" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, QuickCheck
, random
, stdenv
, syb
}:
mkDerivation {

pname = "ChasingBottoms";
version = "1.3.1.4";
sha256 = "639867018f33a645305ff60f1bf9ecca2efea4ac630d8c8f9fd72d064db79e19";
libraryHaskellDepends = [
base
containers
mtl
QuickCheck
random
syb
];
doHaddock = false;
doCheck = false;
description = "For testing partial and infinite values";
license = stdenv.lib.licenses.mit;

}) {};
"Clipboard" = callPackage
({
  mkDerivation
, base
, directory
, stdenv
, unix
, utf8-string
, X11
}:
mkDerivation {

pname = "Clipboard";
version = "2.3.2.0";
sha256 = "3f82c8183a599025c5199ba50d0661512683e9cf29e6054858f1abe2ab8b25b7";
libraryHaskellDepends = [
base
directory
unix
utf8-string
X11
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Clipboard";
description = "System clipboard interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"ClustalParser" = callPackage
({
  mkDerivation
, base
, cmdargs
, either-unwrap
, parsec
, stdenv
, text
, vector
}:
mkDerivation {

pname = "ClustalParser";
version = "1.2.3";
sha256 = "fed67bdcb9d89d871b02f556e5a294d0ea6fd05576f92621a8797abff4325a72";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
text
vector
];
executableHaskellDepends = [
base
cmdargs
either-unwrap
];
doHaddock = false;
doCheck = false;
description = "Libary for parsing Clustal tools output";
license = stdenv.lib.licenses.gpl3;

}) {};
"ConfigFile" = callPackage
({
  mkDerivation
, base
, containers
, MissingH
, mtl
, parsec
, stdenv
}:
mkDerivation {

pname = "ConfigFile";
version = "1.1.4";
sha256 = "ae087b359ff2945a62b671449227e0a811d143ee651179f4e7e9c66548e0f514";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
MissingH
mtl
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://software.complete.org/configfile";
description = "Configuration file reading & writing";
license = stdenv.lib.licenses.bsd3;

}) {};
"DAV" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, data-default
, exceptions
, haskeline
, http-client
, http-client-tls
, http-types
, lens
, mtl
, network
, network-uri
, optparse-applicative
, stdenv
, transformers
, transformers-base
, transformers-compat
, utf8-string
, xml-conduit
, xml-hamlet
}:
mkDerivation {

pname = "DAV";
version = "1.3.2";
sha256 = "613314357579b29e1d3fa8451b51e8b9a1307a2b33b65a3f2b2ef2bece025169";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
data-default
exceptions
http-client
http-client-tls
http-types
lens
mtl
transformers
transformers-base
transformers-compat
utf8-string
xml-conduit
xml-hamlet
];
executableHaskellDepends = [
base
bytestring
case-insensitive
containers
data-default
exceptions
haskeline
http-client
http-client-tls
http-types
lens
mtl
network
network-uri
optparse-applicative
transformers
transformers-base
transformers-compat
utf8-string
xml-conduit
xml-hamlet
];
doHaddock = false;
doCheck = false;
homepage = "http://floss.scru.org/hDAV";
description = "RFC 4918 WebDAV support";
license = stdenv.lib.licenses.gpl3;

}) {};
"DRBG" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, cipher-aes128
, crypto-api
, cryptohash-cryptoapi
, entropy
, mtl
, parallel
, prettyclass
, stdenv
, tagged
}:
mkDerivation {

pname = "DRBG";
version = "0.5.5";
sha256 = "21df3202486cc83c7cc3f867cb139eac9a3f69bd91b5f6b016ae026e03c33bfd";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
cipher-aes128
crypto-api
cryptohash-cryptoapi
entropy
mtl
parallel
prettyclass
tagged
];
doHaddock = false;
doCheck = false;
description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
license = stdenv.lib.licenses.bsd3;

}) {};
"Decimal" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "Decimal";
version = "0.5.1";
sha256 = "575ca5c65a8ea5a5bf2cd7b794a0d16622082cb501bf4b0327c5895c0b80f34c";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
description = "Decimal numbers with variable precision";
license = stdenv.lib.licenses.bsd3;

}) {};
"Diff" = callPackage
({
  mkDerivation
, array
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "Diff";
version = "0.3.4";
sha256 = "77b7daec5a79ade779706748f11b4d9b8f805e57a68e7406c3b5a1dee16e0c2f";
libraryHaskellDepends = [
array
base
pretty
];
doHaddock = false;
doCheck = false;
description = "O(ND) diff algorithm in haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"Earley" = callPackage
({
  mkDerivation
, base
, ListLike
, stdenv
}:
mkDerivation {

pname = "Earley";
version = "0.12.1.0";
sha256 = "731493be9cb960c3159458dc24b1a217d6f26e1f46a840bef880accd04d5bd1d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ListLike
];
doHaddock = false;
doCheck = false;
description = "Parsing all context-free grammars using Earley's algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"Ebnf2ps" = callPackage
({
  mkDerivation
, array
, base
, containers
, directory
, happy
, old-time
, stdenv
, unix
}:
mkDerivation {

pname = "Ebnf2ps";
version = "1.0.15";
sha256 = "0ecce7d721d6c8993fa6ba6cfb16f1101d85e00bbaf0b6941d36a00badea2b4b";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
array
base
containers
directory
old-time
unix
];
executableToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/FranklinChen/Ebnf2ps";
description = "Peter's Syntax Diagram Drawing Tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"EdisonAPI" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "EdisonAPI";
version = "1.3.1";
sha256 = "95a3b8d01599520a50456219b5a2e9f7832bcddaaeb8e94ce777bd87a4a6b56e";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://rwd.rdockins.name/edison/home/";
description = "A library of efficient, purely-functional data structures (API)";
license = stdenv.lib.licenses.mit;

}) {};
"EdisonCore" = callPackage
({
  mkDerivation
, array
, base
, containers
, EdisonAPI
, mtl
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "EdisonCore";
version = "1.3.2.1";
sha256 = "73c6014d07107a9ed21df76a59f70c9d68d64ac84cced35f7b628f1d792cf239";
libraryHaskellDepends = [
array
base
containers
EdisonAPI
mtl
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "http://rwd.rdockins.name/edison/home/";
description = "A library of efficient, purely-functional data structures (Core Implementations)";
license = stdenv.lib.licenses.mit;

}) {};
"FPretty" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "FPretty";
version = "1.1";
sha256 = "b8ac0122e923b0e20cee6ba77ffb07dfeaa96a194cdc1622808e97f443a8eb42";
revision = "1";
editedCabalFile = "0d6mjr7b37f5bgjijjgx4x4fgfmkbhksphzkaf0p5jyzxp45fasc";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.kent.ac.uk/~oc/pretty.html";
description = "Efficient simple pretty printing combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"FenwickTree" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
, template-haskell
}:
mkDerivation {

pname = "FenwickTree";
version = "0.1.2.1";
sha256 = "9c172d62b24365e663a0355e8eaa34362a1a769c18a64391939a9b50e384f03c";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
QuickCheck
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mgajda/FenwickTree";
description = "Data structure for fast query and update of cumulative sums";
license = stdenv.lib.licenses.bsd3;

}) {};
"FindBin" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "FindBin";
version = "0.0.5";
sha256 = "279c7967e0803ca3b9a0a1956ce7ba9b9a2294eb9f971bea8a557b5f80ddfda4";
libraryHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/audreyt/findbin";
description = "Locate directory of original program";
license = stdenv.lib.licenses.bsd3;

}) {};
"FloatingHex" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "FloatingHex";
version = "0.4";
sha256 = "b277054db48d2dec62e3831586f218cbe0a056dec44dbc032e9a73087425a24c";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Read and write hexadecimal floating point numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"FontyFruity" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, directory
, filepath
, stdenv
, text
, vector
, xml
}:
mkDerivation {

pname = "FontyFruity";
version = "0.5.3.3";
sha256 = "b0d06e7c5eb1aa7ffd11a85598df05d034bab3a83130fdf37121f89136e0025c";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
directory
filepath
text
vector
xml
];
doHaddock = false;
doCheck = false;
description = "A true type file format loader";
license = stdenv.lib.licenses.bsd3;

}) {};
"ForestStructures" = callPackage
({
  mkDerivation
, base
, containers
, fgl
, QuickCheck
, stdenv
, unordered-containers
, vector
, vector-th-unbox
}:
mkDerivation {

pname = "ForestStructures";
version = "0.0.0.2";
sha256 = "fe74067fee601844de5c839a115f2bd75d4a1be9f0ee8ec42c0150bcf886693f";
libraryHaskellDepends = [
base
containers
fgl
QuickCheck
unordered-containers
vector
vector-th-unbox
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/choener/ForestStructures";
description = "Tree- and forest structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"Frames" = callPackage
({
  mkDerivation
, base
, ghc-prim
, pipes
, pipes-bytestring
, pipes-group
, pipes-parse
, pipes-safe
, pipes-text
, primitive
, readable
, stdenv
, template-haskell
, text
, transformers
, vector
, vinyl
}:
mkDerivation {

pname = "Frames";
version = "0.3.0.2";
sha256 = "26a1b821f1dca29ac25c6c964984cba1cca3db0176c73271b545e2e8dac00da8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ghc-prim
pipes
pipes-bytestring
pipes-group
pipes-parse
pipes-safe
pipes-text
primitive
readable
template-haskell
text
transformers
vector
vinyl
];
doHaddock = false;
doCheck = false;
description = "Data frames For working with tabular data files";
license = stdenv.lib.licenses.bsd3;

}) {};
"GLFW-b" = callPackage
({
  mkDerivation
, base
, bindings-GLFW
, deepseq
, stdenv
}:
mkDerivation {

pname = "GLFW-b";
version = "1.4.8.3";
sha256 = "3fa532d7ce744ee2d304c3b15633ae3da99d2b43aeac880b4b9883b3a732b705";
libraryHaskellDepends = [
base
bindings-GLFW
deepseq
];
doHaddock = false;
doCheck = false;
description = "Bindings to GLFW OpenGL library";
license = stdenv.lib.licenses.bsd3;

}) {};
"GLURaw" = callPackage
({
  mkDerivation
, base
, libGL
, libGLU
, OpenGLRaw
, stdenv
, transformers
}:
mkDerivation {

pname = "GLURaw";
version = "2.0.0.4";
sha256 = "b863fd5cb26b1a37afb66ef8a81c0335bc073d33b0a67ec5190dfc62cb885dc4";
libraryHaskellDepends = [
base
OpenGLRaw
transformers
];
librarySystemDepends = [
libGL
libGLU
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A raw binding for the OpenGL graphics system";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libGL; inherit (pkgs) libGLU;};
"GLUT" = callPackage
({
  mkDerivation
, array
, base
, containers
, OpenGL
, StateVar
, stdenv
, transformers
}:
mkDerivation {

pname = "GLUT";
version = "2.7.0.13";
sha256 = "3d217c0ee5e040992ebc278f5e20911460202a6e13767c8a0ddb01ef4adabac8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
containers
OpenGL
StateVar
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A binding for the OpenGL Utility Toolkit";
license = stdenv.lib.licenses.bsd3;

}) {};
"GPipe" = callPackage
({
  mkDerivation
, base
, Boolean
, containers
, exception-transformers
, gl
, hashtables
, linear
, stdenv
, transformers
}:
mkDerivation {

pname = "GPipe";
version = "2.2.3";
sha256 = "77baca8d7a7933d069a3b20d6a16270e8560f1f6aff941c950e71a180e1976a5";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
Boolean
containers
exception-transformers
gl
hashtables
linear
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tobbebex/GPipe-Core#readme";
description = "Typesafe functional GPU graphics programming";
license = stdenv.lib.licenses.mit;

}) {};
"Genbank" = callPackage
({
  mkDerivation
, base
, biocore
, biofasta
, bytestring
, cmdargs
, parsec
, split
, stdenv
}:
mkDerivation {

pname = "Genbank";
version = "1.0.3";
sha256 = "2baf631ac851b1c29ba531ae1c16b8ba3c4b672bac9d4840a3b9afc0a89d2b93";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
biocore
biofasta
bytestring
parsec
split
];
executableHaskellDepends = [
base
cmdargs
];
doHaddock = false;
doCheck = false;
description = "Libary for processing the NCBI genbank format";
license = "GPL";

}) {};
"GenericPretty" = callPackage
({
  mkDerivation
, base
, ghc-prim
, pretty
, stdenv
}:
mkDerivation {

pname = "GenericPretty";
version = "1.2.2";
sha256 = "eeea7ae7081f866de6a83ab8c4c335806b8cbb679d85e416e6224384ffcdae3c";
libraryHaskellDepends = [
base
ghc-prim
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RazvanRanca/GenericPretty";
description = "A generic, derivable, haskell pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"Glob" = callPackage
({
  mkDerivation
, base
, containers
, directory
, dlist
, filepath
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "Glob";
version = "0.9.2";
sha256 = "8fc7134e9a930dd53fd168f200bde8ca07905365788f70adc6a1a4c413667ce5";
libraryHaskellDepends = [
base
containers
directory
dlist
filepath
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://iki.fi/matti.niemenmaa/glob/";
description = "Globbing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"H" = callPackage
({
  mkDerivation
, base
, bytestring
, cmdargs
, file-embed
, inline-r
, pretty
, process
, stdenv
, temporary
, vector
}:
mkDerivation {

pname = "H";
version = "0.9.0.1";
sha256 = "5fc04dfefcac9f6882cea9e65755479f7b1d853618c89258a005df63c8d57134";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
cmdargs
file-embed
inline-r
pretty
process
temporary
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://tweag.github.io/HaskellR";
description = "The Haskell/R mixed programming environment";
license = stdenv.lib.licenses.bsd3;

}) {};
"HCodecs" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, QuickCheck
, random
, semigroups
, stdenv
}:
mkDerivation {

pname = "HCodecs";
version = "0.5.1";
sha256 = "a724616b79ac12c2d661dc3f54cfa0e7d530d1ba3eafa1e6c3e7116e035a3143";
libraryHaskellDepends = [
array
base
bytestring
QuickCheck
random
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
license = stdenv.lib.licenses.bsd3;

}) {};
"HDBC" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, convertible
, mtl
, old-time
, stdenv
, text
, time
, utf8-string
}:
mkDerivation {

pname = "HDBC";
version = "2.4.0.2";
sha256 = "670757fd674b6caf2f456034bdcb54812af2cdf2a32465d7f4b7f0baa377db5a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
convertible
mtl
old-time
text
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdbc/hdbc";
description = "Haskell Database Connectivity";
license = stdenv.lib.licenses.bsd3;

}) {};
"HDBC-mysql" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, HDBC
, mysqlclient
, openssl
, stdenv
, time
, utf8-string
, zlib
}:
mkDerivation {

pname = "HDBC-mysql";
version = "0.7.1.0";
sha256 = "81c985d4a243c965930fb412b3175ca799ba66985f8b6844014fd600df1da7cf";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
bytestring
HDBC
time
utf8-string
];
librarySystemDepends = [
mysqlclient
openssl
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ryantm/hdbc-mysql";
description = "MySQL driver for HDBC";
license = "LGPL";

}) {inherit (pkgs) mysqlclient; inherit (pkgs) openssl;
inherit (pkgs) zlib;};
"HDBC-session" = callPackage
({
  mkDerivation
, base
, HDBC
, stdenv
}:
mkDerivation {

pname = "HDBC-session";
version = "0.1.2.0";
sha256 = "aa057f18bbc9d2f9876152246682f546c9cf140192515c7c23b5be2fccc296e3";
libraryHaskellDepends = [
base
HDBC
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Bracketed connection for HDBC";
license = stdenv.lib.licenses.bsd3;

}) {};
"HPDF" = callPackage
({
  mkDerivation
, array
, base
, base64-bytestring
, binary
, bytestring
, containers
, errors
, mtl
, random
, stdenv
, vector
, zlib
}:
mkDerivation {

pname = "HPDF";
version = "1.4.10";
sha256 = "de2bfddd93eeef2129a2378e8dce486d086bec3c48ee2a1bf1a5fb01581607d4";
libraryHaskellDepends = [
array
base
base64-bytestring
binary
bytestring
containers
errors
mtl
random
vector
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://www.alpheccar.org";
description = "Generation of PDF documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"HSet" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, hashtables
, stdenv
}:
mkDerivation {

pname = "HSet";
version = "0.0.1";
sha256 = "eba93be5a76581585ae33af6babe9c2718fae307d41989cd36a605d9b0e8d16a";
libraryHaskellDepends = [
base
containers
hashable
hashtables
];
doHaddock = false;
doCheck = false;
description = "Faux heterogeneous sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"HSlippyMap" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "HSlippyMap";
version = "3.0.1";
sha256 = "27eb37f3b1e70780173e732a949776fc0b0ecc5b1ba515c2e239d6545a2beb0d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/apeyroux/HSlippyMap";
description = "OpenStreetMap Slippy Map";
license = stdenv.lib.licenses.bsd3;

}) {};
"HStringTemplate" = callPackage
({
  mkDerivation
, array
, base
, blaze-builder
, bytestring
, containers
, deepseq
, directory
, filepath
, mtl
, old-locale
, parsec
, pretty
, semigroups
, stdenv
, syb
, template-haskell
, text
, time
, void
}:
mkDerivation {

pname = "HStringTemplate";
version = "0.8.7";
sha256 = "4f4ea4aa2e45e7c45821b87b0105c201fbadebc2f2d00c211e728403a0af6b0e";
libraryHaskellDepends = [
array
base
blaze-builder
bytestring
containers
deepseq
directory
filepath
mtl
old-locale
parsec
pretty
semigroups
syb
template-haskell
text
time
void
];
doHaddock = false;
doCheck = false;
description = "StringTemplate implementation in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"HSvm" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "HSvm";
version = "0.1.0.3.22";
sha256 = "8dac8a583c762675f2d64138303618f017d6be95d59e60774ea7cbfc040dab04";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Haskell Bindings for libsvm";
license = stdenv.lib.licenses.bsd3;

}) {};
"HTF" = callPackage
({
  mkDerivation
, aeson
, array
, base
, base64-bytestring
, bytestring
, containers
, cpphs
, Diff
, directory
, haskell-src
, HUnit
, lifted-base
, monad-control
, mtl
, old-time
, pretty
, process
, QuickCheck
, random
, regex-compat
, stdenv
, text
, time
, unix
, vector
, xmlgen
}:
mkDerivation {

pname = "HTF";
version = "0.13.2.4";
sha256 = "36c5cafd35683c37379a93098dea61e6194aa1b9cfd0cdad4e0f1643f4cf2bf6";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
array
base
base64-bytestring
bytestring
containers
cpphs
Diff
directory
haskell-src
HUnit
lifted-base
monad-control
mtl
old-time
pretty
process
QuickCheck
random
regex-compat
text
time
unix
vector
xmlgen
];
executableHaskellDepends = [
array
base
cpphs
directory
HUnit
mtl
old-time
random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/skogsbaer/HTF/";
description = "The Haskell Test Framework";
license = stdenv.lib.licenses.lgpl21;

}) {};
"HTTP" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, mtl
, network
, network-uri
, parsec
, stdenv
, time
}:
mkDerivation {

pname = "HTTP";
version = "4000.3.11";
sha256 = "fad22b39d8027107158407a3af73907dbb66e403d9aa7b9fd778db171c65b645";
libraryHaskellDepends = [
array
base
bytestring
mtl
network
network-uri
parsec
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/HTTP";
description = "A library for client-side HTTP";
license = stdenv.lib.licenses.bsd3;

}) {};
"HUnit" = callPackage
({
  mkDerivation
, base
, call-stack
, deepseq
, stdenv
}:
mkDerivation {

pname = "HUnit";
version = "1.6.0.0";
sha256 = "7448e6b966e98e84b7627deba23f71b508e9a61e7bc571d74304a25d30e6d0de";
libraryHaskellDepends = [
base
call-stack
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/HUnit#readme";
description = "A unit testing framework for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"HUnit-approx" = callPackage
({
  mkDerivation
, base
, call-stack
, HUnit
, stdenv
}:
mkDerivation {

pname = "HUnit-approx";
version = "1.1.1.1";
sha256 = "4a4327d328bb8b944c73ec211dd29e953e477f99fd3f9e28fe5200f02fa62baf";
libraryHaskellDepends = [
base
call-stack
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/goldfirere/HUnit-approx";
description = "Approximate equality for floating point numbers with HUnit";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaTeX" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, hashable
, matrix
, parsec
, QuickCheck
, stdenv
, text
, transformers
, wl-pprint-extras
}:
mkDerivation {

pname = "HaTeX";
version = "3.18.0.0";
sha256 = "5fa2313670a30afdc4d0c9334ffe996535936d493b835a26ac103d5f909d818f";
libraryHaskellDepends = [
base
bytestring
containers
hashable
matrix
parsec
QuickCheck
text
transformers
wl-pprint-extras
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
description = "The Haskell LaTeX library";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaXml" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, polyparse
, pretty
, random
, stdenv
}:
mkDerivation {

pname = "HaXml";
version = "1.25.4";
sha256 = "d77467b8c855ba85d900b5d1a9b771aa498c80d570f9ac60a9f10803cfc01db5";
revision = "1";
editedCabalFile = "1vnil3xdyhr48f0nxcaljbl1k5ibg5g5gghvrhykg447b0jvp922";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
filepath
polyparse
pretty
random
];
executableHaskellDepends = [
base
directory
polyparse
pretty
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/HaXml/";
description = "Utilities for manipulating XML documents";
license = "LGPL";

}) {};
"HandsomeSoup" = callPackage
({
  mkDerivation
, base
, containers
, HTTP
, hxt
, hxt-http
, mtl
, network
, network-uri
, parsec
, stdenv
, transformers
}:
mkDerivation {

pname = "HandsomeSoup";
version = "0.4.2";
sha256 = "0ae2dad3fbde1efee9e45b84b2aeb5b526cc7b3ea2cbc5715494f7bde3ceeefb";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
HTTP
hxt
hxt-http
mtl
network
network-uri
parsec
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/egonSchiele/HandsomeSoup";
description = "Work with HTML more easily in HXT";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaskellNet" = callPackage
({
  mkDerivation
, array
, base
, base64-string
, bytestring
, cryptohash
, mime-mail
, mtl
, network
, old-time
, pretty
, stdenv
, text
}:
mkDerivation {

pname = "HaskellNet";
version = "0.5.1";
sha256 = "3245d31ad76f9f9013a2f6e2285d73ed37376eeb073c100b9a6d19e87f0ca838";
libraryHaskellDepends = [
array
base
base64-string
bytestring
cryptohash
mime-mail
mtl
network
old-time
pretty
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/HaskellNet";
description = "Client support for POP3, SMTP, and IMAP";
license = stdenv.lib.licenses.bsd3;

}) {};
"HaskellNet-SSL" = callPackage
({
  mkDerivation
, base
, bytestring
, connection
, data-default
, HaskellNet
, network
, stdenv
, tls
}:
mkDerivation {

pname = "HaskellNet-SSL";
version = "0.3.4.0";
sha256 = "83ae92547fd5d52b5b74402101ec254423abeac0c0725e14a112d6ffc843040f";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
connection
data-default
HaskellNet
network
tls
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dpwright/HaskellNet-SSL";
description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
license = stdenv.lib.licenses.bsd3;

}) {};
"Hclip" = callPackage
({
  mkDerivation
, base
, mtl
, process
, stdenv
, strict
}:
mkDerivation {

pname = "Hclip";
version = "3.0.0.4";
sha256 = "d8c80bd2d035571cd76ce4f69453e9fcef4096dbc8868eb4cfcd7eb74fe5f712";
libraryHaskellDepends = [
base
mtl
process
strict
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jetho/Hclip";
description = "A small cross-platform library for reading and modifying the system clipboard";
license = stdenv.lib.licenses.bsd3;

}) {};
"Hoed" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, cereal
, cereal-text
, cereal-vector
, clock
, containers
, deepseq
, directory
, hashable
, libgraph
, open-browser
, primitive
, process
, QuickCheck
, regex-tdfa
, regex-tdfa-text
, semigroups
, stdenv
, strict
, template-haskell
, terminal-size
, text
, transformers
, uniplate
, unordered-containers
, vector
, vector-th-unbox
}:
mkDerivation {

pname = "Hoed";
version = "0.5.1";
sha256 = "a8f6dc9717e15642f00cd84a8d1030ac6a7c7870f7015e380bd728a843c3f4e7";
libraryHaskellDepends = [
array
base
bytestring
cereal
cereal-text
cereal-vector
clock
containers
deepseq
directory
hashable
libgraph
open-browser
primitive
process
QuickCheck
regex-tdfa
regex-tdfa-text
semigroups
strict
template-haskell
terminal-size
text
transformers
uniplate
unordered-containers
vector
vector-th-unbox
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MaartenFaddegon/Hoed";
description = "Lightweight algorithmic debugging";
license = stdenv.lib.licenses.bsd3;

}) {};
"HsOpenSSL" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, network
, openssl
, stdenv
, time
}:
mkDerivation {

pname = "HsOpenSSL";
version = "0.11.4.14";
sha256 = "443d0271b24dbc6cb1736994f6e8c290ce502909738f4e03879b27d30bb47489";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
bytestring
network
time
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vshabanov/HsOpenSSL";
description = "Partial OpenSSL binding for Haskell";
license = stdenv.lib.licenses.publicDomain;

}) {inherit (pkgs) openssl;};
"HsOpenSSL-x509-system" = callPackage
({
  mkDerivation
, base
, bytestring
, HsOpenSSL
, stdenv
, unix
}:
mkDerivation {

pname = "HsOpenSSL-x509-system";
version = "0.1.0.3";
sha256 = "5bdcb7ae2faba07a374109fea0a1431ae09d080f8574e60ab7a351b46f931f92";
libraryHaskellDepends = [
base
bytestring
HsOpenSSL
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/HsOpenSSL-x509-system";
description = "Use the system's native CA certificate store with HsOpenSSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"IPv6Addr" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, iproute
, network
, network-info
, random
, stdenv
, text
}:
mkDerivation {

pname = "IPv6Addr";
version = "1.0.3";
sha256 = "4904b71a74b825324e7510147a6fe393940dc32693d54c2f7c2ecf14f130739d";
libraryHaskellDepends = [
aeson
attoparsec
base
iproute
network
network-info
random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/IPv6Addr";
description = "Library to deal with IPv6 address text representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"IPv6DB" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, fast-logger
, hedis
, http-types
, IPv6Addr
, mtl
, optparse-applicative
, stdenv
, text
, unordered-containers
, vector
, wai
, wai-logger
, warp
}:
mkDerivation {

pname = "IPv6DB";
version = "0.2.6";
sha256 = "a409d591750d7cf9a983d2ea116198fa80c1f248fa91078adb8edbaa06de50b7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
hedis
http-types
IPv6Addr
mtl
text
unordered-containers
vector
];
executableHaskellDepends = [
aeson
base
bytestring
fast-logger
hedis
http-types
IPv6Addr
mtl
optparse-applicative
text
unordered-containers
vector
wai
wai-logger
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://ipv6db.cybervisible.com";
description = "A RESTful Web Service for IPv6-related data";
license = stdenv.lib.licenses.bsd3;

}) {};
"Imlib" = callPackage
({
  mkDerivation
, array
, base
, imlib2
, stdenv
, X11
}:
mkDerivation {

pname = "Imlib";
version = "0.1.2";
sha256 = "3ed318a7777a3b0752327b7b128edb3a1d562202b480a6d6b793b79ed90ebd1c";
libraryHaskellDepends = [
array
base
X11
];
librarySystemDepends = [
imlib2
];
doHaddock = false;
doCheck = false;
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) imlib2;};
"IntervalMap" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "IntervalMap";
version = "0.5.3.1";
sha256 = "9a575459f66ad48b734ca79885b599ab5a5eed800bb409b11f08c8a7d53f8c21";
libraryHaskellDepends = [
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
description = "Containers for intervals, with efficient search";
license = stdenv.lib.licenses.bsd3;

}) {};
"JuicyPixels" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, mtl
, primitive
, stdenv
, transformers
, vector
, zlib
}:
mkDerivation {

pname = "JuicyPixels";
version = "3.2.9.5";
sha256 = "849c6cf4a613f906f7e553a1baefe9c0dc61c13b41a5f5b9605cf80e328cc355";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
mtl
primitive
transformers
vector
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Twinside/Juicy.Pixels";
description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
license = stdenv.lib.licenses.bsd3;

}) {};
"JuicyPixels-extra" = callPackage
({
  mkDerivation
, base
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "JuicyPixels-extra";
version = "0.3.0";
sha256 = "c5a03a9747bcd984924d6f7c9b4771188e297df82160e7d667ea8f4f671b0e22";
revision = "1";
editedCabalFile = "17y0d11hgdnzcgv7q7zl3wic2w2xhqn123vzfsdivncgdgqlvy0c";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/JuicyPixels-extra";
description = "Efficiently scale, crop, flip images with JuicyPixels";
license = stdenv.lib.licenses.bsd3;

}) {};
"JuicyPixels-scale-dct" = callPackage
({
  mkDerivation
, base
, base-compat
, carray
, fft
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "JuicyPixels-scale-dct";
version = "0.1.2";
sha256 = "f7381b88446224897e6677692bbdc39cb5b755216212f0ad8050046865cd3013";
libraryHaskellDepends = [
base
base-compat
carray
fft
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
description = "Scale JuicyPixels images with DCT";
license = stdenv.lib.licenses.bsd3;

}) {};
"LibZip" = callPackage
({
  mkDerivation
, base
, bindings-libzip
, bytestring
, filepath
, mtl
, stdenv
, time
, utf8-string
}:
mkDerivation {

pname = "LibZip";
version = "1.0.1";
sha256 = "a636e0202d2a3f60d894a814bd9834cf8c62313b67ccc48c295f02a4bebe425f";
libraryHaskellDepends = [
base
bindings-libzip
bytestring
filepath
mtl
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://bitbucket.org/astanin/hs-libzip/";
description = "Bindings to libzip, a library for manipulating zip archives";
license = stdenv.lib.licenses.bsd3;

}) {};
"List" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "List";
version = "0.6.2";
sha256 = "c4b92be1202fc59112018f76d5b17cd3a659ebc36384a46e000ab2fbaf99b878";
revision = "1";
editedCabalFile = "11ws93cdzz7k4nvcld2d74155mdgcvyi6f6an7gpf9z4k523c11n";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yairchu/generator";
description = "List monad transformer and class";
license = stdenv.lib.licenses.bsd3;

}) {};
"ListLike" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, dlist
, fmlist
, semigroups
, stdenv
, text
, utf8-string
, vector
}:
mkDerivation {

pname = "ListLike";
version = "4.6";
sha256 = "c1cdec79a5f585a5839eea26a2afe6a37aab5ed2f402a16e7d59fe9a4e925a9a";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
dlist
fmlist
semigroups
text
utf8-string
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/JohnLato/listlike";
description = "Generic support for list-like structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"MFlow" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, bytestring
, case-insensitive
, clientsession
, conduit
, conduit-extra
, containers
, cpphs
, directory
, extensible-exceptions
, http-types
, monadloc
, mtl
, old-time
, parsec
, pwstore-fast
, random
, RefSerialize
, resourcet
, stdenv
, stm
, TCache
, text
, time
, transformers
, utf8-string
, vector
, wai
, wai-extra
, warp
, warp-tls
, Workflow
}:
mkDerivation {

pname = "MFlow";
version = "0.4.6.0";
sha256 = "4e93f7488152d88359fd100a742c2ea96788284d262f3cd1b50d936f80f1a342";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
bytestring
case-insensitive
clientsession
conduit
conduit-extra
containers
directory
extensible-exceptions
http-types
monadloc
mtl
old-time
parsec
pwstore-fast
random
RefSerialize
resourcet
stm
TCache
text
time
transformers
utf8-string
vector
wai
wai-extra
warp
warp-tls
Workflow
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
doCheck = false;
description = "stateful, RESTful web framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"MemoTrie" = callPackage
({
  mkDerivation
, base
, newtype-generics
, stdenv
}:
mkDerivation {

pname = "MemoTrie";
version = "0.6.9";
sha256 = "1d6045b8fdf7b89ed6b495e535613f5091cdfc9cdfe05a862207e76ce205f794";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
newtype-generics
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/conal/MemoTrie";
description = "Trie-based memo functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"MissingH" = callPackage
({
  mkDerivation
, array
, base
, containers
, directory
, filepath
, hslogger
, HUnit
, mtl
, network
, old-locale
, old-time
, parsec
, process
, random
, regex-compat
, stdenv
, time
, unix
}:
mkDerivation {

pname = "MissingH";
version = "1.4.0.1";
sha256 = "283f2afd46625d98b4e29f77edadfa5e6009a227812ee2ece10091ad6a7e9b71";
libraryHaskellDepends = [
array
base
containers
directory
filepath
hslogger
HUnit
mtl
network
old-locale
old-time
parsec
process
random
regex-compat
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://software.complete.org/missingh";
description = "Large utility library";
license = stdenv.lib.licenses.bsd3;

}) {};
"MonadPrompt" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "MonadPrompt";
version = "1.0.0.5";
sha256 = "b012cbbe83650f741c7b7f6eafcc89dec299b0ac74a758b6f3a8cdfc5d3bbeda";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
description = "MonadPrompt, implementation & examples";
license = stdenv.lib.licenses.bsd3;

}) {};
"MonadRandom" = callPackage
({
  mkDerivation
, base
, mtl
, primitive
, random
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "MonadRandom";
version = "0.5.1.1";
sha256 = "abda4a297acf197e664695b839b4fb70f53e240f5420489dc21bcf6103958470";
libraryHaskellDepends = [
base
mtl
primitive
random
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Random-number generation monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"Network-NineP" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, convertible
, exceptions
, hslogger
, monad-loops
, monad-peel
, mstate
, mtl
, network
, NineP
, regex-posix
, stateref
, stdenv
, transformers
}:
mkDerivation {

pname = "Network-NineP";
version = "0.4.3";
sha256 = "8169e46ddfd690b96f25bc9a577568a363a270c2bddbb9fb3e1e7f1959644ec3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
convertible
exceptions
hslogger
monad-loops
monad-peel
mstate
mtl
network
NineP
regex-posix
stateref
transformers
];
doHaddock = false;
doCheck = false;
description = "High-level abstraction over 9P protocol";
license = "unknown";

}) {};
"NineP" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "NineP";
version = "0.0.2.1";
sha256 = "4bb1516b9fb340118960043e0c72aa62316be8ff3f78cc8c1354e2fac96dd8cc";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "http://9ph.googlecode.com";
description = "9P2000 in pure Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"NoHoed" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "NoHoed";
version = "0.1.1";
sha256 = "9b663a234c034e0049126ae7f06d1756dc496012177bf18548c6d8caeec43b3d";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pepeiborra/NoHoed";
description = "Placeholder package to preserve debug ability via conditional builds";
license = stdenv.lib.licenses.bsd3;

}) {};
"NoTrace" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "NoTrace";
version = "0.3.0.2";
sha256 = "39ea78488aa2a172691b2d97b3bc6673a423f1eb0c184381da546de61d94125b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/CindyLinz/Haskell-NoTrace";
description = "Remove all the functions come from Debug.Trace after debugging";
license = stdenv.lib.licenses.mit;

}) {};
"NumInstances" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "NumInstances";
version = "1.4";
sha256 = "cbdb2a49346f59ceb5ab38592d7bc52e5205580d431d0ac6d852fd9880e59679";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/conal/NumInstances";
description = "Instances of numeric classes for functions and tuples";
license = stdenv.lib.licenses.bsd3;

}) {};
"ObjectName" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "ObjectName";
version = "1.1.0.1";
sha256 = "72dbef237580fd4e8567de2de752835bbadd3629f486d1586486d49a49aad210";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/svenpanne/ObjectName";
description = "Explicitly handled object names";
license = stdenv.lib.licenses.bsd3;

}) {};
"OneTuple" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "OneTuple";
version = "0.2.2";
sha256 = "d82e702485bcbdefbda0d12b6a250d318a269572ee58d63b60eee531e56624dc";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Singleton Tuple";
license = stdenv.lib.licenses.bsd3;

}) {};
"Only" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "Only";
version = "0.1";
sha256 = "ab7aa193e8c257d3bda6b0b3c1cbcf74cdaa85ab08cb20c2dd62ba248c1ab265";
revision = "1";
editedCabalFile = "1ahk7p34kmh041mz7lyc10nhcxgv2i4z8nvzxvqm2x34gslmsbzr";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
description = "The 1-tuple type or single-value \"collection\"";
license = stdenv.lib.licenses.bsd3;

}) {};
"OpenAL" = callPackage
({
  mkDerivation
, base
, ObjectName
, openal
, OpenGL
, StateVar
, stdenv
, transformers
}:
mkDerivation {

pname = "OpenAL";
version = "1.7.0.4";
sha256 = "3989f6c4fe437843551004dd011c4308bf63d787ae4fbb8ce71d44b1b0b1f118";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ObjectName
OpenGL
StateVar
transformers
];
librarySystemDepends = [
openal
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-openal/ALUT";
description = "A binding to the OpenAL cross-platform 3D audio API";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openal;};
"OpenGL" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, GLURaw
, ObjectName
, OpenGLRaw
, StateVar
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "OpenGL";
version = "3.0.2.1";
sha256 = "7acb891b911de8bb6933afeaa7f8c5291cc986da5557c922c0fc1717c5a559bf";
libraryHaskellDepends = [
base
bytestring
containers
GLURaw
ObjectName
OpenGLRaw
StateVar
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A binding for the OpenGL graphics system";
license = stdenv.lib.licenses.bsd3;

}) {};
"OpenGLRaw" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, fixed
, half
, libGL
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "OpenGLRaw";
version = "3.2.7.0";
sha256 = "62723d0fc287e5e5e93853b1fed0ca76495e6b693261aa9aae35340182a58a08";
libraryHaskellDepends = [
base
bytestring
containers
fixed
half
text
transformers
];
librarySystemDepends = [
libGL
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Opengl";
description = "A raw binding for the OpenGL graphics system";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libGL;};
"PSQueue" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "PSQueue";
version = "1.1";
sha256 = "a8e0871ad10f916f55c3b9baec53eff23c4e97e09cf96d6c66771789e00a49cc";
revision = "1";
editedCabalFile = "0gpx33bkhpwya7prnqzwpbnylm4v4nm4x8m02ggmj7d6rkklb2qq";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Priority Search Queue";
license = stdenv.lib.licenses.bsd3;

}) {};
"ParsecTools" = callPackage
({
  mkDerivation
, base
, parsec
, stdenv
}:
mkDerivation {

pname = "ParsecTools";
version = "0.0.2.0";
sha256 = "ef4843353127aa3e6f6ab0aece9f4245225d375802921e151a1751d797857a87";
libraryHaskellDepends = [
base
parsec
];
doHaddock = false;
doCheck = false;
description = "Parsec combinators for more complex objects";
license = stdenv.lib.licenses.gpl3;

}) {};
"PortMidi" = callPackage
({
  mkDerivation
, alsaLib
, base
, stdenv
}:
mkDerivation {

pname = "PortMidi";
version = "0.1.6.1";
sha256 = "b89e9293d5b80d23b197dbb9bf196737765c66ffe96eaabdb9517fe20b516690";
libraryHaskellDepends = [
base
];
librarySystemDepends = [
alsaLib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ninegua/PortMidi";
description = "A binding for PortMedia/PortMidi";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) alsaLib;};
"QuasiText" = callPackage
({
  mkDerivation
, attoparsec
, base
, haskell-src-meta
, stdenv
, template-haskell
, text
, th-lift-instances
}:
mkDerivation {

pname = "QuasiText";
version = "0.1.2.6";
sha256 = "e801d269e25263645ee66fc090040fe9b9c8a8e5bf10485801dd7a5a30e0f119";
libraryHaskellDepends = [
attoparsec
base
haskell-src-meta
template-haskell
text
th-lift-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mikeplus64/QuasiText";
description = "A QuasiQuoter for Text";
license = stdenv.lib.licenses.bsd3;

}) {};
"QuickCheck" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, random
, stdenv
, template-haskell
, tf-random
, transformers
}:
mkDerivation {

pname = "QuickCheck";
version = "2.10.1";
sha256 = "1dbb56786854fd539315497086284dfff039a52a487319e648140e4987b6d5e5";
libraryHaskellDepends = [
base
containers
deepseq
random
template-haskell
tf-random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nick8325/quickcheck";
description = "Automatic testing of Haskell programs";
license = stdenv.lib.licenses.bsd3;

}) {};
"RSA" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, crypto-api
, crypto-pubkey-types
, SHA
, stdenv
}:
mkDerivation {

pname = "RSA";
version = "2.3.0";
sha256 = "eee76dc7f9dd2d2cdeb014af728ff56f2f5d2908212bd3bb8c5e89f5c6485333";
libraryHaskellDepends = [
base
binary
bytestring
crypto-api
crypto-pubkey-types
SHA
];
doHaddock = false;
doCheck = false;
description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
license = stdenv.lib.licenses.bsd3;

}) {};
"Rasterific" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, dlist
, FontyFruity
, free
, JuicyPixels
, mtl
, primitive
, stdenv
, transformers
, vector
, vector-algorithms
}:
mkDerivation {

pname = "Rasterific";
version = "0.7.3";
sha256 = "fd0a8770acaf2c594b64aafd15e8288ec5af370d901ac03a933b642deb802279";
libraryHaskellDepends = [
base
bytestring
containers
dlist
FontyFruity
free
JuicyPixels
mtl
primitive
transformers
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
description = "A pure haskell drawing engine";
license = stdenv.lib.licenses.bsd3;

}) {};
"RefSerialize" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, hashtables
, stdenv
, stringsearch
}:
mkDerivation {

pname = "RefSerialize";
version = "0.4.0";
sha256 = "05b25eb1ab943d96119aa2acca678fc8f194c3411af521e3835f4de5c752bbb2";
libraryHaskellDepends = [
base
binary
bytestring
containers
hashtables
stringsearch
];
doHaddock = false;
doCheck = false;
description = "Write to and read from ByteStrings maintaining internal memory references";
license = stdenv.lib.licenses.bsd3;

}) {};
"SCalendar" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, text
, time
}:
mkDerivation {

pname = "SCalendar";
version = "1.1.0";
sha256 = "4971bf6df45953434088ba50d0e17dcc49a0e4c2dd37ad06385c1f87d87b348d";
libraryHaskellDepends = [
base
containers
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://www.researchgate.net/publication/311582722_Method_of_Managing_Resources_in_a_Telecommunication_Network_or_a_Computing_System";
description = "This is a library for handling calendars and resource availability based on the \"top-nodes algorithm\" and set operations";
license = stdenv.lib.licenses.mit;

}) {};
"SHA" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "SHA";
version = "1.6.4.4";
sha256 = "6bd950df6b11a3998bb1452d875d2da043ee43385459afc5f16d471d25178b44";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
description = "Implementations of the SHA suite of message digest functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"STMonadTrans" = callPackage
({
  mkDerivation
, array
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "STMonadTrans";
version = "0.4.3";
sha256 = "574fd56cf74036c20d00a09d815659dbbb0ae51c8103d00c93cd9558ad3322db";
revision = "1";
editedCabalFile = "09kqrv9a4yhsdpix49h9qjw0j2fhxrgkjnfrnyxg1nspmqrvl50m";
libraryHaskellDepends = [
array
base
mtl
];
doHaddock = false;
doCheck = false;
description = "A monad transformer version of the ST monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"SVGFonts" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-markup
, blaze-svg
, bytestring
, cereal
, cereal-vector
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, directory
, parsec
, split
, stdenv
, text
, tuple
, vector
, xml
}:
mkDerivation {

pname = "SVGFonts";
version = "1.6.0.3";
sha256 = "bc8f8863799070c345fdd88c065852c6434af9e802fd0171df2a3dbd37f35887";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
blaze-markup
blaze-svg
bytestring
cereal
cereal-vector
containers
data-default-class
diagrams-core
diagrams-lib
directory
parsec
split
text
tuple
vector
xml
];
doHaddock = false;
doCheck = false;
description = "Fonts from the SVG-Font format";
license = stdenv.lib.licenses.bsd3;

}) {};
"SafeSemaphore" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, stm
}:
mkDerivation {

pname = "SafeSemaphore";
version = "0.10.1";
sha256 = "21e5b737a378cae9e1faf85cab015316d4c84d4b37e6d9d202111cef8c4cef66";
revision = "1";
editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
libraryHaskellDepends = [
base
containers
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
description = "Much safer replacement for QSemN, QSem, and SampleVar";
license = stdenv.lib.licenses.bsd3;

}) {};
"SegmentTree" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "SegmentTree";
version = "0.3";
sha256 = "6188c1b1276d7fa0391098a563df73dd522d20b57dc5321fe3418a9e3ca84fc1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Data structure for querying the set (or count) of intervals covering given point";
license = stdenv.lib.licenses.bsd3;

}) {};
"ShellCheck" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, directory
, json
, mtl
, parsec
, process
, QuickCheck
, regex-tdfa
, stdenv
}:
mkDerivation {

pname = "ShellCheck";
version = "0.4.7";
sha256 = "184955264d42c5dca0300fb9688b9a6c9a1c70c345dbcd8e30bb48a049a70d7c";
revision = "1";
editedCabalFile = "0fbrysx6wb9kmlzbfyjcb7107rnf0rjldlszaqnpib33vwd7l1hx";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
process
];
libraryHaskellDepends = [
base
containers
directory
json
mtl
parsec
process
QuickCheck
regex-tdfa
];
executableHaskellDepends = [
base
containers
directory
json
mtl
parsec
QuickCheck
regex-tdfa
];
doHaddock = false;
doCheck = false;
homepage = "https://www.shellcheck.net/";
description = "Shell script analysis tool";
license = stdenv.lib.licenses.gpl3;

}) {};
"Spintax" = callPackage
({
  mkDerivation
, attoparsec
, base
, extra
, mtl
, mwc-random
, stdenv
, text
}:
mkDerivation {

pname = "Spintax";
version = "0.3.2";
sha256 = "f7e620817ce065f06ae163b08461eb3ce3dc0254caf0dcbd00d01836759bf048";
libraryHaskellDepends = [
attoparsec
base
extra
mtl
mwc-random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/spintax";
description = "Random text generation based on spintax";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, containers
, cryptonite
, focus
, hashable
, http-types
, hvect
, list-t
, monad-control
, mtl
, reroute
, resource-pool
, resourcet
, Spock-core
, stdenv
, stm
, stm-containers
, text
, time
, transformers
, transformers-base
, unordered-containers
, vault
, wai
}:
mkDerivation {

pname = "Spock";
version = "0.12.0.0";
sha256 = "8392d1ee34b46238c6bfe951080f06e11e1f3622d8402e7762c70aa61430e3d9";
revision = "1";
editedCabalFile = "0a9mfn2p1b6r6pc6n3a2l7xl4607mjj3fvsvpcipp2zvqsryi9c8";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
containers
cryptonite
focus
hashable
http-types
hvect
list-t
monad-control
mtl
reroute
resource-pool
resourcet
Spock-core
stm
stm-containers
text
time
transformers
transformers-base
unordered-containers
vault
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-api" = callPackage
({
  mkDerivation
, aeson
, base
, deepseq
, hvect
, reroute
, stdenv
}:
mkDerivation {

pname = "Spock-api";
version = "0.12.0.0";
sha256 = "8cfdbcbd2fa426c595fb7d29f8a6395dea17476c15d5ae863da2605b1c6ebe00";
revision = "1";
editedCabalFile = "0w0xah0lirgrs1xvlw5z6saa3wvzdl5r3yq3zxipg7kmrfxgbfbz";
libraryHaskellDepends = [
aeson
base
deepseq
hvect
reroute
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-api-server" = callPackage
({
  mkDerivation
, base
, hvect
, mtl
, Spock-api
, Spock-core
, stdenv
}:
mkDerivation {

pname = "Spock-api-server";
version = "0.12.0.0";
sha256 = "29734206823875ec71d7cad14bf012adb70b01700975e2181a7cb52713b131ce";
libraryHaskellDepends = [
base
hvect
mtl
Spock-api
Spock-core
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-core" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, case-insensitive
, containers
, cookie
, directory
, hashable
, http-api-data
, http-types
, hvect
, mtl
, old-locale
, reroute
, resourcet
, stdenv
, stm
, superbuffer
, text
, time
, transformers
, unordered-containers
, vault
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "Spock-core";
version = "0.12.0.0";
sha256 = "e69b70ea3027fa644d546bcae25bbf75e38abd6f4a7f88f0628fea6e16e97895";
revision = "1";
editedCabalFile = "0xk6kmka807ifwldr34wjgkwdn19p848ik6lmm2zyah08amvcgqq";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
case-insensitive
containers
cookie
directory
hashable
http-api-data
http-types
hvect
mtl
old-locale
reroute
resourcet
stm
superbuffer
text
time
transformers
unordered-containers
vault
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://www.spock.li";
description = "Another Haskell web framework for rapid development";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-lucid" = callPackage
({
  mkDerivation
, base
, lucid
, Spock
, stdenv
, transformers
}:
mkDerivation {

pname = "Spock-lucid";
version = "0.4.0.1";
sha256 = "3126d512e9528a6cf8830ad355dd2f0429bfd41f0ae048138818ae8dcedc2397";
libraryHaskellDepends = [
base
lucid
Spock
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/Spock-lucid";
description = "Lucid support for Spock";
license = stdenv.lib.licenses.bsd3;

}) {};
"Spock-worker" = callPackage
({
  mkDerivation
, base
, containers
, errors
, lifted-base
, mtl
, Spock
, stdenv
, stm
, text
, time
, transformers
, vector
}:
mkDerivation {

pname = "Spock-worker";
version = "0.3.1.0";
sha256 = "edc009d59fe528ab3bee887b8092f720a8a4ee85b550dec065964ed55c76dc4b";
libraryHaskellDepends = [
base
containers
errors
lifted-base
mtl
Spock
stm
text
time
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/Spock-worker";
description = "Background workers for Spock";
license = stdenv.lib.licenses.mit;

}) {};
"StateVar" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "StateVar";
version = "1.1.1.0";
sha256 = "1a89cd2632c2fc384b4c71fdc12894cc1c3902badbf4771497437e4044274e80";
libraryHaskellDepends = [
base
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-opengl/StateVar";
description = "State variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"Strafunski-StrategyLib" = callPackage
({
  mkDerivation
, base
, directory
, mtl
, stdenv
, syb
, transformers
}:
mkDerivation {

pname = "Strafunski-StrategyLib";
version = "5.0.1.0";
sha256 = "a018c7420289a381d2b491a753f685b9d691be07cea99855cc5c8e05d5a9a295";
libraryHaskellDepends = [
base
directory
mtl
syb
transformers
];
doHaddock = false;
doCheck = false;
description = "Library for strategic programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"TCache" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, hashtables
, mtl
, old-time
, RefSerialize
, stdenv
, stm
, text
}:
mkDerivation {

pname = "TCache";
version = "0.12.1";
sha256 = "f134b45fcdd127fa1a4214f01d44dc34e994fed137cec63f4c4ea632363ab7bd";
libraryHaskellDepends = [
base
bytestring
containers
directory
hashtables
mtl
old-time
RefSerialize
stm
text
];
doHaddock = false;
doCheck = false;
description = "A Transactional cache with user-defined persistence";
license = stdenv.lib.licenses.bsd3;

}) {};
"TypeCompose" = callPackage
({
  mkDerivation
, base
, base-orphans
, stdenv
}:
mkDerivation {

pname = "TypeCompose";
version = "0.9.12";
sha256 = "3a182c2cc93f8291b3aedfc32c0b1faa84a982601c1a24cbe7fe1ecc50e333e2";
revision = "1";
editedCabalFile = "0j27xdfim7a6a16v834n3jdp1j7bsr3yn19bnfwni3xsvrc732q3";
libraryHaskellDepends = [
base
base-orphans
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/conal/TypeCompose";
description = "Type composition classes & instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"Unique" = callPackage
({
  mkDerivation
, base
, containers
, extra
, hashable
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "Unique";
version = "0.4.7.2";
sha256 = "b56155043817187170d02e6fa7c5ec69c72dc2a1c00b50bdd34d6d2875795b6b";
libraryHaskellDepends = [
base
containers
extra
hashable
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "It provides the functionality like unix \"uniq\" utility";
license = stdenv.lib.licenses.bsd3;

}) {};
"ViennaRNAParser" = callPackage
({
  mkDerivation
, base
, parsec
, ParsecTools
, process
, stdenv
, transformers
}:
mkDerivation {

pname = "ViennaRNAParser";
version = "1.3.3";
sha256 = "7ee941d106b8b0c57e1ca5104d19b94215721e4a7b8aeb53fa353d246efbaefe";
libraryHaskellDepends = [
base
parsec
ParsecTools
process
transformers
];
doHaddock = false;
doCheck = false;
description = "Libary for parsing ViennaRNA package output";
license = stdenv.lib.licenses.gpl3;

}) {};
"Win32-notify" = callPackage
({
  mkDerivation
, base
, containers
, directory
, stdenv
, Win32
}:
mkDerivation {

pname = "Win32-notify";
version = "0.3.0.3";
sha256 = "0c21dbe06cb1ce3b3e5f1aace0b7ee359b36e7cb057f8fe2c28c943150044116";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
Win32
];
doHaddock = false;
doCheck = false;
description = "A binding to part of the Win32 library for file notification";
license = stdenv.lib.licenses.bsd3;

}) {};
"Workflow" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, directory
, exceptions
, extensible-exceptions
, mtl
, old-time
, RefSerialize
, stdenv
, stm
, TCache
, vector
}:
mkDerivation {

pname = "Workflow";
version = "0.8.3";
sha256 = "c89b4b3a4a29fe576f8972ffa1e698eff8ac0ceb433642fc0b3f9c0308d22123";
revision = "1";
editedCabalFile = "0jy6hn1lx9wpq44ld96msgb6a2hb6cvryn1a39b4rq4iy3m45r8v";
libraryHaskellDepends = [
base
binary
bytestring
containers
directory
exceptions
extensible-exceptions
mtl
old-time
RefSerialize
stm
TCache
vector
];
doHaddock = false;
doCheck = false;
description = "Workflow patterns over a monad for thread state logging & recovery";
license = stdenv.lib.licenses.bsd3;

}) {};
"X11" = callPackage
({
  mkDerivation
, base
, data-default
, libX11
, libXext
, libXinerama
, libXrandr
, libXrender
, libXScrnSaver
, stdenv
}:
mkDerivation {

pname = "X11";
version = "1.8";
sha256 = "541b166aab1e05a92dc8f42a511d827e7aad373af12ae283b9df9982ccc09d8e";
libraryHaskellDepends = [
base
data-default
];
librarySystemDepends = [
libX11
libXext
libXinerama
libXrandr
libXrender
libXScrnSaver
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/xmonad/X11";
description = "A binding to the X11 graphics library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libX11; inherit (pkgs) libXext;
inherit (pkgs) libXrandr;};
"X11-xft" = callPackage
({
  mkDerivation
, base
, libXft
, stdenv
, utf8-string
, X11
}:
mkDerivation {

pname = "X11-xft";
version = "0.3.1";
sha256 = "4eba3fee62570e06447654030a62fb55f19587884bc2cef77a9c3b2c3458f8d1";
libraryHaskellDepends = [
base
utf8-string
X11
];
libraryPkgconfigDepends = [
libXft
];
doHaddock = false;
doCheck = false;
description = "Bindings to the Xft, X Free Type interface library, and some Xrender parts";
license = "LGPL";

}) {inherit (pkgs) libXft;};
"Xauth" = callPackage
({
  mkDerivation
, base
, libXau
, stdenv
}:
mkDerivation {

pname = "Xauth";
version = "0.1";
sha256 = "ba332dea9ec152b3f676d22461eee81a657e16987c3dfb8249e9dbe0cda56ed7";
libraryHaskellDepends = [
base
];
libraryPkgconfigDepends = [
libXau
];
doHaddock = false;
doCheck = false;
description = "A binding to the X11 authentication library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libXau;};
"Yampa" = callPackage
({
  mkDerivation
, base
, deepseq
, random
, stdenv
}:
mkDerivation {

pname = "Yampa";
version = "0.10.7";
sha256 = "14b13dcb9e52a4c6f738d7515d82d681618720de5598ec11448646333193d1c5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
deepseq
random
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Yampa";
description = "Library for programming hybrid systems";
license = stdenv.lib.licenses.bsd3;

}) {};
"YampaSynth" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, HCodecs
, stdenv
, Yampa
}:
mkDerivation {

pname = "YampaSynth";
version = "0.2";
sha256 = "a1c6a0ea57aee855ca3f558f1b6d7ec167abb57333052d8a9f7b46ef323d0a09";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
array
base
bytestring
containers
HCodecs
Yampa
];
doHaddock = false;
doCheck = false;
homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
description = "Software synthesizer";
license = stdenv.lib.licenses.bsd3;

}) {};
"abstract-deque" = callPackage
({
  mkDerivation
, array
, base
, containers
, random
, stdenv
, time
}:
mkDerivation {

pname = "abstract-deque";
version = "0.3";
sha256 = "09aa10f38193a8275a7791b92a4f3a7192a304874637e2a35c897dde25d75ca2";
libraryHaskellDepends = [
array
base
containers
random
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
description = "Abstract, parameterized interface to mutable Deques";
license = stdenv.lib.licenses.bsd3;

}) {};
"abstract-deque-tests" = callPackage
({
  mkDerivation
, abstract-deque
, array
, base
, containers
, HUnit
, random
, stdenv
, test-framework
, test-framework-hunit
, time
}:
mkDerivation {

pname = "abstract-deque-tests";
version = "0.3";
sha256 = "5f17fb4cc26559f81c777f494622907e8927181175eaa172fb6adbf14b2feba5";
libraryHaskellDepends = [
abstract-deque
array
base
containers
HUnit
random
test-framework
test-framework-hunit
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
description = "A test-suite for any queue or double-ended queue satisfying an interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"abstract-par" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "abstract-par";
version = "0.3.3";
sha256 = "248a8739bd902462cb16755b690b55660e196e58cc7e6ef8157a72c2a3d5d860";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/monad-par";
description = "Type classes generalizing the functionality of the 'monad-par' library";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, base-orphans
, containers
, deepseq
, directory
, exceptions
, fclabels
, filepath
, ghc-prim
, hashable
, hashtables
, mtl
, stdenv
, template-haskell
, time
, transformers
, unique
, unix
, unordered-containers
}:
mkDerivation {

pname = "accelerate";
version = "1.1.1.0";
sha256 = "a4f482472bbd0e858bbe568834490af46d882bafb598576213b63a44be828ee1";
libraryHaskellDepends = [
ansi-wl-pprint
base
base-orphans
containers
deepseq
directory
exceptions
fclabels
filepath
ghc-prim
hashable
hashtables
mtl
template-haskell
time
transformers
unique
unix
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AccelerateHS/accelerate/";
description = "An embedded language for accelerated array processing";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-arithmetic" = callPackage
({
  mkDerivation
, accelerate
, accelerate-utility
, base
, QuickCheck
, stdenv
, utility-ht
}:
mkDerivation {

pname = "accelerate-arithmetic";
version = "1.0.0.1";
sha256 = "5ea02a4100717d4a85af1e0e9cc7a095e751cc9933cffb094a95a3c6985e1616";
libraryHaskellDepends = [
accelerate
accelerate-utility
base
QuickCheck
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/accelerate-arithmetic/";
description = "Linear algebra and interpolation using the Accelerate framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-bignum" = callPackage
({
  mkDerivation
, accelerate
, accelerate-llvm
, accelerate-llvm-native
, accelerate-llvm-ptx
, base
, ghc-prim
, llvm-hs-pure
, stdenv
, template-haskell
}:
mkDerivation {

pname = "accelerate-bignum";
version = "0.1.0.0";
sha256 = "7c18c467d646ed30131ad197144c4f7fa6ce3e821d41c6db3dba4361f04e30a5";
revision = "2";
editedCabalFile = "00s0n5jqahn15m8x81chavv8blzjjb8z6368pl3diaadd8bi8hsv";
libraryHaskellDepends = [
accelerate
accelerate-llvm
accelerate-llvm-native
accelerate-llvm-ptx
base
ghc-prim
llvm-hs-pure
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tmcdonell/accelerate-bignum";
description = "Fixed-length large integer arithmetic for Accelerate";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-blas" = callPackage
({
  mkDerivation
, accelerate
, accelerate-llvm
, accelerate-llvm-native
, accelerate-llvm-ptx
, base
, blas-hs
, bytestring
, containers
, cublas
, cuda
, file-embed
, llvm-hs-pure
, mtl
, stdenv
, storable-complex
}:
mkDerivation {

pname = "accelerate-blas";
version = "0.1.0.1";
sha256 = "cda96b600cfa251036db1c3568778235cb766d6f9bcff80420b4de48867a4c66";
revision = "2";
editedCabalFile = "1bxh38hyn7lq73z1dqg8rsbdblvy3551lp08jlm2h8p9b8bsriia";
libraryHaskellDepends = [
accelerate
accelerate-llvm
accelerate-llvm-native
accelerate-llvm-ptx
base
blas-hs
bytestring
containers
cublas
cuda
file-embed
llvm-hs-pure
mtl
storable-complex
];
doHaddock = false;
doCheck = false;
description = "Numeric Linear Algebra in Accelerate";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-fft" = callPackage
({
  mkDerivation
, accelerate
, accelerate-llvm
, accelerate-llvm-native
, accelerate-llvm-ptx
, base
, bytestring
, carray
, cuda
, cufft
, fft
, file-embed
, stdenv
, storable-complex
}:
mkDerivation {

pname = "accelerate-fft";
version = "1.1.0.0";
sha256 = "34d9ae4f15b63067803febd5887a08cf067d7e61dec1c61702a7d66795855160";
libraryHaskellDepends = [
accelerate
accelerate-llvm
accelerate-llvm-native
accelerate-llvm-ptx
base
bytestring
carray
cuda
cufft
fft
file-embed
storable-complex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AccelerateHS/accelerate-fft";
description = "FFT using the Accelerate library";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-fftw" = callPackage
({
  mkDerivation
, accelerate
, accelerate-io
, base
, carray
, fft
, stdenv
, storable-complex
}:
mkDerivation {

pname = "accelerate-fftw";
version = "1.0.0.1";
sha256 = "fe7a7813d7f33b49145c42e95433a4e792020a8f774bae82583f18076aee53e1";
libraryHaskellDepends = [
accelerate
accelerate-io
base
carray
fft
storable-complex
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/accelerate-fftw/";
description = "Accelerate frontend to the FFTW library (Fourier transform)";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-fourier" = callPackage
({
  mkDerivation
, accelerate
, accelerate-arithmetic
, accelerate-utility
, base
, containers
, QuickCheck
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "accelerate-fourier";
version = "1.0.0.5";
sha256 = "28cff1b6801249aa354f3d6289fdd36e50587f1d0245289fb6e6d86aa6d16b0d";
libraryHaskellDepends = [
accelerate
accelerate-arithmetic
accelerate-utility
base
containers
QuickCheck
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/accelerate-fourier/";
description = "Fast Fourier transform and convolution using the Accelerate framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-io" = callPackage
({
  mkDerivation
, accelerate
, array
, base
, bmp
, bytestring
, repa
, stdenv
, vector
}:
mkDerivation {

pname = "accelerate-io";
version = "1.0.0.1";
sha256 = "f5a68d160adb378b1b9e42596786f8cc0ece4bb54af68f0d4f1e5d03c92474e0";
revision = "1";
editedCabalFile = "1qf7f1swy5h1fqaciw1swvwrvmqrcmi03v0vqsx6ccxf2zxcjlal";
libraryHaskellDepends = [
accelerate
array
base
bmp
bytestring
repa
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AccelerateHS/accelerate-io";
description = "Read and write Accelerate arrays in various formats";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-llvm" = callPackage
({
  mkDerivation
, abstract-deque
, accelerate
, base
, bytestring
, chaselev-deque
, containers
, data-default-class
, deepseq
, directory
, dlist
, exceptions
, fclabels
, filepath
, llvm-hs
, llvm-hs-pure
, mtl
, mwc-random
, stdenv
, template-haskell
, unordered-containers
, vector
}:
mkDerivation {

pname = "accelerate-llvm";
version = "1.1.0.0";
sha256 = "1c0324a64b9515a9b81f3566040bacc7cab230dad7e1d4c74429d5e6947a82f4";
revision = "1";
editedCabalFile = "1h26kcajp26w72fhl31i3bagdyn20za4qpb26fb90v15iygq9q46";
libraryHaskellDepends = [
abstract-deque
accelerate
base
bytestring
chaselev-deque
containers
data-default-class
deepseq
directory
dlist
exceptions
fclabels
filepath
llvm-hs
llvm-hs-pure
mtl
mwc-random
template-haskell
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Accelerate backend component generating LLVM IR";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-llvm-native" = callPackage
({
  mkDerivation
, accelerate
, accelerate-llvm
, base
, bytestring
, c2hs
, Cabal
, cereal
, containers
, directory
, dlist
, fclabels
, filepath
, ghc
, ghc-prim
, hashable
, libffi
, llvm-hs
, llvm-hs-pure
, mtl
, stdenv
, template-haskell
, time
, unique
, unix
, vector
}:
mkDerivation {

pname = "accelerate-llvm-native";
version = "1.1.0.1";
sha256 = "b4ec3931647ed297a9588b8eb03d3f1d3dcdaa41d4f2fe808459b3aa69d2bc43";
revision = "1";
editedCabalFile = "1kqv7bpa3mm4qzc141z5kqq934930b1cv2djr9m2ycwvb3y8ysfl";
libraryHaskellDepends = [
accelerate
accelerate-llvm
base
bytestring
Cabal
cereal
containers
directory
dlist
fclabels
filepath
ghc
ghc-prim
hashable
libffi
llvm-hs
llvm-hs-pure
mtl
template-haskell
time
unique
unix
vector
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
description = "Accelerate backend for multicore CPUs";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-llvm-ptx" = callPackage
({
  mkDerivation
, accelerate
, accelerate-llvm
, base
, bytestring
, containers
, cuda
, deepseq
, directory
, dlist
, fclabels
, file-embed
, filepath
, hashable
, llvm-hs
, llvm-hs-pure
, mtl
, nvvm
, pretty
, process
, stdenv
, template-haskell
, time
, unordered-containers
}:
mkDerivation {

pname = "accelerate-llvm-ptx";
version = "1.1.0.1";
sha256 = "b26c1b2d2a3a9f438e255661f3fe28120443c16e9e4e0fd18a2988fe80273248";
libraryHaskellDepends = [
accelerate
accelerate-llvm
base
bytestring
containers
cuda
deepseq
directory
dlist
fclabels
file-embed
filepath
hashable
llvm-hs
llvm-hs-pure
mtl
nvvm
pretty
process
template-haskell
time
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Accelerate backend for NVIDIA GPUs";
license = stdenv.lib.licenses.bsd3;

}) {};
"accelerate-utility" = callPackage
({
  mkDerivation
, accelerate
, base
, stdenv
, utility-ht
}:
mkDerivation {

pname = "accelerate-utility";
version = "1.0.0.1";
sha256 = "900bb340fba2c0c5beefa04657b8826c78b630c6dd3ac227cdcfcaf9e6f5bdf1";
libraryHaskellDepends = [
accelerate
base
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/accelerate-utility/";
description = "Utility functions for the Accelerate framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"accuerr" = callPackage
({
  mkDerivation
, base
, bifunctors
, lens
, semigroups
, stdenv
}:
mkDerivation {

pname = "accuerr";
version = "0.2.0.2";
sha256 = "4f6a8230d2ad3bc274dea234208ce4f5282e2d9413a5da1f5505fc55a2fa9a36";
libraryHaskellDepends = [
base
bifunctors
lens
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/accuerr";
description = "Data type like Either but with accumulating error type";
license = stdenv.lib.licenses.bsd3;

}) {};
"ace" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-html
, blaze-markup
, data-default
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "ace";
version = "0.6";
sha256 = "d3472b659d26cf7ea9afa207ec24ac0314598de997722e636e9bfa24b3900738";
libraryHaskellDepends = [
attoparsec
base
blaze-html
blaze-markup
data-default
parsec
text
];
doHaddock = false;
doCheck = false;
description = "Attempto Controlled English parser and printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"acid-state" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, cereal
, containers
, directory
, extensible-exceptions
, fetchgit
, filelock
, filepath
, mtl
, network
, safecopy
, stdenv
, stm
, template-haskell
, th-expand-syns
, unix
}:
mkDerivation {

pname = "acid-state";
version = "0.15.0";
src = fetchgit {

url = "https://github.com/parsonsmatt/acid-state";
sha256 = "0a0j3wx0zycb8r4ng8i7s99868vd6q2q39m81wpl3n05sxmlgkfm";
rev = "63ac55ae020655104936d8a90ccc6a939642cd0d";

};
libraryHaskellDepends = [
array
base
bytestring
cereal
containers
directory
extensible-exceptions
filelock
filepath
mtl
network
safecopy
stm
template-haskell
th-expand-syns
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acid-state/acid-state";
description = "Add ACID guarantees to any serializable Haskell data structure";
license = stdenv.lib.licenses.publicDomain;

}) {};
"acid-state-exts" = callPackage
({
  mkDerivation
, acid-state
, array
, base
, bytestring
, cereal
, containers
, directory
, exceptions
, extensible-exceptions
, extra
, filelock
, filepath
, hashable
, mtl
, network
, safecopy
, stdenv
, stm
, template-haskell
, th-expand-syns
, time-units
, unix
, unordered-containers
}:
mkDerivation {

pname = "acid-state-exts";
version = "0.14.2";
src = ./../acid-state-exts;
libraryHaskellDepends = [
acid-state
array
base
bytestring
cereal
containers
directory
exceptions
extensible-exceptions
extra
filelock
filepath
hashable
mtl
network
safecopy
stm
template-haskell
th-expand-syns
time-units
unix
unordered-containers
];
doHaddock = false;
homepage = "https://github.com/acid-state/acid-state";
description = "Add ACID guarantees to any serializable Haskell data structure";
license = stdenv.lib.licenses.publicDomain;

}) {};
"action-permutations" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "action-permutations";
version = "0.0.0.1";
sha256 = "a419ee59f996e5305afd96336a561a9fcf26844362eaa32ab6b747a8f9fd1466";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Execute a set of actions (e.g. parsers) in each possible order";
license = stdenv.lib.licenses.bsd3;

}) {};
"active" = callPackage
({
  mkDerivation
, base
, lens
, linear
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "active";
version = "0.2.0.13";
sha256 = "5d9a141d58bcefbf699ed233a22309ded671c25ed64bcee11a663d00731280fb";
revision = "5";
editedCabalFile = "0hwla9xz275qzgn9n07311ksl3j40izidki1nbhmrmmmfjin57cv";
libraryHaskellDepends = [
base
lens
linear
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
description = "Abstractions for animation";
license = stdenv.lib.licenses.bsd3;

}) {};
"ad" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, cabal-doctest
, comonad
, containers
, data-reify
, erf
, free
, nats
, reflection
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "ad";
version = "4.3.5";
sha256 = "9c5e754b1f0ff83490bcc30f5dfa8504de5a34ab8f7be03ac232882940dc8d60";
revision = "3";
editedCabalFile = "14g2lfsw1fi4gn2cgvhglz4gyi797xk9g1r4pf46g734ivfl67c5";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
array
base
comonad
containers
data-reify
erf
free
nats
reflection
semigroups
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/ad";
description = "Automatic Differentiation";
license = stdenv.lib.licenses.bsd3;

}) {};
"adjunctions" = callPackage
({
  mkDerivation
, array
, base
, comonad
, containers
, contravariant
, distributive
, free
, mtl
, profunctors
, semigroupoids
, semigroups
, stdenv
, tagged
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "adjunctions";
version = "4.4";
sha256 = "507c2ef55337ae61c805f8cbc1213dfd7d2b85187342675d662254b8d8a16ae9";
libraryHaskellDepends = [
array
base
comonad
containers
contravariant
distributive
free
mtl
profunctors
semigroupoids
semigroups
tagged
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/adjunctions/";
description = "Adjunctions and representable functors";
license = stdenv.lib.licenses.bsd3;

}) {};
"adler32" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "adler32";
version = "0.1.2.0";
sha256 = "26b43c9f389f45ed792698ea4880d24ba56ab61c6f7cae51e582a05e0b5866a4";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hs-adler32";
description = "An implementation of Adler-32, supporting rolling checksum operation";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) zlib;};
"aern2-mp" = callPackage
({
  mkDerivation
, base
, convertible
, hmpfr
, hspec
, integer-gmp
, integer-logarithms
, lens
, mixed-types-num
, QuickCheck
, regex-tdfa
, stdenv
, template-haskell
}:
mkDerivation {

pname = "aern2-mp";
version = "0.1.2.0";
sha256 = "9de6632ad943c044115e713f6c87078f33c37c6bde36ff472a5142a96cf53c8c";
revision = "1";
editedCabalFile = "09b92kf60m4v0xn2nm9h8wkg8wr7dc1na5c9mg2lk3kplf60sfvk";
libraryHaskellDepends = [
base
convertible
hmpfr
hspec
integer-gmp
integer-logarithms
lens
mixed-types-num
QuickCheck
regex-tdfa
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michalkonecny/aern2";
description = "Multi-precision floats via MPFR";
license = stdenv.lib.licenses.bsd3;

}) {};
"aern2-real" = callPackage
({
  mkDerivation
, aern2-mp
, aeson
, base
, bytestring
, containers
, convertible
, hspec
, lens
, mixed-types-num
, QuickCheck
, random
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "aern2-real";
version = "0.1.1.0";
sha256 = "25e0428536b401d5a06fd3b169025747663359595b3cfcdb56a042be81d002eb";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aern2-mp
aeson
base
bytestring
containers
convertible
hspec
lens
mixed-types-num
QuickCheck
stm
transformers
];
executableHaskellDepends = [
aern2-mp
base
mixed-types-num
QuickCheck
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michalkonecny/aern2";
description = "Exact real numbers via Cauchy sequences and MPFR";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-compat
, bytestring
, containers
, deepseq
, dlist
, ghc-prim
, hashable
, scientific
, stdenv
, tagged
, template-haskell
, text
, th-abstraction
, time
, time-locale-compat
, unordered-containers
, uuid-types
, vector
}:
mkDerivation {

pname = "aeson";
version = "1.2.4.0";
sha256 = "3401dba4fddb92c8a971f6645b38e2f8a1b286ef7061cd392a1a567640bbfc9b";
libraryHaskellDepends = [
attoparsec
base
base-compat
bytestring
containers
deepseq
dlist
ghc-prim
hashable
scientific
tagged
template-haskell
text
th-abstraction
time
time-locale-compat
unordered-containers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/aeson";
description = "Fast JSON parsing and encoding";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-better-errors" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, dlist
, mtl
, scientific
, stdenv
, text
, transformers
, transformers-compat
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "aeson-better-errors";
version = "0.9.1.0";
sha256 = "68f001bf055ec7b755d91019f2a0ef136307d157a231acddad6b4cc561f67327";
libraryHaskellDepends = [
aeson
base
bytestring
dlist
mtl
scientific
text
transformers
transformers-compat
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdgarrood/aeson-better-errors";
description = "Better error messages when decoding JSON values";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-casing" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
}:
mkDerivation {

pname = "aeson-casing";
version = "0.1.0.5";
sha256 = "cfec563dc6822f035858a7190153d8818c200be565806b43b70f198bf5410577";
libraryHaskellDepends = [
aeson
base
];
doHaddock = false;
doCheck = false;
description = "Tools to change the formatting of field names in Aeson instances";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-compat" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, attoparsec-iso8601
, base
, base-compat
, bytestring
, containers
, exceptions
, hashable
, scientific
, stdenv
, tagged
, text
, time
, time-locale-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson-compat";
version = "0.3.7.1";
sha256 = "59740dc1e37b08e60abb47f38b87de5b9805611a1b468cd18294d5982a1dcacb";
revision = "3";
editedCabalFile = "1smql0v6b9f4pb3jnrm8kspyq2ygvznk1wkhzp0x7bjd7psrnmy9";
libraryHaskellDepends = [
aeson
attoparsec
attoparsec-iso8601
base
base-compat
bytestring
containers
exceptions
hashable
scientific
tagged
text
time
time-locale-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/aeson-compat#readme";
description = "Compatibility layer for aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-diff" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, edit-distance-vector
, hashable
, mtl
, optparse-applicative
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson-diff";
version = "1.1.0.5";
sha256 = "61d9dd60b6c19dd5aa350b85083ebed3eab8d8611893db1279e55e43d7c7fbcf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
edit-distance-vector
hashable
mtl
scientific
text
unordered-containers
vector
];
executableHaskellDepends = [
aeson
base
bytestring
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/thsutton/aeson-diff";
description = "Extract and apply patches to JSON documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-extra" = callPackage
({
  mkDerivation
, aeson
, aeson-compat
, attoparsec
, attoparsec-iso8601
, base
, base-compat
, bytestring
, containers
, deepseq
, exceptions
, hashable
, parsec
, recursion-schemes
, scientific
, stdenv
, template-haskell
, text
, these
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson-extra";
version = "0.4.1.0";
sha256 = "1e35bda18aca4f847178606e4cc4d24001bd0bae5c40e2934c039b64979f9085";
revision = "1";
editedCabalFile = "0fqhf8prdgjskr3qpryx2pn5s78l9dpapm4kmghak0dxh90sfp33";
libraryHaskellDepends = [
aeson
aeson-compat
attoparsec
attoparsec-iso8601
base
base-compat
bytestring
containers
deepseq
exceptions
hashable
parsec
recursion-schemes
scientific
template-haskell
text
these
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/aeson-extra#readme";
description = "Extra goodies for aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-generic-compat" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
}:
mkDerivation {

pname = "aeson-generic-compat";
version = "0.0.1.2";
sha256 = "6308ce74043a47289ee183918a362508677e9dd93fbed2b1033dc5132dca0422";
libraryHaskellDepends = [
aeson
base
];
doHaddock = false;
doCheck = false;
description = "Compatible generic class names of Aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-injector" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, deepseq
, hashable
, lens
, servant-docs
, stdenv
, swagger2
, text
, unordered-containers
}:
mkDerivation {

pname = "aeson-injector";
version = "1.1.0.0";
sha256 = "8ea78f3cf94be2e50654ba1ff8110c528f710f648e1fa10c621fa6f89f3e74b6";
libraryHaskellDepends = [
aeson
base
bifunctors
deepseq
hashable
lens
servant-docs
swagger2
text
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Injecting fields into aeson values";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-options" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
}:
mkDerivation {

pname = "aeson-options";
version = "0.0.0";
sha256 = "a0769e025d25c79d4a8ea64ad663f022a213280a9be94091ae3c05046d0e597c";
libraryHaskellDepends = [
aeson
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/serokell/aeson-options";
description = "Options to derive FromJSON/ToJSON instances";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-picker" = callPackage
({
  mkDerivation
, aeson
, base
, lens
, lens-aeson
, stdenv
, text
}:
mkDerivation {

pname = "aeson-picker";
version = "0.1.0.4";
sha256 = "b20e23905c395d7b61fce6c5f6343758e3753a2dbee61800d3e15e753ac7c452";
libraryHaskellDepends = [
aeson
base
lens
lens-aeson
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ozzzzz/aeson-picker#readme";
description = "Tiny library to get fields from JSON format";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-pretty" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, bytestring
, cmdargs
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "aeson-pretty";
version = "0.8.7";
sha256 = "c1c1ecc5e3abd004a6c4c256ee6f61da2a43d7f1452ffa391dee250df43b27d5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
scientific
text
unordered-containers
vector
];
executableHaskellDepends = [
aeson
attoparsec
base
bytestring
cmdargs
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/informatikr/aeson-pretty";
description = "JSON pretty-printing library and command-line tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-qq" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, haskell-src-meta
, parsec
, scientific
, stdenv
, template-haskell
, text
, vector
}:
mkDerivation {

pname = "aeson-qq";
version = "0.8.2";
sha256 = "6db252c94601efcb1ce395de0084ccf931a3525339ccdca011a740e7b11cc152";
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
haskell-src-meta
parsec
scientific
template-haskell
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/aeson-qq#readme";
description = "JSON quasiquoter for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"aeson-typescript" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, interpolate
, mtl
, stdenv
, template-haskell
, text
, th-abstraction
, unordered-containers
}:
mkDerivation {

pname = "aeson-typescript";
version = "0.1.0.6";
sha256 = "2d9aa1534d2cc86a7f95a5876d7ff28006c34dbead6fb7a03aa86d6f5e310187";
libraryHaskellDepends = [
aeson
base
containers
interpolate
mtl
template-haskell
text
th-abstraction
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/codedownio/aeson-typescript#readme";
description = "Generate TypeScript definition files from your ADTs";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-utils" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "aeson-utils";
version = "0.3.0.2";
sha256 = "71814b1be8849f945395eb81217a2ad464f2943134c50c09afd8a3126add4b1f";
revision = "7";
editedCabalFile = "0lnlmsn5imbapdhbza1175wm04ynn1w75llkhlk1akpanx1dnd15";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
scientific
text
];
doHaddock = false;
doCheck = false;
description = "Utilities for working with Aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"aeson-yak" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
}:
mkDerivation {

pname = "aeson-yak";
version = "0.1.1.3";
sha256 = "af4355bc315a152592e9c06f5cc41bdb5ce7b236d85fe572a292c6bac02faa74";
libraryHaskellDepends = [
aeson
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tejon/aeson-yak";
description = "Handle JSON that may or may not be a list, or exist";
license = stdenv.lib.licenses.mit;

}) {};
"airship" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, bytestring-trie
, case-insensitive
, containers
, cryptohash
, directory
, either
, filepath
, http-date
, http-media
, http-types
, lifted-base
, microlens
, mime-types
, mmorph
, monad-control
, mtl
, network
, old-locale
, random
, stdenv
, text
, time
, transformers
, transformers-base
, unix
, unordered-containers
, wai
, wai-extra
}:
mkDerivation {

pname = "airship";
version = "0.9.3";
sha256 = "e254837d9d667fcb70a2767ad486dfe2b8eb6577f3676abc3ec82227aa6d345a";
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
blaze-builder
bytestring
bytestring-trie
case-insensitive
containers
cryptohash
directory
either
filepath
http-date
http-media
http-types
lifted-base
microlens
mime-types
mmorph
monad-control
mtl
network
old-locale
random
text
time
transformers
transformers-base
unix
unordered-containers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/helium/airship/";
description = "A Webmachine-inspired HTTP library";
license = stdenv.lib.licenses.mit;

}) {};
"alarmclock" = callPackage
({
  mkDerivation
, async
, base
, clock
, stdenv
, stm
, time
, unbounded-delays
}:
mkDerivation {

pname = "alarmclock";
version = "0.4.0.4";
sha256 = "dd77980820690e0cbc54bdc6546789a4a50bccebe19d6b3b86a3f75a0a022d4b";
libraryHaskellDepends = [
async
base
clock
stm
time
unbounded-delays
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/davecturner/alarmclock";
description = "Wake up and perform an action at a certain time";
license = stdenv.lib.licenses.bsd3;

}) {};
"alerts" = callPackage
({
  mkDerivation
, base
, blaze-html
, stdenv
, text
}:
mkDerivation {

pname = "alerts";
version = "0.1.0.0";
sha256 = "52418ed3abfff15e802506e5fb45f56d38eee020cb01af3f0acfe163c470ca68";
libraryHaskellDepends = [
base
blaze-html
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alx741/alerts#readme";
description = "Alert messages for web applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"alex" = callPackage
({
  mkDerivation
, array
, base
, containers
, directory
, happy
, stdenv
}:
mkDerivation {

pname = "alex";
version = "3.2.4";
sha256 = "d58e4d708b14ff332a8a8edad4fa8989cb6a9f518a7c6834e96281ac5f8ff232";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
array
base
containers
directory
];
executableToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/alex/";
description = "Alex is a tool for generating lexical analysers in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"algebra" = callPackage
({
  mkDerivation
, adjunctions
, array
, base
, containers
, distributive
, mtl
, nats
, semigroupoids
, semigroups
, stdenv
, tagged
, transformers
, void
}:
mkDerivation {

pname = "algebra";
version = "4.3.1";
sha256 = "25982f929b6f9930ad4df7b2c4084da473178a6e1f33ccc556ec96ee6f541224";
libraryHaskellDepends = [
adjunctions
array
base
containers
distributive
mtl
nats
semigroupoids
semigroups
tagged
transformers
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/algebra/";
description = "Constructive abstract algebra";
license = stdenv.lib.licenses.bsd3;

}) {};
"algebraic-graphs" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "algebraic-graphs";
version = "0.1.1.1";
sha256 = "8747a7d6f7a328b6073c1904883087a6a8e9a02d3bd8a5e35174c5f1c1cd1231";
libraryHaskellDepends = [
array
base
base-compat
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snowleopard/alga";
description = "A library for algebraic graph construction and transformation";
license = stdenv.lib.licenses.mit;

}) {};
"alsa-core" = callPackage
({
  mkDerivation
, alsaLib
, base
, extensible-exceptions
, stdenv
}:
mkDerivation {

pname = "alsa-core";
version = "0.5.0.1";
sha256 = "eb50495ef05ecc7c06a0147da7f0d3efde832a44d23caaf5172dc114882270ab";
libraryHaskellDepends = [
base
extensible-exceptions
];
libraryPkgconfigDepends = [
alsaLib
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/ALSA";
description = "Binding to the ALSA Library API (Exceptions)";
license = stdenv.lib.licenses.bsd3;
platforms = [
"i686-linux"
"x86_64-linux"
];

}) {inherit (pkgs) alsaLib;};
"alsa-mixer" = callPackage
({
  mkDerivation
, alsa-core
, alsaLib
, base
, c2hs
, stdenv
, unix
}:
mkDerivation {

pname = "alsa-mixer";
version = "0.2.0.3";
sha256 = "f76deb4081a2ce4a765e78a017b2e13c073d2aaa5a2d2652fd5e635dd169cf8d";
libraryHaskellDepends = [
alsa-core
base
unix
];
librarySystemDepends = [
alsaLib
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ttuegel/alsa-mixer";
description = "Bindings to the ALSA simple mixer API";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) alsaLib;};
"alsa-pcm" = callPackage
({
  mkDerivation
, alsa-core
, alsaLib
, array
, base
, extensible-exceptions
, sample-frame
, semigroups
, stdenv
, storable-record
}:
mkDerivation {

pname = "alsa-pcm";
version = "0.6.1";
sha256 = "453d768f7b90aaa0b5fd5462bcd7f8f40a97aa9d0ca7dfc7e61fe69e74934e5d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
alsa-core
array
base
extensible-exceptions
sample-frame
semigroups
storable-record
];
libraryPkgconfigDepends = [
alsaLib
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/ALSA";
description = "Binding to the ALSA Library API (PCM audio)";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) alsaLib;};
"alsa-seq" = callPackage
({
  mkDerivation
, alsa-core
, alsaLib
, array
, base
, bytestring
, data-accessor
, enumset
, extensible-exceptions
, poll
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "alsa-seq";
version = "0.6.0.7";
sha256 = "06cda1e24993aaf0c3592b51a613cf1e187eea603dd77ad3a129a8a7b1e0b778";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
alsa-core
array
base
bytestring
data-accessor
enumset
extensible-exceptions
poll
transformers
utility-ht
];
libraryPkgconfigDepends = [
alsaLib
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/ALSA";
description = "Binding to the ALSA Library API (MIDI sequencer)";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) alsaLib;};
"alternative-vector" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "alternative-vector";
version = "0.0.0";
sha256 = "42474bc708dbc81e13a7850887cefc2596db47cb07423610094cd994f754c7b1";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/alternative-vector#readme";
description = "Use vectors instead of lists for many and some";
license = stdenv.lib.licenses.bsd3;

}) {};
"alternators" = callPackage
({
  mkDerivation
, base
, mmorph
, stdenv
, transformers
}:
mkDerivation {

pname = "alternators";
version = "0.1.2.0";
sha256 = "afe401a4a5ccef58a503f31fd9cf0fdc9618333772e9a80fb5a2696b22f422a6";
libraryHaskellDepends = [
base
mmorph
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/alternators#readme";
description = "Handy functions when using transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"amazonka" = callPackage
({
  mkDerivation
, amazonka-core
, base
, bytestring
, conduit
, conduit-extra
, directory
, exceptions
, http-client
, http-conduit
, http-types
, ini
, mmorph
, monad-control
, mtl
, resourcet
, retry
, stdenv
, text
, time
, transformers
, transformers-base
, transformers-compat
, void
}:
mkDerivation {

pname = "amazonka";
version = "1.6.0";
sha256 = "3721892c87946c12bbd87ddba38d9e244aa962db190d8897c16a264c4f3fc41c";
libraryHaskellDepends = [
amazonka-core
base
bytestring
conduit
conduit-extra
directory
exceptions
http-client
http-conduit
http-types
ini
mmorph
monad-control
mtl
resourcet
retry
text
time
transformers
transformers-base
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Comprehensive Amazon Web Services SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-apigateway" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-apigateway";
version = "1.6.0";
sha256 = "56e63ecfbd8358d0d2766e08f8f2b08362bb435c1059a5791964089dbab75ae8";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon API Gateway SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-application-autoscaling" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-application-autoscaling";
version = "1.6.0";
sha256 = "5536a7d1c24cd5907b85bd743df5989d91cb3325602944062c9c640178a61df7";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Application Auto Scaling SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-appstream" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-appstream";
version = "1.6.0";
sha256 = "eb90692b932d62c4e7006d661b8022c4dd9f7d4dcc07e5499eceae14b33747df";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon AppStream SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-autoscaling" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-autoscaling";
version = "1.6.0";
sha256 = "1b52132b23ef899937d20cef595d9f8757f85861d142616bcb5ee0ba8ed5f8d3";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Auto Scaling SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-budgets" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-budgets";
version = "1.6.0";
sha256 = "ccc692856a7f7ddfba573cde6506108a30a59f641748ecc787aece894d7ce4b7";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Budgets SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-certificatemanager" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-certificatemanager";
version = "1.6.0";
sha256 = "1fdf93c685a1b348a851b793b170a0a2282b06dc65a91c016d4756ea5726aa6a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Certificate Manager SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudformation" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudformation";
version = "1.6.0";
sha256 = "15e2c82574906a13d390f68f5a57a83f4bbfc37fb9ce590c9f73e00dcafa8335";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudFormation SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudfront" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudfront";
version = "1.6.0";
sha256 = "956a60988ff3b9bef042bf523b63c882cd7b2c386483cc3f1d1d8534aad334a2";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudFront SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudhsm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudhsm";
version = "1.6.0";
sha256 = "e4227038a39486e8c390198997571ca1b14ebf5e15fec1146169da7378a41b5f";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudHSM SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudsearch" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudsearch";
version = "1.6.0";
sha256 = "dd17345576acd8f44fd3af82f07b00fdce0781abbd51ab2df827fa48528c6394";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudSearch SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudsearch-domains" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudsearch-domains";
version = "1.6.0";
sha256 = "24f0d36f9aeed5041fd893b8a0d60e5df6f31c8a126cead4652115c6b28f7ca7";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudSearch Domain SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudtrail" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudtrail";
version = "1.6.0";
sha256 = "d9d99df96ac2e46321e0da7d1797f12472ee32011f126d2881a2f19aa7491c24";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudTrail SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudwatch" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudwatch";
version = "1.6.0";
sha256 = "25c812b364b22d96d082e3598cd75d988cb8e3decdb8e3291a0deb9714dbee51";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudWatch SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudwatch-events" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudwatch-events";
version = "1.6.0";
sha256 = "13fb5e436fc4c534d6e01c47ef23f589c01042f8a9d7efb622e89bd8f5d2ec4d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudWatch Events SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cloudwatch-logs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cloudwatch-logs";
version = "1.6.0";
sha256 = "80e4e74af0fb29f5ecc04f4d956ba0e9950f7936c858c1ff84461b62ca87ee7d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CloudWatch Logs SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-codebuild" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codebuild";
version = "1.6.0";
sha256 = "fdbf43578e0aa54c616b2daf8b442b32a8765b62da0c3b7f6b1df95f4e55a0ab";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodeBuild SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-codecommit" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codecommit";
version = "1.6.0";
sha256 = "8a2f2630bfabd3c71fdb811a9bbafefb058ce085ad18c1756a82f59bdd682415";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodeCommit SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-codedeploy" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codedeploy";
version = "1.6.0";
sha256 = "3315b99ab8851acb5ae1251344474e0ec03796e9fd59f1d18278abc7add3c2df";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodeDeploy SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-codepipeline" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-codepipeline";
version = "1.6.0";
sha256 = "c46eea221931601ced439454d3a3fe0030acccbb776bf153182010ca8f2ec043";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon CodePipeline SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cognito-identity" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cognito-identity";
version = "1.6.0";
sha256 = "3aac30e210d3fc0f45166b6211c4c61eb7cc4480fb550f106cd6206c8dc9b6d5";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Cognito Identity SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cognito-idp" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cognito-idp";
version = "1.6.0";
sha256 = "a98989c8ca10bb938fb4f27803920462fc8f88d7104cebb5106b9e3728e81fff";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Cognito Identity Provider SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-cognito-sync" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-cognito-sync";
version = "1.6.0";
sha256 = "5fde10d8e1f31e676433dfd32d061739d805a076ee58abd9c05d8faba36cf435";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Cognito Sync SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-config" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-config";
version = "1.6.0";
sha256 = "5cb03ebc049efbccfb48ab926e08f0e9824880bb349129601f724679fe42c9cd";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Config SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-core" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bifunctors
, bytestring
, case-insensitive
, conduit
, conduit-extra
, cryptonite
, deepseq
, exceptions
, hashable
, http-client
, http-conduit
, http-types
, lens
, memory
, mtl
, resourcet
, scientific
, semigroups
, stdenv
, tagged
, text
, time
, transformers
, transformers-compat
, unordered-containers
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "amazonka-core";
version = "1.6.0";
sha256 = "afe1c5b74aadc0222419bd792688fd179e4f5693aeb75b74232f770fff093dc9";
libraryHaskellDepends = [
aeson
attoparsec
base
bifunctors
bytestring
case-insensitive
conduit
conduit-extra
cryptonite
deepseq
exceptions
hashable
http-client
http-conduit
http-types
lens
memory
mtl
resourcet
scientific
semigroups
tagged
text
time
transformers
transformers-compat
unordered-containers
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Core data types and functionality for Amazonka libraries";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-datapipeline" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-datapipeline";
version = "1.6.0";
sha256 = "1b212dd70864ef1ccc45e3a7deca936e0e1803c97aacefc34fad966fd85f3ae5";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Data Pipeline SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-devicefarm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-devicefarm";
version = "1.6.0";
sha256 = "d81b74b8b0c254a487ce464b1d6f0679d774bd42daf32312867e4dd37e35c569";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Device Farm SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-directconnect" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-directconnect";
version = "1.6.0";
sha256 = "8d85b9ce865eac817610a3a1db2e28100ff0069b85f41c4359a6aa5978533832";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Direct Connect SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-discovery" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-discovery";
version = "1.6.0";
sha256 = "7bc67ad76b1413c2aebe48324d56b2e6f4279db6e7d4951e93bdaa5329199213";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Application Discovery Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-dms" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-dms";
version = "1.6.0";
sha256 = "a75f19dc2a7642840a97a135f24cd9120d3f5a81ad924aad6a46c514fba180f3";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Database Migration Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-ds" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ds";
version = "1.6.0";
sha256 = "06fa338938aee62f81f93755cdc7039515dc0c6b32bb7c0bac33d7c92066d389";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Directory Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-dynamodb" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-dynamodb";
version = "1.6.0";
sha256 = "33f54ee4f898972f1539a00e65a851bb940c8d26058d63ddfcd07fbca57f9a3f";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon DynamoDB SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-dynamodb-streams" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-dynamodb-streams";
version = "1.6.0";
sha256 = "b3f832ddf70e95232cb79d71633276aa65c72e51c6c553118b4bc9db3a48e57f";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon DynamoDB Streams SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-ec2" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ec2";
version = "1.6.0";
sha256 = "2221c2c4e188aac9f0c9e4bb2e0bce65eb21102e6199c3783c20f3797da955cc";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Compute Cloud SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-ecr" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ecr";
version = "1.6.0";
sha256 = "42088ad4b4d4c01b87267a372fec706f57db4db19b27c06a3c6826ef62ef8450";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon EC2 Container Registry SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-ecs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ecs";
version = "1.6.0";
sha256 = "309535abe8359475b3430488c84c398ed8d25a05321101c725e4a04d5f4cde3f";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon EC2 Container Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-efs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-efs";
version = "1.6.0";
sha256 = "268456294406d63eb49422027226af8ef15ce08dc2095be9a6657bf9bf41afbb";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic File System SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-elasticache" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elasticache";
version = "1.6.0";
sha256 = "e4a74a2ce2d89534fd738c429dc9a0ee7564ee3539bd93488eba211176763969";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon ElastiCache SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-elasticbeanstalk" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elasticbeanstalk";
version = "1.6.0";
sha256 = "c1dc065763475b705aabf61086546bcd312e6802dbb328775b9777e682b2386a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Beanstalk SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-elasticsearch" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elasticsearch";
version = "1.6.0";
sha256 = "3429fcae1c6fec5ebbc8acf1597532615b39def394d2296d641614c0225f3083";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elasticsearch Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-elastictranscoder" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elastictranscoder";
version = "1.6.0";
sha256 = "ab12a7c97e09cd1a60e81525e793f5f7b84799f8f9968a2b62bae8b9c9f3c10a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Transcoder SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-elb" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elb";
version = "1.6.0";
sha256 = "59c974009a2c26f7d267ae9736c71893a82ae69c19f344b87b4e3afd19f97e4d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Load Balancing SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-elbv2" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-elbv2";
version = "1.6.0";
sha256 = "2a53d35e29b613ac7261a3202023cb8221607fd8df5f034c572d6aa751c622c9";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic Load Balancing SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-emr" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-emr";
version = "1.6.0";
sha256 = "e9a07458ee61feadeff2e98fc83c1542320d5b97744225304dc1cc568ad9774f";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Elastic MapReduce SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-gamelift" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-gamelift";
version = "1.6.0";
sha256 = "ebcdbd4a43c8d02dc0a0d7302f4b27c8e106a783e910c5cdaa68a7a7ee775ffc";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon GameLift SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-glacier" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-glacier";
version = "1.6.0";
sha256 = "5307434d1fbddfba54b56ceb5eea2e5dfa3ece05b9353e61a998788af3e0f913";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Glacier SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-health" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-health";
version = "1.6.0";
sha256 = "c216b18e93e998ff04b00a5fc3ab6df8d36ef95d4b9988587eceb837615ba67b";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Health APIs and Notifications SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-iam" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-iam";
version = "1.6.0";
sha256 = "a335813a795c3d28400b95b94f1b14ada3e621e83d07cb9fd9c7e7edb285905d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Identity and Access Management SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-importexport" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-importexport";
version = "1.6.0";
sha256 = "0951f2bcd74e24c687ab39a044cfc9334b68fdb3c885d54693c918a1c97dcd04";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Import/Export SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-inspector" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-inspector";
version = "1.6.0";
sha256 = "bcef005e38e63b742c1d7c63de84f582a447042a19ea611b1b617751f3cce13e";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Inspector SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-iot" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-iot";
version = "1.6.0";
sha256 = "180b2169c97bd021e5f013cc72b64fe701270a7a5000950e20fa6373d38a26d0";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon IoT SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-iot-dataplane" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-iot-dataplane";
version = "1.6.0";
sha256 = "aee63bc0e6eca4cc4f76f7c8aa5e20f97e3f98268160006099014c66f4a88742";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon IoT Data Plane SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-kinesis" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kinesis";
version = "1.6.0";
sha256 = "549e41d29e46ff6aa485676436cb7cf15d2d37c2d0c62e6358b9b12b92e22f38";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Kinesis SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-kinesis-analytics" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kinesis-analytics";
version = "1.6.0";
sha256 = "7efb5438596ef4541ebca35e4b87adf3c989bf88032be2d2e617bb14a7f685ee";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Kinesis Analytics SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-kinesis-firehose" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kinesis-firehose";
version = "1.6.0";
sha256 = "120545cdc888c031290b2f8a6745b911ebc6e2e5c077005067683118d197549c";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Kinesis Firehose SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-kms" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-kms";
version = "1.6.0";
sha256 = "7aa5333583b494d0a5585f78ead67833a7e72942b264673ee8b91d7be89e8e99";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Key Management Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-lambda" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-lambda";
version = "1.6.0";
sha256 = "649626896a7572979c5628e9406eb9be090106b7468473455e77aa59cec99b06";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Lambda SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-lightsail" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-lightsail";
version = "1.6.0";
sha256 = "741b4c6aff2f0e08fe9868aa858708a8ab36f95859bc0a9eecfdd9bd2060aceb";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Lightsail SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-marketplace-analytics" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-marketplace-analytics";
version = "1.6.0";
sha256 = "4d6c0db0e9c17b5131c6b03cd27bc53fbddb144c3910d46639edfdccbecd5d6a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Marketplace Commerce Analytics SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-marketplace-metering" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-marketplace-metering";
version = "1.6.0";
sha256 = "672de14acac579673c8c3cf032c3806554355cc84ae1b61882a589af2afb5f77";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Marketplace Metering SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-ml" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ml";
version = "1.6.0";
sha256 = "9dc12d7b71a72ea720efe9de60668ab904adddfdfbe9c422f5ebda940a556dfe";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Machine Learning SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-opsworks" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-opsworks";
version = "1.6.0";
sha256 = "9a4372339b8ec556331b0198b5faf74bd8116f0816176aa8626d31f3b372d918";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon OpsWorks SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-opsworks-cm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-opsworks-cm";
version = "1.6.0";
sha256 = "4f9e9b755f70fffd15cea08d0dfef5dc23ee4f822471f8e89f4d9b2f77a748f4";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon OpsWorks for Chef Automate SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-pinpoint" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-pinpoint";
version = "1.6.0";
sha256 = "b0f8cdaabd9f357d5a687999ce83c7670f43023507ab9b25e94bc717f916b005";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Pinpoint SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-polly" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-polly";
version = "1.6.0";
sha256 = "773edcfa2628cb9e616b9f1f5fab461cd6f0e5822dafa43fef4403c54e958ad0";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Polly SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-rds" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-rds";
version = "1.6.0";
sha256 = "c793613c53773b3ba8c5db1fa342e68c25fcada39f8557c6ed39feb05f1bc24d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Relational Database Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-redshift" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-redshift";
version = "1.6.0";
sha256 = "426ab96936e8d42ed85b31f076d99304148a6eb0896edbe90c6b1e570a90b329";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Redshift SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-rekognition" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-rekognition";
version = "1.6.0";
sha256 = "462e427021e5362747b155ba4f77e4c1d99d794087dca273697fae93aff532a8";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Rekognition SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-route53" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
, text
}:
mkDerivation {

pname = "amazonka-route53";
version = "1.6.0";
sha256 = "68ef773bd9c44b28cb6166d86e3e499d9d32581915548ba08670f5cb1caa6317";
libraryHaskellDepends = [
amazonka-core
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Route 53 SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-route53-domains" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-route53-domains";
version = "1.6.0";
sha256 = "f75bfe2f5f57c7367412479f3406cabcafa11a1436dd19f9a00ead6932e1a5ea";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Route 53 Domains SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-s3" = callPackage
({
  mkDerivation
, amazonka-core
, base
, lens
, stdenv
, text
}:
mkDerivation {

pname = "amazonka-s3";
version = "1.6.0";
sha256 = "eca18ebbd0df13a78768d9665827c7624282f76d512b3cf8f0f22a3afd463f47";
libraryHaskellDepends = [
amazonka-core
base
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Storage Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-sdb" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sdb";
version = "1.6.0";
sha256 = "b9c28b21326fdb78a0acee0968188ffb6fb156c7fe0faf688a2ec83d3f5fbdfd";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon SimpleDB SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-servicecatalog" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-servicecatalog";
version = "1.6.0";
sha256 = "11f8df3b1b2b43ec636eb5a428c43c8534eae9d9554071298688005bcb46f264";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Service Catalog SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-ses" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ses";
version = "1.6.0";
sha256 = "778d32e738faae3fd1a7e12a67dddce063c0480740b95e1a58b5c23dc052bd02";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Email Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-shield" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-shield";
version = "1.6.0";
sha256 = "b983a85b2b5a617bc3cbc911bc8d00a3fbf199ddd5dee67bdb3882b23747ebf4";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Shield SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-sms" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sms";
version = "1.6.0";
sha256 = "fc4d359d2988d7604780a5eca5b3371d3d3034180e96d2cbc6148559f0cda47f";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Server Migration Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-snowball" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-snowball";
version = "1.6.0";
sha256 = "534b30fe9205ba1edf8b1c5c4f4f91dccbe124f95a599f5efdf0cc4cd502ee25";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Import/Export Snowball SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-sns" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sns";
version = "1.6.0";
sha256 = "1d16b548031359ed593b14d172e7880847934e76bbedf535d014674414e37573";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Notification Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-sqs" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sqs";
version = "1.6.0";
sha256 = "743838707d28707095700afdf2d875ff34c5fe1d90b214f5a7e48be04c900433";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Queue Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-ssm" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-ssm";
version = "1.6.0";
sha256 = "11218249760a2d06cfd5ad2b41bf67233b6178f86e2ab979c199088a5a1c701a";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Systems Manager (SSM) SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-stepfunctions" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-stepfunctions";
version = "1.6.0";
sha256 = "99ac8e545d28d7d765e180a26572d216f88d1e6ab9a2cd0f0a874992fa89acbf";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Step Functions SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-storagegateway" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-storagegateway";
version = "1.6.0";
sha256 = "6f06376650f03107ebd13a622b77b1983da91c6030927e2d10afb4040b48b43d";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Storage Gateway SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-sts" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-sts";
version = "1.6.0";
sha256 = "36056b67d6f97a5b137f7ae35f39fb5417c61991333347129ed3e77f79a99a12";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Security Token Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-support" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-support";
version = "1.6.0";
sha256 = "7f434aef975f2817d4b9d7aa1c6055d788988e817fdb5c8fae20a787f26853e9";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Support SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-swf" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-swf";
version = "1.6.0";
sha256 = "1f0e437ba9c1511f46c64df16ae4551667fee39ade3c32f251f9e34b2255aa90";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon Simple Workflow Service SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-test" = callPackage
({
  mkDerivation
, aeson
, amazonka-core
, base
, bifunctors
, bytestring
, case-insensitive
, conduit
, conduit-extra
, groom
, http-client
, http-types
, process
, resourcet
, stdenv
, tasty
, tasty-hunit
, template-haskell
, temporary
, text
, time
, unordered-containers
, yaml
}:
mkDerivation {

pname = "amazonka-test";
version = "1.6.0";
sha256 = "46a8b77900370524a487f2ca0490473e23d0155664db2461c5504678d275dd28";
libraryHaskellDepends = [
aeson
amazonka-core
base
bifunctors
bytestring
case-insensitive
conduit
conduit-extra
groom
http-client
http-types
process
resourcet
tasty
tasty-hunit
template-haskell
temporary
text
time
unordered-containers
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Common functionality for Amazonka library test-suites";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-waf" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-waf";
version = "1.6.0";
sha256 = "880b9ec52be2d8fb0f5711d1e5357b0ce566e98b775e3bb7921e8f4295bbb980";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon WAF SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-workspaces" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-workspaces";
version = "1.6.0";
sha256 = "56cf348d8c519a4db23693e81cccf822975ec5b37e74dda54f9f020415c91c84";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon WorkSpaces SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amazonka-xray" = callPackage
({
  mkDerivation
, amazonka-core
, base
, stdenv
}:
mkDerivation {

pname = "amazonka-xray";
version = "1.6.0";
sha256 = "8f510075361aa600cd7759763f4de55aed07b8a7cce65eb445dfcf9f475590f0";
libraryHaskellDepends = [
amazonka-core
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/amazonka";
description = "Amazon X-Ray SDK";
license = stdenv.lib.licenses.mpl20;

}) {};
"amqp" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, clock
, connection
, containers
, data-binary-ieee754
, monad-control
, network
, network-uri
, split
, stdenv
, stm
, text
, vector
, xml
}:
mkDerivation {

pname = "amqp";
version = "0.18.1";
sha256 = "4678e2eb976df97e27cacbc4b1feafeb5a1800a9779b0a36666f04804f43e248";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
clock
connection
containers
data-binary-ieee754
monad-control
network
network-uri
split
stm
text
vector
];
executableHaskellDepends = [
base
containers
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hreinhardt/amqp";
description = "Client library for AMQP servers (currently only RabbitMQ)";
license = stdenv.lib.licenses.bsd3;

}) {};
"annotated-wl-pprint" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "annotated-wl-pprint";
version = "0.7.0";
sha256 = "0c262d7fe13a9a50216438ec882c13e25f31236b886a5692e3c35b85cd773d18";
revision = "1";
editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
description = "The Wadler/Leijen Pretty Printer, with annotation support";
license = stdenv.lib.licenses.bsd3;

}) {};
"ansi-terminal" = callPackage
({
  mkDerivation
, base
, colour
, stdenv
}:
mkDerivation {

pname = "ansi-terminal";
version = "0.8.0.4";
sha256 = "eb3cb8b0d0ce1c67ae3146c0b73a83e640c6f049d36bd6e859b6b951117e4810";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
colour
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/ansi-terminal";
description = "Simple ANSI terminal support, with Windows compatibility";
license = stdenv.lib.licenses.bsd3;

}) {};
"ansi-wl-pprint" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, stdenv
}:
mkDerivation {

pname = "ansi-wl-pprint";
version = "0.6.8.2";
sha256 = "a630721bd57678c3bfeb6c703f8249e434cbf85f40daceec4660fb8c6725cb3e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/ansi-wl-pprint";
description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
license = stdenv.lib.licenses.bsd3;

}) {};
"ansigraph" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, stdenv
}:
mkDerivation {

pname = "ansigraph";
version = "0.3.0.5";
sha256 = "2e8dcf6b182c0b0608f515582b780b7b9cf73a63ec8d1f4bf9ce4b3063397a0e";
libraryHaskellDepends = [
ansi-terminal
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/BlackBrane/ansigraph";
description = "Terminal-based graphing via ANSI and Unicode";
license = stdenv.lib.licenses.mit;

}) {};
"apecs" = callPackage
({
  mkDerivation
, async
, base
, containers
, mtl
, stdenv
, template-haskell
, vector
}:
mkDerivation {

pname = "apecs";
version = "0.2.4.7";
sha256 = "1ad954536d6ed1c7f576c8bfd7150d9e69e6e1aa6c19dfe0691f21230a061d43";
libraryHaskellDepends = [
async
base
containers
mtl
template-haskell
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jonascarpay/apecs#readme";
description = "A fast ECS for game engine programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"api-field-json-th" = callPackage
({
  mkDerivation
, aeson
, base
, lens
, split
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "api-field-json-th";
version = "0.1.0.2";
sha256 = "b8d49c3869bc8104539c43d5544ed2271d1e68a963440d781ee71d2252b0f724";
libraryHaskellDepends = [
aeson
base
lens
split
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nakaji-dayo/api-field-json-th";
description = "option of aeson's deriveJSON";
license = stdenv.lib.licenses.bsd3;

}) {};
"app-settings" = callPackage
({
  mkDerivation
, base
, containers
, directory
, mtl
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "app-settings";
version = "0.2.0.11";
sha256 = "6a14c69aca4e55cf27933475f5ae0ffead3a83f69f4233896eb13c41dccd50b1";
libraryHaskellDepends = [
base
containers
directory
mtl
parsec
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/emmanueltouzery/app-settings";
description = "A library to manage application settings (INI file-like)";
license = stdenv.lib.licenses.bsd3;

}) {};
"appar" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "appar";
version = "0.1.4";
sha256 = "58ea66abe4dd502d2fc01eecdb0828d5e214704a3c1b33b1f8b33974644c4b26";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "A simple applicative parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"apply-refact" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filemanip
, filepath
, ghc
, ghc-exactprint
, mtl
, optparse-applicative
, process
, refact
, stdenv
, syb
, temporary
, transformers
, unix-compat
}:
mkDerivation {

pname = "apply-refact";
version = "0.4.1.0";
sha256 = "7c8eb33266ea4d8e3c668aa1f2f322421b78a83456703e2d0749edec79731502";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
filemanip
ghc
ghc-exactprint
mtl
process
refact
syb
temporary
transformers
unix-compat
];
executableHaskellDepends = [
base
containers
directory
filemanip
filepath
ghc
ghc-exactprint
mtl
optparse-applicative
process
refact
syb
temporary
transformers
unix-compat
];
doHaddock = false;
doCheck = false;
description = "Perform refactorings specified by the refact library";
license = stdenv.lib.licenses.bsd3;

}) {};
"apportionment" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, utility-ht
}:
mkDerivation {

pname = "apportionment";
version = "0.0.0.2";
sha256 = "352d9564ffdb01d3312a1087f8badc544b3478185cbc27d4ca29fc1f18c9f82b";
libraryHaskellDepends = [
base
containers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/apportionment";
description = "Round a set of numbers while maintaining its sum";
license = stdenv.lib.licenses.bsd3;

}) {};
"approximate" = callPackage
({
  mkDerivation
, base
, binary
, bytes
, Cabal
, cabal-doctest
, cereal
, comonad
, deepseq
, ghc-prim
, hashable
, lens
, log-domain
, pointed
, safecopy
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "approximate";
version = "0.3.1";
sha256 = "d837f716d9e73d68a53a17321f0433dd9ffe71df24d550aed6a34ec1c2ad2ea2";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
binary
bytes
cereal
comonad
deepseq
ghc-prim
hashable
lens
log-domain
pointed
safecopy
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/analytics/approximate/";
description = "Approximate discrete values and numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"arithmoi" = callPackage
({
  mkDerivation
, array
, base
, containers
, exact-pi
, ghc-prim
, integer-gmp
, integer-logarithms
, mtl
, random
, stdenv
}:
mkDerivation {

pname = "arithmoi";
version = "0.6.0.1";
sha256 = "15cffd4c0349024fd5649b5f37c14ff0dc9e9177a4808c796a20c45d72291936";
revision = "3";
editedCabalFile = "1ah8b17pxa96gdap3sr7872km29lz95bqjwswqzfkirig2njlf9q";
configureFlags = [
"-f-llvm"
];
libraryHaskellDepends = [
array
base
containers
exact-pi
ghc-prim
integer-gmp
integer-logarithms
mtl
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cartazio/arithmoi";
description = "Efficient basic number-theoretic functions";
license = stdenv.lib.licenses.mit;

}) {};
"array-memoize" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "array-memoize";
version = "0.6.0";
sha256 = "76c88cb3ed04875821a5601f6a1c40f4e15ef8cb36e8a3d4004df956d1db05dc";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
description = "Memoization combinators using arrays for finite sub-domains of functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"arrow-extras" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "arrow-extras";
version = "0.1.0.1";
sha256 = "c13c3aba839d1ec78a49991fa4038a68c5eb9ef6da61eceb6e68bc3ce0586a6c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/arrow-extras#readme";
description = "Extra functions for Control.Arrow";
license = stdenv.lib.licenses.bsd3;

}) {};
"arrow-list" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "arrow-list";
version = "0.7";
sha256 = "33f836f23648aa2cea11533f7a9941127c397eecdca105b2084dded9e039d5d8";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/silkapp/arrow-list";
description = "List arrows for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"ascii-progress" = callPackage
({
  mkDerivation
, async
, base
, concurrent-output
, data-default
, stdenv
, time
}:
mkDerivation {

pname = "ascii-progress";
version = "0.3.3.0";
sha256 = "7e3fa6b80c09a83c9ba8a0644ef304ca92d65b76383b8dd023ff9f89ebec913e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
concurrent-output
data-default
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-ascii-progress";
description = "A simple progress bar for the console";
license = stdenv.lib.licenses.mit;

}) {};
"asciidiagram" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, FontyFruity
, JuicyPixels
, lens
, linear
, mtl
, optparse-applicative
, rasterific-svg
, stdenv
, svg-tree
, text
, vector
}:
mkDerivation {

pname = "asciidiagram";
version = "1.3.3.1";
sha256 = "9ee69ca0abb42379070c3d6d51df1fa522438a6472db035c74e01744626c92a4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
FontyFruity
JuicyPixels
lens
linear
mtl
rasterific-svg
svg-tree
text
vector
];
executableHaskellDepends = [
base
bytestring
directory
filepath
FontyFruity
JuicyPixels
optparse-applicative
rasterific-svg
svg-tree
text
];
doHaddock = false;
doCheck = false;
description = "Pretty rendering of Ascii diagram into svg or png";
license = stdenv.lib.licenses.bsd3;

}) {};
"asn1-encoding" = callPackage
({
  mkDerivation
, asn1-types
, base
, bytestring
, hourglass
, stdenv
}:
mkDerivation {

pname = "asn1-encoding";
version = "0.9.5";
sha256 = "1e863bfd363f6c3760cc80f2c0d422e17845a9f79fe006030db202ecab5aaf29";
libraryHaskellDepends = [
asn1-types
base
bytestring
hourglass
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-asn1";
description = "ASN1 data reader and writer in RAW, BER and DER forms";
license = stdenv.lib.licenses.bsd3;

}) {};
"asn1-parse" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "asn1-parse";
version = "0.9.4";
sha256 = "c6a328f570c69db73f8d2416f9251e8a03753f90d5d19e76cbe69509a3ceb708";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-asn1";
description = "Simple monadic parser for ASN1 stream types";
license = stdenv.lib.licenses.bsd3;

}) {};
"asn1-types" = callPackage
({
  mkDerivation
, base
, bytestring
, hourglass
, memory
, stdenv
}:
mkDerivation {

pname = "asn1-types";
version = "0.3.2";
sha256 = "0c571fff4a10559c6a630d4851ba3cdf1d558185ce3dcfca1136f9883d647217";
libraryHaskellDepends = [
base
bytestring
hourglass
memory
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-asn1-types";
description = "ASN.1 types";
license = stdenv.lib.licenses.bsd3;

}) {};
"assert-failure" = callPackage
({
  mkDerivation
, base
, pretty-show
, stdenv
, text
}:
mkDerivation {

pname = "assert-failure";
version = "0.1.2.2";
sha256 = "f69416fd527b4f6933586edfc9ee741a2163c3741471e9b8e46a244495bd4a9d";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
pretty-show
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Mikolaj/assert-failure";
description = "Syntactic sugar improving 'assert' and 'error'";
license = stdenv.lib.licenses.bsd3;

}) {};
"astro" = callPackage
({
  mkDerivation
, base
, matrix
, stdenv
, time
}:
mkDerivation {

pname = "astro";
version = "0.4.2.0";
sha256 = "86fdc23f0420d46e5cf65cb657c448a61c9398163c312ecb8b4344925ffd47ae";
libraryHaskellDepends = [
base
matrix
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alexander-ignatyev/astro";
description = "Amateur astronomical computations";
license = stdenv.lib.licenses.bsd3;

}) {};
"async" = callPackage
({
  mkDerivation
, base
, hashable
, stdenv
, stm
}:
mkDerivation {

pname = "async";
version = "2.2.1";
sha256 = "8f0b86022a1319d3c1c68655790da4b7f98017982e27ec3f3dbfe01029d39027";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
hashable
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/async";
description = "Run IO operations asynchronously and wait for their results";
license = stdenv.lib.licenses.bsd3;

}) {};
"async-extra" = callPackage
({
  mkDerivation
, async
, base
, deepseq
, split
, stdenv
}:
mkDerivation {

pname = "async-extra";
version = "0.2.0.0";
sha256 = "0d06d5a5cb835597ff1668ae58a1f0d048830164876838533dec4a78eb11cc43";
libraryHaskellDepends = [
async
base
deepseq
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/async-extra#readme";
description = "Useful concurrent combinators";
license = stdenv.lib.licenses.mit;

}) {};
"async-refresh" = callPackage
({
  mkDerivation
, base
, formatting
, lifted-async
, microlens
, microlens-th
, monad-control
, monad-logger
, safe-exceptions
, stdenv
, stm
, text
}:
mkDerivation {

pname = "async-refresh";
version = "0.2.0.2";
sha256 = "9a328b67a12980b26360ae7dac30a92f059f78327ead2e2ccf22bcfd6c8201c3";
libraryHaskellDepends = [
base
formatting
lifted-async
microlens
microlens-th
monad-control
monad-logger
safe-exceptions
stm
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mtesseract/async-refresh";
description = "Package implementing core logic for refreshing of expiring data";
license = stdenv.lib.licenses.bsd3;

}) {};
"async-refresh-tokens" = callPackage
({
  mkDerivation
, async-refresh
, base
, bytestring
, formatting
, lifted-async
, microlens
, microlens-th
, monad-control
, monad-logger
, safe-exceptions
, stdenv
, stm
, text
}:
mkDerivation {

pname = "async-refresh-tokens";
version = "0.3.0.1";
sha256 = "bdedc61d44eac7a36442f1a3af51d9a9e7b84901e1fe316a96b9286a5bfea796";
libraryHaskellDepends = [
async-refresh
base
bytestring
formatting
lifted-async
microlens
microlens-th
monad-control
monad-logger
safe-exceptions
stm
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mtesseract/async-refresh-tokens#readme";
description = "Package implementing core logic for refreshing of expiring access tokens";
license = stdenv.lib.licenses.bsd3;

}) {};
"async-timer" = callPackage
({
  mkDerivation
, base
, lifted-async
, lifted-base
, monad-control
, safe-exceptions
, stdenv
, transformers-base
}:
mkDerivation {

pname = "async-timer";
version = "0.1.4.1";
sha256 = "c2aa4d89792e6f21367122f4d9f1d5cafdf1e04a5a82fb566ec508453a83a398";
libraryHaskellDepends = [
base
lifted-async
lifted-base
monad-control
safe-exceptions
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mtesseract/async-timer#readme";
description = "Provides API for timer based execution of IO actions";
license = stdenv.lib.licenses.bsd3;

}) {};
"atom-basic" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, network
, network-uri
, stdenv
, text
, time
}:
mkDerivation {

pname = "atom-basic";
version = "0.2.5";
sha256 = "24be9667b8bad3ad63b2e9b42fdea5aa0fd96f7e90f52fb1203adfa71d2f75ee";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
network
network-uri
text
time
];
doHaddock = false;
doCheck = false;
description = "Basic Atom feed construction";
license = stdenv.lib.licenses.bsd3;

}) {};
"atom-conduit" = callPackage
({
  mkDerivation
, base
, blaze-builder
, conduit
, conduit-combinators
, lens-simple
, mono-traversable
, parsers
, safe-exceptions
, stdenv
, text
, time
, timerep
, uri-bytestring
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "atom-conduit";
version = "0.5.0.1";
sha256 = "8c88c5c77567753b56163bfa596f50a9cfdde28796e66bb194ca6d9057e831cd";
libraryHaskellDepends = [
base
blaze-builder
conduit
conduit-combinators
lens-simple
mono-traversable
parsers
safe-exceptions
text
time
timerep
uri-bytestring
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
description = "Streaming parser/renderer for the Atom 1.0 standard (RFC 4287).";
license = stdenv.lib.licenses.publicDomain;

}) {};
"atomic-primops" = callPackage
({
  mkDerivation
, base
, ghc-prim
, primitive
, stdenv
}:
mkDerivation {

pname = "atomic-primops";
version = "0.8.2";
sha256 = "67f8872e0c1e634d819a967365eb4ad514e9b2cde967fbc710da7cdc4d17d933";
libraryHaskellDepends = [
base
ghc-prim
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
description = "A safe approach to CAS and other atomic ops in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"atomic-write" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, stdenv
, temporary
, text
, unix-compat
}:
mkDerivation {

pname = "atomic-write";
version = "0.2.0.5";
sha256 = "dbc7b4c31c734ad12d8f6c05b5d1384ee57f50ad8ff1a703d560b39e2f0458c5";
libraryHaskellDepends = [
base
bytestring
directory
filepath
temporary
text
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/atomic-write";
description = "Atomically write to a file";
license = stdenv.lib.licenses.mit;

}) {};
"attoparsec" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, scientific
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "attoparsec";
version = "0.13.2.2";
sha256 = "dd93471eb969172cc4408222a3842d867adda3dd7fb39ad8a4df1b121a67d848";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
scientific
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/attoparsec";
description = "Fast combinator parsing for bytestrings and text";
license = stdenv.lib.licenses.bsd3;

}) {};
"attoparsec-binary" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "attoparsec-binary";
version = "0.2";
sha256 = "05e6445b20b396c99275de3e37bf8bb18559a5666ad5136907857bf574e77a0b";
libraryHaskellDepends = [
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Binary processing extensions to Attoparsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"attoparsec-expr" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
}:
mkDerivation {

pname = "attoparsec-expr";
version = "0.1.1.2";
sha256 = "8d4cd436112ce9007d2831776d4c5102a5322c48993229d2d41e259c07bb457c";
libraryHaskellDepends = [
attoparsec
base
];
doHaddock = false;
doCheck = false;
description = "Port of parsec's expression parser to attoparsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"attoparsec-iso8601" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-compat
, stdenv
, text
, time
}:
mkDerivation {

pname = "attoparsec-iso8601";
version = "1.0.0.0";
sha256 = "aa6c6d87587383e386cb85e7ffcc4a6317aa8dafb8ba9a104ecac365ce2a858a";
revision = "1";
editedCabalFile = "06f7pgmmc8456p3hc1y23kz1y127gfczy7s00wz1rls9g2sm2vi4";
libraryHaskellDepends = [
attoparsec
base
base-compat
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/aeson";
description = "Parsing of ISO 8601 dates, originally from aeson";
license = stdenv.lib.licenses.bsd3;

}) {};
"attoparsec-path" = callPackage
({
  mkDerivation
, attoparsec
, base
, path
, stdenv
, text
}:
mkDerivation {

pname = "attoparsec-path";
version = "0.0.0.1";
sha256 = "d07126622210fdb18722f585c61bda0a17389aecc83e786f9f6e621ec120b60c";
libraryHaskellDepends = [
attoparsec
base
path
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/attoparsec-path#readme";
description = "Convenience bindings between path and attoparsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"attoparsec-time" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-prelude
, bytestring
, Cabal
, cabal-doctest
, scientific
, stdenv
, text
, time
}:
mkDerivation {

pname = "attoparsec-time";
version = "1";
sha256 = "d4eb479267ec32eaa27584fa8cabe4f952361f696eb4085340ba64b378cb0618";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
attoparsec
base
base-prelude
bytestring
scientific
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/attoparsec-time";
description = "Attoparsec parsers of time";
license = stdenv.lib.licenses.mit;

}) {};
"audacity" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, directory
, explicit-exception
, filepath
, non-empty
, semigroups
, stdenv
, storable-record
, storablevector
, tagchup
, transformers
, utility-ht
, xml-basic
}:
mkDerivation {

pname = "audacity";
version = "0.0.2";
sha256 = "d9d2dfb1c4e6ad39b535561feb720a7889dc1151ad6625fd5522d4212dbc26a4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
deepseq
directory
explicit-exception
filepath
non-empty
semigroups
storable-record
storablevector
tagchup
transformers
utility-ht
xml-basic
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/audacity";
description = "Interchange with the Audacity sound signal editor";
license = stdenv.lib.licenses.bsd3;

}) {};
"authenticate" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-builder
, bytestring
, case-insensitive
, conduit
, containers
, http-conduit
, http-types
, network-uri
, resourcet
, stdenv
, tagstream-conduit
, text
, transformers
, unordered-containers
, xml-conduit
}:
mkDerivation {

pname = "authenticate";
version = "1.3.4";
sha256 = "3fd566dbfdf75d81ad1bebd19facb9f01509ead6e27d9aed802404ecde932fb8";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-builder
bytestring
case-insensitive
conduit
containers
http-conduit
http-types
network-uri
resourcet
tagstream-conduit
text
transformers
unordered-containers
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/authenticate";
description = "Authentication methods for Haskell web applications";
license = stdenv.lib.licenses.mit;

}) {};
"authenticate-oauth" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, bytestring
, crypto-pubkey-types
, data-default
, http-client
, http-types
, random
, RSA
, SHA
, stdenv
, time
, transformers
, transformers-compat
}:
mkDerivation {

pname = "authenticate-oauth";
version = "1.6";
sha256 = "d26d9f10fd57e06fa2af066df65e578ff3ec7541efc3e6648b29a743b13f8375";
revision = "1";
editedCabalFile = "1fxwn8bn6qs8dhxq0q04psq7zp1qvw1b6g3vmsclgyj9p7kr77ms";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
bytestring
crypto-pubkey-types
data-default
http-client
http-types
random
RSA
SHA
time
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/authenticate";
description = "Library to authenticate with OAuth for Haskell web applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"auto" = callPackage
({
  mkDerivation
, base
, base-orphans
, bytestring
, cereal
, containers
, deepseq
, MonadRandom
, profunctors
, random
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "auto";
version = "0.4.3.1";
sha256 = "c6e26d1cbb17e3645e55bc8e9432b124520fbcba5ff32445acd4260c25cd3b41";
libraryHaskellDepends = [
base
base-orphans
bytestring
cereal
containers
deepseq
MonadRandom
profunctors
random
semigroups
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/auto";
description = "Denotative, locally stateful programming DSL & platform";
license = stdenv.lib.licenses.mit;

}) {};
"auto-update" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "auto-update";
version = "0.1.4";
sha256 = "5e96c151024e8bcaf4eaa932e16995872b2017f46124b967e155744d9580b425";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "Efficiently run periodic, on-demand actions";
license = stdenv.lib.licenses.mit;

}) {};
"autoexporter" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "autoexporter";
version = "1.1.9";
sha256 = "3b0d44d191796eb4d9645d3193b09befaf3fcea911562ce5b5cbc9e7acb4a042";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
Cabal
directory
filepath
];
executableHaskellDepends = [
base
Cabal
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/autoexporter#readme";
description = "Automatically re-export modules";
license = stdenv.lib.licenses.mit;

}) {};
"avwx" = callPackage
({
  mkDerivation
, attoparsec
, base
, HTTP
, lens
, optparse-applicative
, parsers
, pretty-show
, stdenv
, text
}:
mkDerivation {

pname = "avwx";
version = "0.3.0.2";
sha256 = "b4299cc4e05a4c94f53d06f05b30baac1e15c59663b59afd1dd32417a280fb0a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
HTTP
lens
parsers
text
];
executableHaskellDepends = [
base
optparse-applicative
pretty-show
text
];
doHaddock = false;
doCheck = false;
homepage = "https://www.hcesperer.org/posts/2016-09-20-avwx.html";
description = "Parse aviation weather reports";
license = stdenv.lib.licenses.mit;

}) {};
"axiom" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, ghcjs-perch
, mtl
, stdenv
, transformers
, transient
, transient-universe
}:
mkDerivation {

pname = "axiom";
version = "0.4.6";
sha256 = "8365128ce841379023fee062c16ad1d31c27260f5d994a0a49d9d1fae7cae844";
libraryHaskellDepends = [
base
bytestring
containers
directory
ghcjs-perch
mtl
transformers
transient
transient-universe
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/transient-haskell/axiom";
description = "Web EDSL for running in browsers and server nodes using transient";
license = stdenv.lib.licenses.mit;

}) {};
"b9" = callPackage
({
  mkDerivation
, aeson
, async
, base
, base64-bytestring
, bifunctors
, binary
, boxes
, bytestring
, conduit
, conduit-extra
, ConfigFile
, directory
, filepath
, free
, hashable
, lens
, mtl
, optparse-applicative
, parallel
, parsec
, pretty
, pretty-show
, process
, QuickCheck
, random
, shake
, stdenv
, syb
, template
, text
, time
, transformers
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "b9";
version = "0.5.49";
sha256 = "237ad08d080c065f4022127bfb91f87fb4c9af1511d7fabd259a0bc643643b59";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
base
base64-bytestring
bifunctors
binary
boxes
bytestring
conduit
conduit-extra
ConfigFile
directory
filepath
free
hashable
lens
mtl
parallel
parsec
pretty
pretty-show
process
QuickCheck
random
shake
syb
template
text
time
transformers
unordered-containers
vector
yaml
];
executableHaskellDepends = [
base
bytestring
directory
lens
optparse-applicative
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sheyll/b9-vm-image-builder";
description = "A tool and library for building virtual machine images";
license = stdenv.lib.licenses.mit;

}) {};
"backprop" = callPackage
({
  mkDerivation
, base
, binary
, deepseq
, microlens
, primitive
, random
, reflection
, stdenv
, transformers
, type-combinators
, vector
}:
mkDerivation {

pname = "backprop";
version = "0.1.5.2";
sha256 = "d0d99f1757dd2988a47f40a5783e36d5233bc13214eea194de073c7b794b69d5";
libraryHaskellDepends = [
base
binary
deepseq
microlens
primitive
random
reflection
transformers
type-combinators
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/backprop#readme";
description = "Heterogeneous automatic differentation (backpropagation)";
license = stdenv.lib.licenses.bsd3;

}) {};
"bank-holidays-england" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, time
}:
mkDerivation {

pname = "bank-holidays-england";
version = "0.1.0.7";
sha256 = "7a4af621db84fba450edcab43d275b5c3f5f8bf3ed5b5211d75e5275986ad4a4";
libraryHaskellDepends = [
base
containers
time
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
description = "Calculation of bank holidays in England and Wales";
license = stdenv.lib.licenses.bsd3;

}) {};
"barrier" = callPackage
({
  mkDerivation
, base
, blaze-svg
, bytestring
, stdenv
, template-haskell
, text
, unordered-containers
}:
mkDerivation {

pname = "barrier";
version = "0.1.1";
sha256 = "6395da01eea1984c7bcc85c624b1b5dfbe0b6b764adeed7b04c9fa4d8de91ed9";
revision = "1";
editedCabalFile = "167akvi72l47gcqbq5609m24469pq0xmv0kjbmivnrxs796gh890";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
blaze-svg
bytestring
template-haskell
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/philopon/barrier";
description = "Shields.io style badge generator";
license = stdenv.lib.licenses.mit;

}) {};
"base-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "base-compat";
version = "0.9.3";
sha256 = "7d602b0f0543fadbd598a090c738e9ce9b07a1896673dc27f1503ae3bea1a210";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
description = "A compatibility layer for base";
license = stdenv.lib.licenses.mit;

}) {};
"base-orphans" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "base-orphans";
version = "0.7";
sha256 = "0aaddc39e3d0bba13acfcf0009ef57bf91d2ee74b295041d63e14c6caf4dee14";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-compat/base-orphans#readme";
description = "Backwards-compatible orphan instances for base";
license = stdenv.lib.licenses.mit;

}) {};
"base-prelude" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "base-prelude";
version = "1.2.1";
sha256 = "07f30ca0f620ce67dbd07f82793fe2de69492b6df7445c5676ec7e5288139ab8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/base-prelude";
description = "The most complete prelude formed solely from the \"base\" package";
license = stdenv.lib.licenses.mit;

}) {};
"base-unicode-symbols" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "base-unicode-symbols";
version = "0.2.2.4";
sha256 = "a2f841430fec32edba778b74bde83bf0170ada7c5e2e59d7187c8f06d92dcca9";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
description = "Unicode alternatives for common functions and operators";
license = stdenv.lib.licenses.bsd3;

}) {};
"base16-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "base16-bytestring";
version = "0.1.1.6";
sha256 = "5afe65a152c5418f5f4e3579a5e0d5ca19c279dc9bf31c1a371ccbe84705c449";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/base16-bytestring";
description = "Fast base16 (hex) encoding and decoding for ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"base32string" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "base32string";
version = "0.9.1";
sha256 = "9e931613aeba5f630f9292fc99131388f406e4b34d8f050515ed93aaf632ea32";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Fast and safe representation of a Base-32 string";
license = stdenv.lib.licenses.mit;

}) {};
"base58-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "base58-bytestring";
version = "0.1.0";
sha256 = "c2dbf598f3415053e12cca84b90fa7c0c1b02f3b784cce0157264baebf2d40d3";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/s9gf4ult/base58-bytestring";
description = "Implementation of BASE58 transcoding for ByteStrings";
license = stdenv.lib.licenses.publicDomain;

}) {};
"base58string" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "base58string";
version = "0.10.0";
sha256 = "3b72607dd76e30a5054acea656c3805f7191e27d67884a7db5fbc73c17e9c088";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Fast and safe representation of a Base-58 string";
license = stdenv.lib.licenses.mit;

}) {};
"base64-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "base64-bytestring";
version = "1.0.0.1";
sha256 = "ab25abf4b00a2f52b270bc3ed43f1d59f16c8eec9d7dffb14df1e9265b233b50";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/base64-bytestring";
description = "Fast base64 encoding and decoding for ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"base64-string" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "base64-string";
version = "0.2";
sha256 = "3ec896ca7261ad4ddeffbaa3bdf4d5cb61775250c303fca9929aa9a56acc705e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
description = "Base64 implementation for String's";
license = "unknown";

}) {};
"basement" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "basement";
version = "0.0.7";
sha256 = "b501b9b378f35b80c60321031dbbf9ed7af46c66353f072e00f00abdd2244f70";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-foundation/foundation";
description = "Foundation scrap box of array & string";
license = stdenv.lib.licenses.bsd3;

}) {};
"basic-prelude" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, filepath
, hashable
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "basic-prelude";
version = "0.7.0";
sha256 = "10755f892548faa956b81b40d1d03ec6e94609fd8ec8e92be09b4453b7ad9379";
libraryHaskellDepends = [
base
bytestring
containers
filepath
hashable
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/basic-prelude#readme";
description = "An enhanced core prelude; a common foundation for alternate preludes";
license = stdenv.lib.licenses.mit;

}) {};
"bbdb" = callPackage
({
  mkDerivation
, base
, parsec
, stdenv
}:
mkDerivation {

pname = "bbdb";
version = "0.8";
sha256 = "dce7798cb8e46e1c0f7048579496cabeebddaba9b6233820fd0496723fbc2a5c";
libraryHaskellDepends = [
base
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/henrylaxen/bbdb";
description = "Ability to read, write, and modify BBDB files";
license = stdenv.lib.licenses.gpl3;

}) {};
"bcrypt" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, entropy
, memory
, stdenv
}:
mkDerivation {

pname = "bcrypt";
version = "0.0.11";
sha256 = "e4331788eda7b65064d88930b4b7a50f5011bdec0ad46059d8c4ee6a5e72fcef";
libraryHaskellDepends = [
base
bytestring
data-default
entropy
memory
];
doHaddock = false;
doCheck = false;
description = "Haskell bindings to the bcrypt password hash";
license = stdenv.lib.licenses.bsd3;

}) {};
"beam-core" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, dlist
, free
, ghc-prim
, hashable
, microlens
, mtl
, network-uri
, stdenv
, tagged
, text
, time
, vector-sized
}:
mkDerivation {

pname = "beam-core";
version = "0.7.2.1";
sha256 = "5c8e94dab94248189a53e89d515e696c882ffabb91b777c7b1e59d3cf2d5356d";
libraryHaskellDepends = [
aeson
base
bytestring
containers
dlist
free
ghc-prim
hashable
microlens
mtl
network-uri
tagged
text
time
vector-sized
];
doHaddock = false;
doCheck = false;
homepage = "http://travis.athougies.net/projects/beam.html";
description = "Type-safe, feature-complete SQL query and manipulation interface for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"beam-migrate" = callPackage
({
  mkDerivation
, aeson
, base
, beam-core
, bytestring
, containers
, deepseq
, dependent-map
, dependent-sum
, free
, ghc-prim
, hashable
, haskell-src-exts
, mtl
, parallel
, pqueue
, pretty
, scientific
, stdenv
, text
, time
, unordered-containers
, uuid-types
, vector
}:
mkDerivation {

pname = "beam-migrate";
version = "0.3.2.0";
sha256 = "0ee6121f57f67e60db32543be95085220ea1c6256784e878e5b40b75d911d5a8";
libraryHaskellDepends = [
aeson
base
beam-core
bytestring
containers
deepseq
dependent-map
dependent-sum
free
ghc-prim
hashable
haskell-src-exts
mtl
parallel
pqueue
pretty
scientific
text
time
unordered-containers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://travis.athougies.net/projects/beam.html";
description = "SQL DDL support and migrations support library for Beam";
license = stdenv.lib.licenses.mit;

}) {};
"beam-sqlite" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, beam-core
, beam-migrate
, bytestring
, dlist
, free
, hashable
, mtl
, network-uri
, scientific
, sqlite-simple
, stdenv
, text
, time
, unix
}:
mkDerivation {

pname = "beam-sqlite";
version = "0.3.2.1";
sha256 = "93806e86f4d7fdd4cd6001f9bebb5fca4d0bb0cf0fe62fc68bfb9dc53dc54fc6";
libraryHaskellDepends = [
aeson
attoparsec
base
beam-core
beam-migrate
bytestring
dlist
free
hashable
mtl
network-uri
scientific
sqlite-simple
text
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://tathougies.github.io/beam/user-guide/backends/beam-sqlite/";
description = "Beam driver for SQLite";
license = stdenv.lib.licenses.mit;

}) {};
"bench" = callPackage
({
  mkDerivation
, base
, criterion
, optparse-applicative
, process
, silently
, stdenv
, text
, turtle
}:
mkDerivation {

pname = "bench";
version = "1.0.9";
sha256 = "3c43d5b28abd7d07617ce5bf44756e8922db2dfbb39d7b123427b20eb8a9a830";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
criterion
optparse-applicative
process
silently
text
turtle
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/Gabriel439/bench";
description = "Command-line benchmark tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"benchpress" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, stdenv
, time
}:
mkDerivation {

pname = "benchpress";
version = "0.2.2.10";
sha256 = "e6b0c5ef9e880a866cb438cc1c7efe83bc69ddbc5b0e941833495e43456f39c7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
mtl
time
];
executableHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/WillSewell/benchpress";
description = "Micro-benchmarking with detailed statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"bencode" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, parsec
, stdenv
}:
mkDerivation {

pname = "bencode";
version = "0.6.0.0";
sha256 = "3b8efdfecee9bc486d9bcdbb633b7128ca235360f102478a7e0f8c895281f68a";
libraryHaskellDepends = [
base
binary
bytestring
containers
parsec
];
doHaddock = false;
doCheck = false;
description = "Parser and printer for bencoded data";
license = stdenv.lib.licenses.bsd3;

}) {};
"bento" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "bento";
version = "0.1.0";
sha256 = "eba28420daba13af9de264ec0e3d605535496536b9aff9bc23798cdbcc209192";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/bento#readme";
description = "🍱 Manage stateful components";
license = stdenv.lib.licenses.mit;

}) {};
"between" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "between";
version = "0.11.0.0";
sha256 = "8337351326c5a613d9b7520b6a8203234c04454e23550a81739beaa6f671465d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/trskop/between";
description = "Function combinator \"between\" and derived combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"bhoogle" = callPackage
({
  mkDerivation
, base
, brick
, bytestring
, containers
, directory
, filepath
, hoogle
, lens
, process
, protolude
, stdenv
, text
, time
, vector
, vty
}:
mkDerivation {

pname = "bhoogle";
version = "0.1.2.7";
sha256 = "ff26a718ee049aed900ad0cb399449e9d87b17f69863b7aafa9d9ed75a9c9855";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
brick
bytestring
containers
directory
filepath
hoogle
lens
process
protolude
text
time
vector
vty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/andrevdm/bhoogle#readme";
description = "Simple terminal GUI for local hoogle";
license = stdenv.lib.licenses.bsd3;

}) {};
"bibtex" = callPackage
({
  mkDerivation
, base
, latex
, parsec
, stdenv
, utility-ht
}:
mkDerivation {

pname = "bibtex";
version = "0.1.0.6";
sha256 = "090a3b9589388bdf9d2bf60d8d1898aa0313a2874b551ba86cbbd049f3ee5f04";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
latex
parsec
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/BibTeX";
description = "Parse, format and processing BibTeX files";
license = stdenv.lib.licenses.bsd3;

}) {};
"bifunctors" = callPackage
({
  mkDerivation
, base
, base-orphans
, comonad
, containers
, semigroups
, stdenv
, tagged
, template-haskell
, th-abstraction
, transformers
, transformers-compat
}:
mkDerivation {

pname = "bifunctors";
version = "5.5.2";
sha256 = "332bb2ea19e77dac55282daff8046d89f69514ced5b987779d887e53b5d7cb11";
revision = "2";
editedCabalFile = "0glrvir6md8a1ncr6ah95a5mnn7n9v8yl85afvdx24i9z1nr1319";
libraryHaskellDepends = [
base
base-orphans
comonad
containers
semigroups
tagged
template-haskell
th-abstraction
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/bifunctors/";
description = "Bifunctors";
license = stdenv.lib.licenses.bsd3;

}) {};
"bimap" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, stdenv
}:
mkDerivation {

pname = "bimap";
version = "0.3.3";
sha256 = "73829355c7bcbd3eedba22a382a04a3ab641702b00828790ec082ec2db3a8ad1";
libraryHaskellDepends = [
base
containers
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joelwilliamson/bimap";
description = "Bidirectional mapping between two key types";
license = stdenv.lib.licenses.bsd3;

}) {};
"bimap-server" = callPackage
({
  mkDerivation
, aeson
, base
, bimap
, binary
, directory
, http-types
, stdenv
, unix
, wai
, warp
}:
mkDerivation {

pname = "bimap-server";
version = "0.1.0.1";
sha256 = "09dfd1865812f40e317b610cbe05cc65ba6ea7215428748e1038ff7fc38ef535";
libraryHaskellDepends = [
aeson
base
bimap
binary
directory
http-types
unix
wai
warp
];
doHaddock = false;
doCheck = false;
description = "Two-column database server";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-bits" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "binary-bits";
version = "0.5";
sha256 = "16534a018a4754d8d1eab051711c23fb741f41a0d141b289001c52824b5be794";
libraryHaskellDepends = [
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
description = "Bit parsing/writing on top of binary";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-conduit" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, conduit
, exceptions
, stdenv
, vector
}:
mkDerivation {

pname = "binary-conduit";
version = "1.3";
sha256 = "43f9bd47b679b552b295132680a8cd0ade6489fc33d5d98aed1f5c948320cccd";
revision = "1";
editedCabalFile = "0y08nw3y5jgrw5waa25b75iwsibnd1m9rbpqrvz5j4xq6baqw6kx";
libraryHaskellDepends = [
base
binary
bytestring
conduit
exceptions
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/qnikst/binary-conduit/";
description = "data serialization/deserialization conduit library";
license = stdenv.lib.licenses.mit;

}) {};
"binary-ieee754" = callPackage
({
  mkDerivation
, array
, base
, binary
, stdenv
}:
mkDerivation {

pname = "binary-ieee754";
version = "0.1.0.0";
sha256 = "15c489898bcd346b4067a27579cb5fc62e2fafecbec81ea0446165a24aee4d54";
libraryHaskellDepends = [
array
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/binary-ieee754";
description = "Backport ieee754 float double combinators to older binary";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-list" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, phantom-state
, stdenv
, transformers
}:
mkDerivation {

pname = "binary-list";
version = "1.1.1.2";
sha256 = "6b21e58ea4091b9572cb24a92dfb1ddc14fcea82d2272d30a83eb1b430dd1878";
libraryHaskellDepends = [
base
binary
bytestring
deepseq
phantom-state
transformers
];
doHaddock = false;
doCheck = false;
description = "Lists of length a power of two";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-orphans" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, case-insensitive
, hashable
, scientific
, stdenv
, tagged
, text
, text-binary
, time
, unordered-containers
, vector
, vector-binary-instances
}:
mkDerivation {

pname = "binary-orphans";
version = "0.1.8.0";
sha256 = "f17557ccd98931df2bea038f25e7f835f38019ea7d53bd763f71fe64f931c0cc";
revision = "3";
editedCabalFile = "083bch2ir9mgiymgyv9qp5z1fv232zr8sxiwn27x3arvxzz9ax85";
libraryHaskellDepends = [
aeson
base
binary
case-insensitive
hashable
scientific
tagged
text
text-binary
time
unordered-containers
vector
vector-binary-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/binary-orphans#readme";
description = "Orphan instances for binary";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-parser" = callPackage
({
  mkDerivation
, base
, base-prelude
, bytestring
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "binary-parser";
version = "0.5.5";
sha256 = "1dab718e06a978118cd28d2412bceaa0b6ec8d67785bdb0982e259fb60fe43b3";
revision = "3";
editedCabalFile = "14n41yazmks2qw0v4krxcqw3ac0wdy2z53d0qz0rdjcd94fpghjf";
libraryHaskellDepends = [
base
base-prelude
bytestring
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/binary-parser";
description = "A highly-efficient but limited parser API specialised for bytestrings";
license = stdenv.lib.licenses.mit;

}) {};
"binary-parsers" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, bytestring-lexing
, scientific
, stdenv
}:
mkDerivation {

pname = "binary-parsers";
version = "0.2.3.0";
sha256 = "bc6195493b950efcbeb9ef54dfe47a6badf894dff934cf02a4b170331c1b217a";
revision = "1";
editedCabalFile = "09ag18yr1m26fl3w7ab1d5q5j201ygbw7qsbsy41bwd6iq87rq15";
libraryHaskellDepends = [
base
binary
bytestring
bytestring-lexing
scientific
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/binary-parsers";
description = "Extends binary with parsec/attoparsec style parsing combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-search" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "binary-search";
version = "1.0.0.3";
sha256 = "b0e32df46aeddceac57bd6afa940f84f275f82fb251479e10fadd7c14414f6fa";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
description = "Binary and exponential searches";
license = stdenv.lib.licenses.bsd3;

}) {};
"binary-shared" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "binary-shared";
version = "0.8.3";
sha256 = "830116505018fc43de09867bea9039b0bfa29e77564efa8c3f3b708933c098b2";
libraryHaskellDepends = [
base
binary
bytestring
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leksah.org";
description = "Sharing for the binary package";
license = "GPL";

}) {};
"binary-tagged" = callPackage
({
  mkDerivation
, aeson
, array
, base
, base16-bytestring
, binary
, bytestring
, containers
, generics-sop
, hashable
, scientific
, SHA
, stdenv
, tagged
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "binary-tagged";
version = "0.1.5";
sha256 = "d4b733a9013069f19249acad76e7f73fb41303c44dcbd2229de8d534558605e8";
revision = "1";
editedCabalFile = "0vddb305g3455f0rh0xs6c9i2vllnf83y0pbp53wjwb3l575bqyp";
libraryHaskellDepends = [
aeson
array
base
base16-bytestring
binary
bytestring
containers
generics-sop
hashable
scientific
SHA
tagged
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/binary-tagged#readme";
description = "Tagged binary serialisation";
license = stdenv.lib.licenses.bsd3;

}) {};
"bindings-DSL" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "bindings-DSL";
version = "1.0.25";
sha256 = "63de32380c68d1cc5e9c7b3622d67832c786da21163ba0c8a4835e6dd169194f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
description = "FFI domain specific language, on top of hsc2hs";
license = stdenv.lib.licenses.bsd3;

}) {};
"bindings-GLFW" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, libGL
, libX11
, libXcursor
, libXext
, libXfixes
, libXi
, libXinerama
, libXrandr
, libXxf86vm
, stdenv
}:
mkDerivation {

pname = "bindings-GLFW";
version = "3.1.2.4";
sha256 = "794e1f9f4d9dda8003cbf01517ed723c9850960bf32ca35df27d4f8f27930e35";
libraryHaskellDepends = [
base
bindings-DSL
];
librarySystemDepends = [
libGL
libX11
libXcursor
libXext
libXfixes
libXi
libXinerama
libXrandr
libXxf86vm
];
doHaddock = false;
doCheck = false;
description = "Low-level bindings to GLFW OpenGL library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libGL; inherit (pkgs) libX11;
inherit (pkgs) libXcursor; inherit (pkgs) libXi;
inherit (pkgs) libXinerama; inherit (pkgs) libXrandr;
inherit (pkgs) libXxf86vm;};
"bindings-libzip" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, libzip
, stdenv
}:
mkDerivation {

pname = "bindings-libzip";
version = "1.0.1";
sha256 = "908d060360d66974b1d9400dea28a1dce35a88baf5d73a6e3c12be8e74cda2ec";
libraryHaskellDepends = [
base
bindings-DSL
];
libraryPkgconfigDepends = [
libzip
];
doHaddock = false;
doCheck = false;
homepage = "http://bitbucket.org/astanin/hs-libzip/";
description = "Low level bindings to libzip";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libzip;};
"bindings-uname" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "bindings-uname";
version = "0.1";
sha256 = "130e75c3fd95e232452c7d903efbfab2d2ff6c9d455b617adeaebe5d60235cd3";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Low-level binding to POSIX uname(3)";
license = stdenv.lib.licenses.publicDomain;

}) {};
"bioace" = callPackage
({
  mkDerivation
, base
, bioalign
, biocore
, bytestring
, parsec
, stdenv
}:
mkDerivation {

pname = "bioace";
version = "0.0.1";
sha256 = "6f43645b2a0ccbca20069aa25fae6fc2ae1704a3a0c48b069852fbfb8ce16222";
libraryHaskellDepends = [
base
bioalign
biocore
bytestring
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://patch-tag.com/r/dfornika/bioace/home";
description = "Library for reading ace assembly files";
license = "GPL";

}) {};
"bioalign" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, stdenv
}:
mkDerivation {

pname = "bioalign";
version = "0.0.5";
sha256 = "b9152e81abbd7c79099520b69aeca3ff21970f1151b3c072a2994ea31b7acf00";
libraryHaskellDepends = [
base
biocore
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://patch-tag.com/r/dfornika/biophd/home";
description = "Data structures and helper functions for calculating alignments";
license = "GPL";

}) {};
"biocore" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, stringable
}:
mkDerivation {

pname = "biocore";
version = "0.3.1";
sha256 = "212b7d7395138d4c231968e1f5bb047c03f61adc6c5eb36162602f42c24db41a";
libraryHaskellDepends = [
base
bytestring
stringable
];
doHaddock = false;
doCheck = false;
description = "A bioinformatics library";
license = "LGPL";

}) {};
"biofasta" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, stdenv
}:
mkDerivation {

pname = "biofasta";
version = "0.0.3";
sha256 = "6221a89cde259e8f9a2d4da11230a8a53d78b24d3367e70be5e7b1279e06e7d0";
libraryHaskellDepends = [
base
biocore
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
description = "Library for reading fasta sequence files";
license = "GPL";

}) {};
"biofastq" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, stdenv
}:
mkDerivation {

pname = "biofastq";
version = "0.1";
sha256 = "74e51887569c4900f5de266eca0dd28082c8abdf6ef0f34787a91baec562a310";
libraryHaskellDepends = [
base
biocore
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://biohaskell.org/";
description = "A library for reading FASTQ files";
license = "LGPL";

}) {};
"biopsl" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, cmdargs
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "biopsl";
version = "0.4";
sha256 = "b2be254020a276df342ede835a1c1b1b989763098d7d8a5536c0b86c5f7a3bed";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
biocore
bytestring
];
executableHaskellDepends = [
cmdargs
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://biohaskell.org/";
description = "Library and executables for working with PSL files";
license = "LGPL";

}) {};
"bit-stream" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, vector
}:
mkDerivation {

pname = "bit-stream";
version = "0.1.0.2";
sha256 = "811f2e7d4a827440bc21557e48c5310fe91e1b17f337ec35208546e1c5639bf4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ghc-prim
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Bodigrim/bit-stream#readme";
description = "Lazy, infinite, compact stream of Bool with O(1) indexing";
license = stdenv.lib.licenses.bsd3;

}) {};
"bitarray" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "bitarray";
version = "0.0.1.1";
sha256 = "b27f6f1065053a0e8e24fbf9382b7060af9962d8d150b631c682c0c58469d802";
revision = "1";
editedCabalFile = "10fk92v9afjqk43zi621jxl0n8kci0xjj32lz3vqa9xbh67zjz45";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~bkomuves/";
description = "Mutable and immutable bit arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"bitcoin-api" = callPackage
({
  mkDerivation
, aeson
, base
, base58string
, binary
, bitcoin-block
, bitcoin-script
, bitcoin-tx
, bitcoin-types
, bytestring
, hexstring
, lens
, lens-aeson
, stdenv
, text
, unordered-containers
, wreq
}:
mkDerivation {

pname = "bitcoin-api";
version = "0.12.1";
sha256 = "c978de1519b24c5c04ff518ad1209f74f91df31d65e23592dc639219df6b3e30";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base58string
binary
bitcoin-block
bitcoin-script
bitcoin-tx
bitcoin-types
bytestring
hexstring
lens
lens-aeson
text
unordered-containers
wreq
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Provides access to the RPC API of Bitcoin Core";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-api-extra" = callPackage
({
  mkDerivation
, base
, binary
, bitcoin-api
, bitcoin-block
, bitcoin-tx
, bytestring
, conduit
, lens
, stdenv
, stm
, stm-chans
, stm-conduit
, text
, transformers
}:
mkDerivation {

pname = "bitcoin-api-extra";
version = "0.9.1";
sha256 = "c423c6007d0f830dd2bbc0e1bc9219980e6fb2bde684890e265e1bfce4bdd7fc";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bitcoin-api
bitcoin-block
bitcoin-tx
bytestring
conduit
lens
stm
stm-chans
stm-conduit
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Higher level constructs on top of the bitcoin-api package";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-block" = callPackage
({
  mkDerivation
, base
, binary
, bitcoin-tx
, bitcoin-types
, bytestring
, cryptohash
, hexstring
, largeword
, lens
, stdenv
}:
mkDerivation {

pname = "bitcoin-block";
version = "0.13.1";
sha256 = "d7f57c0fe71045dab85d223dc15d64db3a15cc7fd8446bfe4ebd98cd9d417d5a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bitcoin-tx
bitcoin-types
bytestring
cryptohash
hexstring
largeword
lens
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Utility functions for manipulating bitcoin blocks";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-script" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "bitcoin-script";
version = "0.11.1";
sha256 = "398c1d86e918731b5b2026351bb3b0b90b20606517e7c21e42f05d6c6e197b4c";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base16-bytestring
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Compilation, manipulation and decompilation of Bitcoin scripts";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-tx" = callPackage
({
  mkDerivation
, base
, binary
, bitcoin-script
, bitcoin-types
, bytestring
, cryptohash
, hexstring
, lens
, stdenv
}:
mkDerivation {

pname = "bitcoin-tx";
version = "0.13.1";
sha256 = "3bb88265353066c394e96a56b2dc555fa13d37ca7f820978b793196c6829cc00";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bitcoin-script
bitcoin-types
bytestring
cryptohash
hexstring
lens
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Utility functions for manipulating bitcoin transactions";
license = stdenv.lib.licenses.mit;

}) {};
"bitcoin-types" = callPackage
({
  mkDerivation
, base
, base58string
, binary
, bytestring
, hexstring
, stdenv
, text
}:
mkDerivation {

pname = "bitcoin-types";
version = "0.9.2";
sha256 = "b72f9448508b64706d5f443748dc9b8abde8e749959187ce3d8356cde0d6c40b";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base58string
binary
bytestring
hexstring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Provides consistent low-level types used commonly among Bitcoin implementations";
license = stdenv.lib.licenses.mit;

}) {};
"bits" = callPackage
({
  mkDerivation
, base
, bytes
, Cabal
, cabal-doctest
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "bits";
version = "0.5.1";
sha256 = "657e557bb913b53fb3b3fc7eda820cf3c85a5b89692d242275d3e8e8d9479c93";
revision = "4";
editedCabalFile = "188v93jiwy832ifcjq5db7sk5rngpnvira5kk1cb1srw4851hzyl";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
bytes
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/bits";
description = "Various bit twiddling and bitwise serialization primitives";
license = stdenv.lib.licenses.bsd3;

}) {};
"bitset-word8" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
, th-lift-instances
}:
mkDerivation {

pname = "bitset-word8";
version = "0.1.1.0";
sha256 = "14e9eded3d5f535dbb1ce6debe4edd2d227765af31cc58e072b78824cd9f9b06";
libraryHaskellDepends = [
base
containers
template-haskell
th-lift-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nshimaza/bitset-word8#readme";
description = "Space efficient set of Word8 and some pre-canned sets useful for parsing HTTP";
license = stdenv.lib.licenses.mit;

}) {};
"bitx-bitcoin" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, deepseq
, exceptions
, http-client
, http-client-tls
, http-types
, microlens
, microlens-th
, network
, QuickCheck
, scientific
, split
, stdenv
, text
, time
}:
mkDerivation {

pname = "bitx-bitcoin";
version = "0.12.0.0";
sha256 = "31f2398bbb0deff80361fdabb108c1552ae097b15a44c6ca6674977ae735c871";
libraryHaskellDepends = [
aeson
base
bytestring
deepseq
exceptions
http-client
http-client-tls
http-types
microlens
microlens-th
network
QuickCheck
scientific
split
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tebello-thejane/bitx.hs";
description = "A Haskell library for working with the BitX bitcoin exchange";
license = stdenv.lib.licenses.bsd3;

}) {};
"blake2" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "blake2";
version = "0.2.0";
sha256 = "07d910e3f5c6e98f5a6b9d53dbe5f52506c3859b513bc7493b52552a28382cfc";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/centromere/blake2";
description = "A library providing BLAKE2";
license = stdenv.lib.licenses.publicDomain;

}) {};
"blas-carray" = callPackage
({
  mkDerivation
, base
, blas-ffi
, carray
, netlib-carray
, netlib-ffi
, stdenv
, storable-complex
, transformers
}:
mkDerivation {

pname = "blas-carray";
version = "0.0.1.1";
sha256 = "bdad1b777d36e46a63bec022190bd009d2782018d7a447f41e3c2db772635f46";
libraryHaskellDepends = [
base
blas-ffi
carray
netlib-carray
netlib-ffi
storable-complex
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/blas-carray/";
description = "Auto-generated interface to Fortran BLAS via CArrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"blas-ffi" = callPackage
({
  mkDerivation
, base
, blas
, netlib-ffi
, stdenv
}:
mkDerivation {

pname = "blas-ffi";
version = "0.0.1.1";
sha256 = "ee0d88ad15d127e08dd273264befe2259bb64646156adb9e830aa8692dc3f036";
libraryHaskellDepends = [
base
netlib-ffi
];
libraryPkgconfigDepends = [
blas
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/blas-ffi/";
description = "Auto-generated interface to Fortran BLAS";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) blas;};
"blas-hs" = callPackage
({
  mkDerivation
, base
, blas
, stdenv
, storable-complex
}:
mkDerivation {

pname = "blas-hs";
version = "0.1.1.0";
sha256 = "80e06b0927982b391d239f8656ed437cd29665969d1a078ea4e42a2bf196b086";
libraryHaskellDepends = [
base
storable-complex
];
librarySystemDepends = [
blas
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Rufflewind/blas-hs";
description = "Low-level Haskell bindings to Blas";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) blas;};
"blastxml" = callPackage
({
  mkDerivation
, base
, biocore
, bytestring
, parallel
, stdenv
, tagsoup
}:
mkDerivation {

pname = "blastxml";
version = "0.3.2";
sha256 = "0c0089c42306c8189a9a26905677372d26adfde03772ae79b4742771d0de986a";
libraryHaskellDepends = [
base
biocore
bytestring
parallel
tagsoup
];
doHaddock = false;
doCheck = false;
homepage = "http://biohaskell.org/";
description = "Library for reading Blast XML output";
license = "LGPL";

}) {};
"blaze-bootstrap" = callPackage
({
  mkDerivation
, base
, blaze-html
, stdenv
, text
}:
mkDerivation {

pname = "blaze-bootstrap";
version = "0.1.0.1";
sha256 = "53b54c0b55ae7a436ec7e5d4e29d50fceb1ccd459ef715236358a3c661d05163";
libraryHaskellDepends = [
base
blaze-html
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/blaze-bootstrap";
description = "Blaze helper functions for bootstrap pages";
license = stdenv.lib.licenses.mit;

}) {};
"blaze-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "blaze-builder";
version = "0.4.1.0";
sha256 = "91fc8b966f3e9dc9461e1675c7566b881740f99abc906495491a3501630bc814";
libraryHaskellDepends = [
base
bytestring
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lpsmith/blaze-builder";
description = "Efficient buffered output";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-html" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-markup
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "blaze-html";
version = "0.9.0.1";
sha256 = "aeceaab3fbccbf7f01a241819e6c16c0a1cf19dccecb795c5de5407bc8660a64";
libraryHaskellDepends = [
base
blaze-builder
blaze-markup
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/blaze";
description = "A blazingly fast HTML combinator library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-markup" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "blaze-markup";
version = "0.8.2.1";
sha256 = "90ab7cbc29df9fbe24e208ade58ca9828e3074f1163618f1faaf4da8f0600146";
libraryHaskellDepends = [
base
blaze-builder
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/blaze";
description = "A blazingly fast markup combinator library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-svg" = callPackage
({
  mkDerivation
, base
, blaze-markup
, mtl
, stdenv
}:
mkDerivation {

pname = "blaze-svg";
version = "0.3.6.1";
sha256 = "f6a4f1bba1e973b336e94de73369f4562778fde43b6ac7c0b32d6a501527aa60";
libraryHaskellDepends = [
base
blaze-markup
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/deepakjois/blaze-svg";
description = "SVG combinator library";
license = stdenv.lib.licenses.bsd3;

}) {};
"blaze-textual" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, ghc-prim
, integer-gmp
, old-locale
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "blaze-textual";
version = "0.2.1.0";
sha256 = "1042795ab0bab891c034c24a51bafecbb89870ccd28af39534ab3d9ae7f46c2d";
libraryHaskellDepends = [
base
blaze-builder
bytestring
ghc-prim
integer-gmp
old-locale
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/blaze-textual";
description = "Fast rendering of common datatypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"bloodhound" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, containers
, data-default-class
, exceptions
, hashable
, http-client
, http-types
, mtl
, mtl-compat
, network-uri
, scientific
, semigroups
, stdenv
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "bloodhound";
version = "0.15.0.2";
sha256 = "3109a143ccb0f7aac7d2346926a3769ceffd0ed0122f4670e0b589330b02bc9f";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
containers
data-default-class
exceptions
hashable
http-client
http-types
mtl
mtl-compat
network-uri
scientific
semigroups
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bitemyapp/bloodhound";
description = "ElasticSearch client library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"blosum" = callPackage
({
  mkDerivation
, base
, containers
, fasta
, lens
, optparse-applicative
, pipes
, pipes-text
, split
, stdenv
, text
, text-show
}:
mkDerivation {

pname = "blosum";
version = "0.1.1.4";
sha256 = "44b12d24d56bfadec7a53c1d620e1cc52f4126ba01ab541a135b187846c10380";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
fasta
lens
text
text-show
];
executableHaskellDepends = [
base
containers
fasta
optparse-applicative
pipes
pipes-text
split
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/GregorySchwartz/blosum#readme";
description = "BLOSUM generator";
license = stdenv.lib.licenses.gpl2;

}) {};
"bmp" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "bmp";
version = "1.2.6.3";
sha256 = "3cc63de40fe088ce4d1c869180fd2309bcec35a940c9e3d1904d3520ca2fdacc";
libraryHaskellDepends = [
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/benl23x5/bmp";
description = "Read and write uncompressed BMP image files";
license = stdenv.lib.licenses.mit;

}) {};
"bno055-haskell" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, h2c
, mtl
, resourcet
, stdenv
}:
mkDerivation {

pname = "bno055-haskell";
version = "0.1.0";
sha256 = "7adc29f94755047b4214115c23b63041e9d3970d2648f53dcd38b84725059ad8";
libraryHaskellDepends = [
base
bytestring
cereal
h2c
mtl
resourcet
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/fmapE/bno055-haskell";
description = "Library for communication with the Bosch BNO055 orientation sensor";
license = stdenv.lib.licenses.mit;

}) {};
"boltzmann-samplers" = callPackage
({
  mkDerivation
, ad
, base
, containers
, hashable
, hmatrix
, ieee754
, MonadRandom
, mtl
, QuickCheck
, stdenv
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "boltzmann-samplers";
version = "0.1.1.0";
sha256 = "de7c3e1f77b0ae27c78cb53e539dbaa8dc2f6e3f3605c25f1611545806ad878e";
libraryHaskellDepends = [
ad
base
containers
hashable
hmatrix
ieee754
MonadRandom
mtl
QuickCheck
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Lysxia/boltzmann-samplers#readme";
description = "Uniform random generators";
license = stdenv.lib.licenses.mit;

}) {};
"bookkeeping" = callPackage
({
  mkDerivation
, base
, dlist
, mtl
, stdenv
, text
, time
}:
mkDerivation {

pname = "bookkeeping";
version = "0.2.1.4";
sha256 = "ff4294e6c9c03c99cdcda31586ffaedde1f20a4d21fbdd28b2f82a5754ea27e4";
libraryHaskellDepends = [
base
dlist
mtl
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/arowM/haskell-bookkeeping#readme";
description = "A module for bookkeeping by double entry";
license = stdenv.lib.licenses.mit;

}) {};
"boolean-like" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, semigroups
, stdenv
, text
, vector
}:
mkDerivation {

pname = "boolean-like";
version = "0.1.1.0";
sha256 = "6ca47b21a6d98161edfd94f4d5a19daacc13d229b87a0c107e868ff0259658b8";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
semigroups
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/Shou/boolean-like";
description = "Logical combinatory operations dealing with datatypes representing booleans by their constructors";
license = stdenv.lib.licenses.bsd3;

}) {};
"boolsimplifier" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "boolsimplifier";
version = "0.1.8";
sha256 = "096fa9377241520ee114403fd53b51a7369187fb4dca65f19f85a727d689828f";
revision = "1";
editedCabalFile = "0xqm0vn9i49b75fnvnvcnr9m4zwvhqynrkcjdxghrsxayg420lnh";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Simplification tools for simple propositional formulas";
license = stdenv.lib.licenses.bsd3;

}) {};
"boomerang" = callPackage
({
  mkDerivation
, base
, mtl
, semigroups
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "boomerang";
version = "1.4.5.5";
sha256 = "8dfc7ff14b6d32e18904d1af5169432750fbefdecd4f7a1f87f014bd86dd5a44";
libraryHaskellDepends = [
base
mtl
semigroups
template-haskell
text
];
doHaddock = false;
doCheck = false;
description = "Library for invertible parsing and printing";
license = stdenv.lib.licenses.bsd3;

}) {};
"bordacount" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "bordacount";
version = "0.1.0.0";
sha256 = "cb691095f688dc2c1726750d5e5d267d3f49466377869a574d6416090a46fdce";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hverr/bordacount#readme";
description = "Implementation of the Borda count election method";
license = stdenv.lib.licenses.bsd3;

}) {};
"both" = callPackage
({
  mkDerivation
, base
, semigroups
, stdenv
, zero
}:
mkDerivation {

pname = "both";
version = "0.1.1.0";
sha256 = "6f4ee8b7745fb3054282240fe941dd74cf2481f1a07b170d211c2b8791340e8e";
libraryHaskellDepends = [
base
semigroups
zero
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/both";
description = "Like Maybe, but with a different Monoid instance";
license = stdenv.lib.licenses.mit;

}) {};
"bound" = callPackage
({
  mkDerivation
, base
, bifunctors
, binary
, bytes
, Cabal
, cabal-doctest
, cereal
, comonad
, deepseq
, hashable
, mmorph
, profunctors
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "bound";
version = "2.0.1";
sha256 = "294a206f33b6583e56bd3aad620e4a7bd0a22b4bf4c6fe5988b2fe55159fbb76";
revision = "4";
editedCabalFile = "1gnknncwjil9kcilpj08a5s0r1z3nk5iyg1dlynldxaj6p0z90hx";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
bifunctors
binary
bytes
cereal
comonad
deepseq
hashable
mmorph
profunctors
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/bound/";
description = "Making de Bruijn Succ Less";
license = stdenv.lib.licenses.bsd3;

}) {};
"boundingboxes" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
}:
mkDerivation {

pname = "boundingboxes";
version = "0.2.3";
sha256 = "e80947aa2c2c7f11e7eb2eb088a463d1cd1cdf03790e4c2746b629dcb1737564";
libraryHaskellDepends = [
base
lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/boundingboxes";
description = "A generic boundingbox for an arbitrary vector";
license = stdenv.lib.licenses.bsd3;

}) {};
"bower-json" = callPackage
({
  mkDerivation
, aeson
, aeson-better-errors
, base
, bytestring
, deepseq
, ghc-prim
, mtl
, scientific
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "bower-json";
version = "1.0.0.1";
sha256 = "7aa954e2b1bf79307db710c158108bd9ddb45b333ca96072cdbfaf96c77b7e73";
libraryHaskellDepends = [
aeson
aeson-better-errors
base
bytestring
deepseq
ghc-prim
mtl
scientific
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdgarrood/bower-json";
description = "Read bower.json from Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"boxes" = callPackage
({
  mkDerivation
, base
, split
, stdenv
}:
mkDerivation {

pname = "boxes";
version = "0.1.5";
sha256 = "38e1782e8a458f342a0acbb74af8f55cb120756bc3af7ee7220d955812af56c3";
libraryHaskellDepends = [
base
split
];
doHaddock = false;
doCheck = false;
description = "2D text pretty-printing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"brick" = callPackage
({
  mkDerivation
, base
, config-ini
, containers
, contravariant
, data-clist
, deepseq
, dlist
, microlens
, microlens-mtl
, microlens-th
, stdenv
, stm
, template-haskell
, text
, text-zipper
, transformers
, vector
, vty
, word-wrap
}:
mkDerivation {

pname = "brick";
version = "0.34.1";
sha256 = "dabbfada104fd88e068d75b73266c59682a2920e9e813bb12b76e1920bee0778";
revision = "2";
editedCabalFile = "0yk4wxlv693gnax8b0gr6g2zqsm53izwar0aagqc4w3bq3llx63b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
config-ini
containers
contravariant
data-clist
deepseq
dlist
microlens
microlens-mtl
microlens-th
stm
template-haskell
text
text-zipper
transformers
vector
vty
word-wrap
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/brick/";
description = "A declarative terminal user interface library";
license = stdenv.lib.licenses.bsd3;

}) {};
"brittany" = callPackage
({
  mkDerivation
, aeson
, base
, butcher
, bytestring
, cmdargs
, containers
, czipwith
, data-tree-print
, deepseq
, directory
, extra
, filepath
, ghc
, ghc-boot-th
, ghc-exactprint
, ghc-paths
, hspec
, monad-memo
, mtl
, multistate
, neat-interpolation
, pretty
, safe
, semigroups
, stdenv
, strict
, syb
, text
, transformers
, uniplate
, unsafe
, yaml
}:
mkDerivation {

pname = "brittany";
version = "0.9.0.1";
sha256 = "0845ec0dcf88639072efbb4c56562436db79ffaf32bfda69f7711afca7b2b5d9";
revision = "1";
editedCabalFile = "1ac9g160kaaz78xk6xdfpkm0qadgkanjghi8g0b9fy17983fiw7a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
butcher
bytestring
cmdargs
containers
czipwith
data-tree-print
deepseq
directory
extra
ghc
ghc-boot-th
ghc-exactprint
ghc-paths
monad-memo
mtl
multistate
neat-interpolation
pretty
safe
semigroups
strict
syb
text
transformers
uniplate
unsafe
yaml
];
executableHaskellDepends = [
aeson
base
butcher
bytestring
cmdargs
containers
czipwith
data-tree-print
deepseq
directory
extra
filepath
ghc
ghc-boot-th
ghc-exactprint
ghc-paths
hspec
monad-memo
mtl
multistate
neat-interpolation
pretty
safe
semigroups
strict
syb
text
transformers
uniplate
unsafe
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lspitzner/brittany/";
description = "Haskell source code formatter";
license = stdenv.lib.licenses.agpl3;

}) {};
"broadcast-chan" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "broadcast-chan";
version = "0.1.1";
sha256 = "ad5bd65a301aff6df38c4111f02e73cce3bcfed7bfae6c66c2e70310f1e985f2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/merijn/broadcast-chan";
description = "Broadcast channel type that avoids 0 reader space leaks";
license = stdenv.lib.licenses.bsd3;

}) {};
"bsb-http-chunked" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-builder
, stdenv
}:
mkDerivation {

pname = "bsb-http-chunked";
version = "0.0.0.2";
sha256 = "28cb750979763c815fbf69a6dc510f837b7ccbe262adf0a28ad270966737d5f4";
libraryHaskellDepends = [
base
bytestring
bytestring-builder
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/sjakobi/bsb-http-chunked";
description = "Chunked HTTP transfer encoding for bytestring builders";
license = stdenv.lib.licenses.bsd3;

}) {};
"bson" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cryptohash
, data-binary-ieee754
, mtl
, network
, stdenv
, text
, time
}:
mkDerivation {

pname = "bson";
version = "0.3.2.6";
sha256 = "738dc3615aafa1dd553f51a67373af2f27db90e75266ed6cdee5cecb7f6fce80";
libraryHaskellDepends = [
base
binary
bytestring
cryptohash
data-binary-ieee754
mtl
network
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mongodb-haskell/bson";
description = "BSON documents are JSON-like objects with a standard binary encoding";
license = stdenv.lib.licenses.asl20;

}) {};
"bson-lens" = callPackage
({
  mkDerivation
, base
, bson
, lens
, stdenv
, text
}:
mkDerivation {

pname = "bson-lens";
version = "0.1.1";
sha256 = "d73bb417def2d8cb1efebfc22482a859e119bcc4005dd10106c82dff5ceeb160";
libraryHaskellDepends = [
base
bson
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/bson-lens";
description = "BSON lenses";
license = stdenv.lib.licenses.mit;

}) {};
"btrfs" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, time
, unix
}:
mkDerivation {

pname = "btrfs";
version = "0.1.2.3";
sha256 = "7efc0b5c65623dcf60910baf896aec7da7ac2df4231f03a3072c78fb5b2fb88d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hs-btrfs";
description = "Bindings to the btrfs API";
license = stdenv.lib.licenses.bsd3;

}) {};
"buchhaltung" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, array
, async
, base
, boxes
, bytestring
, cassava
, containers
, data-default
, Decimal
, deepseq
, directory
, edit-distance
, file-embed
, filepath
, formatting
, hashable
, haskeline
, hint
, hledger
, hledger-lib
, lens
, lifted-base
, ListLike
, megaparsec
, MissingH
, monad-control
, mtl
, optparse-applicative
, parsec
, process
, regex-compat
, regex-tdfa
, regex-tdfa-text
, safe
, semigroups
, split
, stdenv
, strict
, temporary
, text
, time
, transformers
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "buchhaltung";
version = "0.0.7";
sha256 = "8b7e74a722d5d74d8b9d1473dcb4a73e0b1470794f2de3d39a8f1828a08a71c2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
array
async
base
boxes
bytestring
cassava
containers
data-default
Decimal
deepseq
directory
edit-distance
file-embed
filepath
formatting
hashable
haskeline
hint
hledger
hledger-lib
lens
lifted-base
ListLike
megaparsec
MissingH
monad-control
mtl
optparse-applicative
parsec
process
regex-compat
regex-tdfa
regex-tdfa-text
safe
semigroups
split
strict
temporary
text
time
transformers
unordered-containers
vector
yaml
];
executableHaskellDepends = [
aeson
ansi-wl-pprint
array
async
base
boxes
bytestring
cassava
containers
data-default
Decimal
deepseq
directory
edit-distance
file-embed
filepath
formatting
hashable
haskeline
hint
hledger
hledger-lib
lens
lifted-base
ListLike
megaparsec
MissingH
monad-control
mtl
optparse-applicative
parsec
process
regex-compat
regex-tdfa
regex-tdfa-text
safe
semigroups
split
strict
temporary
text
time
transformers
unordered-containers
vector
yaml
];
doHaddock = false;
doCheck = false;
homepage = "http://johannesgerer.com/buchhaltung";
description = "Automates most of your plain text accounting data entry in ledger format";
license = stdenv.lib.licenses.mit;

}) {};
"buffer-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "buffer-builder";
version = "0.2.4.5";
sha256 = "ac329b7b1a81a40ab6d32b3519f396f652d7511ffdcac8e7a680c08cd53fe421";
libraryHaskellDepends = [
base
bytestring
mtl
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chadaustin/buffer-builder";
description = "Library for efficiently building up buffers, one piece at a time";
license = stdenv.lib.licenses.bsd3;

}) {};
"buffer-pipe" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "buffer-pipe";
version = "0.0";
sha256 = "0875b6e41988f70e20d2e9d1a092ae03d545954732f93d65a3481b5c4b52dccf";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Read from stdin and write to stdout in large blocks";
license = stdenv.lib.licenses.bsd3;

}) {};
"butcher" = callPackage
({
  mkDerivation
, base
, bifunctors
, containers
, deque
, extra
, free
, microlens
, microlens-th
, mtl
, multistate
, pretty
, stdenv
, transformers
, unsafe
, void
}:
mkDerivation {

pname = "butcher";
version = "1.3.0.0";
sha256 = "cf4e3b14a147201f7878b70e857c9df1abe62c5eb03a9d3cf65d5207ad7a056d";
revision = "1";
editedCabalFile = "1zw355fg08p90xv3f1qcray0vz68h4sab0q2zfb3hk3j8mpplgvp";
libraryHaskellDepends = [
base
bifunctors
containers
deque
extra
free
microlens
microlens-th
mtl
multistate
pretty
transformers
unsafe
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lspitzner/butcher/";
description = "Chops a command or program invocation into digestable pieces";
license = stdenv.lib.licenses.bsd3;

}) {};
"bv" = callPackage
({
  mkDerivation
, base
, ghc-prim
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "bv";
version = "0.5";
sha256 = "04a189ab1758f6adc51ffff0a10705d8c8b54959946a90a3b9a750c930c77bda";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ghc-prim
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iagoabal/haskell-bv";
description = "Bit-vector arithmetic library";
license = stdenv.lib.licenses.bsd3;

}) {};
"bv-little" = callPackage
({
  mkDerivation
, base
, deepseq
, hashable
, integer-gmp
, mono-traversable
, primitive
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "bv-little";
version = "0.1.1";
sha256 = "68e6d6d1ed6922e92e471e93ecb5c643f28f2e9c761f9c1a3697e9527c696b94";
libraryHaskellDepends = [
base
deepseq
hashable
integer-gmp
mono-traversable
primitive
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/recursion-ninja/bv-little";
description = "Efficient little-endian bit vector library";
license = stdenv.lib.licenses.bsd3;

}) {};
"byteable" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "byteable";
version = "0.1.1";
sha256 = "243b34a1b5b64b39e39fe58f75c18f6cad5b668b10cabcd86816cbde27783fe2";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-byteable";
description = "Type class for sequence of bytes";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytedump" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "bytedump";
version = "1.0";
sha256 = "ae17b5040f0423eec792505f14d1d3e53f5ff81ddf83524f1c5dc7a16c0dc0dd";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-bytedump";
description = "Flexible byte dump helpers for human readers";
license = stdenv.lib.licenses.bsd3;

}) {};
"byteorder" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "byteorder";
version = "1.0.4";
sha256 = "bd20bbb586947f99c38a4c93d9d0266f49f6fc581767b51ba568f6d5d52d2919";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://community.haskell.org/~aslatter/code/byteorder";
description = "Exposes the native endianness or byte ordering of the system";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytes" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, Cabal
, cabal-doctest
, cereal
, containers
, hashable
, mtl
, scientific
, stdenv
, text
, time
, transformers
, transformers-compat
, unordered-containers
, void
}:
mkDerivation {

pname = "bytes";
version = "0.15.4";
sha256 = "35efd80d978a52dc70b5aa75e96ecbf2d0852d03e3a5c61087efa24a711c3d88";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
binary
bytestring
cereal
containers
hashable
mtl
scientific
text
time
transformers
transformers-compat
unordered-containers
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ekmett/bytes";
description = "Sharing code for serialization between binary and cereal";
license = stdenv.lib.licenses.bsd3;

}) {};
"byteset" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "byteset";
version = "0.1.1.0";
sha256 = "13499c5b279f022097e9ae1d0aeef3fcea12b7f18f50157d4950aec58741afa1";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
description = "Set of bytes";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytestring-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, stdenv
}:
mkDerivation {

pname = "bytestring-builder";
version = "0.10.8.1.0";
sha256 = "6d7404773621efb88b256ff88912a7dbcebc7fb86d27868ef58478249892dbc2";
libraryHaskellDepends = [
base
bytestring
deepseq
];
doHaddock = false;
doCheck = false;
description = "The new bytestring builder, packaged outside of GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"bytestring-conversion" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, case-insensitive
, double-conversion
, stdenv
, text
}:
mkDerivation {

pname = "bytestring-conversion";
version = "0.3.1";
sha256 = "13b7ea48737dc7a7fd4c894ff1fb9344cf8d9ef8f4201e813d578b613e874ef8";
revision = "2";
editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
libraryHaskellDepends = [
attoparsec
base
bytestring
case-insensitive
double-conversion
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/twittner/bytestring-conversion/";
description = "Type-classes to convert values to and from ByteString";
license = stdenv.lib.licenses.mpl20;

}) {};
"bytestring-lexing" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "bytestring-lexing";
version = "0.5.0.2";
sha256 = "01f9add3f25067a89c5ae9ab1f2fd8ab75ec9f386987ee0d83f73ec855b43f73";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Parse and produce literals efficiently from strict or lazy bytestrings";
license = stdenv.lib.licenses.bsd2;

}) {};
"bytestring-strict-builder" = callPackage
({
  mkDerivation
, base
, base-prelude
, bytestring
, semigroups
, stdenv
}:
mkDerivation {

pname = "bytestring-strict-builder";
version = "0.4.5";
sha256 = "cf192d9951a42cf76f35c4b6dcc8d04868c5df3e279b7b29079ebcd076f8f3ce";
libraryHaskellDepends = [
base
base-prelude
bytestring
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/bytestring-strict-builder";
description = "An efficient strict bytestring builder";
license = stdenv.lib.licenses.mit;

}) {};
"bytestring-tree-builder" = callPackage
({
  mkDerivation
, base
, base-prelude
, bytestring
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "bytestring-tree-builder";
version = "0.2.7.1";
sha256 = "ae03a5b2e24068870dfcff6c6dc8d6d243aaebdb7c66746d499e7cf6cfd16bd5";
libraryHaskellDepends = [
base
base-prelude
bytestring
semigroups
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/bytestring-tree-builder";
description = "A very efficient ByteString builder implementation based on the binary tree";
license = stdenv.lib.licenses.mit;

}) {};
"bytestring-trie" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "bytestring-trie";
version = "0.2.4.1";
sha256 = "2fe4feb526a03d32aaf673506623b3af4ce3fee126f745a8852c5fd676a61363";
revision = "1";
editedCabalFile = "0f56pb1k1va7bs9rpn0b8hclxhn5pcjln857k50myhyzrwz8qg7r";
libraryHaskellDepends = [
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "An efficient finite map from (byte)strings to values";
license = stdenv.lib.licenses.bsd3;

}) {};
"bzlib" = callPackage
({
  mkDerivation
, base
, bytestring
, bzip2
, stdenv
}:
mkDerivation {

pname = "bzlib";
version = "0.5.0.5";
sha256 = "9ee7d0ac7461b330820af928c13c6668bf4fe3601f171c42432a85c33718017e";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
bzip2
];
doHaddock = false;
doCheck = false;
description = "Compression and decompression in the bzip2 format";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) bzip2;};
"bzlib-conduit" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, bytestring
, bzip2
, conduit
, data-default-class
, mtl
, resourcet
, stdenv
}:
mkDerivation {

pname = "bzlib-conduit";
version = "0.3.0.1";
sha256 = "43d811549f7fb0710e4895ad54f78418271579f7e27d75e3c3470b74b285a239";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bindings-DSL
bytestring
conduit
data-default-class
mtl
resourcet
];
librarySystemDepends = [
bzip2
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/bzlib-conduit#readme";
description = "Streaming compression/decompression via conduits";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) bzip2;};
"c2hs" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, directory
, dlist
, filepath
, language-c
, pretty
, process
, stdenv
}:
mkDerivation {

pname = "c2hs";
version = "0.28.5";
sha256 = "bd10ab1260f5c838bbe239170d11d44ca2d7caef683f0d4df5190dc64e4a2df6";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
array
base
bytestring
containers
directory
dlist
filepath
language-c
pretty
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/c2hs";
description = "C->Haskell FFI tool that gives some cross-language type safety";
license = stdenv.lib.licenses.gpl2;

}) {};
"cabal-doctest" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "cabal-doctest";
version = "1.0.6";
sha256 = "decaaa5a73eaabaf3c4f8c644bd7f6e3f428b6244e935c0cf105f75f9b24ed2d";
revision = "1";
editedCabalFile = "1bk85avgc93yvcggwbk01fy8nvg6753wgmaanhkry0hz55h7mpld";
libraryHaskellDepends = [
base
Cabal
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/cabal-doctest";
description = "A Setup.hs helper for doctests running";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal-file-th" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, pretty
, stdenv
, template-haskell
}:
mkDerivation {

pname = "cabal-file-th";
version = "0.2.4";
sha256 = "0b55d7ffacd0c6324fa7c8b8f148e788e6b899fb9bf8795285dea66575bed91c";
libraryHaskellDepends = [
base
Cabal
directory
pretty
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nkpart/cabal-file-th";
description = "Template Haskell expressions for reading fields from a project's cabal file";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal-install" = callPackage
({
  mkDerivation
, array
, async
, base
, base16-bytestring
, binary
, bytestring
, Cabal
, containers
, cryptohash-sha256
, deepseq
, directory
, echo
, edit-distance
, filepath
, hackage-security
, hashable
, HTTP
, mtl
, network
, network-uri
, pretty
, process
, random
, stdenv
, stm
, tar
, time
, unix
, zlib
}:
mkDerivation {

pname = "cabal-install";
version = "2.0.0.1";
sha256 = "f991e36f3adaa1c7e2f0c422a2f2a4ab21b7041c82a8896f72afc9843a0d5d99";
revision = "3";
editedCabalFile = "148rq7hcbl8rq7pkywn1hk3l7lv442flf6b0wamfixxzxk74fwlj";
isLibrary = false;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
filepath
process
];
executableHaskellDepends = [
array
async
base
base16-bytestring
binary
bytestring
Cabal
containers
cryptohash-sha256
deepseq
directory
echo
edit-distance
filepath
hackage-security
hashable
HTTP
mtl
network
network-uri
pretty
process
random
stm
tar
time
unix
zlib
];
doHaddock = false;
doCheck = false;
postInstall = ''
  mkdir $out/etc
  mv bash-completion $out/etc/bash_completion.d
'';
homepage = "http://www.haskell.org/cabal/";
description = "The command-line interface for Cabal and Hackage";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal-rpm" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, directory
, filepath
, http-client
, http-client-tls
, http-conduit
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "cabal-rpm";
version = "0.12.4";
sha256 = "62a466f0805c2ca2fca3d8241571a90a766c31bacd2188ef4583f153aa5dfaf3";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
Cabal
directory
filepath
http-client
http-client-tls
http-conduit
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/juhp/cabal-rpm";
description = "RPM packaging tool for Haskell Cabal-based packages";
license = stdenv.lib.licenses.gpl3;

}) {};
"cabal-toolkit" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, Cabal
, containers
, ghc
, stdenv
, template-haskell
}:
mkDerivation {

pname = "cabal-toolkit";
version = "0.0.5";
sha256 = "98ad3cc723fd196fd25b3ac4bea2b50bad0cc2d5f24d5557785184bb55396cf0";
libraryHaskellDepends = [
base
binary
bytestring
Cabal
containers
ghc
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TerrorJack/cabal-toolkit#readme";
description = "Helper functions for writing custom Setup.hs scripts.";
license = stdenv.lib.licenses.bsd3;

}) {};
"cabal2nix" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, base
, bytestring
, Cabal
, containers
, deepseq
, directory
, distribution-nixpkgs
, filepath
, hackage-db
, hopenssl
, hpack
, language-nix
, lens
, monad-par
, monad-par-extras
, mtl
, optparse-applicative
, pretty
, process
, split
, stdenv
, text
, time
, transformers
, utf8-string
, yaml
}:
mkDerivation {

pname = "cabal2nix";
version = "2.8.2";
sha256 = "88f52d518bfdf9421e82665bc9b40524312157015578f8c8b1c68e70f3457354";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
base
bytestring
Cabal
containers
deepseq
directory
distribution-nixpkgs
filepath
hackage-db
hopenssl
hpack
language-nix
lens
optparse-applicative
pretty
process
split
text
time
transformers
yaml
];
executableHaskellDepends = [
aeson
base
bytestring
Cabal
containers
directory
distribution-nixpkgs
filepath
hopenssl
language-nix
lens
monad-par
monad-par-extras
mtl
optparse-applicative
pretty
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nixos/cabal2nix#readme";
description = "Convert Cabal files into Nix build instructions";
license = stdenv.lib.licenses.bsd3;

}) {};
"cache" = callPackage
({
  mkDerivation
, base
, clock
, hashable
, stdenv
, stm
, transformers
, unordered-containers
}:
mkDerivation {

pname = "cache";
version = "0.1.1.0";
sha256 = "14756f8383e991affe6120d299ba23c4f53753519700f8a771cfcec9782b78ff";
libraryHaskellDepends = [
base
clock
hashable
stm
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hverr/haskell-cache#readme";
description = "An in-memory key/value store with expiration support";
license = stdenv.lib.licenses.bsd3;

}) {};
"cairo" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, Cabal
, cairo
, gtk2hs-buildtools
, mtl
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "cairo";
version = "0.13.5.0";
sha256 = "420acd81e0b5578ad188bcdd38463135293c233221abb741cc4004d4c8a6bef3";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
bytestring
mtl
text
utf8-string
];
libraryPkgconfigDepends = [
cairo
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the Cairo library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) cairo;};
"calendar-recycling" = callPackage
({
  mkDerivation
, base
, containers
, html
, old-time
, stdenv
, utility-ht
}:
mkDerivation {

pname = "calendar-recycling";
version = "0.0";
sha256 = "a33e62c5bdbbece82491b6b795510496467df9993c715c819a7aad7707ee7963";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
containers
html
old-time
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/calendar-recycling";
description = "List years with the same calendars";
license = stdenv.lib.licenses.bsd3;

}) {};
"call-stack" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "call-stack";
version = "0.1.0";
sha256 = "f25f5e0992a39371079cc25c2a14b5abb872fa7d868a32753aac3a258b83b1e2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/call-stack#readme";
description = "Use GHC call-stacks in a backward compatible way";
license = stdenv.lib.licenses.mit;

}) {};
"canonical-json" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, fetchgit
, parsec
, pretty
, stdenv
}:
mkDerivation {

pname = "canonical-json";
version = "0.5.0.0";
src = fetchgit {

url = "https://github.com/well-typed/canonical-json.git";
sha256 = "19lc5pr85jz3f8ifmjxnkxgib0lz3vgagdny50gb04midc7y37pr";
rev = "2d261bb971bada1893753b503452d9e6e217bc4a";

};
libraryHaskellDepends = [
base
bytestring
containers
parsec
pretty
];
doHaddock = false;
doCheck = false;
description = "Canonical JSON for signing and hashing JSON values";
license = stdenv.lib.licenses.bsd3;

}) {};
"capataz" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, data-default
, microlens
, protolude
, safe-exceptions
, stdenv
, stm
, teardown
, text
, time
, unordered-containers
, uuid
, vector
}:
mkDerivation {

pname = "capataz";
version = "0.1.0.1";
sha256 = "2d34c45a76148165371c697e675766ee3b365dd4370907f1792fad584bb5bd51";
libraryHaskellDepends = [
async
base
bytestring
data-default
microlens
protolude
safe-exceptions
stm
teardown
text
time
unordered-containers
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/roman/Haskell-capataz#readme";
description = "OTP-like supervision trees in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-crypto" = callPackage
({
  mkDerivation
, base
, basement
, bytestring
, cryptonite
, cryptonite-openssl
, deepseq
, fetchgit
, foundation
, hashable
, integer-gmp
, memory
, stdenv
}:
mkDerivation {

pname = "cardano-crypto";
version = "1.1.0";
src = fetchgit {

url = "https://github.com/input-output-hk/cardano-crypto";
sha256 = "1v165n4cmp4g272406vaaan7bwvrw2m55jwcbz8qqjxslxv1l63p";
rev = "33c7ecc6e4bd71c3ea0195e9d796eeace7be22cf";

};
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
basement
bytestring
cryptonite
cryptonite-openssl
deepseq
foundation
hashable
integer-gmp
memory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/input-output-hk/cardano-crypto#readme";
description = "Cryptography primitives for cardano";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-report-server" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, case-insensitive
, directory
, exceptions
, fetchgit
, filelock
, filepath
, formatting
, http-types
, lens
, lens-aeson
, lifted-base
, log-warper
, monad-control
, mtl
, network
, optparse-applicative
, parsec
, random
, stdenv
, text
, time
, transformers
, universum
, vector
, wai
, wai-extra
, warp
, wreq
}:
mkDerivation {

pname = "cardano-report-server";
version = "0.4.10";
src = fetchgit {

url = "https://github.com/input-output-hk/cardano-report-server.git";
sha256 = "0chhbnrl68aqjfhkqvq53v572zsg52mj8pjxl3n7nnbc006cqs49";
rev = "81eea7361a75923f9402fcb7840fb36722dbf88e";

};
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
case-insensitive
directory
exceptions
filelock
filepath
formatting
http-types
lens
lens-aeson
lifted-base
log-warper
monad-control
mtl
network
optparse-applicative
parsec
random
text
time
transformers
universum
vector
wai
wai-extra
warp
wreq
];
executableHaskellDepends = [
base
directory
filepath
http-types
log-warper
monad-control
mtl
optparse-applicative
parsec
random
universum
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/input-output-hk/cardano-report-server";
description = "Reporting server for CSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"cardano-sl" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, ansi-terminal
, ansi-wl-pprint
, async
, base
, bytestring
, canonical-json
, cardano-crypto
, cardano-sl-binary
, cardano-sl-binary-test
, cardano-sl-block
, cardano-sl-block-test
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-db
, cardano-sl-delegation
, cardano-sl-delegation-test
, cardano-sl-infra
, cardano-sl-infra-test
, cardano-sl-lrc
, cardano-sl-lrc-test
, cardano-sl-networking
, cardano-sl-sinbin
, cardano-sl-ssc
, cardano-sl-ssc-test
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-update-test
, cardano-sl-util
, cardano-sl-util-test
, cborg
, conduit
, constraints
, containers
, contravariant
, cpphs
, criterion
, cryptonite
, data-default
, deepseq
, directory
, ekg-core
, ether
, exceptions
, extra
, filelock
, filepath
, formatting
, generic-arbitrary
, hspec
, http-client
, http-client-tls
, http-conduit
, lens
, log-warper
, memory
, mmorph
, monad-control
, mtl
, neat-interpolation
, network
, network-transport
, network-transport-inmemory
, network-transport-tcp
, optparse-applicative
, parsec
, pipes
, pvss
, QuickCheck
, random
, reflection
, safe-exceptions
, serokell-util
, servant
, servant-client
, servant-client-core
, servant-server
, servant-swagger
, stdenv
, stm
, streaming-commons
, systemd
, tagged
, template-haskell
, text
, time
, time-units
, tls
, transformers
, universum
, unix
, unliftio
, unordered-containers
, wai
, warp
, warp-tls
, x509
, x509-store
, x509-validation
, yaml
}:
mkDerivation {

pname = "cardano-sl";
version = "1.3.0";
src = ./../lib;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
ansi-terminal
ansi-wl-pprint
async
base
bytestring
canonical-json
cardano-sl-binary
cardano-sl-binary-test
cardano-sl-block
cardano-sl-core
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-delegation
cardano-sl-infra
cardano-sl-lrc
cardano-sl-networking
cardano-sl-sinbin
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cborg
conduit
constraints
containers
contravariant
cpphs
cryptonite
data-default
directory
ekg-core
ether
exceptions
filelock
filepath
formatting
generic-arbitrary
hspec
http-client
http-client-tls
http-conduit
lens
log-warper
memory
mmorph
monad-control
mtl
neat-interpolation
network
network-transport
optparse-applicative
parsec
pipes
pvss
QuickCheck
random
reflection
safe-exceptions
serokell-util
servant
servant-client
servant-client-core
servant-server
servant-swagger
stm
streaming-commons
systemd
tagged
template-haskell
text
time
time-units
tls
transformers
universum
unix
unliftio
unordered-containers
wai
warp
warp-tls
x509
x509-store
x509-validation
yaml
];
testHaskellDepends = [
base
bytestring
cardano-crypto
cardano-sl-binary
cardano-sl-binary-test
cardano-sl-block-test
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-delegation
cardano-sl-delegation-test
cardano-sl-infra
cardano-sl-infra-test
cardano-sl-lrc
cardano-sl-lrc-test
cardano-sl-networking
cardano-sl-sinbin
cardano-sl-ssc
cardano-sl-ssc-test
cardano-sl-txp
cardano-sl-update
cardano-sl-update-test
cardano-sl-util
cardano-sl-util-test
containers
cryptonite
data-default
deepseq
extra
filelock
formatting
generic-arbitrary
hspec
lens
log-warper
network-transport
network-transport-inmemory
pipes
pvss
QuickCheck
random
reflection
serokell-util
tagged
text
time
time-units
universum
unordered-containers
];
benchmarkHaskellDepends = [
base
bytestring
cardano-sl-block-test
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-infra
cardano-sl-lrc
cardano-sl-networking
cardano-sl-ssc
cardano-sl-txp
cardano-sl-util
cardano-sl-util-test
criterion
deepseq
formatting
network-transport
network-transport-tcp
optparse-applicative
pipes
QuickCheck
time-units
universum
];
doHaddock = false;
description = "Cardano SL main implementation";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-auxx" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, async
, base
, bytestring
, canonical-json
, cardano-sl
, cardano-sl-block
, cardano-sl-client
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-generator
, cardano-sl-infra
, cardano-sl-networking
, cardano-sl-ssc
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-util
, conduit
, constraints
, containers
, cpphs
, data-default
, Earley
, formatting
, generic-arbitrary
, haskeline
, hspec
, lens
, loc
, log-warper
, megaparsec
, MonadRandom
, mtl
, neat-interpolation
, network-transport-tcp
, optparse-applicative
, parser-combinators
, QuickCheck
, quickcheck-instances
, random
, resourcet
, safe-exceptions
, scientific
, serokell-util
, split
, stdenv
, stm
, temporary
, text
, time-units
, transformers
, universum
, unix
, unordered-containers
, validation
}:
mkDerivation {

pname = "cardano-sl-auxx";
version = "1.3.0";
src = ./../auxx;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
async
base
bytestring
canonical-json
cardano-sl
cardano-sl-block
cardano-sl-client
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-db
cardano-sl-generator
cardano-sl-infra
cardano-sl-networking
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
conduit
constraints
containers
data-default
Earley
formatting
generic-arbitrary
haskeline
lens
loc
log-warper
megaparsec
MonadRandom
mtl
neat-interpolation
optparse-applicative
parser-combinators
QuickCheck
quickcheck-instances
random
resourcet
safe-exceptions
scientific
serokell-util
split
stm
text
time-units
transformers
universum
unix
unordered-containers
validation
];
libraryToolDepends = [
cpphs
];
executableHaskellDepends = [
base
cardano-sl
cardano-sl-core
cardano-sl-crypto
cardano-sl-infra
cardano-sl-networking
cardano-sl-txp
cardano-sl-util
formatting
log-warper
network-transport-tcp
safe-exceptions
temporary
universum
unix
];
executableToolDepends = [
cpphs
];
testHaskellDepends = [
cardano-sl-core
cardano-sl-crypto
hspec
QuickCheck
universum
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - Auxx";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-binary" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, cardano-sl-util
, cardano-sl-util-test
, cborg
, cereal
, containers
, cpphs
, cryptonite
, data-default
, digest
, directory
, extra
, file-embed
, filelock
, filepath
, fmt
, formatting
, generic-arbitrary
, half
, hashable
, hedgehog
, hspec
, lens
, mtl
, pretty-show
, QuickCheck
, quickcheck-instances
, safe-exceptions
, safecopy
, serokell-util
, stdenv
, tagged
, template-haskell
, text
, th-utilities
, time-units
, universum
, unordered-containers
, vector
}:
mkDerivation {

pname = "cardano-sl-binary";
version = "1.3.0";
src = ./../binary;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
binary
bytestring
cardano-sl-util
cborg
cereal
containers
digest
formatting
hashable
lens
safe-exceptions
safecopy
serokell-util
tagged
template-haskell
text
th-utilities
time-units
universum
unordered-containers
vector
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
aeson
base
bytestring
cardano-sl-util-test
cborg
cereal
containers
cryptonite
data-default
directory
extra
file-embed
filelock
filepath
fmt
formatting
generic-arbitrary
half
hedgehog
hspec
mtl
pretty-show
QuickCheck
quickcheck-instances
safecopy
serokell-util
template-haskell
text
time-units
universum
unordered-containers
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - binary serialization";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-binary-test" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cardano-sl-binary
, cardano-sl-util-test
, cborg
, cereal
, cpphs
, cryptonite
, directory
, filepath
, formatting
, half
, hedgehog
, hspec
, mtl
, pretty-show
, QuickCheck
, quickcheck-instances
, safecopy
, stdenv
, template-haskell
, text
, universum
}:
mkDerivation {

pname = "cardano-sl-binary-test";
version = "1.3.0";
src = ./../binary/test;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
base
bytestring
cardano-sl-binary
cardano-sl-util-test
cborg
cereal
cryptonite
directory
filepath
formatting
half
hedgehog
hspec
mtl
pretty-show
QuickCheck
quickcheck-instances
safecopy
template-haskell
text
universum
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - binary serializarion (tests)";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-block" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, base
, bytestring
, cardano-sl-binary
, cardano-sl-binary-test
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-db
, cardano-sl-delegation
, cardano-sl-delegation-test
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-sinbin
, cardano-sl-ssc
, cardano-sl-ssc-test
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-update-test
, cardano-sl-util
, cborg
, conduit
, containers
, cpphs
, criterion
, cryptonite
, data-default
, deepseq
, directory
, ekg-core
, ether
, exceptions
, filepath
, formatting
, generic-arbitrary
, hspec
, lens
, log-warper
, mtl
, pipes
, QuickCheck
, random
, reflection
, rocksdb-haskell-ng
, safe-exceptions
, serokell-util
, stdenv
, stm
, text
, time-units
, transformers
, universum
, unliftio
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-block";
version = "1.3.0";
src = ./../block;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
base
bytestring
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-delegation
cardano-sl-lrc
cardano-sl-networking
cardano-sl-sinbin
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cborg
conduit
containers
cryptonite
data-default
deepseq
directory
ekg-core
ether
exceptions
filepath
formatting
lens
log-warper
mtl
pipes
reflection
rocksdb-haskell-ng
safe-exceptions
serokell-util
stm
text
time-units
transformers
universum
unliftio
unordered-containers
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
base
cardano-sl-binary
cardano-sl-binary-test
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-delegation-test
cardano-sl-ssc-test
cardano-sl-update-test
formatting
generic-arbitrary
hspec
QuickCheck
random
serokell-util
text
universum
];
testToolDepends = [
cpphs
];
benchmarkHaskellDepends = [
base
bytestring
cardano-sl-binary
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-delegation-test
cardano-sl-ssc-test
cardano-sl-update-test
criterion
deepseq
formatting
generic-arbitrary
QuickCheck
random
text
universum
];
doHaddock = false;
description = "Cardano SL - block processing";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-block-test" = callPackage
({
  mkDerivation
, base
, cardano-sl-binary
, cardano-sl-block
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-delegation-test
, cardano-sl-ssc-test
, cardano-sl-update-test
, formatting
, generic-arbitrary
, QuickCheck
, random
, stdenv
, text
, universum
}:
mkDerivation {

pname = "cardano-sl-block-test";
version = "1.3.0";
src = ./../block/test;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
cardano-sl-binary
cardano-sl-block
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-delegation-test
cardano-sl-ssc-test
cardano-sl-update-test
formatting
generic-arbitrary
QuickCheck
random
text
universum
];
doHaddock = false;
description = "Cardano SL - block processing (tests)";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-client" = callPackage
({
  mkDerivation
, base
, bytestring
, cardano-sl
, cardano-sl-block
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-db
, cardano-sl-infra
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-ssc
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-util
, cardano-sl-util-test
, containers
, cpphs
, data-default
, formatting
, hspec
, lens
, log-warper
, mtl
, QuickCheck
, safe-exceptions
, serokell-util
, stdenv
, stm
, transformers
, universum
, unordered-containers
, vector
}:
mkDerivation {

pname = "cardano-sl-client";
version = "1.3.0";
src = ./../client;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
cardano-sl
cardano-sl-block
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-infra
cardano-sl-lrc
cardano-sl-networking
cardano-sl-txp
cardano-sl-update
cardano-sl-util
containers
data-default
formatting
lens
log-warper
mtl
QuickCheck
safe-exceptions
serokell-util
stm
transformers
universum
unordered-containers
vector
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
base
bytestring
cardano-sl
cardano-sl-core
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cardano-sl-util-test
containers
formatting
hspec
QuickCheck
universum
unordered-containers
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL client modules";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-core" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, ansi-terminal
, async
, base
, base16-bytestring
, base58-bytestring
, bytestring
, Cabal
, canonical-json
, cardano-crypto
, cardano-sl-binary
, cardano-sl-binary-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-util
, cardano-sl-util-test
, cborg
, cereal
, containers
, cpphs
, cryptonite
, data-default
, deepseq
, deriving-compat
, ed25519
, ekg-core
, exceptions
, extra
, filepath
, fmt
, formatting
, generic-arbitrary
, hashable
, hedgehog
, hspec
, lens
, log-warper
, memory
, mmorph
, monad-control
, mtl
, plutus-prototype
, pvss
, QuickCheck
, quickcheck-instances
, random
, reflection
, resourcet
, safe-exceptions
, safecopy
, serokell-util
, stdenv
, stm
, template-haskell
, text
, th-lift-instances
, time
, time-units
, transformers
, transformers-base
, transformers-lift
, universum
, unliftio-core
, unordered-containers
, vector
}:
mkDerivation {

pname = "cardano-sl-core";
version = "1.3.0";
src = ./../core;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
ansi-terminal
async
base
base58-bytestring
bytestring
Cabal
canonical-json
cardano-sl-binary
cardano-sl-crypto
cardano-sl-util
cborg
cereal
containers
cryptonite
data-default
deepseq
deriving-compat
ekg-core
exceptions
extra
filepath
fmt
formatting
hashable
lens
log-warper
memory
mmorph
monad-control
mtl
plutus-prototype
random
reflection
resourcet
safe-exceptions
safecopy
serokell-util
stm
template-haskell
text
th-lift-instances
time
time-units
transformers
transformers-base
transformers-lift
universum
unliftio-core
unordered-containers
vector
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
aeson
base
base16-bytestring
bytestring
cardano-crypto
cardano-sl-binary
cardano-sl-binary-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-util
cardano-sl-util-test
containers
deepseq
ed25519
formatting
generic-arbitrary
hedgehog
hspec
pvss
QuickCheck
quickcheck-instances
random
serokell-util
text
time-units
universum
unordered-containers
vector
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - core";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-core-test" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytestring
, cardano-crypto
, cardano-sl-binary
, cardano-sl-binary-test
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-util
, cardano-sl-util-test
, containers
, data-default
, ed25519
, formatting
, generic-arbitrary
, hedgehog
, pvss
, QuickCheck
, quickcheck-instances
, random
, serokell-util
, stdenv
, text
, time-units
, universum
, unordered-containers
, vector
}:
mkDerivation {

pname = "cardano-sl-core-test";
version = "1.3.0";
src = ./../core/test;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytestring
cardano-crypto
cardano-sl-binary
cardano-sl-binary-test
cardano-sl-core
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-util
cardano-sl-util-test
containers
data-default
ed25519
formatting
generic-arbitrary
hedgehog
pvss
QuickCheck
quickcheck-instances
random
serokell-util
text
time-units
universum
unordered-containers
vector
];
doHaddock = false;
description = "Cardano SL - core functionality (tests)";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-crypto" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, cardano-crypto
, cardano-sl-binary
, cardano-sl-binary-test
, cardano-sl-util
, cardano-sl-util-test
, cborg
, cereal
, cpphs
, cryptonite
, cryptonite-openssl
, data-default
, ed25519
, formatting
, generic-arbitrary
, hashable
, hedgehog
, hspec
, lens
, memory
, mtl
, pvss
, QuickCheck
, quickcheck-instances
, reflection
, safe-exceptions
, safecopy
, scrypt
, serokell-util
, stdenv
, text
, universum
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-crypto";
version = "1.3.0";
src = ./../crypto;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
base
binary
bytestring
cardano-crypto
cardano-sl-binary
cardano-sl-util
cborg
cereal
cryptonite
cryptonite-openssl
data-default
ed25519
formatting
hashable
lens
memory
mtl
pvss
reflection
safe-exceptions
safecopy
scrypt
serokell-util
text
universum
unordered-containers
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
base
bytestring
cardano-crypto
cardano-sl-binary
cardano-sl-binary-test
cardano-sl-util
cardano-sl-util-test
cryptonite
formatting
generic-arbitrary
hedgehog
hspec
memory
QuickCheck
quickcheck-instances
text
universum
unordered-containers
];
doHaddock = false;
description = "Cardano SL - cryptography primitives";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-crypto-test" = callPackage
({
  mkDerivation
, base
, bytestring
, cardano-crypto
, cardano-sl-binary
, cardano-sl-binary-test
, cardano-sl-crypto
, cardano-sl-util
, cardano-sl-util-test
, cryptonite
, generic-arbitrary
, hedgehog
, memory
, QuickCheck
, quickcheck-instances
, stdenv
, universum
}:
mkDerivation {

pname = "cardano-sl-crypto-test";
version = "1.3.0";
src = ./../crypto/test;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
bytestring
cardano-crypto
cardano-sl-binary
cardano-sl-binary-test
cardano-sl-crypto
cardano-sl-util
cardano-sl-util-test
cryptonite
generic-arbitrary
hedgehog
memory
QuickCheck
quickcheck-instances
universum
];
doHaddock = false;
description = "Cardano SL - arbitrary instances for cardano-sl-crypto";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-db" = callPackage
({
  mkDerivation
, base
, bytestring
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-util
, concurrent-extra
, conduit
, containers
, cpphs
, data-default
, directory
, ether
, filepath
, formatting
, lens
, memory
, mtl
, resourcet
, rocksdb-haskell-ng
, serokell-util
, stdenv
, transformers
, universum
}:
mkDerivation {

pname = "cardano-sl-db";
version = "1.3.0";
src = ./../db;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
bytestring
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-util
concurrent-extra
conduit
containers
data-default
directory
ether
filepath
formatting
lens
memory
mtl
resourcet
rocksdb-haskell-ng
serokell-util
transformers
universum
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - basic DB interfaces";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-delegation" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, base
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-sinbin
, cardano-sl-util
, conduit
, cpphs
, ether
, formatting
, lens
, log-warper
, lrucache
, mmorph
, mtl
, reflection
, resourcet
, rocksdb-haskell-ng
, safe-exceptions
, serokell-util
, stdenv
, time
, transformers
, universum
, unliftio
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-delegation";
version = "1.3.0";
src = ./../delegation;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
base
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-lrc
cardano-sl-networking
cardano-sl-sinbin
cardano-sl-util
conduit
ether
formatting
lens
log-warper
lrucache
mmorph
mtl
reflection
resourcet
rocksdb-haskell-ng
safe-exceptions
serokell-util
time
transformers
universum
unliftio
unordered-containers
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - delegation";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-delegation-test" = callPackage
({
  mkDerivation
, base
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-delegation
, generic-arbitrary
, QuickCheck
, stdenv
, universum
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-delegation-test";
version = "1.3.0";
src = ./../delegation/test;
libraryHaskellDepends = [
base
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-delegation
generic-arbitrary
QuickCheck
universum
unordered-containers
];
doHaddock = false;
description = "Cardano SL - delegation (tests)";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-explorer" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cardano-sl
, cardano-sl-binary
, cardano-sl-binary-test
, cardano-sl-block
, cardano-sl-block-test
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-db
, cardano-sl-delegation
, cardano-sl-generator
, cardano-sl-infra
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-ssc
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-util
, conduit
, containers
, cpphs
, criterion
, cryptonite
, data-default
, engine-io
, engine-io-wai
, ether
, exceptions
, formatting
, free
, generic-arbitrary
, hspec
, http-types
, lens
, log-warper
, memory
, mmorph
, mtl
, optparse-applicative
, optparse-simple
, purescript-bridge
, QuickCheck
, resourcet
, rocksdb-haskell-ng
, safe-exceptions
, serokell-util
, servant
, servant-generic
, servant-multipart
, servant-server
, servant-swagger
, socket-io
, stdenv
, stm
, swagger2
, text
, time
, time-units
, transformers
, universum
, unliftio
, unordered-containers
, vector
, wai
, wai-cors
, wai-extra
, warp
, weigh
}:
mkDerivation {

pname = "cardano-sl-explorer";
version = "1.3.0";
src = ./../explorer;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
cardano-sl
cardano-sl-binary
cardano-sl-block
cardano-sl-block-test
cardano-sl-core
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-delegation
cardano-sl-generator
cardano-sl-infra
cardano-sl-lrc
cardano-sl-networking
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
conduit
containers
data-default
engine-io
engine-io-wai
ether
exceptions
formatting
free
http-types
lens
log-warper
memory
mmorph
mtl
QuickCheck
resourcet
rocksdb-haskell-ng
safe-exceptions
serokell-util
servant
servant-generic
servant-server
socket-io
stm
text
time
time-units
transformers
universum
unliftio
unordered-containers
vector
wai
wai-cors
wai-extra
warp
];
libraryToolDepends = [
cpphs
];
executableHaskellDepends = [
aeson
base
bytestring
cardano-sl
cardano-sl-core
cardano-sl-crypto
cardano-sl-infra
cardano-sl-networking
cardano-sl-util
lens
log-warper
optparse-applicative
optparse-simple
purescript-bridge
servant-multipart
servant-server
servant-swagger
swagger2
universum
];
executableToolDepends = [
cpphs
];
testHaskellDepends = [
base
bytestring
cardano-sl
cardano-sl-binary-test
cardano-sl-block-test
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-txp
cardano-sl-util
containers
cryptonite
engine-io
generic-arbitrary
hspec
lens
log-warper
QuickCheck
universum
warp
];
testToolDepends = [
cpphs
];
benchmarkHaskellDepends = [
base
cardano-sl
cardano-sl-core-test
criterion
QuickCheck
universum
weigh
];
benchmarkToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano explorer";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-generator" = callPackage
({
  mkDerivation
, base
, bytestring
, cardano-sl
, cardano-sl-binary
, cardano-sl-block
, cardano-sl-block-test
, cardano-sl-client
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-db
, cardano-sl-delegation
, cardano-sl-delegation-test
, cardano-sl-infra
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-ssc
, cardano-sl-ssc-test
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-util
, cardano-sl-util-test
, containers
, cpphs
, cryptonite
, data-default
, ether
, exceptions
, formatting
, hspec
, lens
, log-warper
, monad-control
, MonadRandom
, QuickCheck
, random
, safe-exceptions
, serokell-util
, stdenv
, text
, time-units
, transformers-base
, universum
, unliftio
, unordered-containers
, vector
}:
mkDerivation {

pname = "cardano-sl-generator";
version = "1.3.0";
src = ./../generator;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
bytestring
cardano-sl
cardano-sl-block
cardano-sl-client
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-delegation
cardano-sl-infra
cardano-sl-lrc
cardano-sl-networking
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
containers
cryptonite
data-default
ether
exceptions
formatting
lens
log-warper
monad-control
MonadRandom
QuickCheck
random
safe-exceptions
serokell-util
text
time-units
transformers-base
universum
unliftio
unordered-containers
vector
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
base
bytestring
cardano-sl
cardano-sl-binary
cardano-sl-block
cardano-sl-block-test
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-delegation
cardano-sl-delegation-test
cardano-sl-lrc
cardano-sl-ssc
cardano-sl-ssc-test
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cardano-sl-util-test
data-default
formatting
hspec
lens
MonadRandom
QuickCheck
safe-exceptions
serokell-util
universum
unordered-containers
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - arbitrary data generation";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-infra" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, async
, base
, base64-bytestring
, bytestring
, cardano-report-server
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-networking
, cardano-sl-sinbin
, cardano-sl-ssc
, cardano-sl-util
, clock
, containers
, cpphs
, directory
, dns
, ekg-core
, ekg-statsd
, ekg-wai
, ether
, exceptions
, formatting
, hashable
, hspec
, iproute
, kademlia
, lens
, log-warper
, mtl
, network-info
, network-transport
, network-transport-tcp
, optparse-applicative
, parsec
, QuickCheck
, safe-exceptions
, serokell-util
, stdenv
, stm
, tagged
, text
, time-units
, universum
, unix
, unordered-containers
, yaml
}:
mkDerivation {

pname = "cardano-sl-infra";
version = "1.3.0";
src = ./../infra;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
async
base
base64-bytestring
bytestring
cardano-report-server
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-networking
cardano-sl-sinbin
cardano-sl-ssc
cardano-sl-util
clock
containers
directory
dns
ekg-core
ekg-statsd
ekg-wai
ether
exceptions
formatting
hashable
iproute
kademlia
lens
log-warper
mtl
network-info
network-transport
network-transport-tcp
optparse-applicative
parsec
safe-exceptions
serokell-util
stm
tagged
text
time-units
universum
unix
unordered-containers
yaml
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
async
base
cardano-sl-crypto-test
containers
hspec
QuickCheck
];
doHaddock = false;
description = "Cardano SL - infrastructural";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-infra-test" = callPackage
({
  mkDerivation
, base
, bytestring
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-infra
, cardano-sl-sinbin
, cardano-sl-ssc
, cardano-sl-ssc-test
, cardano-sl-update-test
, cardano-sl-util-test
, containers
, generic-arbitrary
, hedgehog
, kademlia
, QuickCheck
, stdenv
, universum
}:
mkDerivation {

pname = "cardano-sl-infra-test";
version = "1.3.0";
src = ./../infra/test;
libraryHaskellDepends = [
base
bytestring
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-infra
cardano-sl-sinbin
cardano-sl-ssc
cardano-sl-ssc-test
cardano-sl-update-test
cardano-sl-util-test
containers
generic-arbitrary
hedgehog
kademlia
QuickCheck
universum
];
doHaddock = false;
description = "Cardano SL - generators for cardano-sl-infra";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-lrc" = callPackage
({
  mkDerivation
, base
, bytestring
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-networking
, cardano-sl-txp
, cardano-sl-util
, cardano-sl-util-test
, conduit
, containers
, cpphs
, ether
, formatting
, hspec
, lens
, log-warper
, QuickCheck
, rocksdb-haskell-ng
, stdenv
, universum
, unliftio
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-lrc";
version = "1.3.0";
src = ./../lrc;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
bytestring
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-networking
cardano-sl-txp
cardano-sl-util
conduit
ether
formatting
lens
log-warper
rocksdb-haskell-ng
universum
unliftio
unordered-containers
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
base
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-util-test
containers
hspec
QuickCheck
universum
];
doHaddock = false;
description = "Cardano SL - Leaders and Richmen computation";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-lrc-test" = callPackage
({
  mkDerivation
, base
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-lrc
, cpphs
, generic-arbitrary
, QuickCheck
, reflection
, stdenv
, universum
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-lrc-test";
version = "1.3.0";
src = ./../lrc/test;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
base
cardano-sl-core
cardano-sl-core-test
cardano-sl-lrc
generic-arbitrary
QuickCheck
reflection
universum
unordered-containers
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Testing modules for the Cardano SL lrc package";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-networking" = callPackage
({
  mkDerivation
, aeson
, async
, attoparsec
, base
, binary
, bytestring
, cardano-sl-core
, cardano-sl-util
, containers
, contravariant
, cryptonite
, ekg-core
, exceptions
, formatting
, hashable
, hspec
, hspec-core
, kademlia
, lens
, log-warper
, monad-control
, mtl
, mwc-random
, network
, network-transport
, network-transport-inmemory
, network-transport-tcp
, QuickCheck
, random
, resourcet
, safe-exceptions
, serokell-util
, statistics
, stdenv
, stm
, text
, time
, time-units
, universum
, vector
}:
mkDerivation {

pname = "cardano-sl-networking";
version = "1.3.0";
src = ./../networking;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
attoparsec
base
binary
bytestring
cardano-sl-core
cardano-sl-util
containers
cryptonite
ekg-core
exceptions
formatting
hashable
kademlia
lens
log-warper
monad-control
mtl
network
network-transport
network-transport-tcp
random
resourcet
safe-exceptions
stm
text
time
time-units
universum
];
executableHaskellDepends = [
async
base
binary
bytestring
cardano-sl-util
containers
contravariant
network-transport
network-transport-tcp
random
];
testHaskellDepends = [
async
base
binary
bytestring
cardano-sl-util
containers
hspec
hspec-core
lens
log-warper
mtl
network-transport
network-transport-inmemory
network-transport-tcp
QuickCheck
random
serokell-util
stm
time-units
];
benchmarkHaskellDepends = [
async
base
mwc-random
network-transport
network-transport-tcp
statistics
stm
time
time-units
vector
];
doHaddock = false;
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-node" = callPackage
({
  mkDerivation
, base
, cardano-sl
, cardano-sl-crypto
, cardano-sl-infra
, cardano-sl-networking
, cardano-sl-ssc
, cardano-sl-util
, cpphs
, log-warper
, stdenv
, universum
}:
mkDerivation {

pname = "cardano-sl-node";
version = "1.3.0";
src = ./../node;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
cardano-sl
cardano-sl-crypto
cardano-sl-infra
cardano-sl-networking
cardano-sl-ssc
cardano-sl-util
log-warper
universum
];
executableToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL simple node executable";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-node-ipc" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, Cabal
, cardano-sl-infra
, log-warper
, mtl
, stdenv
, universum
}:
mkDerivation {

pname = "cardano-sl-node-ipc";
version = "1.3.0";
src = ./../node-ipc;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
base
binary
bytestring
Cabal
cardano-sl-infra
log-warper
mtl
universum
];
doHaddock = false;
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-sinbin" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, async
, base
, base64-bytestring
, bytestring
, cardano-report-server
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-networking
, cardano-sl-util
, clock
, conduit
, containers
, cpphs
, data-default
, directory
, dns
, ekg-core
, ekg-statsd
, ekg-wai
, ether
, exceptions
, filepath
, formatting
, hashable
, http-client
, http-client-tls
, iproute
, kademlia
, lens
, log-warper
, lzma-conduit
, mtl
, network-info
, network-transport
, network-transport-tcp
, optparse-applicative
, parsec
, reflection
, safe-exceptions
, serokell-util
, stdenv
, stm
, tagged
, tar
, template-haskell
, text
, time
, time-units
, transformers
, universum
, unordered-containers
, yaml
}:
mkDerivation {

pname = "cardano-sl-sinbin";
version = "1.3.0";
src = ./../sinbin;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
async
base
base64-bytestring
bytestring
cardano-report-server
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-networking
cardano-sl-util
clock
conduit
containers
data-default
directory
dns
ekg-core
ekg-statsd
ekg-wai
ether
exceptions
filepath
formatting
hashable
http-client
http-client-tls
iproute
kademlia
lens
log-warper
lzma-conduit
mtl
network-info
network-transport
network-transport-tcp
optparse-applicative
parsec
reflection
safe-exceptions
serokell-util
stm
tagged
tar
template-haskell
text
time
time-units
transformers
universum
unordered-containers
yaml
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - sinbin";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-ssc" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, array
, base
, bytestring
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-sinbin
, cardano-sl-util
, containers
, cpphs
, cryptonite
, data-default
, ether
, exceptions
, formatting
, lens
, log-warper
, memory
, mmorph
, mono-traversable
, mtl
, parsec
, reflection
, rocksdb-haskell-ng
, serokell-util
, stdenv
, stm
, tagged
, text
, time-units
, transformers
, universum
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-ssc";
version = "1.3.0";
src = ./../ssc;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
array
base
bytestring
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-lrc
cardano-sl-networking
cardano-sl-sinbin
cardano-sl-util
containers
cryptonite
data-default
ether
exceptions
formatting
lens
log-warper
memory
mmorph
mono-traversable
mtl
parsec
reflection
rocksdb-haskell-ng
serokell-util
stm
tagged
text
time-units
transformers
universum
unordered-containers
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - shared seed computation";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-ssc-test" = callPackage
({
  mkDerivation
, base
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-ssc
, cardano-sl-util-test
, generic-arbitrary
, QuickCheck
, stdenv
, universum
}:
mkDerivation {

pname = "cardano-sl-ssc-test";
version = "1.3.0";
src = ./../ssc/test;
libraryHaskellDepends = [
base
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-ssc
cardano-sl-util-test
generic-arbitrary
QuickCheck
universum
];
doHaddock = false;
description = "Cardano SL - shared seed computation (tests)";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-tools" = callPackage
({
  mkDerivation
, acid-state-exts
, aeson
, aeson-options
, ansi-terminal
, ansi-wl-pprint
, asn1-encoding
, asn1-types
, async
, base
, base58-bytestring
, base64-bytestring
, bytestring
, canonical-json
, cardano-report-server
, cardano-sl
, cardano-sl-binary
, cardano-sl-block
, cardano-sl-client
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-infra
, cardano-sl-networking
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-util
, cardano-sl-wallet
, containers
, cpphs
, cryptonite
, data-default
, data-default-class
, directory
, filepath
, formatting
, Glob
, hourglass
, hspec
, lens
, lifted-async
, log-warper
, mtl
, neat-interpolation
, network-transport-tcp
, optparse-applicative
, optparse-generic
, parsers
, process
, QuickCheck
, safe-exceptions
, serokell-util
, silently
, stdenv
, stm
, string-conv
, tabl
, tar
, temporary
, text
, time
, time-units
, trifecta
, universum
, unix
, unix-compat
, unordered-containers
, x509
, x509-store
, x509-validation
, yaml
}:
mkDerivation {

pname = "cardano-sl-tools";
version = "1.3.0";
src = ./../tools;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
directory
filepath
parsers
text
trifecta
universum
];
executableHaskellDepends = [
acid-state-exts
aeson
aeson-options
ansi-terminal
ansi-wl-pprint
asn1-encoding
asn1-types
async
base
base58-bytestring
base64-bytestring
bytestring
canonical-json
cardano-report-server
cardano-sl
cardano-sl-binary
cardano-sl-block
cardano-sl-client
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-db
cardano-sl-infra
cardano-sl-networking
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cardano-sl-wallet
containers
cryptonite
data-default
data-default-class
directory
filepath
formatting
Glob
hourglass
lens
lifted-async
log-warper
mtl
neat-interpolation
network-transport-tcp
optparse-applicative
optparse-generic
process
QuickCheck
safe-exceptions
serokell-util
silently
stm
string-conv
tabl
tar
text
time
time-units
universum
unix
unix-compat
unordered-containers
x509
x509-store
x509-validation
yaml
];
executableToolDepends = [
cpphs
];
testHaskellDepends = [
aeson
base
directory
hspec
temporary
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - Tools";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-txp" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, base
, bytestring
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-networking
, cardano-sl-sinbin
, cardano-sl-util
, cardano-sl-util-test
, conduit
, containers
, cpphs
, data-default
, ekg-core
, ether
, exceptions
, fmt
, formatting
, free
, hashable
, hspec
, lens
, log-warper
, memory
, mmorph
, mtl
, neat-interpolation
, plutus-prototype
, QuickCheck
, reflection
, resourcet
, rocksdb-haskell-ng
, safe-exceptions
, serokell-util
, stdenv
, stm
, template-haskell
, text
, transformers
, universum
, unliftio
, unordered-containers
, vector
}:
mkDerivation {

pname = "cardano-sl-txp";
version = "1.3.0";
src = ./../txp;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
base
bytestring
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-networking
cardano-sl-sinbin
cardano-sl-util
conduit
containers
data-default
ekg-core
ether
exceptions
fmt
formatting
free
hashable
lens
log-warper
memory
mmorph
mtl
neat-interpolation
plutus-prototype
reflection
resourcet
rocksdb-haskell-ng
safe-exceptions
serokell-util
stm
template-haskell
text
transformers
universum
unliftio
unordered-containers
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
base
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-util
cardano-sl-util-test
containers
fmt
formatting
hspec
lens
mtl
QuickCheck
serokell-util
universum
unordered-containers
vector
];
doHaddock = false;
description = "Cardano SL - transaction processing";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-txp-test" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "cardano-sl-txp-test";
version = "1.3.0";
src = ./../txp/test;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
doHaddock = false;
description = "Cardano SL - arbitrary instances for cardano-sl-txp";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-update" = callPackage
({
  mkDerivation
, aeson
, aeson-options
, base
, bytestring
, Cabal
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-lrc
, cardano-sl-sinbin
, cardano-sl-util
, conduit
, containers
, cpphs
, data-default
, deepseq
, ether
, exceptions
, formatting
, hashable
, lens
, log-warper
, mtl
, reflection
, resourcet
, rocksdb-haskell-ng
, serokell-util
, stdenv
, stm
, tagged
, time-units
, transformers
, universum
, unliftio
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-update";
version = "1.3.0";
src = ./../update;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
aeson-options
base
bytestring
Cabal
cardano-sl-binary
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-lrc
cardano-sl-sinbin
cardano-sl-util
conduit
containers
data-default
deepseq
ether
exceptions
formatting
hashable
lens
log-warper
mtl
reflection
resourcet
rocksdb-haskell-ng
serokell-util
stm
tagged
time-units
transformers
universum
unliftio
unordered-containers
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - update";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-update-test" = callPackage
({
  mkDerivation
, base
, cardano-sl-binary
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-update
, cardano-sl-util-test
, generic-arbitrary
, QuickCheck
, stdenv
, universum
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-update-test";
version = "1.3.0";
src = ./../update/test;
libraryHaskellDepends = [
base
cardano-sl-binary
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-update
cardano-sl-util-test
generic-arbitrary
QuickCheck
universum
unordered-containers
];
doHaddock = false;
description = "Cardano SL - arbitrary instances for cardano-sl-update";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-util" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, cborg
, cereal
, concurrent-extra
, containers
, contravariant
, cpphs
, cryptonite
, deepseq
, directory
, ether
, exceptions
, file-embed
, filepath
, formatting
, hashable
, hedgehog
, hspec
, lens
, log-warper
, lrucache
, megaparsec
, mtl
, optparse-applicative
, parsec
, pretty-show
, process
, QuickCheck
, quickcheck-instances
, reflection
, resourcet
, safe-exceptions
, serokell-util
, stdenv
, stm
, tagged
, template-haskell
, text
, text-format
, time
, time-units
, transformers
, transformers-lift
, universum
, unliftio-core
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-util";
version = "1.3.0";
src = ./../util;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
base
cborg
cereal
concurrent-extra
containers
contravariant
cryptonite
deepseq
directory
ether
exceptions
file-embed
filepath
formatting
hashable
lens
log-warper
lrucache
megaparsec
mtl
optparse-applicative
parsec
process
reflection
resourcet
safe-exceptions
serokell-util
stm
tagged
template-haskell
text
time
time-units
transformers
transformers-lift
universum
unliftio-core
unordered-containers
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
aeson
async
base
bytestring
directory
file-embed
filepath
formatting
hedgehog
hspec
pretty-show
QuickCheck
quickcheck-instances
stm
template-haskell
text
text-format
time
time-units
universum
unordered-containers
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - general utilities";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-util-test" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base16-bytestring
, bytestring
, cardano-sl-util
, cpphs
, cryptonite
, directory
, file-embed
, filepath
, formatting
, hedgehog
, hspec
, mtl
, pretty-show
, QuickCheck
, quickcheck-instances
, stdenv
, tagged
, template-haskell
, text
, text-format
, time-units
, universum
, unordered-containers
}:
mkDerivation {

pname = "cardano-sl-util-test";
version = "1.3.0";
src = ./../util/test;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
aeson
attoparsec
base
base16-bytestring
bytestring
cardano-sl-util
cryptonite
directory
file-embed
filepath
formatting
hedgehog
hspec
mtl
pretty-show
QuickCheck
quickcheck-instances
tagged
template-haskell
text
text-format
time-units
universum
unordered-containers
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - general utilities (tests)";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-wallet" = callPackage
({
  mkDerivation
, acid-state
, acid-state-exts
, aeson
, async
, base
, base58-bytestring
, basement
, bytestring
, cardano-crypto
, cardano-sl
, cardano-sl-block
, cardano-sl-client
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-crypto-test
, cardano-sl-db
, cardano-sl-delegation
, cardano-sl-generator
, cardano-sl-infra
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-node-ipc
, cardano-sl-ssc
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-util
, cardano-sl-util-test
, cardano-sl-wallet-test
, containers
, cpphs
, cryptonite
, data-default
, deepseq
, directory
, dlist
, ekg-core
, ether
, exceptions
, filepath
, formatting
, hashable
, hspec
, lens
, log-warper
, memory
, monad-control
, MonadRandom
, mtl
, QuickCheck
, random
, reflection
, safe-exceptions
, safecopy
, semver
, serokell-util
, servant
, servant-generic
, servant-multipart
, servant-server
, servant-swagger
, servant-swagger-ui
, stdenv
, stm
, swagger2
, text
, time
, time-units
, transformers
, universum
, unix
, unliftio
, unordered-containers
, wai
, wai-websockets
, warp
, websockets
}:
mkDerivation {

pname = "cardano-sl-wallet";
version = "1.3.0";
src = ./../wallet;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
libraryHaskellDepends = [
acid-state
acid-state-exts
aeson
async
base
base58-bytestring
basement
bytestring
cardano-crypto
cardano-sl
cardano-sl-block
cardano-sl-client
cardano-sl-core
cardano-sl-crypto
cardano-sl-db
cardano-sl-delegation
cardano-sl-generator
cardano-sl-infra
cardano-sl-lrc
cardano-sl-networking
cardano-sl-node-ipc
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
containers
cryptonite
data-default
directory
dlist
ekg-core
ether
exceptions
filepath
formatting
hashable
hspec
lens
log-warper
memory
monad-control
mtl
QuickCheck
random
reflection
safe-exceptions
safecopy
semver
serokell-util
servant
servant-generic
servant-multipart
servant-server
servant-swagger
servant-swagger-ui
stm
swagger2
text
time
time-units
transformers
universum
unix
unliftio
unordered-containers
wai
wai-websockets
warp
websockets
];
libraryToolDepends = [
cpphs
];
testHaskellDepends = [
aeson
base
bytestring
cardano-crypto
cardano-sl
cardano-sl-block
cardano-sl-client
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-crypto-test
cardano-sl-db
cardano-sl-delegation
cardano-sl-generator
cardano-sl-infra
cardano-sl-lrc
cardano-sl-networking
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cardano-sl-util-test
cardano-sl-wallet-test
containers
data-default
deepseq
ekg-core
ether
formatting
hspec
lens
log-warper
MonadRandom
mtl
QuickCheck
safe-exceptions
safecopy
serokell-util
servant-server
stm
universum
unordered-containers
];
testToolDepends = [
cpphs
];
doHaddock = false;
description = "Cardano SL - wallet";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-wallet-new" = callPackage
({
  mkDerivation
, acid-state
, aeson
, aeson-diff
, aeson-options
, aeson-pretty
, async
, base
, beam-core
, beam-migrate
, beam-sqlite
, bytestring
, cardano-crypto
, cardano-sl
, cardano-sl-block
, cardano-sl-client
, cardano-sl-core
, cardano-sl-core-test
, cardano-sl-crypto
, cardano-sl-db
, cardano-sl-delegation
, cardano-sl-infra
, cardano-sl-lrc
, cardano-sl-networking
, cardano-sl-node-ipc
, cardano-sl-ssc
, cardano-sl-txp
, cardano-sl-update
, cardano-sl-util
, cardano-sl-util-test
, cardano-sl-wallet
, cardano-sl-wallet-test
, cassava
, conduit
, connection
, constraints
, containers
, cryptonite
, data-default
, data-default-class
, directory
, exceptions
, filepath
, formatting
, gauge
, generics-sop
, hspec
, http-api-data
, http-client
, http-client-tls
, http-types
, ixset-typed
, json-sop
, lens
, log-warper
, memory
, mtl
, mwc-random
, neat-interpolation
, network-transport
, normaldistribution
, optparse-applicative
, pretty-show
, QuickCheck
, quickcheck-instances
, random
, reflection
, safe-exceptions
, safecopy
, serokell-util
, servant
, servant-client
, servant-client-core
, servant-quickcheck
, servant-server
, servant-swagger
, servant-swagger-ui
, sqlite-simple
, sqlite-simple-errors
, stdenv
, stm
, string-conv
, swagger2
, tabl
, text
, time
, time-units
, tls
, transformers
, universum
, unliftio
, unliftio-core
, unordered-containers
, vector
, wai
, wai-cors
, warp
, x509
, x509-store
, yaml
}:
mkDerivation {

pname = "cardano-sl-wallet-new";
version = "1.3.0";
src = ./../wallet-new;
configureFlags = [
"--ghc-option=-fwarn-redundant-constraints"
"--ghc-option=-Wcompat"
"--ghc-option=-Werror"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
acid-state
aeson
aeson-options
aeson-pretty
async
base
beam-core
beam-migrate
beam-sqlite
bytestring
cardano-crypto
cardano-sl
cardano-sl-block
cardano-sl-client
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-db
cardano-sl-infra
cardano-sl-networking
cardano-sl-node-ipc
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cardano-sl-wallet
cardano-sl-wallet-test
conduit
connection
containers
cryptonite
data-default
data-default-class
directory
exceptions
formatting
generics-sop
http-api-data
http-client
http-client-tls
http-types
ixset-typed
json-sop
lens
log-warper
memory
mtl
mwc-random
neat-interpolation
network-transport
optparse-applicative
QuickCheck
reflection
safe-exceptions
safecopy
serokell-util
servant
servant-client
servant-client-core
servant-server
servant-swagger
servant-swagger-ui
sqlite-simple
sqlite-simple-errors
swagger2
text
time
time-units
tls
transformers
universum
unliftio
unliftio-core
unordered-containers
vector
wai
wai-cors
warp
x509
x509-store
];
executableHaskellDepends = [
aeson
aeson-diff
aeson-pretty
base
bytestring
cardano-sl
cardano-sl-core
cardano-sl-crypto
cardano-sl-infra
cardano-sl-networking
cardano-sl-ssc
cardano-sl-txp
cardano-sl-util
cardano-sl-wallet
containers
exceptions
formatting
hspec
http-client
http-types
lens
log-warper
mtl
optparse-applicative
pretty-show
QuickCheck
servant
servant-client
servant-quickcheck
servant-server
stm
swagger2
text
universum
x509-store
];
testHaskellDepends = [
acid-state
aeson
base
bytestring
cardano-sl
cardano-sl-block
cardano-sl-client
cardano-sl-core
cardano-sl-core-test
cardano-sl-crypto
cardano-sl-db
cardano-sl-delegation
cardano-sl-lrc
cardano-sl-ssc
cardano-sl-txp
cardano-sl-update
cardano-sl-util
cardano-sl-util-test
cardano-sl-wallet
conduit
constraints
containers
cryptonite
data-default
directory
filepath
formatting
hspec
ixset-typed
lens
log-warper
mtl
normaldistribution
optparse-applicative
QuickCheck
quickcheck-instances
random
reflection
safe-exceptions
serokell-util
servant
servant-server
servant-swagger
string-conv
swagger2
tabl
text
time
universum
unordered-containers
vector
];
benchmarkHaskellDepends = [
aeson
async
base
bytestring
cardano-sl-client
cardano-sl-core
cardano-sl-wallet
cassava
connection
data-default
gauge
http-client
http-client-tls
optparse-applicative
random
servant
servant-client
servant-client-core
text
time
tls
universum
vector
yaml
];
doHaddock = false;
homepage = "https://github.com/input-output-hk/cardano-sl/#readme";
description = "The Wallet Backend for a Cardano node";
license = stdenv.lib.licenses.mit;

}) {};
"cardano-sl-wallet-test" = callPackage
({
  mkDerivation
, base
, bytestring
, cardano-sl-core-test
, cardano-sl-wallet
, QuickCheck
, serokell-util
, stdenv
, universum
}:
mkDerivation {

pname = "cardano-sl-wallet-test";
version = "1.3.0";
src = ./../wallet/test;
libraryHaskellDepends = [
base
bytestring
cardano-sl-core-test
cardano-sl-wallet
QuickCheck
serokell-util
universum
];
doHaddock = false;
description = "Cardano SL - wallet (Arbitrary instances)";
license = stdenv.lib.licenses.mit;

}) {};
"carray" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, ix-shapable
, QuickCheck
, stdenv
, syb
}:
mkDerivation {

pname = "carray";
version = "0.1.6.8";
sha256 = "8f1967d54c7cf9680481c6f630eafa66f6d916b93c98f3b3c47449f682f11613";
libraryHaskellDepends = [
array
base
binary
bytestring
ix-shapable
QuickCheck
syb
];
doHaddock = false;
doCheck = false;
description = "A C-compatible array library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cartel" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, optparse-applicative
, pretty-show
, process
, split
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "cartel";
version = "0.18.0.2";
sha256 = "7b27aa2cbeb73b1d5bf93214f290275025c3231fee23b32d80de104ec76ec270";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
optparse-applicative
pretty-show
process
split
time
transformers
];
executableHaskellDepends = [
base
directory
filepath
optparse-applicative
pretty-show
process
split
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/cartel";
description = "Specify Cabal files in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"case-insensitive" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, hashable
, stdenv
, text
}:
mkDerivation {

pname = "case-insensitive";
version = "1.2.0.11";
sha256 = "a7ce6d17e50caaa0f19ad8e67361499022860554c521b1e57993759da3eb37e3";
libraryHaskellDepends = [
base
bytestring
deepseq
hashable
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/case-insensitive";
description = "Case insensitive string comparison";
license = stdenv.lib.licenses.bsd3;

}) {};
"cased" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "cased";
version = "0.1.0.0";
sha256 = "8394e6705ed83152875e1de1c51c54c26b04a2359919d8958d66997b2b60ad23";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/cased";
description = "Track string casing in its type";
license = stdenv.lib.licenses.mit;

}) {};
"cases" = callPackage
({
  mkDerivation
, attoparsec
, base-prelude
, loch-th
, stdenv
, text
}:
mkDerivation {

pname = "cases";
version = "0.1.3.2";
sha256 = "9ecf632f7751aac2ed7ec93407f9499237316f2eb50f331bb4969abf3359a8a9";
libraryHaskellDepends = [
attoparsec
base-prelude
loch-th
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/cases";
description = "A converter for spinal, snake and camel cases";
license = stdenv.lib.licenses.mit;

}) {};
"casing" = callPackage
({
  mkDerivation
, base
, split
, stdenv
}:
mkDerivation {

pname = "casing";
version = "0.1.4.0";
sha256 = "8e8a3631ef5823ae53dfeb7497ad4856c6758e3e380ff164f6a261f41685f6d7";
libraryHaskellDepends = [
base
split
];
doHaddock = false;
doCheck = false;
description = "Convert between various source code casing conventions";
license = stdenv.lib.licenses.mit;

}) {};
"cassava" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, bytestring
, containers
, deepseq
, hashable
, Only
, scientific
, stdenv
, text
, text-short
, unordered-containers
, vector
}:
mkDerivation {

pname = "cassava";
version = "0.5.1.0";
sha256 = "762c8aaea2cdad61f52bad1b9f1f3b32764b4b6da03371aba6e5017f69614277";
configureFlags = [
"-f-bytestring--lt-0_10_4"
];
libraryHaskellDepends = [
array
attoparsec
base
bytestring
containers
deepseq
hashable
Only
scientific
text
text-short
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cassava";
description = "A CSV parsing and encoding library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cassava-conduit" = callPackage
({
  mkDerivation
, array
, base
, bifunctors
, bytestring
, cassava
, conduit
, containers
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "cassava-conduit";
version = "0.4.0.2";
sha256 = "3fbec93078a468fbcf45290e36b97ad159a5374e588846ae9643c3486a480a4f";
libraryHaskellDepends = [
array
base
bifunctors
bytestring
cassava
conduit
containers
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/domdere/cassava-conduit";
description = "Conduit interface for cassava package";
license = stdenv.lib.licenses.bsd3;

}) {};
"cassava-records" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, cassava
, foldl
, stdenv
, template-haskell
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "cassava-records";
version = "0.1.0.4";
sha256 = "11f832c11125bd7a73b57941284d9aeb7f1e7572004da7e37311b34d3366af8d";
libraryHaskellDepends = [
attoparsec
base
bytestring
cassava
foldl
template-haskell
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/gdevanla/cassava-records#readme";
description = "Auto-generation of records data type";
license = stdenv.lib.licenses.bsd3;

}) {};
"cassette" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "cassette";
version = "0.1.0";
sha256 = "fd40b3fd44eebce549216f3a4c1852f5b109edddfff3d6d7e243b64574981613";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A combinator library for simultaneously defining parsers and pretty printers";
license = stdenv.lib.licenses.bsd3;

}) {};
"cast" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "cast";
version = "0.1.0.2";
sha256 = "24d545e5974436b6e3ee9dfda7ed68218c9f698103adae676a60860d90d7bc91";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-patterns/cast#readme";
description = "Abstact cast pattern";
license = stdenv.lib.licenses.bsd3;

}) {};
"cayley-client" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, binary
, bytestring
, exceptions
, http-client
, http-conduit
, lens
, lens-aeson
, mtl
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "cayley-client";
version = "0.4.6";
sha256 = "6603953227f530b7996898c8f5c77a6fecf8cf6a04d5d558a703ad83fe32cef3";
libraryHaskellDepends = [
aeson
attoparsec
base
binary
bytestring
exceptions
http-client
http-conduit
lens
lens-aeson
mtl
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/cayley-client";
description = "A Haskell client for the Cayley graph database";
license = stdenv.lib.licenses.bsd3;

}) {};
"cborg" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, fetchgit
, ghc-prim
, half
, integer-gmp
, primitive
, stdenv
, text
}:
mkDerivation {

pname = "cborg";
version = "0.2.0.0";
src = fetchgit {

url = "https://github.com/well-typed/cborg";
sha256 = "1w06annk6nm01brd60hzl15143cvjvsaam9lhwzpmppyvgb0cdyz";
rev = "3d274c14ca3077c3a081ba7ad57c5182da65c8c1";

};
postUnpack = "sourceRoot+=/cborg; echo source root reset to $sourceRoot";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
ghc-prim
half
integer-gmp
primitive
text
];
doHaddock = false;
doCheck = false;
description = "Concise Binary Object Representation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cereal" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "cereal";
version = "0.5.5.0";
sha256 = "0b97320ffbfa6df2e5679022215dbd0fe6e3b5ae8428c2ff4310d9e1acf16822";
libraryHaskellDepends = [
array
base
bytestring
containers
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GaloisInc/cereal";
description = "A binary serialization library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cereal-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, conduit
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "cereal-conduit";
version = "0.8.0";
sha256 = "d95c4518a9984feacfd811c64be993705bff74c1f2daa00b4687bbb79f3a39eb";
revision = "1";
editedCabalFile = "1imyl3g2bni8bc6kajr857xh94fscphksj3286pxfpa8yp9vqqpc";
libraryHaskellDepends = [
base
bytestring
cereal
conduit
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/conduit";
description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
license = stdenv.lib.licenses.bsd3;

}) {};
"cereal-text" = callPackage
({
  mkDerivation
, base
, cereal
, stdenv
, text
}:
mkDerivation {

pname = "cereal-text";
version = "0.1.0.2";
sha256 = "3c7a15f4681fa53b66dcd5165f31f56ff9751a752ac5123ecc5bcf5c3ea0354c";
libraryHaskellDepends = [
base
cereal
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ulikoehler/cereal-text";
description = "Data.Text instances for the cereal serialization library";
license = stdenv.lib.licenses.asl20;

}) {};
"cereal-time" = callPackage
({
  mkDerivation
, base
, cereal
, stdenv
, time
}:
mkDerivation {

pname = "cereal-time";
version = "0.1.0.0";
sha256 = "bec6d5103ec45bee242825da4cf695f574f101bb1d48778bf7823175dfa43cb2";
libraryHaskellDepends = [
base
cereal
time
];
doHaddock = false;
doCheck = false;
description = "Serialize instances for types from `time` package";
license = stdenv.lib.licenses.bsd3;

}) {};
"cereal-vector" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, stdenv
, vector
}:
mkDerivation {

pname = "cereal-vector";
version = "0.2.0.1";
sha256 = "ff0685a6c39e7aae32f8b4165e2ae06f284c867298ad4f7b776c1c1b2859f933";
libraryHaskellDepends = [
base
bytestring
cereal
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acfoltzer/cereal-vector";
description = "Serialize instances for Data.Vector types.";
license = stdenv.lib.licenses.bsd3;

}) {};
"charset" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, semigroups
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "charset";
version = "0.3.7.1";
sha256 = "3d415d2883bd7bf0cc9f038e8323f19c71e07dd12a3c712f449ccb8b4daac0be";
libraryHaskellDepends = [
array
base
bytestring
containers
semigroups
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/charset";
description = "Fast unicode character sets based on complemented PATRICIA tries";
license = stdenv.lib.licenses.bsd3;

}) {};
"charsetdetect-ae" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "charsetdetect-ae";
version = "1.1.0.4";
sha256 = "9bbaa48d3026abdd403ed59ee5f41978b2f5be6d0dc545e142c86d5aa790410c";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/charsetdetect-ae";
description = "Character set detection using Mozilla's Universal Character Set Detector";
license = "LGPL";

}) {};
"chaselev-deque" = callPackage
({
  mkDerivation
, abstract-deque
, array
, atomic-primops
, base
, ghc-prim
, stdenv
, transformers
, vector
}:
mkDerivation {

pname = "chaselev-deque";
version = "0.5.0.5";
sha256 = "4d58f8d56228e9f5bea2a65717dea65106323cb5ead9b5f39f904dac5c0043f4";
libraryHaskellDepends = [
abstract-deque
array
atomic-primops
base
ghc-prim
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
description = "Chase & Lev work-stealing lock-free double-ended queues (deques)";
license = stdenv.lib.licenses.bsd3;

}) {};
"chatwork" = callPackage
({
  mkDerivation
, aeson
, aeson-casing
, base
, bytestring
, connection
, data-default-class
, http-api-data
, http-client
, http-client-tls
, http-types
, req
, stdenv
, text
}:
mkDerivation {

pname = "chatwork";
version = "0.1.3.3";
sha256 = "35b4e94eccf8a46c2a0c24cfdb75294c1aaf2495c3ddd056046b8db3c43f5495";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-casing
base
bytestring
connection
data-default-class
http-api-data
http-client
http-client-tls
http-types
req
text
];
executableHaskellDepends = [
aeson
aeson-casing
base
bytestring
connection
data-default-class
http-api-data
http-client
http-client-tls
http-types
req
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/matsubara0507/chatwork#readme";
description = "The ChatWork API in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"cheapskate" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, containers
, data-default
, deepseq
, mtl
, stdenv
, syb
, text
, uniplate
, xss-sanitize
}:
mkDerivation {

pname = "cheapskate";
version = "0.1.1";
sha256 = "621041bf50cb9d94bf6a4eb90a038e0b0a6cb9794802f985fe126a73e08938c2";
revision = "1";
editedCabalFile = "1zrbp211ciia8j1br6krbxbqsj69kmx0rgkbvbpxdklmbgpfam3b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-html
containers
data-default
deepseq
mtl
syb
text
uniplate
xss-sanitize
];
executableHaskellDepends = [
base
blaze-html
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/cheapskate";
description = "Experimental markdown processor";
license = stdenv.lib.licenses.bsd3;

}) {};
"cheapskate-highlight" = callPackage
({
  mkDerivation
, base
, blaze-html
, cheapskate
, highlighting-kate
, stdenv
, text
}:
mkDerivation {

pname = "cheapskate-highlight";
version = "0.1.0.0";
sha256 = "5af7afb26b4ea80952963b44db695cbf18da34d3e8a7d32382a7dbfa4832d370";
revision = "1";
editedCabalFile = "1c8kxqdqf0j962xjdrrjfcbjsl0c1kax31rjykymv7w16d6hmlj4";
libraryHaskellDepends = [
base
blaze-html
cheapskate
highlighting-kate
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cheapskate-highlight";
description = "Code highlighting for cheapskate";
license = stdenv.lib.licenses.bsd3;

}) {};
"cheapskate-lucid" = callPackage
({
  mkDerivation
, base
, blaze-html
, cheapskate
, lucid
, stdenv
}:
mkDerivation {

pname = "cheapskate-lucid";
version = "0.1.0.0";
sha256 = "f582e512befd2707a7056c1d15541967de2e0ce5702bc2197a3fced58a777245";
revision = "1";
editedCabalFile = "197nx95xw21i7zyvgzcgnr36ab6vrk17c66iz8ndwz61vp1jf6hc";
libraryHaskellDepends = [
base
blaze-html
cheapskate
lucid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cheapskate-lucid";
description = "Use cheapskate with Lucid";
license = stdenv.lib.licenses.bsd3;

}) {};
"check-email" = callPackage
({
  mkDerivation
, base
, bytestring
, email-validate
, resolv
, stdenv
}:
mkDerivation {

pname = "check-email";
version = "1.0.2";
sha256 = "1c2615fadba09a5d7aa5c68648d12218a595efb759842fb4f524cf380afa9327";
libraryHaskellDepends = [
base
bytestring
email-validate
];
librarySystemDepends = [
resolv
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/qoelet/check-email#readme";
description = "Confirm whether an email is valid and probably existant";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) resolv;};
"checkers" = callPackage
({
  mkDerivation
, array
, base
, QuickCheck
, random
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "checkers";
version = "0.4.10";
sha256 = "89f739106f528998cc83bc25ab1b3e483cd2ffb21ca120fcb8b2e5c43306711e";
libraryHaskellDepends = [
array
base
QuickCheck
random
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/conal/checkers";
description = "Check properties on standard classes and data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"choice" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "choice";
version = "0.2.2";
sha256 = "d367e4321329df5913216f9746528e4526e14b5ad1f33edc82de8288ad719e61";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mboes/choice#readme";
description = "A solution to boolean blindness";
license = stdenv.lib.licenses.publicDomain;

}) {};
"chunked-data" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, semigroups
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "chunked-data";
version = "0.3.1";
sha256 = "f710c581aee1f899e807fc9e6cba721b27d53dc9d56986f1922bc7ccddf1a79a";
libraryHaskellDepends = [
base
bytestring
containers
semigroups
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "Typeclasses for dealing with various chunked data representations";
license = stdenv.lib.licenses.mit;

}) {};
"cipher-aes" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
}:
mkDerivation {

pname = "cipher-aes";
version = "0.2.11";
sha256 = "d3b171895698c73da24d7ce97543f725d26637f038de670c0fd4012ca7f95015";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-cipher-aes";
description = "Fast AES cipher implementation with advanced mode of operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-aes128" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cereal
, crypto-api
, process
, stdenv
, tagged
}:
mkDerivation {

pname = "cipher-aes128";
version = "0.7.0.3";
sha256 = "6f27bea8bcd1987072fc75b6b423ae9c691574324b6a328ec1e2866f84412e3a";
revision = "1";
editedCabalFile = "1c3lr80vcdrajlvks9ny9s8m2n2kc9jw14nh65668dfikp0pqc61";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
process
];
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TomMD/cipher-aes128";
description = "AES and common modes using AES-NI when available";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-blowfish" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
, vector
}:
mkDerivation {

pname = "cipher-blowfish";
version = "0.0.3";
sha256 = "8f41170a851dba6d0b6f07298af3213baca09ab2a8aaf2adb733631feb3b6641";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Blowfish cipher";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-camellia" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
, vector
}:
mkDerivation {

pname = "cipher-camellia";
version = "0.0.2";
sha256 = "8d0cd137cdb890646bb5d3bb52b20fa6d74e1b0c35d7d524d60edd9d43ace2a7";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Camellia block cipher primitives";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-des" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, securemem
, stdenv
}:
mkDerivation {

pname = "cipher-des";
version = "0.0.6";
sha256 = "85f1bccdec625a120ecf83b861afcb6478f8f899ceaa06fc083e642b54ff4ac7";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "DES and 3DES primitives";
license = stdenv.lib.licenses.bsd3;

}) {};
"cipher-rc4" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, stdenv
}:
mkDerivation {

pname = "cipher-rc4";
version = "0.1.4";
sha256 = "c67e731bc9e7f3882e33609c3d9ec97b4e9bbd2f95cd882926acfb621970384d";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cipher-rc4";
description = "Fast RC4 cipher implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"circle-packing" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "circle-packing";
version = "0.1.0.6";
sha256 = "64ee44a90da3e5fe20d5b78bfe6eba93102a6b52c65f8a7b99af7799798ee81b";
revision = "1";
editedCabalFile = "10dh8jgjah1h54f83s9289abfqzc4ifykb01p5jljfac63yn42zs";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Simple heuristic for packing discs of varying radii in a circle";
license = stdenv.lib.licenses.bsd3;

}) {};
"cisco-spark-api" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bitset-word8
, bytestring
, conduit
, data-default
, http-conduit
, network-uri
, optparse-applicative
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "cisco-spark-api";
version = "0.1.0.3";
sha256 = "7e962a9f34e5b0c66fe858f4c6a322d22586bc7a8ac602a317697d2d9b6228ba";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
bitset-word8
bytestring
conduit
data-default
http-conduit
network-uri
text
];
executableHaskellDepends = [
aeson
base
bytestring
conduit
data-default
http-conduit
optparse-applicative
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nshimaza/webex-teams-api#readme";
description = "A Haskell bindings for Webex Teams API";
license = stdenv.lib.licenses.mit;

}) {};
"clang-compilation-database" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "clang-compilation-database";
version = "0.1.0.1";
sha256 = "114601a1769471e4fc2e8d100c5546e95fa803b9e56dcd342dab9829d0dc1ca8";
libraryHaskellDepends = [
aeson
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lambdageek/clang-compilation-database";
description = "JSON Compilation Database Format encoding and decoding";
license = stdenv.lib.licenses.mit;

}) {};
"classy-prelude" = callPackage
({
  mkDerivation
, async
, base
, basic-prelude
, bifunctors
, bytestring
, chunked-data
, containers
, deepseq
, dlist
, ghc-prim
, hashable
, mono-traversable
, mono-traversable-instances
, mtl
, mutable-containers
, primitive
, say
, semigroups
, stdenv
, stm
, stm-chans
, text
, time
, transformers
, unliftio
, unordered-containers
, vector
, vector-instances
}:
mkDerivation {

pname = "classy-prelude";
version = "1.4.0";
sha256 = "2b3b255676ab0fdeb39aebafa3543535ddd684d00c645b643e50cb9e2d25f9e0";
libraryHaskellDepends = [
async
base
basic-prelude
bifunctors
bytestring
chunked-data
containers
deepseq
dlist
ghc-prim
hashable
mono-traversable
mono-traversable-instances
mtl
mutable-containers
primitive
say
semigroups
stm
stm-chans
text
time
transformers
unliftio
unordered-containers
vector
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "A typeclass-based Prelude";
license = stdenv.lib.licenses.mit;

}) {};
"classy-prelude-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, classy-prelude
, conduit
, monad-control
, resourcet
, stdenv
, transformers
, void
}:
mkDerivation {

pname = "classy-prelude-conduit";
version = "1.4.0";
sha256 = "39ef2567a3542ebf91f6ebc103cc4afb64c2a4ec051c7ce578b577ef9931c424";
libraryHaskellDepends = [
base
bytestring
classy-prelude
conduit
monad-control
resourcet
transformers
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "classy-prelude together with conduit functions";
license = stdenv.lib.licenses.mit;

}) {};
"classy-prelude-yesod" = callPackage
({
  mkDerivation
, aeson
, base
, classy-prelude
, classy-prelude-conduit
, data-default
, http-conduit
, http-types
, persistent
, stdenv
, yesod
, yesod-newsfeed
, yesod-static
}:
mkDerivation {

pname = "classy-prelude-yesod";
version = "1.4.0";
sha256 = "0cd2a88f42c3541ba4bce6801c8b8d9c331e1c49a6288bf16f764676a34b9e28";
libraryHaskellDepends = [
aeson
base
classy-prelude
classy-prelude-conduit
data-default
http-conduit
http-types
persistent
yesod
yesod-newsfeed
yesod-static
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "Provide a classy prelude including common Yesod functionality";
license = stdenv.lib.licenses.mit;

}) {};
"classyplate" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "classyplate";
version = "0.3.1.0";
sha256 = "9548f228998d7aa00372385e94d51d2802f1a5400b3b85dcb31fda4d75f7d12b";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Fuseable type-class based generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"clay" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "clay";
version = "0.12.2";
sha256 = "ea8b95a24568c8a37e2f8deda7f24c5c15a84886ad19f255d6d637e06786e98a";
revision = "1";
editedCabalFile = "1db2rc6q4a1699n43xmq31mv24b7ayc4ivc3n748zkzhs6ff4nbg";
libraryHaskellDepends = [
base
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "http://fvisser.nl/clay";
description = "CSS preprocessor as embedded Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"cli" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, terminfo
, transformers
}:
mkDerivation {

pname = "cli";
version = "0.1.2";
sha256 = "580a31fc25eb988dbb5ad3aebfb72d49f089cbee9693edf78dae722b2fde4acb";
libraryHaskellDepends = [
base
mtl
terminfo
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-cli";
description = "Command Line Interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"clientsession" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, cereal
, cipher-aes
, cprng-aes
, crypto-api
, crypto-random
, directory
, entropy
, setenv
, skein
, stdenv
, tagged
}:
mkDerivation {

pname = "clientsession";
version = "0.9.1.2";
sha256 = "5915adc4de26d2a8b03f1a445bac0b0f5d10a5b0380a4eed71b79a20a727d068";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base64-bytestring
bytestring
cereal
cipher-aes
cprng-aes
crypto-api
crypto-random
directory
entropy
setenv
skein
tagged
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/clientsession/tree/master";
description = "Securely store session data in a client-side cookie";
license = stdenv.lib.licenses.mit;

}) {};
"clock" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "clock";
version = "0.7.2";
sha256 = "886601978898d3a91412fef895e864576a7125d661e1f8abc49a2a08840e691f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/corsis/clock";
description = "High-resolution clock functions: monotonic, realtime, cputime";
license = stdenv.lib.licenses.bsd3;

}) {};
"clock-extras" = callPackage
({
  mkDerivation
, base
, clock
, stdenv
}:
mkDerivation {

pname = "clock-extras";
version = "0.1.0.2";
sha256 = "a9ed097aa9d48b53c6a555bc5f67e347249b08e2252dd4fc998fb4ab42edda59";
libraryHaskellDepends = [
base
clock
];
doHaddock = false;
doCheck = false;
description = "A couple functions that probably should be in the 'clock' package";
license = stdenv.lib.licenses.bsd3;

}) {};
"clr-host" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, clr-marshal
, directory
, file-embed
, filepath
, glib
, mono
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "clr-host";
version = "0.2.0.1";
sha256 = "5306ea1368b922d595159f237877f5b76fb9744e082f8c286c4546dc1a6f0e96";
setupHaskellDepends = [
base
Cabal
directory
filepath
transformers
];
libraryHaskellDepends = [
base
bytestring
clr-marshal
file-embed
text
];
librarySystemDepends = [
glib
mono
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-host";
description = "Hosting the Common Language Runtime";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) glib; inherit (pkgs) mono;};
"clr-marshal" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "clr-marshal";
version = "0.2.0.0";
sha256 = "4113651f3d10de21813b2a44b78ca19f9ab62b6c6d9df0c25a88940fabebdcd6";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-marshal";
description = "Marshaling for the clr";
license = stdenv.lib.licenses.bsd3;

}) {};
"clumpiness" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, tree-fun
}:
mkDerivation {

pname = "clumpiness";
version = "0.17.0.0";
sha256 = "fd4b303d206eaf242c779bb65c42256e42220c8497a6bcf3bc59589b9396c495";
libraryHaskellDepends = [
base
containers
tree-fun
];
doHaddock = false;
doCheck = false;
description = "Calculate the clumpiness of leaf properties in a tree";
license = stdenv.lib.licenses.gpl3;

}) {};
"cmark" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "cmark";
version = "0.5.6";
sha256 = "855c4b7aca6d4e9eb076beb6cc6f74e7578fae7aa3625fd3fca5e3b4901a32b0";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/cmark-hs";
description = "Fast, accurate CommonMark (Markdown) parser and renderer";
license = stdenv.lib.licenses.bsd3;

}) {};
"cmark-gfm" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "cmark-gfm";
version = "0.1.3";
sha256 = "731cb392e4edfd18d0dae709904791610588e6770934e5112cbdd5e6f3d271ba";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kivikakk/cmark-gfm-hs";
description = "Fast, accurate GitHub Flavored Markdown parser and renderer";
license = stdenv.lib.licenses.bsd3;

}) {};
"cmark-highlight" = callPackage
({
  mkDerivation
, base
, blaze-html
, cmark
, highlighting-kate
, stdenv
, text
}:
mkDerivation {

pname = "cmark-highlight";
version = "0.2.0.0";
sha256 = "de769cd703d3fcd5d69428477184fad57019db55a71b1315a9bbb54317f0812b";
revision = "1";
editedCabalFile = "1zdxr3bfj9bn2yclm5m17aa7wid6zwhvg6mj245wd2y34p696znw";
libraryHaskellDepends = [
base
blaze-html
cmark
highlighting-kate
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cmark-highlight";
description = "Code highlighting for cmark";
license = stdenv.lib.licenses.bsd3;

}) {};
"cmark-lucid" = callPackage
({
  mkDerivation
, base
, cmark
, lucid
, stdenv
}:
mkDerivation {

pname = "cmark-lucid";
version = "0.1.0.0";
sha256 = "d2927b9fed0e32fe7afc539e7b427e0a95f8c9297bb6bc531101b476ba8a3c03";
revision = "1";
editedCabalFile = "1mizbv18bl8qrgz27wlz7sb6cfhblmp7p7gh7dqq8g0r4djrvqg5";
libraryHaskellDepends = [
base
cmark
lucid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/cmark-lucid";
description = "Use cmark with Lucid";
license = stdenv.lib.licenses.bsd3;

}) {};
"cmdargs" = callPackage
({
  mkDerivation
, base
, filepath
, process
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "cmdargs";
version = "0.10.20";
sha256 = "0e269dc48c3d4c0447c96ffd772a6fe69dfa1260c323f4cd7bf171cbf2ab7331";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
filepath
process
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/cmdargs#readme";
description = "Command line argument processing";
license = stdenv.lib.licenses.bsd3;

}) {};
"code-builder" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "code-builder";
version = "0.1.3";
sha256 = "559e47a44cec85a8e95df92e5d2693cacc9761503c30be3b83eaebd95360a4ab";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Simple system for generating code";
license = stdenv.lib.licenses.bsd3;

}) {};
"code-page" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "code-page";
version = "0.1.3";
sha256 = "e65c86600e06d85f2e2c2a9df4b3d68e2dbd3adb2df9e922a4cd744966762191";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/code-page";
description = "Windows code page library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"codec" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, binary-bits
, bytestring
, mtl
, profunctors
, stdenv
, template-haskell
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "codec";
version = "0.2.1";
sha256 = "ffc261b58108c3d90c0b0b68461857d1148208d1a9645916e63241aaa3c25b28";
libraryHaskellDepends = [
aeson
base
binary
binary-bits
bytestring
mtl
profunctors
template-haskell
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chpatrick/codec";
description = "Simple bidirectional serialization";
license = stdenv.lib.licenses.bsd3;

}) {};
"codo-notation" = callPackage
({
  mkDerivation
, base
, comonad
, haskell-src-meta
, parsec
, stdenv
, template-haskell
, uniplate
}:
mkDerivation {

pname = "codo-notation";
version = "0.5.2";
sha256 = "78eb57004541ed29eb4c54196b91ac2dd1028a3315f51cd4dc00debfc0938eaf";
libraryHaskellDepends = [
base
comonad
haskell-src-meta
parsec
template-haskell
uniplate
];
doHaddock = false;
doCheck = false;
description = "A notation for comonads, analogous to the do-notation for monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"colorful-monoids" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "colorful-monoids";
version = "0.2.1.1";
sha256 = "0bf5f8d9632dec436a6744d584003d09b15169e600e9e5c2636e2c3f4d4f2e58";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/colorful-monoids#readme";
description = "Styled console text output using ANSI escape sequences";
license = stdenv.lib.licenses.mit;

}) {};
"colorize-haskell" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, haskell-lexer
, stdenv
}:
mkDerivation {

pname = "colorize-haskell";
version = "1.0.1";
sha256 = "03764374bd1aed5c63e20517441ccaae7c95cb2fa9e416da952f26be8dba9aec";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
haskell-lexer
];
executableHaskellDepends = [
ansi-terminal
base
haskell-lexer
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yav/colorize-haskell";
description = "Highligt Haskell source";
license = stdenv.lib.licenses.bsd3;

}) {};
"colour" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "colour";
version = "2.3.4";
sha256 = "0f439f00b322ce3d551f28a4dd1520aa2c91d699de4cdc6d485b9b04be0dc5eb";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Colour";
description = "A model for human colour/color perception";
license = stdenv.lib.licenses.mit;

}) {};
"colour-accelerate" = callPackage
({
  mkDerivation
, accelerate
, base
, stdenv
}:
mkDerivation {

pname = "colour-accelerate";
version = "0.2.0.0";
sha256 = "ec7f80370e271b7cd87a2b0255cfeee63d73cbc895a346c447efc8e214332780";
libraryHaskellDepends = [
accelerate
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tmcdonell/colour-accelerate";
description = "Working with colours in Accelerate";
license = stdenv.lib.licenses.bsd3;

}) {};
"combinatorial" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "combinatorial";
version = "0.1";
sha256 = "096e6dacd9f99c7ce63e95b991df33b74645f71f7df2dd90627843d96324b4a8";
revision = "1";
editedCabalFile = "1bqcg04w48dqk4n1n36j9ykajrmwqdd4qpcjjjfhzvm83z5ypsh7";
libraryHaskellDepends = [
array
base
containers
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/combinatorial/";
description = "Count, enumerate, rank and unrank combinatorial objects";
license = stdenv.lib.licenses.bsd3;

}) {};
"comfort-graph" = callPackage
({
  mkDerivation
, base
, containers
, QuickCheck
, semigroups
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "comfort-graph";
version = "0.0.3";
sha256 = "b9d67c0f19e34c27fe759c149939c37d655a170482760389de07cca9cb534387";
libraryHaskellDepends = [
base
containers
QuickCheck
semigroups
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/comfort-graph";
description = "Graph structure with type parameters for nodes and edges";
license = stdenv.lib.licenses.bsd3;

}) {};
"commutative" = callPackage
({
  mkDerivation
, base
, random
, semigroups
, stdenv
}:
mkDerivation {

pname = "commutative";
version = "0.0.1.4";
sha256 = "0de746012c73543b5dcf649434046e36d5e158e0967e8e2ae122e85d5457c9cf";
libraryHaskellDepends = [
base
random
semigroups
];
doHaddock = false;
doCheck = false;
description = "Commutative binary operations";
license = stdenv.lib.licenses.mit;

}) {};
"comonad" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, containers
, contravariant
, distributive
, semigroups
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "comonad";
version = "5.0.3";
sha256 = "a7f4584d634051123c547f0d10f88eaf23d99229dbd01dfdcd98cddd41e54df6";
revision = "2";
editedCabalFile = "07gfz719y6q3bfv8jbvak78dda9g1qy4phl18cxisiapqdz31rry";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
containers
contravariant
distributive
semigroups
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/comonad/";
description = "Comonads";
license = stdenv.lib.licenses.bsd3;

}) {};
"compact" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, ghc-compact
, stdenv
}:
mkDerivation {

pname = "compact";
version = "0.1.0.1";
sha256 = "ee8533e16b94bbbf3519ccad26f3e569d60d33a5a9d2e3636e0764aff7b2d653";
revision = "1";
editedCabalFile = "0bdp226gx3gr1hg68xydxhkfr0h469ay60h0s1ywar19y3m8dn1p";
libraryHaskellDepends = [
base
binary
bytestring
ghc-compact
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ezyang/compact";
description = "Non-GC'd, contiguous storage for immutable data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"compactmap" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "compactmap";
version = "0.1.4.2.1";
sha256 = "22166e0a2a78bf2b7cff49448ed9fcb145dece4f034de9afc8ce5b692fd0f774";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
description = "A read-only memory-efficient key-value store";
license = stdenv.lib.licenses.bsd3;

}) {};
"compensated" = callPackage
({
  mkDerivation
, base
, bifunctors
, binary
, bytes
, Cabal
, cabal-doctest
, cereal
, comonad
, deepseq
, distributive
, hashable
, lens
, log-domain
, safecopy
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "compensated";
version = "0.7.2";
sha256 = "c7f9bf47a586720deda33b82ddc633d3507c8bc199eb5555c80931f6c323cae2";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
bifunctors
binary
bytes
cereal
comonad
deepseq
distributive
hashable
lens
log-domain
safecopy
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/analytics/compensated/";
description = "Compensated floating-point arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"compiler-warnings" = callPackage
({
  mkDerivation
, base
, binary
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "compiler-warnings";
version = "0.1.0";
sha256 = "8cf4c57e1b4d61b1163969faa6e9f2cb8f22073fa75bf982d9b8a328225f5ce3";
libraryHaskellDepends = [
base
binary
parsec
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/compiler-warnings#readme";
description = "Parser for common compiler warning formats";
license = stdenv.lib.licenses.bsd2;

}) {};
"composable-associations" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "composable-associations";
version = "0.1.0.0";
sha256 = "9d1a10bc7ee1b514221bd8d0fc71f43f8d2338b1faebe6722f1d4db3bc29800e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/SamProtas/composable-associations#readme";
description = "Types and helpers for composing types into a single larger key-value type";
license = stdenv.lib.licenses.bsd3;

}) {};
"composable-associations-aeson" = callPackage
({
  mkDerivation
, aeson
, base
, composable-associations
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "composable-associations-aeson";
version = "0.1.0.0";
sha256 = "dbd754ed6d624469f16c4cd2ad51c441eeb8c62d6af66673f76034c7517c2a4f";
libraryHaskellDepends = [
aeson
base
composable-associations
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/SamProtas/composable-associations#readme";
description = "Aeson ToJSON/FromJSON implementation for the types of composable-associations";
license = stdenv.lib.licenses.bsd3;

}) {};
"composition" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "composition";
version = "1.0.2.1";
sha256 = "7123300f5eca5a7cec4eb731dc0e9c2c44aabe26b37e6579582a7267d9f7ad6a";
doHaddock = false;
doCheck = false;
description = "Combinators for unorthodox function composition";
license = stdenv.lib.licenses.bsd3;

}) {};
"composition-extra" = callPackage
({
  mkDerivation
, base
, composition
, contravariant
, stdenv
}:
mkDerivation {

pname = "composition-extra";
version = "2.0.0";
sha256 = "c998244a8fd160af3dd7ee93c417f665af51a46a04ce6b7d4623f46596ba7129";
libraryHaskellDepends = [
base
composition
contravariant
];
doHaddock = false;
doCheck = false;
description = "Combinators for unorthodox structure composition";
license = stdenv.lib.licenses.bsd3;

}) {};
"composition-prelude" = callPackage
({
  mkDerivation
, base
, cpphs
, stdenv
}:
mkDerivation {

pname = "composition-prelude";
version = "1.3.0.8";
sha256 = "621d728b615ea41e9fd6afa0e9cd395bf84e240bc8db332db79cdeb3e7e6309e";
libraryHaskellDepends = [
base
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vmchale/composition-prelude#readme";
description = "Higher-order function combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"compressed" = callPackage
({
  mkDerivation
, base
, comonad
, containers
, fingertree
, hashable
, keys
, pointed
, reducers
, semigroupoids
, semigroups
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "compressed";
version = "3.11";
sha256 = "d77bbf2f445d32f138dfde9e860e68db5de8ae04c52ffda23941ddf7bdabdd3d";
libraryHaskellDepends = [
base
comonad
containers
fingertree
hashable
keys
pointed
reducers
semigroupoids
semigroups
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/compressed/";
description = "Compressed containers and reducers";
license = stdenv.lib.licenses.bsd3;

}) {};
"concise" = callPackage
({
  mkDerivation
, base
, bytestring
, lens
, stdenv
, text
}:
mkDerivation {

pname = "concise";
version = "0.1.0.1";
sha256 = "5c27df5a3e1fe820548e90abc4a0e326b6d0fb286218619aa22d3af90c7b9925";
libraryHaskellDepends = [
base
bytestring
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/frasertweedale/hs-concise";
description = "Utilities for Control.Lens.Cons";
license = stdenv.lib.licenses.bsd3;

}) {};
"concurrency" = callPackage
({
  mkDerivation
, array
, atomic-primops
, base
, exceptions
, monad-control
, mtl
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "concurrency";
version = "1.4.0.2";
sha256 = "32769a27569da5abd676db18f7b923992cf0d6dd19373d3b86c0e74a6d11921f";
libraryHaskellDepends = [
array
atomic-primops
base
exceptions
monad-control
mtl
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Typeclasses, functions, and data types for concurrency and STM";
license = stdenv.lib.licenses.mit;

}) {};
"concurrent-extra" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, unbounded-delays
}:
mkDerivation {

pname = "concurrent-extra";
version = "0.7.0.12";
sha256 = "040e6db9e0147de9929661759930f1566a7250add4c7f65b04dc6e070c991df9";
libraryHaskellDepends = [
base
stm
unbounded-delays
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/concurrent-extra";
description = "Extra concurrency primitives";
license = stdenv.lib.licenses.bsd3;

}) {};
"concurrent-output" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, directory
, exceptions
, process
, stdenv
, stm
, terminal-size
, text
, transformers
, unix
}:
mkDerivation {

pname = "concurrent-output";
version = "1.10.5";
sha256 = "98c096228664d591eb2c352080955a202e883cdab8452efae3cae407e30fa5c3";
libraryHaskellDepends = [
ansi-terminal
async
base
directory
exceptions
process
stm
terminal-size
text
transformers
unix
];
doHaddock = false;
doCheck = false;
description = "Ungarble output from several threads or commands";
license = stdenv.lib.licenses.bsd2;

}) {};
"concurrent-split" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "concurrent-split";
version = "0.0.1";
sha256 = "60793c8eeff1fa0fe03910951d1925f3c66aec61ead64bf3f98dd6110a05b8e7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "MVars and Channels with distinguished input and output side";
license = stdenv.lib.licenses.bsd3;

}) {};
"concurrent-supply" = callPackage
({
  mkDerivation
, base
, ghc-prim
, hashable
, stdenv
}:
mkDerivation {

pname = "concurrent-supply";
version = "0.1.8";
sha256 = "ccf827dcd221298ae93fad6021c63a06707456de0671706b44f1f2fed867f21f";
libraryHaskellDepends = [
base
ghc-prim
hashable
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/concurrent-supply/";
description = "A fast concurrent unique identifier supply with a pure API";
license = stdenv.lib.licenses.bsd3;

}) {};
"cond" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "cond";
version = "0.4.1.1";
sha256 = "039c76e43b5484bdc78627f50740106ae2844b3c877d92b5228de9106997ac8b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kallisti-dev/cond";
description = "Basic conditional and boolean operators with monadic variants";
license = stdenv.lib.licenses.bsd3;

}) {};
"conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, exceptions
, filepath
, mono-traversable
, mtl
, primitive
, resourcet
, stdenv
, text
, transformers
, unix
, unliftio-core
, vector
}:
mkDerivation {

pname = "conduit";
version = "1.3.0.2";
sha256 = "c0f099d242504e65a78e1cbb54c18afad45fe2c9297d1d918ce28ae7dc4a1e5b";
libraryHaskellDepends = [
base
bytestring
directory
exceptions
filepath
mono-traversable
mtl
primitive
resourcet
text
transformers
unix
unliftio-core
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/conduit";
description = "Streaming data processing library";
license = stdenv.lib.licenses.mit;

}) {};
"conduit-algorithms" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, bzlib-conduit
, conduit
, conduit-combinators
, conduit-extra
, containers
, deepseq
, exceptions
, lzma-conduit
, monad-control
, mtl
, pqueue
, resourcet
, stdenv
, stm
, stm-conduit
, streaming-commons
, transformers
, unliftio-core
, vector
}:
mkDerivation {

pname = "conduit-algorithms";
version = "0.0.8.1";
sha256 = "cda5a50fa746c63001e39a8210d945015412c1c335078249e06eadd00616fd1d";
libraryHaskellDepends = [
async
base
bytestring
bzlib-conduit
conduit
conduit-combinators
conduit-extra
containers
deepseq
exceptions
lzma-conduit
monad-control
mtl
pqueue
resourcet
stm
stm-conduit
streaming-commons
transformers
unliftio-core
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/luispedro/conduit-algorithms#readme";
description = "Conduit-based algorithms";
license = stdenv.lib.licenses.mit;

}) {};
"conduit-combinators" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "conduit-combinators";
version = "1.3.0";
sha256 = "9717d916a0422a7fb7cc262302333269607530d40cd0bea3be947872f906e7d3";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "DEPRECATED Functionality merged into the conduit package itself";
license = stdenv.lib.licenses.mit;

}) {};
"conduit-connection" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, connection
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "conduit-connection";
version = "0.1.0.4";
sha256 = "5e784117f3698dc653b286fbb53d530068d0cdadbe130ec02abf42e3f2c821fc";
libraryHaskellDepends = [
base
bytestring
conduit
connection
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdroege/conduit-connection";
description = "Conduit source and sink for Network.Connection.";
license = stdenv.lib.licenses.bsd3;

}) {};
"conduit-extra" = callPackage
({
  mkDerivation
, async
, attoparsec
, base
, bytestring
, conduit
, directory
, filepath
, network
, primitive
, process
, resourcet
, stdenv
, stm
, streaming-commons
, text
, transformers
, typed-process
, unliftio-core
}:
mkDerivation {

pname = "conduit-extra";
version = "1.3.0";
sha256 = "2c41c925fc53d9ba2e640c7cdca72c492b28c0d45f1a82e94baef8dfa65922ae";
libraryHaskellDepends = [
async
attoparsec
base
bytestring
conduit
directory
filepath
network
primitive
process
resourcet
stm
streaming-commons
text
transformers
typed-process
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/conduit";
description = "Batteries included conduit: adapters for common libraries";
license = stdenv.lib.licenses.mit;

}) {};
"conduit-iconv" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, stdenv
}:
mkDerivation {

pname = "conduit-iconv";
version = "0.1.1.3";
sha256 = "1c71304782e4599a2987321028b50356c4982b45d9096d954e0b7c0b7ad3acb6";
libraryHaskellDepends = [
base
bytestring
conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdroege/conduit-iconv";
description = "Conduit for character encoding conversion";
license = stdenv.lib.licenses.bsd3;

}) {};
"conduit-throttle" = callPackage
({
  mkDerivation
, async
, base
, conduit
, conduit-combinators
, conduit-extra
, monad-control
, resourcet
, stdenv
, stm
, stm-chans
, throttle-io-stream
, unliftio
, unliftio-core
}:
mkDerivation {

pname = "conduit-throttle";
version = "0.3.1.0";
sha256 = "8dd6d616f5ddce25668bb34069bfdcdfe2a866c8d708b725a9b2e450a95aa329";
libraryHaskellDepends = [
async
base
conduit
conduit-combinators
conduit-extra
monad-control
resourcet
stm
stm-chans
throttle-io-stream
unliftio
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mtesseract/conduit-throttle#readme";
description = "Throttle Conduit Producers";
license = stdenv.lib.licenses.bsd3;

}) {};
"config-ini" = callPackage
({
  mkDerivation
, base
, containers
, megaparsec
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "config-ini";
version = "0.2.2.0";
sha256 = "364d67b876abf867d97eaacac630e920521ff96478fe9869a41983893ce140a0";
libraryHaskellDepends = [
base
containers
megaparsec
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aisamanra/config-ini";
description = "A library for simple INI-based configuration files";
license = stdenv.lib.licenses.bsd3;

}) {};
"configuration-tools" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, attoparsec
, base
, base-unicode-symbols
, base64-bytestring
, bytestring
, Cabal
, case-insensitive
, connection
, data-default
, deepseq
, directory
, dlist
, enclosed-exceptions
, filepath
, http-client
, http-client-tls
, http-types
, monad-control
, mtl
, network-uri
, optparse-applicative
, process
, profunctors
, semigroups
, stdenv
, text
, tls
, transformers
, unordered-containers
, x509
, x509-system
, x509-validation
, yaml
}:
mkDerivation {

pname = "configuration-tools";
version = "0.3.1";
sha256 = "e0df7e71b084c1bd831cd9887584f06e016e359291dc4f71b72d2027f7f86e47";
libraryHaskellDepends = [
aeson
ansi-wl-pprint
attoparsec
base
base-unicode-symbols
base64-bytestring
bytestring
Cabal
case-insensitive
connection
data-default
deepseq
directory
dlist
enclosed-exceptions
filepath
http-client
http-client-tls
http-types
monad-control
mtl
network-uri
optparse-applicative
process
profunctors
semigroups
text
tls
transformers
unordered-containers
x509
x509-system
x509-validation
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alephcloud/hs-configuration-tools";
description = "Tools for specifying and parsing configurations";
license = stdenv.lib.licenses.mit;

}) {};
"configurator" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, directory
, hashable
, stdenv
, text
, unix-compat
, unordered-containers
}:
mkDerivation {

pname = "configurator";
version = "0.3.0.0";
sha256 = "6eb9996b672e9f7112ca23482c42fa533553312c3c13f38a8a06476e67c031b4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
directory
hashable
text
unix-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/configurator";
description = "Configuration management";
license = stdenv.lib.licenses.bsd3;

}) {};
"configurator-export" = callPackage
({
  mkDerivation
, base
, base-compat
, configurator
, pretty
, semigroups
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "configurator-export";
version = "0.1.0.1";
sha256 = "9dbd62ef29c97792ccdfdb1b3b79aedfa527dce49a9ac5054f21b29a7f9b824c";
libraryHaskellDepends = [
base
base-compat
configurator
pretty
semigroups
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mstksg/configurator-export";
description = "Pretty printer and exporter for configurations from the \"configurator\" library";
license = stdenv.lib.licenses.bsd3;

}) {};
"connection" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, containers
, data-default-class
, network
, socks
, stdenv
, tls
, x509
, x509-store
, x509-system
, x509-validation
}:
mkDerivation {

pname = "connection";
version = "0.2.8";
sha256 = "70b1f44e8786320c18b26fc5d4ec115fc8ac016ba1f852fa8137f55d785a93eb";
libraryHaskellDepends = [
base
byteable
bytestring
containers
data-default-class
network
socks
tls
x509
x509-store
x509-system
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-connection";
description = "Simple and easy network connections API";
license = stdenv.lib.licenses.bsd3;

}) {};
"connection-pool" = callPackage
({
  mkDerivation
, base
, between
, data-default-class
, monad-control
, network
, resource-pool
, stdenv
, streaming-commons
, time
, transformers-base
}:
mkDerivation {

pname = "connection-pool";
version = "0.2.2";
sha256 = "f2cf43b7698b719b05467b3625884d00c748de2b3eb1229d19490b029a667353";
libraryHaskellDepends = [
base
between
data-default-class
monad-control
network
resource-pool
streaming-commons
time
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/trskop/connection-pool";
description = "Connection pool built on top of resource-pool and streaming-commons";
license = stdenv.lib.licenses.bsd3;

}) {};
"console-style" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "console-style";
version = "0.0.2.1";
sha256 = "6d818ea841d7acfe6c42cc3fc7751e324656abfd0509ce470bc8bdbf52d1bd7f";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/console-style#readme";
description = "Styled console text output using ANSI escape sequences";
license = stdenv.lib.licenses.mit;

}) {};
"constraints" = callPackage
({
  mkDerivation
, base
, binary
, deepseq
, ghc-prim
, hashable
, mtl
, semigroups
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "constraints";
version = "0.10";
sha256 = "c224b82e53c21791083c83fed2f2c938bd715a63c8efa90a5abcc3d8859126c6";
libraryHaskellDepends = [
base
binary
deepseq
ghc-prim
hashable
mtl
semigroups
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/constraints/";
description = "Constraint manipulation";
license = stdenv.lib.licenses.bsd2;

}) {};
"consul-haskell" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, connection
, either
, exceptions
, http-client
, http-client-tls
, http-types
, lifted-async
, lifted-base
, monad-control
, network
, retry
, stdenv
, stm
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "consul-haskell";
version = "0.4.2";
sha256 = "b10812b70dfbce7037f9f23eda71fa2fa6fc97ed309bd63c00f226522d30d80a";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
connection
either
exceptions
http-client
http-client-tls
http-types
lifted-async
lifted-base
monad-control
network
retry
stm
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alphaHeavy/consul-haskell";
description = "A consul client for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"containers-unicode-symbols" = callPackage
({
  mkDerivation
, base
, base-unicode-symbols
, containers
, stdenv
}:
mkDerivation {

pname = "containers-unicode-symbols";
version = "0.3.1.1";
sha256 = "4655f286a2d116cb5f2b89f472df54df739bf904ac8e932b2fd34d3f713e9b31";
libraryHaskellDepends = [
base
base-unicode-symbols
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
description = "Unicode alternatives for common functions and operators";
license = stdenv.lib.licenses.bsd3;

}) {};
"contravariant" = callPackage
({
  mkDerivation
, base
, StateVar
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "contravariant";
version = "1.4.1";
sha256 = "c93d3d619fa378f3fdf92c53bb8b04b8f47963b88aba7cfa54b57656189ad0ed";
revision = "1";
editedCabalFile = "0qj5nymccrb9p0cd6hffsy90jidjng14g9yv95z8v6h4q84sbzvx";
libraryHaskellDepends = [
base
StateVar
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/contravariant/";
description = "Contravariant functors";
license = stdenv.lib.licenses.bsd3;

}) {};
"contravariant-extras" = callPackage
({
  mkDerivation
, base
, base-prelude
, contravariant
, semigroups
, stdenv
, template-haskell
, tuple-th
}:
mkDerivation {

pname = "contravariant-extras";
version = "0.3.4";
sha256 = "36a9239d5a84bc6a418a3aa1a0df145d76ece24d00b76deb817b92441913e63d";
libraryHaskellDepends = [
base
base-prelude
contravariant
semigroups
template-haskell
tuple-th
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/contravariant-extras";
description = "Extras for the \"contravariant\" package";
license = stdenv.lib.licenses.mit;

}) {};
"control-bool" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "control-bool";
version = "0.2.1";
sha256 = "e46a85d2985a65f8d7ecbcdab0cfb12734b4d6e4c558631e6ab01fe742ed5581";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/control-bool";
description = "Useful combinators for boolean expressions";
license = stdenv.lib.licenses.bsd3;

}) {};
"control-monad-free" = callPackage
({
  mkDerivation
, base
, prelude-extras
, stdenv
, transformers
}:
mkDerivation {

pname = "control-monad-free";
version = "0.6.1";
sha256 = "fea9173d3c29729a8e0789d654bf3b16928e0b740465bd8798ac2cfeec492286";
revision = "1";
editedCabalFile = "1901lm2md7flri4ms745lgla18x2k7v0xh51jbjbx6202ppcx3fh";
libraryHaskellDepends = [
base
prelude-extras
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pepeiborra/control-monad-free";
description = "Free monads and monad transformers";
license = stdenv.lib.licenses.publicDomain;

}) {};
"control-monad-omega" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "control-monad-omega";
version = "0.3.1";
sha256 = "383b98ecf5db5add42f318672af9eb1c8b9d99ec42d48c240e209a93b5cf1186";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/luqui/control-monad-omega";
description = "A breadth-first list monad";
license = stdenv.lib.licenses.publicDomain;

}) {};
"convertible" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, mtl
, old-locale
, old-time
, stdenv
, text
, time
}:
mkDerivation {

pname = "convertible";
version = "1.1.1.0";
sha256 = "e9f9a70904b9995314c2aeb41580d654a2c76293feb955fb6bd63256c355286c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
mtl
old-locale
old-time
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/convertible";
description = "Typeclasses and instances for converting between types";
license = stdenv.lib.licenses.bsd3;

}) {};
"cookie" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, deepseq
, stdenv
, text
, time
}:
mkDerivation {

pname = "cookie";
version = "0.4.4";
sha256 = "3245ed04ae933cf7becede816d1f76043b851472700abf558ae90b28414cc0e3";
libraryHaskellDepends = [
base
bytestring
data-default-class
deepseq
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/cookie";
description = "HTTP cookie parsing and rendering";
license = stdenv.lib.licenses.mit;

}) {};
"countable" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "countable";
version = "1.0";
sha256 = "f9a0eb6f697a044bdf72e9c08126d4cb0f2d6de82cce07e55cb87ddbae6a0e6c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AshleyYakeley/countable";
description = "Countable, Searchable, Finite, Empty classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"country" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, ghc-prim
, hashable
, primitive
, scientific
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "country";
version = "0.1.5";
sha256 = "3aa921e12d74d5fc08b67df90600a6c28efae09b0afd4665e66ec585f024176a";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
ghc-prim
hashable
primitive
scientific
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/andrewthad/country#readme";
description = "Country data type and functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"courier" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, cereal
, containers
, hslogger
, network
, stdenv
, stm
, text
, uuid
}:
mkDerivation {

pname = "courier";
version = "0.1.1.5";
sha256 = "ac9e674ff33de347b173da2892859b3807a408b341d10d6101d2a7d07ac334d3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
bytestring
cereal
containers
hslogger
network
stm
text
uuid
];
executableHaskellDepends = [
base
cereal
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/hargettp/courier";
description = "A message-passing library for simplifying network applications";
license = stdenv.lib.licenses.mit;

}) {};
"cpphs" = callPackage
({
  mkDerivation
, base
, directory
, old-locale
, old-time
, polyparse
, stdenv
}:
mkDerivation {

pname = "cpphs";
version = "1.20.8";
sha256 = "e56d64a7d8058e0fb63f0669397c1c861efb20a0376e0e74d86942ac151105ae";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
old-locale
old-time
polyparse
];
executableHaskellDepends = [
base
directory
old-locale
old-time
polyparse
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/cpphs/";
description = "A liberalised re-implementation of cpp, the C pre-processor";
license = "LGPL";

}) {};
"cprng-aes" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, cipher-aes
, crypto-random
, stdenv
}:
mkDerivation {

pname = "cprng-aes";
version = "0.6.1";
sha256 = "64592a01de8c6683c5e29f538dceee918887ffe211d87214a2e38559d72c21f3";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
byteable
bytestring
cipher-aes
crypto-random
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cprng-aes";
description = "Crypto Pseudo Random Number Generator using AES in counter mode";
license = stdenv.lib.licenses.bsd3;

}) {};
"cpu" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "cpu";
version = "0.1.2";
sha256 = "5627feb4974a3ff8499c42cc958927e88761a2e004c4000d34e9cd6a15ad2974";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cpu";
description = "Cpu information and properties helpers";
license = stdenv.lib.licenses.bsd3;

}) {};
"cpuinfo" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, deepseq
, stdenv
}:
mkDerivation {

pname = "cpuinfo";
version = "0.1.0.1";
sha256 = "d1b3e3992cc0c82edfb21f30e1684bb66e6a3cb23a26b777a079702362d05655";
libraryHaskellDepends = [
attoparsec
base
bytestring
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TravisWhitaker/cpuinfo";
description = "Haskell Library for Checking CPU Information";
license = stdenv.lib.licenses.mit;

}) {};
"cql" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, Decimal
, iproute
, network
, stdenv
, template-haskell
, text
, time
, transformers
, uuid
, vector
}:
mkDerivation {

pname = "cql";
version = "3.1.1";
sha256 = "45b0d9599dfb6b5df02eb17e18d45cef8abd7e175d4eb7f99ab94f9d50866da3";
libraryHaskellDepends = [
base
bytestring
cereal
Decimal
iproute
network
template-haskell
text
time
transformers
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/cql/";
description = "Cassandra CQL binary protocol";
license = "unknown";

}) {};
"cql-io" = callPackage
({
  mkDerivation
, async
, auto-update
, base
, bytestring
, containers
, cql
, cryptohash
, data-default-class
, exceptions
, hashable
, HsOpenSSL
, iproute
, lens
, monad-control
, mtl
, mwc-random
, network
, retry
, semigroups
, stdenv
, stm
, text
, time
, tinylog
, transformers
, transformers-base
, uuid
, vector
}:
mkDerivation {

pname = "cql-io";
version = "0.16.0";
sha256 = "82e5aff9b929fd9dec92760b9d0e75ca509ce2619942628e5c7e3a66f4204004";
revision = "1";
editedCabalFile = "07vrizkarip8ap5hp6ngp7yf8xfdmm3r6zbaxafk48raxyfkl8xd";
libraryHaskellDepends = [
async
auto-update
base
bytestring
containers
cql
cryptohash
data-default-class
exceptions
hashable
HsOpenSSL
iproute
lens
monad-control
mtl
mwc-random
network
retry
semigroups
stm
text
time
tinylog
transformers
transformers-base
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/cql-io/";
description = "Cassandra CQL client";
license = stdenv.lib.licenses.mpl20;

}) {};
"crackNum" = callPackage
({
  mkDerivation
, base
, data-binary-ieee754
, FloatingHex
, ieee754
, stdenv
}:
mkDerivation {

pname = "crackNum";
version = "1.9";
sha256 = "a5a78b774e17837513b7c6048856c375457095898a59b7f3bbb7f49abb1639c5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
data-binary-ieee754
FloatingHex
ieee754
];
executableHaskellDepends = [
base
data-binary-ieee754
FloatingHex
ieee754
];
doHaddock = false;
doCheck = false;
description = "Crack various integer, floating-point data formats";
license = stdenv.lib.licenses.bsd3;

}) {};
"credential-store" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, cryptonite
, dbus
, memory
, safe-exceptions
, stdenv
}:
mkDerivation {

pname = "credential-store";
version = "0.1.2";
sha256 = "4dadbc219a7187442258608c1d834f4297652fb605fc6bbbb41d751fef6a9284";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
cryptonite
dbus
memory
safe-exceptions
];
executableHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rblaze/credential-store#readme";
description = "Library to access secure credential storage providers";
license = stdenv.lib.licenses.asl20;

}) {};
"criterion" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, base
, base-compat
, binary
, bytestring
, cassava
, code-page
, containers
, deepseq
, directory
, exceptions
, filepath
, Glob
, js-flot
, js-jquery
, microstache
, mtl
, mwc-random
, optparse-applicative
, parsec
, semigroups
, statistics
, stdenv
, text
, time
, transformers
, transformers-compat
, vector
, vector-algorithms
}:
mkDerivation {

pname = "criterion";
version = "1.4.0.0";
sha256 = "cc65c71c519372a28aa7a715da95038bc2be5a1ecbd9c1e26408876f06c61a6a";
revision = "2";
editedCabalFile = "1zyhs0k3xzmrxfjnwcil7b3lpxa66h5v5p30bhxwjyvn0qmc4501";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
base
base-compat
binary
bytestring
cassava
code-page
containers
deepseq
directory
exceptions
filepath
Glob
js-flot
js-jquery
microstache
mtl
mwc-random
optparse-applicative
parsec
semigroups
statistics
text
time
transformers
transformers-compat
vector
vector-algorithms
];
executableHaskellDepends = [
base
base-compat
optparse-applicative
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://www.serpentine.com/criterion";
description = "Robust, reliable performance measurement and analysis";
license = stdenv.lib.licenses.bsd3;

}) {};
"cron" = callPackage
({
  mkDerivation
, attoparsec
, base
, data-default-class
, mtl
, mtl-compat
, old-locale
, semigroups
, stdenv
, text
, time
}:
mkDerivation {

pname = "cron";
version = "0.6.1";
sha256 = "8c1af53bde729026809b722468f6b36c4f96cb532f26a390f32f1c91fb8b3251";
libraryHaskellDepends = [
attoparsec
base
data-default-class
mtl
mtl-compat
old-locale
semigroups
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/michaelxavier/cron";
description = "Cron datatypes and Attoparsec parser";
license = stdenv.lib.licenses.mit;

}) {};
"crypt-sha512" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, cryptohash-sha512
, stdenv
}:
mkDerivation {

pname = "crypt-sha512";
version = "0";
sha256 = "c2be6252bf12f38c74950eb778039426c730e9a7cd7f034a4cc3e6965d5255f3";
revision = "1";
editedCabalFile = "0wi8d12i2v76irrv0f16y4sfcn2a9sg92l11499djidmdq50vji9";
libraryHaskellDepends = [
attoparsec
base
bytestring
cryptohash-sha512
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/crypt-sha512";
description = "Pure Haskell implelementation for GNU SHA512 crypt algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-api" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, entropy
, stdenv
, tagged
, transformers
}:
mkDerivation {

pname = "crypto-api";
version = "0.13.3";
sha256 = "298a9ea7ce97c8ccf4bfe46d4864092c3a007a56bede73560070db3bf1ac7aa5";
revision = "1";
editedCabalFile = "1z6n1sa5pn3iqvqjrd8hv4bc2pxzsrhm5sh0l8z7g9lbqp6w0wp5";
libraryHaskellDepends = [
base
bytestring
cereal
entropy
tagged
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TomMD/crypto-api";
description = "A generic interface for cryptographic operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-api-tests" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, crypto-api
, directory
, filepath
, HUnit
, QuickCheck
, stdenv
, test-framework
, test-framework-hunit
, test-framework-quickcheck2
}:
mkDerivation {

pname = "crypto-api-tests";
version = "0.3";
sha256 = "f44aecdd4ceb9da9f38330e84d9c17745a82b0611085ebb34442d2dce4207270";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
directory
filepath
HUnit
QuickCheck
test-framework
test-framework-hunit
test-framework-quickcheck2
];
doHaddock = false;
doCheck = false;
homepage = "http://trac.haskell.org/crypto-api/wiki";
description = "A test framework and KATs for cryptographic operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-cipher-tests" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, HUnit
, mtl
, QuickCheck
, securemem
, stdenv
, test-framework
, test-framework-hunit
, test-framework-quickcheck2
}:
mkDerivation {

pname = "crypto-cipher-tests";
version = "0.0.11";
sha256 = "dfb670b73d4091b8683634d0d4d5a40576d573ad160650d5e518244ced8b98a7";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
HUnit
mtl
QuickCheck
securemem
test-framework
test-framework-hunit
test-framework-quickcheck2
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Generic cryptography cipher tests";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-cipher-types" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, securemem
, stdenv
}:
mkDerivation {

pname = "crypto-cipher-types";
version = "0.0.9";
sha256 = "2073f6b70df7916aebe2da49d224497183662d56d19da87b76f70039430c0a0f";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
byteable
bytestring
securemem
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Generic cryptography cipher types";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-enigma" = callPackage
({
  mkDerivation
, base
, containers
, MissingH
, mtl
, split
, stdenv
}:
mkDerivation {

pname = "crypto-enigma";
version = "0.0.2.12";
sha256 = "2bb942397a3ca2a099e8c4b59a3810a0fe3a4d255c077e8e0db8e8764fb6b83c";
libraryHaskellDepends = [
base
containers
MissingH
mtl
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/orome/crypto-enigma-hs";
description = "An Enigma machine simulator with display";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-pubkey-types" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, stdenv
}:
mkDerivation {

pname = "crypto-pubkey-types";
version = "0.4.3";
sha256 = "7ed9f52281ec4e34021a91818fe45288e33d65bff937f60334a3f45be5a71c60";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
description = "Generic cryptography Public keys algorithm types";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-random" = callPackage
({
  mkDerivation
, base
, bytestring
, securemem
, stdenv
, unix
, vector
}:
mkDerivation {

pname = "crypto-random";
version = "0.0.9";
sha256 = "170a7a18441379c2d1c19b502ee5919026a19adc6e78641cd4fb40b1d69a6904";
libraryHaskellDepends = [
base
bytestring
securemem
unix
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-random";
description = "Simple cryptographic random related types";
license = stdenv.lib.licenses.bsd3;

}) {};
"crypto-random-api" = callPackage
({
  mkDerivation
, base
, bytestring
, entropy
, stdenv
}:
mkDerivation {

pname = "crypto-random-api";
version = "0.2.0";
sha256 = "56e9777061bd9ce553683d097ba3a11fdc371724060b62ca103f1f291f9f897c";
libraryHaskellDepends = [
base
bytestring
entropy
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-random-api";
description = "Simple random generators API for cryptography related code";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptocipher" = callPackage
({
  mkDerivation
, base
, cipher-aes
, cipher-blowfish
, cipher-camellia
, cipher-des
, cipher-rc4
, crypto-cipher-types
, stdenv
}:
mkDerivation {

pname = "cryptocipher";
version = "0.6.2";
sha256 = "34b9e62dee36c4019dd0c0e86576295d0bd1bb573eeb24686ec635a09550e346";
libraryHaskellDepends = [
base
cipher-aes
cipher-blowfish
cipher-camellia
cipher-des
cipher-rc4
crypto-cipher-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-crypto-cipher";
description = "Symmetrical block and stream ciphers";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptocompare" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, exceptions
, http-conduit
, MissingH
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "cryptocompare";
version = "0.1.1";
sha256 = "d12e0f6fd133e538852e5700b0a31d81c6885dc8b1e9e88d1b331dcec38316b3";
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
exceptions
http-conduit
MissingH
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aviaviavi/cryptocompare";
description = "Haskell wrapper for the cryptocompare API";
license = stdenv.lib.licenses.mit;

}) {};
"cryptohash" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, cryptonite
, ghc-prim
, memory
, stdenv
}:
mkDerivation {

pname = "cryptohash";
version = "0.11.9";
sha256 = "c28f847fc1fcd65b6eea2e74a100300af940919f04bb21d391f6a773968f22fb";
libraryHaskellDepends = [
base
byteable
bytestring
cryptonite
ghc-prim
memory
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-cryptohash";
description = "collection of crypto hashes, fast, pure and practical";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-cryptoapi" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, crypto-api
, cryptonite
, memory
, stdenv
, tagged
}:
mkDerivation {

pname = "cryptohash-cryptoapi";
version = "0.1.4";
sha256 = "717a8664ebfaa1c31aaec1d78c9b7c776a5adcfdfc50ad88e21a34566f72058e";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
cryptonite
memory
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-cryptohash-cryptoapi";
description = "Crypto-api interfaces for cryptohash";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-md5" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "cryptohash-md5";
version = "0.11.100.1";
sha256 = "710bd48770fa3e9a3b05428c6dc77fb72c91956d334a1eb89ded11bb843e18f9";
revision = "2";
editedCabalFile = "0vyb9cfvpfxpslxvvhd48gw37i9g8ry5x63xwxd9q7xfiqhs7p3a";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cryptohash-md5";
description = "Fast, pure and practical MD5 implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-sha1" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "cryptohash-sha1";
version = "0.11.100.1";
sha256 = "3c79af33542512442f8f87f6abb1faef7cd43bbfb2859260a33251d861eb0dab";
revision = "2";
editedCabalFile = "0xas0nbq9bfdzlj6k565ibizv1cqvzfzsdj6q9pdiiwyxqblqc3m";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cryptohash-sha1";
description = "Fast, pure and practical SHA-1 implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-sha256" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "cryptohash-sha256";
version = "0.11.101.0";
sha256 = "52756435dbea248e344fbcbcc5df5307f60dfacf337dfd11ae30f1c7a4da05dd";
revision = "1";
editedCabalFile = "19birnmwga1yh82l4jqc3fygqkqcf5y8dlldnxfswngkzc3rvwp3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cryptohash-sha256";
description = "Fast, pure and practical SHA-256 implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptohash-sha512" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "cryptohash-sha512";
version = "0.11.100.1";
sha256 = "10698bb9575eaa414a65d9644caa9408f9276c63447406e0a4faef91db1071a9";
revision = "2";
editedCabalFile = "1xy1j3bn2w8my0q04s7z460rddmnqfdh43l95m86rpk75xpiryil";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/cryptohash-sha512";
description = "Fast, pure and practical SHA-512 implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptonite" = callPackage
({
  mkDerivation
, base
, basement
, bytestring
, deepseq
, ghc-prim
, integer-gmp
, memory
, stdenv
}:
mkDerivation {

pname = "cryptonite";
version = "0.25";
sha256 = "89be1a18af8730a7bfe4d718d7d5f6ce858e9df93a411566d15bf992db5a3c8c";
libraryHaskellDepends = [
base
basement
bytestring
deepseq
ghc-prim
integer-gmp
memory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-crypto/cryptonite";
description = "Cryptography Primitives sink";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptonite-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, cryptonite
, exceptions
, memory
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "cryptonite-conduit";
version = "0.2.2";
sha256 = "705d69ab3f79b7b8810c7b9e7da81a1c6686b6a4323b1e78150576a25a658dae";
revision = "1";
editedCabalFile = "1hh2nzfz4qpxgivfilgk4ll416lph8b2fdkzpzrmqfjglivydfmz";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
cryptonite
exceptions
memory
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-crypto/cryptonite-conduit";
description = "cryptonite conduit";
license = stdenv.lib.licenses.bsd3;

}) {};
"cryptonite-openssl" = callPackage
({
  mkDerivation
, base
, basement
, bytestring
, cryptonite
, memory
, openssl
, stdenv
}:
mkDerivation {

pname = "cryptonite-openssl";
version = "0.7";
sha256 = "9e4e1c08264f26e602ef3054f3c827c3c65d153e5b9d68a0cb44f446ca0844f6";
libraryHaskellDepends = [
base
basement
bytestring
cryptonite
memory
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-crypto/cryptonite-openssl";
description = "Crypto stuff using OpenSSL cryptographic library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openssl;};
"csp" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, nondeterminism
, stdenv
}:
mkDerivation {

pname = "csp";
version = "1.3.1";
sha256 = "d83c5e51dd32a796af8cfacac94312cb99691be30d924e159bc1c4b8cef9530b";
libraryHaskellDepends = [
base
containers
mtl
nondeterminism
];
doHaddock = false;
doCheck = false;
description = "Discrete constraint satisfaction problem (CSP) solver";
license = "LGPL";

}) {};
"css-syntax" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "css-syntax";
version = "0.0.7";
sha256 = "23fc1d47e94620eee586001c56c4e0c1ba17f5dab9c496245c7cff7ab9cd6064";
libraryHaskellDepends = [
attoparsec
base
bytestring
scientific
text
];
doHaddock = false;
doCheck = false;
description = "This package implments a parser for the CSS syntax";
license = stdenv.lib.licenses.mit;

}) {};
"css-text" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
, text
}:
mkDerivation {

pname = "css-text";
version = "0.1.3.0";
sha256 = "5ff507bf3863219f41e7f2d215e5511fe15ee13d1e28bd3ee64e0b0b894bcd7a";
libraryHaskellDepends = [
attoparsec
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/css-text.git#readme";
description = "CSS parser and renderer";
license = stdenv.lib.licenses.mit;

}) {};
"csv" = callPackage
({
  mkDerivation
, base
, filepath
, parsec
, stdenv
}:
mkDerivation {

pname = "csv";
version = "0.1.2";
sha256 = "8cf43442325faa1368f9b55ad952beccf677d9980cdffa3d70a7f204a23ae600";
libraryHaskellDepends = [
base
filepath
parsec
];
doHaddock = false;
doCheck = false;
description = "CSV loader and dumper";
license = stdenv.lib.licenses.mit;

}) {};
"csv-conduit" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, blaze-builder
, bytestring
, conduit
, conduit-extra
, containers
, data-default
, exceptions
, ghc-prim
, mmorph
, monad-control
, mtl
, primitive
, resourcet
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "csv-conduit";
version = "0.6.8.1";
sha256 = "b634639b86506df353785f1d4e644dc85a99e915aa048b9a3c8f9f02c9783048";
libraryHaskellDepends = [
array
attoparsec
base
blaze-builder
bytestring
conduit
conduit-extra
containers
data-default
exceptions
ghc-prim
mmorph
monad-control
mtl
primitive
resourcet
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ozataman/csv-conduit";
description = "A flexible, fast, conduit-based CSV parser library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"ctrie" = callPackage
({
  mkDerivation
, atomic-primops
, base
, hashable
, primitive
, stdenv
}:
mkDerivation {

pname = "ctrie";
version = "0.2";
sha256 = "20e3a6d39f65ed1663ff5ab2c5431dc12b1c601d2133a74bc7bea1596ad9c814";
libraryHaskellDepends = [
atomic-primops
base
hashable
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mcschroeder/ctrie";
description = "Non-blocking concurrent map";
license = stdenv.lib.licenses.mit;

}) {};
"cubicspline" = callPackage
({
  mkDerivation
, base
, hmatrix
, safe
, stdenv
}:
mkDerivation {

pname = "cubicspline";
version = "0.1.2";
sha256 = "5b6ced9ca65b0d01ddceaf18605c8f915491d8d4a6aaef73475c4e8d4b1a9b79";
libraryHaskellDepends = [
base
hmatrix
safe
];
doHaddock = false;
doCheck = false;
description = "Natural cubic spline interpolation";
license = stdenv.lib.licenses.bsd3;

}) {};
"cublas" = callPackage
({
  mkDerivation
, base
, c2hs
, Cabal
, cuda
, directory
, filepath
, half
, stdenv
, storable-complex
, template-haskell
}:
mkDerivation {

pname = "cublas";
version = "0.4.0.1";
sha256 = "99bec4304f2ee99466721451e6a0d25af1d7a75d22efe37b2f6865656af6603a";
setupHaskellDepends = [
base
Cabal
cuda
directory
filepath
];
libraryHaskellDepends = [
base
cuda
half
storable-complex
template-haskell
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
description = "FFI bindings to the CUDA BLAS library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cuda" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, Cabal
, directory
, filepath
, pretty
, stdenv
, template-haskell
}:
mkDerivation {

pname = "cuda";
version = "0.9.0.3";
sha256 = "989099cc59ac34538e01b2ec05ea876280b8f8b3f79028f14fd4774af390a57a";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
directory
filepath
];
libraryHaskellDepends = [
base
bytestring
filepath
template-haskell
];
libraryToolDepends = [
c2hs
];
executableHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tmcdonell/cuda";
description = "FFI binding to the CUDA interface for programming NVIDIA GPUs";
license = stdenv.lib.licenses.bsd3;

}) {};
"cue-sheet" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default-class
, exceptions
, megaparsec
, mtl
, QuickCheck
, stdenv
, text
}:
mkDerivation {

pname = "cue-sheet";
version = "1.0.1";
sha256 = "214a58e87a849c8311eb652ca215b4f5789d724e7499324544b3a01187577f8f";
revision = "2";
editedCabalFile = "09h4phhj0j1m4ab5gbfrz6475jn772x46l21k7l2qlxav6hi9w7x";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
data-default-class
exceptions
megaparsec
mtl
QuickCheck
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/cue-sheet";
description = "Support for construction, rendering, and parsing of CUE sheets";
license = stdenv.lib.licenses.bsd3;

}) {};
"cufft" = callPackage
({
  mkDerivation
, base
, c2hs
, Cabal
, cuda
, directory
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "cufft";
version = "0.8.0.0";
sha256 = "f7bdd8117b35baf630ae8b276a2dea0fd47e0cbc5e6e50802e4007d2d201dd58";
setupHaskellDepends = [
base
Cabal
cuda
directory
filepath
template-haskell
];
libraryHaskellDepends = [
base
cuda
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/robeverest/cufft";
description = "Haskell bindings for the CUFFT library";
license = stdenv.lib.licenses.bsd3;

}) {};
"curl" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, curl
, stdenv
}:
mkDerivation {

pname = "curl";
version = "1.3.8";
sha256 = "9087c936bfcdb865bad3166baa3f12bf37acf076fa76010e3b5f82a1d485446e";
revision = "1";
editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
libraryHaskellDepends = [
base
bytestring
containers
];
librarySystemDepends = [
curl
];
doHaddock = false;
doCheck = false;
description = "Haskell binding to libcurl";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) curl;};
"curl-runnings" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, cmdargs
, directory
, hspec
, hspec-expectations
, http-conduit
, stdenv
, text
, unordered-containers
, yaml
}:
mkDerivation {

pname = "curl-runnings";
version = "0.2.0";
sha256 = "76447326883359c1f34b17882716e71ca261f87118b99d051e4aa9346c43496b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
directory
hspec
hspec-expectations
http-conduit
text
unordered-containers
yaml
];
executableHaskellDepends = [
base
cmdargs
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aviaviavi/curl-runnings#readme";
description = "A framework for declaratively writing curl based API tests";
license = stdenv.lib.licenses.mit;

}) {};
"currencies" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "currencies";
version = "0.1.1.1";
sha256 = "d58e021d319917d70ea5e7069daef67788f4c2081c095d44c511fd392e3f0bf0";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alx741/currencies#readme";
description = "Currencies representation, pretty printing and conversion";
license = stdenv.lib.licenses.bsd3;

}) {};
"cusolver" = callPackage
({
  mkDerivation
, base
, c2hs
, Cabal
, cublas
, cuda
, cusparse
, directory
, filepath
, half
, stdenv
, storable-complex
}:
mkDerivation {

pname = "cusolver";
version = "0.1.0.1";
sha256 = "f31090ced40cc028e7e495e2747900603e49930eeb6c50f286fbdf503c6c5cf2";
setupHaskellDepends = [
base
Cabal
cuda
directory
filepath
];
libraryHaskellDepends = [
base
cublas
cuda
cusparse
half
storable-complex
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
description = "FFI bindings to CUDA Solver, a LAPACK-like library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cusparse" = callPackage
({
  mkDerivation
, base
, c2hs
, Cabal
, cuda
, directory
, filepath
, half
, stdenv
, storable-complex
}:
mkDerivation {

pname = "cusparse";
version = "0.1.0.1";
sha256 = "bc941dfc3ca8d0905728e60c29a86a247c5a479c7425e6ca4190be45e26d54bb";
setupHaskellDepends = [
base
Cabal
cuda
directory
filepath
];
libraryHaskellDepends = [
base
cuda
half
storable-complex
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
description = "FFI bindings to the CUDA Sparse BLAS library";
license = stdenv.lib.licenses.bsd3;

}) {};
"cutter" = callPackage
({
  mkDerivation
, base
, bytestring
, explicit-exception
, spreadsheet
, stdenv
, utility-ht
}:
mkDerivation {

pname = "cutter";
version = "0.0";
sha256 = "117319c36a20efea6d9edd0a8d902e37ec0386512f2eb8a6e5563411c00c6ac2";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
explicit-exception
spreadsheet
utility-ht
];
doHaddock = false;
doCheck = false;
description = "Cut files according to a position list";
license = stdenv.lib.licenses.bsd3;

}) {};
"czipwith" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "czipwith";
version = "1.0.0.0";
sha256 = "45a2af0fd73f4cb7968c382465d8c5c6f4807d195d85e5b35bccef8f5e7c2ce1";
revision = "1";
editedCabalFile = "1vz6nrmxhl2rrwcg16dpp09q64pk9z9j0ka97lqhxdzpvqm0fg88";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lspitzner/czipwith/";
description = "CZipWith class and deriving via TH";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-accessor" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "data-accessor";
version = "0.2.2.7";
sha256 = "3465227ad5f81059a885d354e2f3c108d550287580e6939e18350fa65e78c2ed";
libraryHaskellDepends = [
array
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Record_access";
description = "Utilities for accessing and manipulating fields of records";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-accessor-mtl" = callPackage
({
  mkDerivation
, base
, data-accessor
, mtl
, stdenv
}:
mkDerivation {

pname = "data-accessor-mtl";
version = "0.2.0.4";
sha256 = "10cf9166e2e046076b7e58987718e57b31408e7cada9f26c8ff111e0379814c5";
libraryHaskellDepends = [
base
data-accessor
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Record_access";
description = "Use Accessor to access state in mtl State monad class";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-accessor-template" = callPackage
({
  mkDerivation
, base
, data-accessor
, stdenv
, template-haskell
, utility-ht
}:
mkDerivation {

pname = "data-accessor-template";
version = "0.2.1.15";
sha256 = "802b7f55ef02773b44d42c19175f52b5ef1b122df0e91ad0ef9a8add4d33ba6f";
libraryHaskellDepends = [
base
data-accessor
template-haskell
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Record_access";
description = "Utilities for accessing and manipulating fields of records";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-accessor-transformers" = callPackage
({
  mkDerivation
, base
, data-accessor
, stdenv
, transformers
}:
mkDerivation {

pname = "data-accessor-transformers";
version = "0.2.1.7";
sha256 = "20c8823dc16c7ca6f55c64eb5564c9aae4b5565406987a046ded2ea73618e07a";
libraryHaskellDepends = [
base
data-accessor
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Record_access";
description = "Use Accessor to access state in transformers State monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-binary-ieee754" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "data-binary-ieee754";
version = "0.4.4";
sha256 = "59975abed8f4caa602f0780c10a9b2493479e6feb71ad189bb10c3ac5678df0a";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/data-binary-ieee754/";
description = "Parser/Serialiser for IEEE-754 floating-point values";
license = stdenv.lib.licenses.mit;

}) {};
"data-bword" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "data-bword";
version = "0.1.0.1";
sha256 = "70f01f857865edcf1d1d20128b0202320b1635cc03b00954b6d1447cd699db7d";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/data-bword";
description = "Extra operations on binary words of fixed length";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-checked" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "data-checked";
version = "0.3";
sha256 = "dc87d09c7c8587c9e6e372166e8de3b42c2cd804a493ff100c253e4d713c5676";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/data-checked";
description = "Type-indexed runtime-checked properties";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-clist" = callPackage
({
  mkDerivation
, base
, deepseq
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "data-clist";
version = "0.1.2.1";
sha256 = "9a1882e286e2f5428517375e129dc3c6fb12114f360cd4a767e7a699d67c8416";
libraryHaskellDepends = [
base
deepseq
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sw17ch/data-clist";
description = "Simple functional ring type";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default" = callPackage
({
  mkDerivation
, base
, data-default-class
, data-default-instances-containers
, data-default-instances-dlist
, data-default-instances-old-locale
, stdenv
}:
mkDerivation {

pname = "data-default";
version = "0.7.1.1";
sha256 = "b0f95d279cd75cacaa8152a01590dc3460f7134f6840b37052abb3ba3cb2a511";
libraryHaskellDepends = [
base
data-default-class
data-default-instances-containers
data-default-instances-dlist
data-default-instances-old-locale
];
doHaddock = false;
doCheck = false;
description = "A class for types with a default value";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-class" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-default-class";
version = "0.1.2.0";
sha256 = "4f01b423f000c3e069aaf52a348564a6536797f31498bb85c3db4bd2d0973e56";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A class for types with a default value";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-instances-containers" = callPackage
({
  mkDerivation
, base
, containers
, data-default-class
, stdenv
}:
mkDerivation {

pname = "data-default-instances-containers";
version = "0.0.1";
sha256 = "a55e07af005c9815d82f3fc95e125db82994377c9f4a769428878701d4ec081a";
libraryHaskellDepends = [
base
containers
data-default-class
];
doHaddock = false;
doCheck = false;
description = "Default instances for types in containers";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-instances-dlist" = callPackage
({
  mkDerivation
, base
, data-default-class
, dlist
, stdenv
}:
mkDerivation {

pname = "data-default-instances-dlist";
version = "0.0.1";
sha256 = "7d683711cbf08abd7adcd5ac2be825381308d220397315a5570fe61b719b5959";
libraryHaskellDepends = [
base
data-default-class
dlist
];
doHaddock = false;
doCheck = false;
description = "Default instances for types in dlist";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-default-instances-old-locale" = callPackage
({
  mkDerivation
, base
, data-default-class
, old-locale
, stdenv
}:
mkDerivation {

pname = "data-default-instances-old-locale";
version = "0.0.1";
sha256 = "60d3b02922958c4908d7bf2b24ddf61511665745f784227d206745784b0c0802";
libraryHaskellDepends = [
base
data-default-class
old-locale
];
doHaddock = false;
doCheck = false;
description = "Default instances for types in old-locale";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-diverse" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, ghc-prim
, stdenv
, tagged
}:
mkDerivation {

pname = "data-diverse";
version = "2.0.1.0";
sha256 = "ab801d352521780f39112d642bc8d626fbdf88e0b2e79dc19984baaa80ad2725";
libraryHaskellDepends = [
base
containers
deepseq
ghc-prim
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/data-diverse#readme";
description = "Extensible records and polymorphic variants";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-diverse-lens" = callPackage
({
  mkDerivation
, base
, data-diverse
, generic-lens
, lens
, profunctors
, stdenv
, tagged
}:
mkDerivation {

pname = "data-diverse-lens";
version = "2.1.0.0";
sha256 = "47d70a26f948343c0dfd084b8778e5dce1e0ddc566a3cfc2a24ec9a78e71e1c4";
libraryHaskellDepends = [
base
data-diverse
generic-lens
lens
profunctors
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/data-diverse-lens#readme";
description = "Isos & Lens for Data.Diverse.Many and Prisms for Data.Diverse.Which";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-dword" = callPackage
({
  mkDerivation
, base
, data-bword
, ghc-prim
, hashable
, stdenv
, template-haskell
}:
mkDerivation {

pname = "data-dword";
version = "0.3.1.2";
sha256 = "6b677600221de86eaee21dd2d4c23c04320370c594a56f7bb3477ef4e4b69120";
libraryHaskellDepends = [
base
data-bword
ghc-prim
hashable
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/data-dword";
description = "Stick two binary words together to get a bigger one";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-endian" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-endian";
version = "0.1.1";
sha256 = "8c1d4f30374f8331d31f4d7c6b39284331b6b9436e7b50f86547417bd05f2ac0";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/data-endian";
description = "Endian-sensitive data";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-fix" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-fix";
version = "0.2.0";
sha256 = "7e5718055cb27ccac1e0bf25be70ba9bfe2b0d021cfe0a57a163355830341392";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/anton-k/data-fix";
description = "Fixpoint data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-has" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-has";
version = "0.3.0.0";
sha256 = "3c25d403605ecb196df53c8c8fb7829cd7b6a88e0ea04b88038602ba7faa7379";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/data-has";
description = "Simple extensible product";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-hash" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
}:
mkDerivation {

pname = "data-hash";
version = "0.2.0.1";
sha256 = "9117dd49013ca28ff188fc71c3595ac3af23d56d301c1f39bac93d44d8c60bbe";
libraryHaskellDepends = [
array
base
containers
];
doHaddock = false;
doCheck = false;
description = "Combinators for building fast hashing functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-inttrie" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-inttrie";
version = "0.1.4";
sha256 = "6b3a7d8d49b0676c09486ac08107b0e5a6dfd66d9627443be440e9fd11e7bd54";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/luqui/data-inttrie";
description = "A simple lazy, infinite trie from integers";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-lens-light" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
}:
mkDerivation {

pname = "data-lens-light";
version = "0.1.2.2";
sha256 = "72d3e6a73bde4a32eccd2024eb58ca96da962d4b659d76baed4ab37f28dcb36e";
libraryHaskellDepends = [
base
mtl
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/data-lens-light";
description = "Simple lenses, minimum dependencies";
license = stdenv.lib.licenses.mit;

}) {};
"data-memocombinators" = callPackage
({
  mkDerivation
, array
, base
, data-inttrie
, stdenv
}:
mkDerivation {

pname = "data-memocombinators";
version = "0.5.1";
sha256 = "b4341d2024b84a43f92edc39f6d6766bf4f0f00a40fd834b9f6f8e987b606ed7";
libraryHaskellDepends = [
array
base
data-inttrie
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/luqui/data-memocombinators";
description = "Combinators for building memo tables";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-msgpack" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, data-binary-ieee754
, data-msgpack-types
, groom
, stdenv
, text
}:
mkDerivation {

pname = "data-msgpack";
version = "0.0.11";
sha256 = "2904fc96617dc7885d0ebdac75149ed969f223af8a18628f72927da3832eb885";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
data-binary-ieee754
data-msgpack-types
text
];
executableHaskellDepends = [
base
bytestring
groom
];
doHaddock = false;
doCheck = false;
homepage = "http://msgpack.org/";
description = "A Haskell implementation of MessagePack";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-msgpack-types" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, hashable
, QuickCheck
, stdenv
, text
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "data-msgpack-types";
version = "0.0.1";
sha256 = "529f139f089643a240c6e139b76c4ca1f18bce24dd352615584ebf041e94a898";
libraryHaskellDepends = [
base
bytestring
containers
deepseq
hashable
QuickCheck
text
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "http://msgpack.org/";
description = "A Haskell implementation of MessagePack";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-or" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-or";
version = "1.0.0.5";
sha256 = "9defb64f1c7210460a940beb7f32ba1c79f363fbf3a5bd126feb876930c6e672";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "A data type for non-exclusive disjunction";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-ordlist" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "data-ordlist";
version = "0.4.7.0";
sha256 = "6f6c1e7a9a9155ad78ca78cb9abd6f7e2e1c78b3e549b179dc0874e6428f490d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Set and bag operations on ordered lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-ref" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "data-ref";
version = "0.0.1.1";
sha256 = "a4dabee83c7419199791d0ebf7870f926b1ca834a361ecfeb3c134f7fa64f268";
libraryHaskellDepends = [
base
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.haskell.org/Mutable_variable";
description = "Unify STRef and IORef in plain Haskell 98";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-reify" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "data-reify";
version = "0.6.1";
sha256 = "61350a1e96cb1276c2b6b8b13fa1bade5d4e63c702509a3f5e90bbc19ad9b202";
revision = "1";
editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://ku-fpg.github.io/software/data-reify/";
description = "Reify a recursive data structure into an explicit graph";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-serializer" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cereal
, data-endian
, parsers
, semigroups
, split
, stdenv
}:
mkDerivation {

pname = "data-serializer";
version = "0.3.4";
sha256 = "e793156aa2262ca294183a9d045f37e6ff2070825b40d2ffe5a8d64e0b455ec6";
libraryHaskellDepends = [
base
binary
bytestring
cereal
data-endian
parsers
semigroups
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/data-serializer";
description = "Common API for serialization libraries";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-textual" = callPackage
({
  mkDerivation
, base
, bytestring
, parsers
, stdenv
, text
, text-latin1
, text-printer
}:
mkDerivation {

pname = "data-textual";
version = "0.3.0.2";
sha256 = "44c530b081a486c50d668004637814223d1f1890716d39f7b692c83644d29830";
libraryHaskellDepends = [
base
bytestring
parsers
text
text-latin1
text-printer
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/data-textual";
description = "Human-friendly textual representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"data-tree-print" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
, syb
}:
mkDerivation {

pname = "data-tree-print";
version = "0.1.0.1";
sha256 = "cec8c278e1033695ce97e2d7bf5db2b1b45a764976e59d06c67a6fe4fc5401fe";
libraryHaskellDepends = [
base
pretty
syb
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lspitzner/data-tree-print";
description = "Print Data instances as a nested tree";
license = stdenv.lib.licenses.bsd3;

}) {};
"datadog" = callPackage
({
  mkDerivation
, aeson
, auto-update
, base
, buffer-builder
, bytestring
, dlist
, http-client
, http-client-tls
, http-types
, lens
, lifted-base
, monad-control
, network
, old-locale
, stdenv
, text
, time
, transformers-base
, unordered-containers
, vector
}:
mkDerivation {

pname = "datadog";
version = "0.2.2.0";
sha256 = "450fb6fba21d9739c8269f167ecf084d966e2248084386ab5c04b2748b4b6944";
libraryHaskellDepends = [
aeson
auto-update
base
buffer-builder
bytestring
dlist
http-client
http-client-tls
http-types
lens
lifted-base
monad-control
network
old-locale
text
time
transformers-base
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iand675/datadog";
description = "Datadog client for Haskell. Supports both the HTTP API and StatsD.";
license = stdenv.lib.licenses.mit;

}) {};
"datasets" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, cassava
, directory
, file-embed
, filepath
, hashable
, microlens
, stdenv
, stringsearch
, text
, time
, vector
, wreq
}:
mkDerivation {

pname = "datasets";
version = "0.2.5";
sha256 = "9a9139130936102bbfa60324e1ed7f9fd5b9a68db096917f589e8bb07999fdba";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
cassava
directory
file-embed
filepath
hashable
microlens
stringsearch
text
time
vector
wreq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/diffusionkinetics/open/datasets";
description = "Classical data sets for statistics and machine learning";
license = stdenv.lib.licenses.mit;

}) {};
"dataurl" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "dataurl";
version = "0.1.0.0";
sha256 = "b1e72b48dbe72520f0b43b06ae75cb025e9750213982583f527e16b605660fb2";
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/dataurl#readme";
description = "Handle data-urls";
license = stdenv.lib.licenses.mit;

}) {};
"dawg-ord" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, transformers
, vector
}:
mkDerivation {

pname = "dawg-ord";
version = "0.5.1.0";
sha256 = "d9129acfb71ce41b6994d2c72a040319fc85af408226122d3958d5617e8922e9";
libraryHaskellDepends = [
base
containers
mtl
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kawu/dawg-ord";
description = "Directed acyclic word graphs";
license = stdenv.lib.licenses.bsd3;

}) {};
"dbcleaner" = callPackage
({
  mkDerivation
, base
, postgresql-simple
, stdenv
, text
}:
mkDerivation {

pname = "dbcleaner";
version = "0.1.3";
sha256 = "0817b0e1698d8d48ac58d631f51dc6e34663f4e97af7bac3fd03e31349830f35";
libraryHaskellDepends = [
base
postgresql-simple
text
];
doHaddock = false;
doCheck = false;
description = "Clean database tables automatically around hspec tests";
license = stdenv.lib.licenses.mit;

}) {};
"dbus" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, deepseq
, libxml-sax
, network
, parsec
, random
, stdenv
, text
, transformers
, unix
, vector
, xml-types
}:
mkDerivation {

pname = "dbus";
version = "0.10.15";
sha256 = "6455659dc4e2b3078887506099039dc06fdda559a9cddb3ff9df5584b792baa8";
libraryHaskellDepends = [
base
bytestring
cereal
containers
deepseq
libxml-sax
network
parsec
random
text
transformers
unix
vector
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rblaze/haskell-dbus#readme";
description = "A client library for the D-Bus IPC system";
license = stdenv.lib.licenses.gpl3;

}) {};
"debian-build" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, process
, split
, stdenv
, transformers
}:
mkDerivation {

pname = "debian-build";
version = "0.10.1.1";
sha256 = "d3e6a924367ddd7087f00ac448afb3f12cb5a70392194f1bcd15a33b81766537";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
process
split
transformers
];
executableHaskellDepends = [
base
filepath
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://twitter.com/khibino/";
description = "Debian package build sequence tools";
license = stdenv.lib.licenses.bsd3;

}) {};
"debug" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, clock
, containers
, deepseq
, directory
, extra
, filepath
, ghc-prim
, hashable
, Hoed
, libgraph
, open-browser
, prettyprinter
, prettyprinter-compat-ansi-wl-pprint
, stdenv
, template-haskell
, text
, uniplate
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "debug";
version = "0.1.1";
sha256 = "330f44c6341833c5e0cccf08fa7674dd54f14a843a2b5703e25ce08ffed49248";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
clock
containers
deepseq
directory
extra
ghc-prim
hashable
Hoed
libgraph
open-browser
prettyprinter
prettyprinter-compat-ansi-wl-pprint
template-haskell
text
uniplate
unordered-containers
vector
];
executableHaskellDepends = [
aeson
base
directory
filepath
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/debug";
description = "Simple trace-based debugger";
license = stdenv.lib.licenses.bsd3;

}) {};
"declarative" = callPackage
({
  mkDerivation
, base
, hasty-hamiltonian
, kan-extensions
, lens
, mcmc-types
, mighty-metropolis
, mwc-probability
, pipes
, primitive
, speedy-slice
, stdenv
, transformers
}:
mkDerivation {

pname = "declarative";
version = "0.5.2";
sha256 = "1ea8cf5eb0283ed9d9a7e1d46e5386960587c1671f7ce568d6eaf1d1b8ba9a04";
libraryHaskellDepends = [
base
hasty-hamiltonian
kan-extensions
lens
mcmc-types
mighty-metropolis
mwc-probability
pipes
primitive
speedy-slice
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/declarative";
description = "DIY Markov Chains";
license = stdenv.lib.licenses.mit;

}) {};
"deepseq-generics" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "deepseq-generics";
version = "0.2.0.0";
sha256 = "b0b3ef5546c0768ef9194519a90c629f8f2ba0348487e620bb89d512187c7c9d";
revision = "2";
editedCabalFile = "1pnidf8w8x0w5fsqgv8hhrw07slmhxwy5x4fikgk0bd6k76aqicb";
libraryHaskellDepends = [
base
deepseq
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/deepseq-generics";
description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"dejafu" = callPackage
({
  mkDerivation
, base
, concurrency
, containers
, deepseq
, exceptions
, leancheck
, profunctors
, random
, ref-fd
, stdenv
, transformers
}:
mkDerivation {

pname = "dejafu";
version = "1.3.2.0";
sha256 = "c951b31e7ebc5a10d9f1bc1fd18822aa840616d747933b969a2b641bbd77bcbf";
libraryHaskellDepends = [
base
concurrency
containers
deepseq
exceptions
leancheck
profunctors
random
ref-fd
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "A library for unit-testing concurrent programs";
license = stdenv.lib.licenses.mit;

}) {};
"dependent-map" = callPackage
({
  mkDerivation
, base
, containers
, dependent-sum
, stdenv
}:
mkDerivation {

pname = "dependent-map";
version = "0.2.4.0";
sha256 = "5db396bdb5d156434af920c074316c3b84b4d39ba8e1cd349c7bb6679cb28246";
libraryHaskellDepends = [
base
containers
dependent-sum
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/dependent-map";
description = "Dependent finite maps (partial dependent products)";
license = "unknown";

}) {};
"dependent-sum" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "dependent-sum";
version = "0.4";
sha256 = "a8deecb4153a1878173f8d0a18de0378ab068bc15e5035b9e4cb478e8e4e1a1e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/dependent-sum";
description = "Dependent sum type";
license = stdenv.lib.licenses.publicDomain;

}) {};
"dependent-sum-template" = callPackage
({
  mkDerivation
, base
, dependent-sum
, stdenv
, template-haskell
, th-extras
}:
mkDerivation {

pname = "dependent-sum-template";
version = "0.0.0.6";
sha256 = "994cb4891949cad1b9ca268052377c58c174f77a469cae44742ac83727be91ad";
libraryHaskellDepends = [
base
dependent-sum
template-haskell
th-extras
];
doHaddock = false;
doCheck = false;
homepage = "/dev/null";
description = "Template Haskell code to generate instances of classes in dependent-sum package";
license = stdenv.lib.licenses.publicDomain;

}) {};
"deque" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "deque";
version = "0.2.1";
sha256 = "019d197e306724f1a09ad53ab9309cee1cfbbf5456f2956d3ab52a59fe523264";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/deque";
description = "Double-ended queue";
license = stdenv.lib.licenses.mit;

}) {};
"deriving-compat" = callPackage
({
  mkDerivation
, base
, containers
, ghc-boot-th
, ghc-prim
, stdenv
, template-haskell
, th-abstraction
, transformers
, transformers-compat
}:
mkDerivation {

pname = "deriving-compat";
version = "0.4.2";
sha256 = "7f3f4e1aca70c07a00a8885eaaf4153a60cf334c0f0f446bc9a083a64b8e976f";
libraryHaskellDepends = [
base
containers
ghc-boot-th
ghc-prim
template-haskell
th-abstraction
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-compat/deriving-compat";
description = "Backports of GHC deriving extensions";
license = stdenv.lib.licenses.bsd3;

}) {};
"descriptive" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, containers
, mtl
, scientific
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "descriptive";
version = "0.9.4";
sha256 = "795ec65756bf87ec6ea4c92d85a25d0eb0d8cfa1df40685ddcf74b83099bba2f";
libraryHaskellDepends = [
aeson
base
bifunctors
containers
mtl
scientific
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/descriptive";
description = "Self-describing consumers/parsers; forms, cmd-line args, JSON, etc";
license = stdenv.lib.licenses.bsd3;

}) {};
"dhall" = callPackage
({
  mkDerivation
, ansi-terminal
, ansi-wl-pprint
, base
, base16-bytestring
, bytestring
, case-insensitive
, containers
, contravariant
, cryptonite
, directory
, exceptions
, filepath
, haskeline
, http-client
, http-client-tls
, insert-ordered-containers
, lens-family-core
, memory
, mtl
, optparse-generic
, parsers
, prettyprinter
, prettyprinter-ansi-terminal
, repline
, scientific
, stdenv
, text
, text-format
, transformers
, trifecta
, unordered-containers
, vector
}:
mkDerivation {

pname = "dhall";
version = "1.11.1";
sha256 = "443db8677ed59da1af5d4714576963d586d44441a8fb6e3ef2d927144b7d4fed";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
base
base16-bytestring
bytestring
case-insensitive
containers
contravariant
cryptonite
directory
exceptions
filepath
http-client
http-client-tls
insert-ordered-containers
lens-family-core
memory
parsers
prettyprinter
prettyprinter-ansi-terminal
scientific
text
text-format
transformers
trifecta
unordered-containers
vector
];
executableHaskellDepends = [
ansi-terminal
base
haskeline
mtl
optparse-generic
prettyprinter
prettyprinter-ansi-terminal
repline
text
trifecta
];
doHaddock = false;
doCheck = false;
description = "A configuration language guaranteed to terminate";
license = stdenv.lib.licenses.bsd3;

}) {};
"dhall-json" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, dhall
, optparse-generic
, stdenv
, text
, trifecta
, unordered-containers
, yaml
}:
mkDerivation {

pname = "dhall-json";
version = "1.0.13";
sha256 = "3a256300d29feb19181280272fd7df79aecbb82e3429084e9255bdae59fa570f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
dhall
text
trifecta
unordered-containers
];
executableHaskellDepends = [
aeson
aeson-pretty
base
bytestring
dhall
optparse-generic
text
yaml
];
doHaddock = false;
doCheck = false;
description = "Compile Dhall to JSON or YAML";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-core" = callPackage
({
  mkDerivation
, adjunctions
, base
, containers
, distributive
, dual-tree
, lens
, linear
, monoid-extras
, mtl
, profunctors
, semigroups
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "diagrams-core";
version = "1.4.1.1";
sha256 = "a182e9f99e3664efdfa5e18f4b403703112fba33c5b877a91c9eabed1d8bb682";
libraryHaskellDepends = [
adjunctions
base
containers
distributive
dual-tree
lens
linear
monoid-extras
mtl
profunctors
semigroups
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Core libraries for diagrams EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-lib" = callPackage
({
  mkDerivation
, active
, adjunctions
, array
, base
, bytestring
, cereal
, colour
, containers
, data-default-class
, diagrams-core
, diagrams-solve
, directory
, distributive
, dual-tree
, exceptions
, filepath
, fingertree
, fsnotify
, hashable
, intervals
, JuicyPixels
, lens
, linear
, monoid-extras
, mtl
, optparse-applicative
, process
, profunctors
, semigroups
, stdenv
, tagged
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "diagrams-lib";
version = "1.4.2";
sha256 = "e9d41742ed3a92b9dff847c3936746e5a95cc4e187b7e4c35c3e3068c842afe5";
revision = "1";
editedCabalFile = "0vz16br2gn4agi35k92qw84cja2dqj63g7q3ak64jhc8r99bd4a1";
libraryHaskellDepends = [
active
adjunctions
array
base
bytestring
cereal
colour
containers
data-default-class
diagrams-core
diagrams-solve
directory
distributive
dual-tree
exceptions
filepath
fingertree
fsnotify
hashable
intervals
JuicyPixels
lens
linear
monoid-extras
mtl
optparse-applicative
process
profunctors
semigroups
tagged
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Embedded domain-specific language for declarative graphics";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-postscript" = callPackage
({
  mkDerivation
, base
, containers
, data-default-class
, diagrams-core
, diagrams-lib
, dlist
, filepath
, hashable
, lens
, monoid-extras
, mtl
, semigroups
, split
, statestack
, stdenv
}:
mkDerivation {

pname = "diagrams-postscript";
version = "1.4";
sha256 = "fe58f0010520716f66802adb0c1f70f48e77e9c4fcea5441e5343f4c1a5f8db4";
revision = "1";
editedCabalFile = "0vmiv3b74nml0ahb7dicq0m0vz2lahzfapln9aby0jb2saa0sf58";
libraryHaskellDepends = [
base
containers
data-default-class
diagrams-core
diagrams-lib
dlist
filepath
hashable
lens
monoid-extras
mtl
semigroups
split
statestack
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "Postscript backend for diagrams drawing EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-solve" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "diagrams-solve";
version = "0.1.1";
sha256 = "a41f5f410b10f162b1e5c07bd4ca3305544870ff1314ae4f5824c83a31644f9d";
revision = "2";
editedCabalFile = "1zgpx0jmgfr3mg77w3nz08cmgzlwfav2c6bcn68f53z829a6y5lf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Pure Haskell solver routines used by diagrams";
license = stdenv.lib.licenses.bsd3;

}) {};
"diagrams-svg" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, colour
, containers
, diagrams-core
, diagrams-lib
, filepath
, hashable
, JuicyPixels
, lens
, monoid-extras
, mtl
, optparse-applicative
, semigroups
, split
, stdenv
, svg-builder
, text
}:
mkDerivation {

pname = "diagrams-svg";
version = "1.4.1.1";
sha256 = "c80668c6ac1bf62b108016d36bfe3e603897ca8e331522b0e80b77152915daaa";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
colour
containers
diagrams-core
diagrams-lib
filepath
hashable
JuicyPixels
lens
monoid-extras
mtl
optparse-applicative
semigroups
split
svg-builder
text
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams/";
description = "SVG backend for diagrams drawing EDSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"dice" = callPackage
({
  mkDerivation
, base
, parsec
, random-fu
, stdenv
, transformers
}:
mkDerivation {

pname = "dice";
version = "0.1";
sha256 = "e13fe7dec8394aeddb71fb0e0ac68d8750096bfcc198a80d7bc30d94e01edde5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
random-fu
transformers
];
doHaddock = false;
doCheck = false;
description = "Simplistic D&D style dice-rolling system";
license = stdenv.lib.licenses.publicDomain;

}) {};
"dictionaries" = callPackage
({
  mkDerivation
, attoparsec
, base
, binary
, bytestring
, containers
, criterion
, data-default
, deepseq
, directory
, exceptions
, filepath
, random
, random-shuffle
, stdenv
, tagged
, text
, time
, transformers
, zlib
}:
mkDerivation {

pname = "dictionaries";
version = "0.2.0.4";
sha256 = "fde3c3d716af4eac7fd427c07a553473bafe0d97fd393f317f2fadea000fa8d4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
binary
bytestring
containers
data-default
deepseq
directory
exceptions
filepath
tagged
text
time
transformers
zlib
];
executableHaskellDepends = [
base
bytestring
containers
criterion
deepseq
directory
exceptions
filepath
random
random-shuffle
tagged
text
transformers
];
doHaddock = false;
doCheck = false;
description = "Tools to handle StarDict dictionaries";
license = stdenv.lib.licenses.bsd3;

}) {};
"diff3" = callPackage
({
  mkDerivation
, base
, Diff
, stdenv
}:
mkDerivation {

pname = "diff3";
version = "0.3.1";
sha256 = "a36b9614974c5989928e238db5d4e52936c4e56a9f67ed786bdbec68e095ca57";
libraryHaskellDepends = [
base
Diff
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/diff3.git";
description = "Perform a 3-way difference of documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"digest" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "digest";
version = "0.0.1.2";
sha256 = "641717eb16392abf8965986a9e8dc21eebf1d97775bbb6923c7b7f8fee17fe11";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
zlib
];
doHaddock = false;
doCheck = false;
description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) zlib;};
"digits" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "digits";
version = "0.3.1";
sha256 = "a8499c9745dcf8a4e6c48594f555e6c6276e8d91c457dcc562a370ccadcd6a2c";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
description = "Converts integers to lists of digits and back";
license = stdenv.lib.licenses.bsd3;

}) {};
"dimensional" = callPackage
({
  mkDerivation
, base
, deepseq
, exact-pi
, ieee754
, numtype-dk
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "dimensional";
version = "1.1";
sha256 = "3a25889c1c67966a2739a9c1ccd040278c89e10823a1b2463fbf571b74075e16";
libraryHaskellDepends = [
base
deepseq
exact-pi
ieee754
numtype-dk
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bjornbm/dimensional/";
description = "Statically checked physical dimensions, using Type Families and Data Kinds";
license = stdenv.lib.licenses.bsd3;

}) {};
"direct-rocksdb" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cabal-toolkit
, directory
, filepath
, safe-exceptions
, stdenv
}:
mkDerivation {

pname = "direct-rocksdb";
version = "0.0.3";
sha256 = "84358de7e6b6202336ccb038123f0b95c4e57fab6d2fd8e98ba3deb3b582058a";
setupHaskellDepends = [
base
Cabal
cabal-toolkit
directory
filepath
];
libraryHaskellDepends = [
base
bytestring
safe-exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TerrorJack/direct-rocksdb#readme";
description = "Bindings to RocksDB";
license = stdenv.lib.licenses.bsd3;

}) {};
"direct-sqlite" = callPackage
({
  mkDerivation
, base
, bytestring
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "direct-sqlite";
version = "2.3.23";
sha256 = "1fdb6f6ea34ac978e72f61a845786e4b4b945014ccc64ddb07ddcafa1254937b";
libraryHaskellDepends = [
base
bytestring
semigroups
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/IreneKnapp/direct-sqlite";
description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
license = stdenv.lib.licenses.bsd3;

}) {};
"directory" = callPackage
({
  mkDerivation
, base
, filepath
, stdenv
, time
, unix
}:
mkDerivation {

pname = "directory";
version = "1.3.1.1";
sha256 = "5354dd7644237d312f2a223446e0adc11a7ec36c72e1925cae11159869de8b42";
libraryHaskellDepends = [
base
filepath
time
unix
];
doHaddock = false;
doCheck = false;
description = "Platform-agnostic library for filesystem operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"directory-tree" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "directory-tree";
version = "0.12.1";
sha256 = "e2084495b3a226cf54d949635c86fc14e89daa09d86cce39e3c3cf898ae6e517";
libraryHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://brandon.si/code/directory-tree-module-released/";
description = "A simple directory-like tree datatype, with useful IO functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"discount" = callPackage
({
  mkDerivation
, base
, bytestring
, markdown
, stdenv
, text
}:
mkDerivation {

pname = "discount";
version = "0.1.1";
sha256 = "e99cb7fdd1896dd1e525616597f936c1305a657cea1ef82cc0b3dcfe5afa34e0";
libraryHaskellDepends = [
base
bytestring
text
];
librarySystemDepends = [
markdown
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lightquake/discount";
description = "Haskell bindings to the discount Markdown library";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) markdown;};
"discrimination" = callPackage
({
  mkDerivation
, array
, base
, containers
, contravariant
, deepseq
, ghc-prim
, hashable
, primitive
, profunctors
, promises
, semigroups
, stdenv
, transformers
, transformers-compat
, vector
, void
}:
mkDerivation {

pname = "discrimination";
version = "0.3";
sha256 = "d6d4b285783e66446a8f798b3a440b1020bdc681285b05794d3ec84d96dc4ca3";
libraryHaskellDepends = [
array
base
containers
contravariant
deepseq
ghc-prim
hashable
primitive
profunctors
promises
semigroups
transformers
transformers-compat
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/discrimination/";
description = "Fast generic linear-time sorting, joins and container construction";
license = stdenv.lib.licenses.bsd3;

}) {};
"disk-free-space" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "disk-free-space";
version = "0.1.0.1";
sha256 = "f17a4f9c3b41083ccbb6c11b2debdbc705f86097b7459ff0f46cc01d2692381f";
revision = "3";
editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/disk-free-space";
description = "Retrieve information about disk space usage";
license = stdenv.lib.licenses.bsd3;

}) {};
"disposable" = callPackage
({
  mkDerivation
, base
, dlist
, ghcjs-base-stub
, stdenv
}:
mkDerivation {

pname = "disposable";
version = "0.2.0.4";
sha256 = "c23fe12dce0aef49bcd52206fe927ac6ae1aa4af5c32028d6ceb4bc52b1fc96a";
libraryHaskellDepends = [
base
dlist
ghcjs-base-stub
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/disposable#readme";
description = "Allows storing different resource-releasing actions together";
license = stdenv.lib.licenses.bsd3;

}) {};
"distance" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "distance";
version = "0.1.0.0";
sha256 = "007cfb1c56ff8e8f905dad7c1630630162ffb8520925f028cf82e93ba7cd4a58";
revision = "1";
editedCabalFile = "0iysmnl4p1fsb4zd0mmr6q7zc7w90jrwcxxm7vi38658x19r8qmq";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/distance#readme";
description = "Useful distance datatype and functions";
license = stdenv.lib.licenses.mit;

}) {};
"distributed-closure" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, constraints
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "distributed-closure";
version = "0.4.0";
sha256 = "d56abae0390d30ca6adf9a2e84e770aa92e5b147e547d245fa3a56506dad5ee4";
libraryHaskellDepends = [
base
binary
bytestring
constraints
syb
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tweag/distributed-closure";
description = "Serializable closures for distributed programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-process" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-accessor
, deepseq
, distributed-static
, exceptions
, hashable
, mtl
, network-transport
, random
, rank1dynamic
, stdenv
, stm
, syb
, template-haskell
, time
, transformers
}:
mkDerivation {

pname = "distributed-process";
version = "0.7.3";
sha256 = "e5e9185f37a112534bdc9e03140dde7c986f338e83f63b626079b7b1a30ee7d4";
revision = "1";
editedCabalFile = "0vrk3lrrsc7rrzrkfqcc5q36clr8cy51v6dv4hpmi89fyngx6lz5";
libraryHaskellDepends = [
base
binary
bytestring
containers
data-accessor
deepseq
distributed-static
exceptions
hashable
mtl
network-transport
random
rank1dynamic
stm
syb
template-haskell
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com/";
description = "Cloud Haskell: Erlang-style concurrency in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-process-lifted" = callPackage
({
  mkDerivation
, base
, deepseq
, distributed-process
, distributed-process-monad-control
, lifted-base
, monad-control
, mtl
, network-transport
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "distributed-process-lifted";
version = "0.3.0.1";
sha256 = "33f7d59a12a294c5bd9c0037f822ba4341e1ae1dbad1356142bd6aba7870e480";
libraryHaskellDepends = [
base
deepseq
distributed-process
distributed-process-monad-control
lifted-base
monad-control
mtl
network-transport
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jeremyjh/distributed-process-lifted";
description = "monad-control style typeclass and transformer instances for Process monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-process-monad-control" = callPackage
({
  mkDerivation
, base
, distributed-process
, monad-control
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "distributed-process-monad-control";
version = "0.5.1.3";
sha256 = "a1ff561dacf4cf5fee863469ce17804f703f63812acdee16c188655126e5f49b";
libraryHaskellDepends = [
base
distributed-process
monad-control
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.io";
description = "Orphan instances for MonadBase and MonadBaseControl";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-process-simplelocalnet" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-accessor
, distributed-process
, network
, network-multicast
, network-transport
, network-transport-tcp
, stdenv
, transformers
}:
mkDerivation {

pname = "distributed-process-simplelocalnet";
version = "0.2.4";
sha256 = "2eea8b33398f06c5edd94dadabfb1a39e76a95a1ac385ff9597a4d8f0815df2b";
revision = "2";
editedCabalFile = "1msya8gyk48yngw5znyr68f5ygvmiz6yjyhwkgxzjj56h4zh0jh4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
data-accessor
distributed-process
network
network-multicast
network-transport
network-transport-tcp
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Simple zero-configuration backend for Cloud Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-process-tests" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, binary
, bytestring
, distributed-process
, distributed-static
, HUnit
, network
, network-transport
, random
, rematch
, setenv
, stdenv
, stm
, test-framework
, test-framework-hunit
}:
mkDerivation {

pname = "distributed-process-tests";
version = "0.4.11";
sha256 = "07c255bc16f7ead7ee29dc389351cb6a438ee229739af7020e86aa35a8aff566";
libraryHaskellDepends = [
ansi-terminal
base
binary
bytestring
distributed-process
distributed-static
HUnit
network
network-transport
random
rematch
setenv
stm
test-framework
test-framework-hunit
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-distributed/distributed-process/tree/master/distributed-process-tests";
description = "Tests and test support tools for distributed-process";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributed-static" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, rank1dynamic
, stdenv
}:
mkDerivation {

pname = "distributed-static";
version = "0.3.8";
sha256 = "954bf65722b662794990c81ba31a7fdbccd9d233af9212896443aa5ab9d4ffc2";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
rank1dynamic
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Compositional, type-safe, polymorphic static values and closures";
license = stdenv.lib.licenses.bsd3;

}) {};
"distribution" = callPackage
({
  mkDerivation
, array
, base
, containers
, MonadRandom
, random
, stdenv
}:
mkDerivation {

pname = "distribution";
version = "1.1.1.0";
sha256 = "fdd2f8eef65580e2248adab5a35e441180b0737ac14cb1307351a205043081b1";
libraryHaskellDepends = [
array
base
containers
MonadRandom
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redelmann/haskell-distribution";
description = "Finite discrete probability distributions";
license = stdenv.lib.licenses.asl20;

}) {};
"distribution-nixpkgs" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, Cabal
, containers
, deepseq
, language-nix
, lens
, pretty
, process
, split
, stdenv
}:
mkDerivation {

pname = "distribution-nixpkgs";
version = "1.1";
sha256 = "1d072e1918a494bd476f666d9665b4e14a7551f5c57cd9640f0f5f986b40a896";
revision = "1";
editedCabalFile = "08slqjvkji3lhn2aai07046vfbbrrgqv3nbkfb7wpiqr84x1q8cv";
libraryHaskellDepends = [
aeson
base
bytestring
Cabal
containers
deepseq
language-nix
lens
pretty
process
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/distribution-nixpkgs#readme";
description = "Types and functions to manipulate the Nixpkgs distribution";
license = stdenv.lib.licenses.bsd3;

}) {};
"distributive" = callPackage
({
  mkDerivation
, base
, base-orphans
, Cabal
, cabal-doctest
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "distributive";
version = "0.5.3";
sha256 = "9173805b9c941bda1f37e5aeb68ae30f57a12df9b17bd2aa86db3b7d5236a678";
revision = "5";
editedCabalFile = "0hl43mbw87s5l7p1iqc7iwz5rnzdcmj6g33pmq6hv4s9fg96j8x7";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
base-orphans
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/distributive/";
description = "Distributive functors -- Dual to Traversable";
license = stdenv.lib.licenses.bsd3;

}) {};
"diversity" = callPackage
({
  mkDerivation
, base
, containers
, data-ordlist
, fasta
, math-functions
, MonadRandom
, optparse-applicative
, parsec
, pipes
, random-shuffle
, scientific
, semigroups
, split
, stdenv
}:
mkDerivation {

pname = "diversity";
version = "0.8.1.0";
sha256 = "1bfb127ebd5c8cc9d5929222c7337d2eeecd66857875811ea9d9411227312832";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
data-ordlist
fasta
math-functions
MonadRandom
parsec
random-shuffle
scientific
split
];
executableHaskellDepends = [
base
containers
fasta
optparse-applicative
pipes
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GregorySchwartz/diversity";
description = "Quantify the diversity of a population";
license = stdenv.lib.licenses.gpl3;

}) {};
"djinn-ghc" = callPackage
({
  mkDerivation
, async
, base
, containers
, djinn-lib
, ghc
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "djinn-ghc";
version = "0.0.2.3";
sha256 = "cb956aed69bc5c342b45ef1b1142b6555fd2865dde1a80ac6ab3ef86aca314a4";
libraryHaskellDepends = [
async
base
containers
djinn-lib
ghc
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
license = stdenv.lib.licenses.bsd3;

}) {};
"djinn-lib" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, pretty
, stdenv
}:
mkDerivation {

pname = "djinn-lib";
version = "0.0.1.3";
sha256 = "3b35a6d89050249172519f90d6b166c1483d30c0259f10e48ffe52778c5f3364";
libraryHaskellDepends = [
base
containers
mtl
pretty
];
doHaddock = false;
doCheck = false;
homepage = "http://www.augustsson.net/Darcs/Djinn/";
description = "Generate Haskell code from a type. Library extracted from djinn package.";
license = stdenv.lib.licenses.bsd3;

}) {};
"dlist" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "dlist";
version = "0.8.0.4";
sha256 = "acf1867b80cdd618b8d904e89eea33be60d3c4c3aeb80d61f29229a301cc397a";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/spl/dlist";
description = "Difference lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"dlist-instances" = callPackage
({
  mkDerivation
, base
, dlist
, semigroups
, stdenv
}:
mkDerivation {

pname = "dlist-instances";
version = "0.1.1.1";
sha256 = "d14a10c06f52fb412b2c1066d729f5534aa43204221e7ba7d81d935c44ce4f5b";
libraryHaskellDepends = [
base
dlist
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/gregwebs/dlist-instances";
description = "Difference lists instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"dlist-nonempty" = callPackage
({
  mkDerivation
, base
, base-compat
, deepseq
, dlist
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "dlist-nonempty";
version = "0.1.1";
sha256 = "40e8a64c979ca07b4f67a38878d1d13c1127fe2d1ad6b2b4daff0ee2dbd54b33";
revision = "2";
editedCabalFile = "1968b6i0azv0bi3x6cw85ga89md1dh1wdmly3ivvvyb6i9mgwrn6";
libraryHaskellDepends = [
base
base-compat
deepseq
dlist
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/dlist-nonempty";
description = "Non-empty difference lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"dns" = callPackage
({
  mkDerivation
, async
, attoparsec
, auto-update
, base
, base64-bytestring
, binary
, bytestring
, containers
, cryptonite
, iproute
, mtl
, network
, psqueues
, safe
, stdenv
, time
}:
mkDerivation {

pname = "dns";
version = "3.0.4";
sha256 = "7b3433b536b7d225914d7b8495c7af1927d9554538d7d86c2644ccf9d3fa44a9";
libraryHaskellDepends = [
async
attoparsec
auto-update
base
base64-bytestring
binary
bytestring
containers
cryptonite
iproute
mtl
network
psqueues
safe
time
];
doHaddock = false;
doCheck = false;
testTarget = "spec";
description = "DNS library in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"do-list" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "do-list";
version = "1.0.1";
sha256 = "b377193461b0ad7a81f9e66bcf10f8838b6f1e39f4a5de3b2e2f45c749c5b694";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tserduke/do-list#readme";
description = "Do notation for free";
license = stdenv.lib.licenses.bsd3;

}) {};
"docker" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, conduit
, conduit-combinators
, conduit-extra
, containers
, data-default-class
, directory
, exceptions
, filemanip
, filepath
, http-client
, http-conduit
, http-types
, monad-control
, mtl
, network
, resourcet
, scientific
, stdenv
, tar
, temporary
, text
, time
, tls
, transformers
, transformers-base
, unliftio-core
, unordered-containers
, uuid
, vector
, x509
, x509-store
, x509-system
, zlib
}:
mkDerivation {

pname = "docker";
version = "0.5.1.1";
sha256 = "8a1c09da751d0e0d4baa57a1eef5d2e499df18d4bcf775c95dcf3ab2859a9a26";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
conduit
conduit-combinators
conduit-extra
containers
data-default-class
directory
exceptions
filemanip
filepath
http-client
http-conduit
http-types
monad-control
mtl
network
resourcet
scientific
tar
temporary
text
time
tls
transformers
transformers-base
unliftio-core
unordered-containers
uuid
vector
x509
x509-store
x509-system
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/denibertovic/docker-hs";
description = "An API client for docker written in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"docker-build-cacher" = callPackage
({
  mkDerivation
, base
, containers
, foldl
, language-docker
, stdenv
, system-filepath
, text
, turtle
}:
mkDerivation {

pname = "docker-build-cacher";
version = "1.9.2";
sha256 = "67a3c38fd1e1f3002ea56c52ffdc68f2d9154131b9d0c4c300d0ead8f60e6986";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
containers
foldl
language-docker
system-filepath
text
turtle
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seatgeek/docker-build-cacher#readme";
description = "Builds a services with docker and caches all of its intermediate stages";
license = stdenv.lib.licenses.bsd3;

}) {};
"dockerfile" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "dockerfile";
version = "0.1.0.1";
sha256 = "294ac0b6c0546da15bf5453d6006979aeb6f6b36f0566be75767f5021de00025";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A simple DSL for describing and generating Dockerfile containers in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"docopt" = callPackage
({
  mkDerivation
, base
, containers
, parsec
, stdenv
, template-haskell
, th-lift
}:
mkDerivation {

pname = "docopt";
version = "0.7.0.5";
sha256 = "15790808a4896bbf0748c1c0f3ab63c07aea4621d95b93a39886813f829d05ee";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
parsec
template-haskell
th-lift
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/docopt/docopt.hs";
description = "A command-line interface parser that will make you smile";
license = stdenv.lib.licenses.mit;

}) {};
"doctemplates" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, blaze-markup
, bytestring
, containers
, parsec
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "doctemplates";
version = "0.2.2.1";
sha256 = "6b0cfb565fc7fa90d71ac56b83aedecf670678e6f1441278877fbf399e9bccbf";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
blaze-html
blaze-markup
bytestring
containers
parsec
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/doctemplates#readme";
description = "Pandoc-style document templates";
license = stdenv.lib.licenses.bsd3;

}) {};
"doctest" = callPackage
({
  mkDerivation
, base
, base-compat
, code-page
, deepseq
, directory
, filepath
, ghc
, ghc-paths
, process
, stdenv
, syb
, transformers
}:
mkDerivation {

pname = "doctest";
version = "0.13.0";
sha256 = "4bd80a88bd569091ada73b149c31085df1a51c9cb0985612eb73d9856fb5e321";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
code-page
deepseq
directory
filepath
ghc
ghc-paths
process
syb
transformers
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/doctest#readme";
description = "Test interactive Haskell examples";
license = stdenv.lib.licenses.mit;

}) {};
"doctest-discover" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, directory
, doctest
, filepath
, stdenv
}:
mkDerivation {

pname = "doctest-discover";
version = "0.1.0.7";
sha256 = "ac6a65da517db7f264e65607a50b080b54f008ba592746ac11b7bb40107fbd70";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
directory
doctest
filepath
];
executableHaskellDepends = [
aeson
base
bytestring
directory
doctest
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/karun012/doctest-discover";
description = "Easy way to run doctests via cabal";
license = stdenv.lib.licenses.publicDomain;

}) {};
"doctest-driver-gen" = callPackage
({
  mkDerivation
, base
, doctest
, stdenv
}:
mkDerivation {

pname = "doctest-driver-gen";
version = "0.2.0.2";
sha256 = "b477668037144711e47f51ef01b823a5fa01424a869bffcde501138ad44e347a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
doctest
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Hexirp/doctest-driver-gen#readme";
description = "Generate driver file for doctest's cabal integration";
license = stdenv.lib.licenses.bsd3;

}) {};
"dom-parser" = callPackage
({
  mkDerivation
, base
, case-insensitive
, containers
, lens
, mtl
, scientific
, semigroups
, stdenv
, text
, transformers
, xml-conduit
, xml-lens
}:
mkDerivation {

pname = "dom-parser";
version = "3.0.0";
sha256 = "49d19767bafbf208380a7f1de6e5b266aa910ce40712a5801bb2b6103adb7490";
libraryHaskellDepends = [
base
case-insensitive
containers
lens
mtl
scientific
semigroups
text
transformers
xml-conduit
xml-lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/typeable/dom-parser";
description = "Simple monadic DOM parser";
license = stdenv.lib.licenses.mit;

}) {};
"dotenv" = callPackage
({
  mkDerivation
, base
, base-compat
, directory
, exceptions
, megaparsec
, optparse-applicative
, process
, stdenv
, text
, transformers
, yaml
}:
mkDerivation {

pname = "dotenv";
version = "0.5.2.5";
sha256 = "a197bf60643fc4dea5acd71b03b71cb89e8df91d55cc400b2ada5e79b4b6f4e1";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base-compat
directory
exceptions
megaparsec
process
text
transformers
yaml
];
executableHaskellDepends = [
base
base-compat
megaparsec
optparse-applicative
process
text
transformers
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/dotenv-hs";
description = "Loads environment variables from dotenv files";
license = stdenv.lib.licenses.mit;

}) {};
"dotnet-timespan" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "dotnet-timespan";
version = "0.0.1.0";
sha256 = "d8ca8dffbc916ff5139d6f0df4a22c947ab5f996c376f1ab8c2e120789209ac3";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/YoEight/dotnet-timespan";
description = ".NET TimeSpan";
license = stdenv.lib.licenses.bsd3;

}) {};
"double-conversion" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
, text
}:
mkDerivation {

pname = "double-conversion";
version = "2.0.2.0";
sha256 = "44cde172395401169e844d6791b6eb0ef2c2e55a08de8dda96551cfe029ba26b";
libraryHaskellDepends = [
base
bytestring
ghc-prim
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/double-conversion";
description = "Fast conversion between double precision floating point and text";
license = stdenv.lib.licenses.bsd3;

}) {};
"download" = callPackage
({
  mkDerivation
, base
, bytestring
, feed
, stdenv
, tagsoup
, xml
}:
mkDerivation {

pname = "download";
version = "0.3.2.6";
sha256 = "a06d401a2ca58b6ee494ce462c753939ef0a2d11b4d475ae40848884fb44eef2";
libraryHaskellDepends = [
base
bytestring
feed
tagsoup
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/download";
description = "High-level file download based on URLs";
license = stdenv.lib.licenses.bsd3;

}) {};
"drawille" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "drawille";
version = "0.1.2.0";
sha256 = "b8188ee87a06c168974c9655188450eb86c331c556decb31cf084efa846237df";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-drawille#readme";
description = "A port of asciimoo's drawille to haskell";
license = stdenv.lib.licenses.gpl3;

}) {};
"drifter" = callPackage
({
  mkDerivation
, base
, containers
, fgl
, stdenv
, text
}:
mkDerivation {

pname = "drifter";
version = "0.2.3";
sha256 = "df539d47e47a6064997619079cde28cc0ae039cbda1915cec447380736d92638";
libraryHaskellDepends = [
base
containers
fgl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrewRademacher/drifter";
description = "Simple schema management for arbitrary databases";
license = stdenv.lib.licenses.mit;

}) {};
"drifter-postgresql" = callPackage
({
  mkDerivation
, base
, containers
, drifter
, mtl
, postgresql-simple
, stdenv
, time
, transformers
, transformers-compat
}:
mkDerivation {

pname = "drifter-postgresql";
version = "0.2.1";
sha256 = "93320177ec9aab96799623ccc274f5b069500587f002f5f415c24159dd6eed5c";
libraryHaskellDepends = [
base
containers
drifter
mtl
postgresql-simple
time
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/michaelxavier/drifter-postgresql";
description = "PostgreSQL support for the drifter schema migration tool";
license = stdenv.lib.licenses.mit;

}) {};
"dsp" = callPackage
({
  mkDerivation
, array
, base
, containers
, random
, stdenv
}:
mkDerivation {

pname = "dsp";
version = "0.2.4";
sha256 = "fee4dff51d372ae9fd7ceaa0b885b1dfdf396ebddbc56076a529ecdf95589b2f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
containers
random
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/DSP";
description = "Haskell Digital Signal Processing";
license = "GPL";

}) {};
"dual-tree" = callPackage
({
  mkDerivation
, base
, monoid-extras
, newtype-generics
, semigroups
, stdenv
}:
mkDerivation {

pname = "dual-tree";
version = "0.2.1";
sha256 = "2465247dab91c799a06feccc3598c4c25a15bb17e80da102e22a45caa9605f19";
libraryHaskellDepends = [
base
monoid-extras
newtype-generics
semigroups
];
doHaddock = false;
doCheck = false;
description = "Rose trees with cached and accumulating monoidal annotations";
license = stdenv.lib.licenses.bsd3;

}) {};
"dublincore-xml-conduit" = callPackage
({
  mkDerivation
, base
, conduit
, conduit-combinators
, safe-exceptions
, stdenv
, text
, time
, timerep
, uri-bytestring
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "dublincore-xml-conduit";
version = "0.1.0.2";
sha256 = "d47a8dcb21d1866f0229168d11d1da136da3028a2f4252bee61d219988f45f9e";
libraryHaskellDepends = [
base
conduit
conduit-combinators
safe-exceptions
text
time
timerep
uri-bytestring
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0ral/dublincore-xml-conduit";
description = "XML streaming parser/renderer for the Dublin Core standard elements";
license = stdenv.lib.licenses.publicDomain;

}) {};
"dvorak" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "dvorak";
version = "0.1.0.0";
sha256 = "afc8ba89415a01039ccdc719b875826b6b12befb4a6a97bcd7544f22eaffb6cf";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kvanberendonck/codec-dvorak";
description = "Dvorak encoding for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"dynamic-state" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, hashable
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "dynamic-state";
version = "0.3.1";
sha256 = "c4d50bdf03e7b2af05ee2b78fdd5dd5d16e72ef5edf78cada60bf4cdc6a23537";
libraryHaskellDepends = [
base
binary
bytestring
hashable
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Optionally serializable dynamic state keyed by type";
license = stdenv.lib.licenses.gpl2;

}) {};
"dyre" = callPackage
({
  mkDerivation
, base
, binary
, directory
, executable-path
, filepath
, ghc-paths
, io-storage
, process
, stdenv
, time
, unix
, xdg-basedir
}:
mkDerivation {

pname = "dyre";
version = "0.8.12";
sha256 = "e224305cc6b38b4143f49489931c2ea94b326915206d34eddf5b2ee2b5a71682";
libraryHaskellDepends = [
base
binary
directory
executable-path
filepath
ghc-paths
io-storage
process
time
unix
xdg-basedir
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/willdonnelly/dyre";
description = "Dynamic reconfiguration in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"easy-file" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
, time
, unix
}:
mkDerivation {

pname = "easy-file";
version = "0.2.2";
sha256 = "52f52e72ba48d60935932401c233a72bf45c582871238aecc5a18021ce67b47e";
libraryHaskellDepends = [
base
directory
filepath
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/kazu-yamamoto/easy-file";
description = "Cross-platform File handling";
license = stdenv.lib.licenses.bsd3;

}) {};
"echo" = callPackage
({
  mkDerivation
, base
, process
, stdenv
}:
mkDerivation {

pname = "echo";
version = "0.1.3";
sha256 = "704f07310f8272d170f8ab7fb2a2c13f15d8501ef8310801e36964c8eff485ef";
revision = "1";
editedCabalFile = "0br8wfiybcw5hand4imiw0i5hacdmrax1dv8g95f35gazffbx42l";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/echo";
description = "A cross-platform, cross-console way to handle echoing terminal input";
license = stdenv.lib.licenses.bsd3;

}) {};
"ed25519" = callPackage
({
  mkDerivation
, base
, bytestring
, fetchgit
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "ed25519";
version = "0.0.5.0";
src = fetchgit {

url = "https://github.com/thoughtpolice/hs-ed25519";
sha256 = "0fah4vkmqdkjsdh3s3x27yfaif2fbdg6049xvp54b5mh50yvxkfq";
rev = "da4247b5b3420120e20451e6a252e2a2ca15b43c";

};
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://thoughtpolice.github.com/hs-ed25519";
description = "Ed25519 cryptographic signatures";
license = stdenv.lib.licenses.mit;

}) {};
"edit-distance" = callPackage
({
  mkDerivation
, array
, base
, containers
, random
, stdenv
}:
mkDerivation {

pname = "edit-distance";
version = "0.2.2.1";
sha256 = "3e8885ee2f56ad4da940f043ae8f981ee2fe336b5e8e4ba3f7436cff4f526c4a";
revision = "1";
editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
libraryHaskellDepends = [
array
base
containers
random
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/phadej/edit-distance";
description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
license = stdenv.lib.licenses.bsd3;

}) {};
"edit-distance-vector" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "edit-distance-vector";
version = "1.0.0.4";
sha256 = "b7dfddd86d315ef1b0c86415f321efc04b4a1b47a7b13edafc73a6e81b620f1f";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/thsutton/edit-distance-vector";
description = "Calculate edit distances and edit scripts between vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"editor-open" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, directory
, process
, resourcet
, stdenv
, temporary
, transformers
, unix
}:
mkDerivation {

pname = "editor-open";
version = "0.6.0.0";
sha256 = "2fc5d19bce2d477935202a5a4522671529d0352a0ee28be1307f8ab391065265";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
directory
process
resourcet
temporary
transformers
unix
];
executableHaskellDepends = [
base
bytestring
conduit
conduit-extra
resourcet
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pharpend/editor-open";
description = "Open the user's $VISUAL or $EDITOR for text input";
license = stdenv.lib.licenses.asl20;

}) {};
"either" = callPackage
({
  mkDerivation
, base
, bifunctors
, mtl
, profunctors
, semigroupoids
, semigroups
, stdenv
}:
mkDerivation {

pname = "either";
version = "5";
sha256 = "75cee27641a34f80e6c71f82469a76c7f51d23a522e792e2733269ebf7cbf420";
libraryHaskellDepends = [
base
bifunctors
mtl
profunctors
semigroupoids
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/either/";
description = "Combinators for working with sums";
license = stdenv.lib.licenses.bsd3;

}) {};
"either-unwrap" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "either-unwrap";
version = "1.1";
sha256 = "ccabd6f87118abc8dcba481b316c76b8195ac9e8a8f3ddb478de5eb64e2d2e3c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/gcross/either-unwrap";
description = "Functions for probing and unwrapping values inside of Either";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, ekg-core
, ekg-json
, filepath
, network
, snap-core
, snap-server
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "ekg";
version = "0.4.0.15";
sha256 = "482ae3be495cfe4f03332ad1c79ce8b5ad4f9c8eec824980c664808ae32c6dcc";
revision = "2";
editedCabalFile = "0dn8xysffy7pgz88h4h6lpjpl5n978dm3yxlzyxbk2k1byhzzx7d";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
ekg-core
ekg-json
filepath
network
snap-core
snap-server
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg";
description = "Remote monitoring of processes";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg-core" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "ekg-core";
version = "0.1.1.4";
sha256 = "66d89acca05c1c91dc57a9c4b3f62d25ccd0c04bb2bfd46d5947f9b8cd8ee937";
revision = "1";
editedCabalFile = "01hp42jjp1cg8z692xahbwlv4x521pdxhyd8d89fjdkvccf8gvnk";
libraryHaskellDepends = [
base
containers
ghc-prim
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg-core";
description = "Tracking of system metrics";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg-json" = callPackage
({
  mkDerivation
, aeson
, base
, ekg-core
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "ekg-json";
version = "0.1.0.6";
sha256 = "1e6a80aa0a28bbf41c9c6364cbb5731160d14fa54145f27a82d0b3467a04dd47";
revision = "2";
editedCabalFile = "02lx17l8dch793n83dgalv2r77nrlcj6k4xgpxaxzwr3nyprk2vj";
libraryHaskellDepends = [
aeson
base
ekg-core
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg-json";
description = "JSON encoding of ekg metrics";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg-statsd" = callPackage
({
  mkDerivation
, base
, bytestring
, ekg-core
, network
, stdenv
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "ekg-statsd";
version = "0.2.3.0";
sha256 = "aeead4a98b467a5fcdbd0646db583843ec14a8985f1a1fbf45cf5c0d969f8a16";
revision = "1";
editedCabalFile = "1k4sndkjg1prvzhiii9gcgkx8zfkk9c4nf548x0hrbmj1laj8d62";
libraryHaskellDepends = [
base
bytestring
ekg-core
network
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/ekg-statsd";
description = "Push metrics to statsd";
license = stdenv.lib.licenses.bsd3;

}) {};
"ekg-wai" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, ekg-core
, ekg-json
, filepath
, http-types
, network
, stdenv
, text
, time
, transformers
, unordered-containers
, wai
, wai-app-static
, warp
}:
mkDerivation {

pname = "ekg-wai";
version = "0.1.0.3";
sha256 = "bfd35917b663da0c1354339dd30837eee6ddf0d42cf57442fd916a42c977a2e9";
revision = "1";
editedCabalFile = "0crcpwrnh1pi5n4dlp9cwminj1gls9ywm4fgvisafh480097b100";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
ekg-core
ekg-json
filepath
http-types
network
text
time
transformers
unordered-containers
wai
wai-app-static
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tvh/ekg-wai";
description = "Remote monitoring of processes";
license = stdenv.lib.licenses.bsd3;

}) {};
"elerea" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "elerea";
version = "2.9.0";
sha256 = "901221660b32597803b20fe2e78bb6f1f60f064d04671fb3f0baa05c87446681";
libraryHaskellDepends = [
base
containers
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "A minimalistic FRP library";
license = stdenv.lib.licenses.bsd3;

}) {};
"eliminators" = callPackage
({
  mkDerivation
, base
, extra
, singleton-nats
, singletons
, stdenv
, template-haskell
, th-abstraction
, th-desugar
}:
mkDerivation {

pname = "eliminators";
version = "0.3";
sha256 = "b6a2352a9a0d388618c220b627484385535b6a6a8fcdabc0a785028cdba8a2f4";
libraryHaskellDepends = [
base
extra
singleton-nats
singletons
template-haskell
th-abstraction
th-desugar
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/eliminators";
description = "Dependently typed elimination functions using singletons";
license = stdenv.lib.licenses.bsd3;

}) {};
"elm-core-sources" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, file-embed
, stdenv
, template-haskell
}:
mkDerivation {

pname = "elm-core-sources";
version = "1.0.0";
sha256 = "a403505d50cd6ff0d21243db55c6decc6dde14b88a6a393e2b6243f09f6620fb";
libraryHaskellDepends = [
base
bytestring
containers
file-embed
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/JoeyEremondi/elm-build-lib";
description = "Source files for the Elm runtime and standard libraries";
license = stdenv.lib.licenses.bsd3;

}) {};
"elm-export" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, formatting
, mtl
, stdenv
, text
, time
, wl-pprint-text
}:
mkDerivation {

pname = "elm-export";
version = "0.6.0.1";
sha256 = "bf9862015918c72b54b421efcd9d858969dcd94ef0a3d0cb92d9bc0c4363f9d5";
libraryHaskellDepends = [
base
bytestring
containers
directory
formatting
mtl
text
time
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/krisajenkins/elm-export";
description = "A library to generate Elm types from Haskell source";
license = "unknown";

}) {};
"elm-export-persistent" = callPackage
({
  mkDerivation
, aeson
, base
, elm-export
, persistent
, scientific
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "elm-export-persistent";
version = "0.2.0";
sha256 = "2cc7ab8a55465ff476b97aea0ffaaba384ccbe282d7e9f13c228dcb2d5397e25";
libraryHaskellDepends = [
aeson
base
elm-export
persistent
scientific
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/elm-export-persistent";
description = "elm-export persistent entities";
license = stdenv.lib.licenses.mit;

}) {};
"email-validate" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
, template-haskell
}:
mkDerivation {

pname = "email-validate";
version = "2.3.2.5";
sha256 = "7b4ff4e89eccc073df2f51e9d20d507ba1a6d4f5746130c712844c7cf8674e4c";
libraryHaskellDepends = [
attoparsec
base
bytestring
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Porges/email-validate-hs";
description = "Email address validation";
license = stdenv.lib.licenses.bsd3;

}) {};
"emailaddress" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, bytestring
, email-validate
, http-api-data
, opaleye
, path-pieces
, persistent
, postgresql-simple
, product-profunctors
, profunctors
, stdenv
, text
}:
mkDerivation {

pname = "emailaddress";
version = "0.2.0.0";
sha256 = "390b0aaf8fa2d3a694b812ad83fc0f26ed5c7172cc318a7d46c1fc3456d9c15c";
libraryHaskellDepends = [
aeson
base
bifunctors
bytestring
email-validate
http-api-data
opaleye
path-pieces
persistent
postgresql-simple
product-profunctors
profunctors
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/emailaddress#readme";
description = "Wrapper around email-validate library adding instances for common type classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"enclosed-exceptions" = callPackage
({
  mkDerivation
, base
, deepseq
, lifted-base
, monad-control
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "enclosed-exceptions";
version = "1.0.2";
sha256 = "7b9beab82d219c0dd879dfdef70fb74a4a7595b4dbd0baf7adb12cdbbe8189f1";
revision = "1";
editedCabalFile = "0rjm8g2bm9a7qzklkp0rh5az4qh8nsl0hl119gjik671knygkdj0";
libraryHaskellDepends = [
base
deepseq
lifted-base
monad-control
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jcristovao/enclosed-exceptions";
description = "Catching all exceptions from within an enclosed computation";
license = stdenv.lib.licenses.mit;

}) {};
"engine-io" = callPackage
({
  mkDerivation
, aeson
, async
, attoparsec
, base
, base64-bytestring
, bytestring
, errors
, fetchgit
, free
, monad-loops
, mwc-random
, stdenv
, stm
, stm-delay
, text
, transformers
, unordered-containers
, vector
, websockets
}:
mkDerivation {

pname = "engine-io";
version = "1.2.20";
src = fetchgit {

url = "https://github.com/input-output-hk/engine.io.git";
sha256 = "139c0yfnj57cpwg4k0am2rp35sh959394nvlb98011rjy68200qc";
rev = "d3c55f51bb81cee7d0d551de930ce65fe7d76756";

};
postUnpack = "sourceRoot+=/engine-io; echo source root reset to $sourceRoot";
libraryHaskellDepends = [
aeson
async
attoparsec
base
base64-bytestring
bytestring
errors
free
monad-loops
mwc-random
stm
stm-delay
text
transformers
unordered-containers
vector
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/engine.io";
description = "A Haskell implementation of Engine.IO";
license = stdenv.lib.licenses.bsd3;

}) {};
"engine-io-wai" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, either
, engine-io
, fetchgit
, http-types
, mtl
, stdenv
, text
, transformers
, transformers-compat
, unordered-containers
, wai
, wai-websockets
, websockets
}:
mkDerivation {

pname = "engine-io-wai";
version = "1.0.8";
src = fetchgit {

url = "https://github.com/input-output-hk/engine.io.git";
sha256 = "139c0yfnj57cpwg4k0am2rp35sh959394nvlb98011rjy68200qc";
rev = "d3c55f51bb81cee7d0d551de930ce65fe7d76756";

};
postUnpack = "sourceRoot+=/engine-io-wai; echo source root reset to $sourceRoot";
libraryHaskellDepends = [
attoparsec
base
bytestring
either
engine-io
http-types
mtl
text
transformers
transformers-compat
unordered-containers
wai
wai-websockets
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/engine.io";
description = "An @engine-io@ @ServerAPI@ that is compatible with @Wai@";
license = stdenv.lib.licenses.bsd3;

}) {};
"entropy" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, directory
, filepath
, process
, stdenv
, unix
}:
mkDerivation {

pname = "entropy";
version = "0.3.8";
sha256 = "743a49d5e17ae9d6118ff077f2cd2d5944c0ea6cff501efeec95b68d5f7474d0";
setupHaskellDepends = [
base
Cabal
directory
filepath
process
];
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/TomMD/entropy";
description = "A platform independent entropy source";
license = stdenv.lib.licenses.bsd3;

}) {};
"enummapset" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, semigroups
, stdenv
}:
mkDerivation {

pname = "enummapset";
version = "0.5.2.2";
sha256 = "792fdbdf387de02580accb3ad49a6f5191b24eb2283ef141355eacfd328cce74";
libraryHaskellDepends = [
base
containers
deepseq
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michalt/enummapset";
description = "IntMap and IntSet with Enum keys/elements";
license = stdenv.lib.licenses.bsd3;

}) {};
"enumset" = callPackage
({
  mkDerivation
, base
, data-accessor
, semigroups
, stdenv
, storable-record
}:
mkDerivation {

pname = "enumset";
version = "0.0.4.1";
sha256 = "5f9d115f7f2b2d4dba290f9d62cd7e9f52f6f6f8235ac5ed9bbf6e982a51d054";
libraryHaskellDepends = [
base
data-accessor
semigroups
storable-record
];
doHaddock = false;
doCheck = false;
description = "Sets of enumeration values represented by machine words";
license = stdenv.lib.licenses.bsd3;

}) {};
"envelope" = callPackage
({
  mkDerivation
, aeson
, base
, http-api-data
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "envelope";
version = "0.2.2.0";
sha256 = "cf4d6fe3f906e859ec3c16684a8dafb349e77f0fa4f21b7090ca33e707867ef9";
libraryHaskellDepends = [
aeson
base
http-api-data
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/envelope#readme";
description = "Defines generic 'Envelope' type to wrap reponses from a JSON API";
license = stdenv.lib.licenses.bsd3;

}) {};
"envparse" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "envparse";
version = "0.4";
sha256 = "bf9dd7cd0ed3c38f63ea45cbb496b58ad3d83022b5eab5a66bfeebec5982803d";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://supki.github.io/envparse";
description = "Parse environment variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"envy" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, mtl
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "envy";
version = "1.5.0.0";
sha256 = "cdc099b3ae0c61007d07642c8e4811d29dfe3977b49595e21e03a1e29f741fbf";
libraryHaskellDepends = [
base
bytestring
containers
mtl
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "An environmentally friendly way to deal with environment variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"epub-metadata" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, hxt
, mtl
, regex-compat-tdfa
, stdenv
, utf8-string
, zip-archive
}:
mkDerivation {

pname = "epub-metadata";
version = "4.5";
sha256 = "19ae3914df5936908c8d7264ae5f1e310262fa06bd7e4390838892840e4c0349";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
hxt
mtl
regex-compat-tdfa
utf8-string
zip-archive
];
executableHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/dino/epub-metadata";
description = "Library for parsing epub document metadata";
license = stdenv.lib.licenses.bsd3;

}) {};
"eq" = callPackage
({
  mkDerivation
, base
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "eq";
version = "4.1";
sha256 = "16dc3d9f99f077f0c851abca4efeb454c4c23669586037ab8c861df5b6ed6182";
libraryHaskellDepends = [
base
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/eq/";
description = "Leibnizian equality";
license = stdenv.lib.licenses.bsd3;

}) {};
"equal-files" = callPackage
({
  mkDerivation
, base
, bytestring
, explicit-exception
, filemanip
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "equal-files";
version = "0.0.5.3";
sha256 = "e5b785c286c557c57dba7107d913b220781aa2549ba4b7685da494b20a0172aa";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
explicit-exception
filemanip
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/equal-files/";
description = "Shell command for finding equal files";
license = "GPL";

}) {};
"equivalence" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, STMonadTrans
, transformers
, transformers-compat
}:
mkDerivation {

pname = "equivalence";
version = "0.3.2";
sha256 = "7da21ed5f980caa18c995190dd527c69822050390e4237c92f1acbed7d5b0529";
revision = "1";
editedCabalFile = "010n0gpk2rpninggdnnx0j7fys6hzn80s789b16iw0a55h4z0gn8";
libraryHaskellDepends = [
base
containers
mtl
STMonadTrans
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pa-ba/equivalence";
description = "Maintaining an equivalence relation implemented as union-find using STT";
license = stdenv.lib.licenses.bsd3;

}) {};
"erf" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "erf";
version = "2.0.0.0";
sha256 = "24f0b79c7e1d25cb2cd44c2258d7a464bf6db8079775b50b60b54a254616b337";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "The error function, erf, and related functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"error-util" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "error-util";
version = "0.0.1.2";
sha256 = "df1916a2de007697b7b1a9f83eacab4588d8dc472fd0f21395dce83b085e4e06";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pmlodawski/error-util";
description = "Set of utils and operators for error handling";
license = stdenv.lib.licenses.mit;

}) {};
"errors" = callPackage
({
  mkDerivation
, base
, exceptions
, safe
, stdenv
, text
, transformers
, transformers-compat
, unexceptionalio
}:
mkDerivation {

pname = "errors";
version = "2.2.5";
sha256 = "e917ca560c5573d792483677fa5ad30d9d1923d21361ce24879cb51e6fbc735c";
libraryHaskellDepends = [
base
exceptions
safe
text
transformers
transformers-compat
unexceptionalio
];
doHaddock = false;
doCheck = false;
description = "Simplified error-handling";
license = stdenv.lib.licenses.bsd3;

}) {};
"errors-ext" = callPackage
({
  mkDerivation
, base
, errors
, exceptions
, monad-control
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "errors-ext";
version = "0.4.1";
sha256 = "b0ac78b09e0d5b856e91bfc59a2d91aef487807a2bbd1f562575e235df459ef6";
libraryHaskellDepends = [
base
errors
exceptions
monad-control
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/A1-Triard/errors-ext#readme";
description = "`bracket`-like functions for `ExceptT` over `IO` monad";
license = stdenv.lib.licenses.asl20;

}) {};
"ersatz" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, bytestring
, Cabal
, cabal-doctest
, containers
, data-default
, lens
, mtl
, parsec
, process
, semigroups
, stdenv
, temporary
, transformers
, unordered-containers
}:
mkDerivation {

pname = "ersatz";
version = "0.4.2";
sha256 = "aecf2d0c0dc413b52b2eadf4f75de76f72367db699086222787f65f0b93224e7";
revision = "1";
editedCabalFile = "098i7593rlc81618y1cz6bmsp2y0vlimz8hnqlzja4m8mclfsbx2";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
array
attoparsec
base
bytestring
containers
data-default
lens
mtl
process
semigroups
temporary
transformers
unordered-containers
];
executableHaskellDepends = [
array
base
containers
lens
mtl
parsec
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/ersatz";
description = "A monad for expressing SAT or QSAT problems using observable sharing";
license = stdenv.lib.licenses.bsd3;

}) {};
"ether" = callPackage
({
  mkDerivation
, base
, exceptions
, mmorph
, monad-control
, mtl
, reflection
, stdenv
, tagged
, template-haskell
, transformers
, transformers-base
, transformers-lift
, writer-cps-mtl
}:
mkDerivation {

pname = "ether";
version = "0.5.1.0";
sha256 = "36980c9598c5e8e804695da3b966416a2221296022b39be437ec35263ea10085";
revision = "1";
editedCabalFile = "01q86w79xswdkq08m375xwfqjgix6bzbc4lpxz4phqvzf38lc8i5";
libraryHaskellDepends = [
base
exceptions
mmorph
monad-control
mtl
reflection
tagged
template-haskell
transformers
transformers-base
transformers-lift
writer-cps-mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://int-index.github.io/ether/";
description = "Monad transformers and classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"euler-tour-tree" = callPackage
({
  mkDerivation
, base
, containers
, fingertree
, mtl
, parser-combinators
, stdenv
, transformers
, Unique
}:
mkDerivation {

pname = "euler-tour-tree";
version = "0.1.0.1";
sha256 = "e42feac8cc982454ddfc3c82c124936cfa2d2a545ac0de437a8e669152d1dd89";
libraryHaskellDepends = [
base
containers
fingertree
mtl
parser-combinators
transformers
Unique
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0ral/euler-tour-tree";
description = "Euler tour trees";
license = stdenv.lib.licenses.publicDomain;

}) {};
"event" = callPackage
({
  mkDerivation
, base
, containers
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "event";
version = "0.1.4";
sha256 = "6791d1402b4d77a11407ab592f65cb61ee60c5a80b99751c5d775afcc9d1824a";
libraryHaskellDepends = [
base
containers
semigroups
transformers
];
doHaddock = false;
doCheck = false;
description = "Monoidal, monadic and first-class events";
license = stdenv.lib.licenses.bsd3;

}) {};
"event-list" = callPackage
({
  mkDerivation
, base
, non-negative
, QuickCheck
, semigroups
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "event-list";
version = "0.1.2";
sha256 = "624e30b876e0acdaea895efbb2000bbbec2d5be0743ecac9805655ae634af89c";
libraryHaskellDepends = [
base
non-negative
QuickCheck
semigroups
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/event-list/";
description = "Event lists with relative or absolute time stamps";
license = "GPL";

}) {};
"eventful-core" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, contravariant
, http-api-data
, path-pieces
, stdenv
, sum-type-boilerplate
, template-haskell
, text
, transformers
, uuid
}:
mkDerivation {

pname = "eventful-core";
version = "0.2.0";
sha256 = "e0f55e7498d8e48232ce2d5194c69f635beaeb322cb64753766076d7b35c9019";
libraryHaskellDepends = [
aeson
base
containers
contravariant
http-api-data
path-pieces
sum-type-boilerplate
template-haskell
text
transformers
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/eventful#readme";
description = "Core module for eventful";
license = stdenv.lib.licenses.mit;

}) {};
"eventful-memory" = callPackage
({
  mkDerivation
, base
, containers
, eventful-core
, mtl
, safe
, stdenv
, stm
}:
mkDerivation {

pname = "eventful-memory";
version = "0.2.0";
sha256 = "6a7c3e0a12e3c4e572927929020ad92075933e5d3c66ea61ff615a3ac217adb9";
libraryHaskellDepends = [
base
containers
eventful-core
mtl
safe
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/eventful#readme";
description = "In-memory implementations for eventful";
license = stdenv.lib.licenses.mit;

}) {};
"eventful-postgresql" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, eventful-core
, eventful-sql-common
, mtl
, persistent
, stdenv
, text
}:
mkDerivation {

pname = "eventful-postgresql";
version = "0.2.0";
sha256 = "6be868f5b2aabd02c33ae90e463c1a5c938b2db14e0d1c30a1de32c83c725e17";
libraryHaskellDepends = [
aeson
base
bytestring
eventful-core
eventful-sql-common
mtl
persistent
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/eventful#readme";
description = "Postgres implementations for eventful";
license = stdenv.lib.licenses.mit;

}) {};
"eventful-sql-common" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, eventful-core
, mtl
, persistent
, persistent-template
, stdenv
, text
, uuid
}:
mkDerivation {

pname = "eventful-sql-common";
version = "0.2.0";
sha256 = "a46ea18cbbb5bd04b3a6846273e8161b7e4208660d0abf5a401192b07636aebc";
libraryHaskellDepends = [
aeson
base
bytestring
eventful-core
mtl
persistent
persistent-template
text
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/eventful#readme";
description = "Common library for SQL event stores";
license = stdenv.lib.licenses.mit;

}) {};
"eventful-sqlite" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, eventful-core
, eventful-sql-common
, mtl
, persistent
, stdenv
, text
, uuid
}:
mkDerivation {

pname = "eventful-sqlite";
version = "0.2.0";
sha256 = "c0bbea0ebd1f0a4891a74b190f499caf85ac026f49b9401fc76f181b0041dfef";
libraryHaskellDepends = [
aeson
base
bytestring
eventful-core
eventful-sql-common
mtl
persistent
text
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/eventful#readme";
description = "SQLite implementations for eventful";
license = stdenv.lib.licenses.mit;

}) {};
"eventful-test-helpers" = callPackage
({
  mkDerivation
, aeson
, aeson-casing
, base
, eventful-core
, extra
, hspec
, monad-logger
, stdenv
, text
}:
mkDerivation {

pname = "eventful-test-helpers";
version = "0.2.0";
sha256 = "a99f9d0cde3926add542c4fc59e079da7d71f2b40e2251b7d79777585c4ebfe0";
libraryHaskellDepends = [
aeson
aeson-casing
base
eventful-core
extra
hspec
monad-logger
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/eventful#readme";
description = "Common module used for eventful tests";
license = stdenv.lib.licenses.mit;

}) {};
"eventsource-api" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, enclosed-exceptions
, lifted-async
, lifted-base
, monad-control
, monad-loops
, mtl
, stdenv
, stm
, stm-chans
, string-conversions
, text
, transformers-base
, unordered-containers
, uuid
}:
mkDerivation {

pname = "eventsource-api";
version = "1.3.1";
sha256 = "c2ebe9104b7b6bdd70a3e3179996d3cfb008cedc940c8e1c0c5fc6de075b9936";
libraryHaskellDepends = [
aeson
base
bytestring
containers
enclosed-exceptions
lifted-async
lifted-base
monad-control
monad-loops
mtl
stm
stm-chans
string-conversions
text
transformers-base
unordered-containers
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoEight/eventsource-api#readme";
description = "Provides an eventsourcing high level API";
license = stdenv.lib.licenses.bsd3;

}) {};
"eventsource-geteventstore-store" = callPackage
({
  mkDerivation
, aeson
, base
, eventsource-api
, eventstore
, mtl
, stdenv
, string-conversions
, transformers-base
}:
mkDerivation {

pname = "eventsource-geteventstore-store";
version = "1.1.0";
sha256 = "2336d8e3dd3585d62c015d0c9f16f5cc61b1be5e63258adbac3eb23d4c535103";
libraryHaskellDepends = [
aeson
base
eventsource-api
eventstore
mtl
string-conversions
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoEight/eventsource-api#readme";
description = "GetEventStore store implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"eventsource-store-specs" = callPackage
({
  mkDerivation
, aeson
, async
, base
, eventsource-api
, mtl
, stdenv
, tasty
, tasty-hspec
, text
, transformers-base
, uuid
}:
mkDerivation {

pname = "eventsource-store-specs";
version = "1.1.1";
sha256 = "9158dc5915ca75880a17beffd70397e4bebca1d50685eb7f536a3f967cd244dd";
libraryHaskellDepends = [
aeson
async
base
eventsource-api
mtl
tasty
tasty-hspec
text
transformers-base
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoEight/eventsource-api#readme";
description = "Provides common test specification for Store implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"eventsource-stub-store" = callPackage
({
  mkDerivation
, async
, base
, containers
, eventsource-api
, mtl
, stdenv
, stm
, transformers-base
}:
mkDerivation {

pname = "eventsource-stub-store";
version = "1.0.3";
sha256 = "5cc05008be4ad90a7d849f5e1e494070480a520fd76871b57e6b4051c5b07a8b";
libraryHaskellDepends = [
async
base
containers
eventsource-api
mtl
stm
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoEight/eventsource-api#readme";
description = "An in-memory stub store implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"eventstore" = callPackage
({
  mkDerivation
, aeson
, array
, base
, bifunctors
, bytestring
, cereal
, clock
, connection
, containers
, dns
, dotnet-timespan
, ekg-core
, exceptions
, fast-logger
, hashable
, http-client
, interpolate
, lifted-async
, lifted-base
, machines
, monad-control
, monad-logger
, mono-traversable
, mtl
, protobuf
, random
, safe-exceptions
, semigroups
, stdenv
, stm
, stm-chans
, text
, time
, transformers-base
, unordered-containers
, uuid
}:
mkDerivation {

pname = "eventstore";
version = "1.1.4";
sha256 = "d2d50af6dbd0a0f96bdc4d1e4ff4fed7c17fa3b2303f7bdbe10406dc5be11076";
libraryHaskellDepends = [
aeson
array
base
bifunctors
bytestring
cereal
clock
connection
containers
dns
dotnet-timespan
ekg-core
exceptions
fast-logger
hashable
http-client
interpolate
lifted-async
lifted-base
machines
monad-control
monad-logger
mono-traversable
mtl
protobuf
random
safe-exceptions
semigroups
stm
stm-chans
text
time
transformers-base
unordered-containers
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoEight/eventstore#readme";
description = "EventStore TCP Client";
license = stdenv.lib.licenses.bsd3;
platforms = [
"x86_64-darwin"
"x86_64-linux"
];

}) {};
"every" = callPackage
({
  mkDerivation
, async
, base
, stdenv
, stm
}:
mkDerivation {

pname = "every";
version = "0.0.1";
sha256 = "5d0ff0e4cefb094c44b55defa283146b16b925722a2eb244a5ef4364737980e5";
libraryHaskellDepends = [
async
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/every#readme";
description = "Run a process every so often";
license = stdenv.lib.licenses.bsd3;

}) {};
"exact-combinatorics" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "exact-combinatorics";
version = "0.2.0.8";
sha256 = "32a822b109ab6e9f62fe23d76bd5af593c20ba0e589005d3985ccda00dd4475e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Efficient exact computation of combinatoric functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"exact-pi" = callPackage
({
  mkDerivation
, base
, numtype-dk
, semigroups
, stdenv
}:
mkDerivation {

pname = "exact-pi";
version = "0.4.1.3";
sha256 = "4e9e87c653aa619b92e0f7c8e7d737cdc2610f0804bf619b47786165be972ce4";
libraryHaskellDepends = [
base
numtype-dk
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmcclean/exact-pi/";
description = "Exact rational multiples of pi (and integer powers of pi)";
license = stdenv.lib.licenses.mit;

}) {};
"exception-mtl" = callPackage
({
  mkDerivation
, base
, exception-transformers
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "exception-mtl";
version = "0.4.0.1";
sha256 = "ec13bcbae6cdde218a7118a2bd3058493af09a330b86e28469a278c9b2cea134";
libraryHaskellDepends = [
base
exception-transformers
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "Exception monad transformer instances for mtl classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"exception-transformers" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
, transformers-compat
}:
mkDerivation {

pname = "exception-transformers";
version = "0.4.0.7";
sha256 = "925b61eb3d19148a521e79f8b4c8ac097f6e0dea6a09cc2f533279f3abf1f2ef";
libraryHaskellDepends = [
base
stm
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Type classes and monads for unchecked extensible exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"exceptional" = callPackage
({
  mkDerivation
, base
, exceptions
, stdenv
}:
mkDerivation {

pname = "exceptional";
version = "0.3.0.0";
sha256 = "da866ed28ea14d245cc065271f4ddd6da0a91b83e8d83daddcd1ef0623e99f06";
libraryHaskellDepends = [
base
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/";
description = "Essentially the Maybe type with error messages";
license = stdenv.lib.licenses.bsd2;

}) {};
"exceptions" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, stm
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "exceptions";
version = "0.8.3";
sha256 = "4d6ad97e8e3d5dc6ce9ae68a469dc2fd3f66e9d312bc6faa7ab162eddcef87be";
revision = "5";
editedCabalFile = "1kfgp41i6mfz9gjczp3flvqxfhnznd81rwldv8j05807n6mnqqii";
libraryHaskellDepends = [
base
mtl
stm
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/exceptions/";
description = "Extensible optionally-pure exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"executable-hash" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cryptohash
, directory
, executable-path
, file-embed
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "executable-hash";
version = "0.2.0.4";
sha256 = "34eaf5662d90d3b7841f66b322ac5bc54900b0e3cb06792852b08b3c05a42ba4";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
bytestring
Cabal
cryptohash
directory
file-embed
filepath
template-haskell
];
libraryHaskellDepends = [
base
bytestring
cryptohash
directory
executable-path
file-embed
template-haskell
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fpco/executable-hash";
description = "Provides the SHA1 hash of the program executable";
license = stdenv.lib.licenses.mit;

}) {};
"executable-path" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
, unix
}:
mkDerivation {

pname = "executable-path";
version = "0.0.3.1";
sha256 = "9cc742b6d40a487b3af38dca6852ca3b50a0db94d42fe819576c84beb5adbc6f";
libraryHaskellDepends = [
base
directory
filepath
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~bkomuves/";
description = "Finding out the full path of the executable";
license = stdenv.lib.licenses.publicDomain;

}) {};
"exhaustive" = callPackage
({
  mkDerivation
, base
, generics-sop
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "exhaustive";
version = "1.1.6";
sha256 = "731fae74c06e79f3c7bdbcfe2c455684b92da9534486d1b126c17fdc537eed01";
libraryHaskellDepends = [
base
generics-sop
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/exhaustive";
description = "Compile time checks that a computation considers producing data through all possible constructors";
license = stdenv.lib.licenses.bsd3;

}) {};
"exp-pairs" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, ghc-prim
, prettyprinter
, stdenv
}:
mkDerivation {

pname = "exp-pairs";
version = "0.1.6.0";
sha256 = "e63ad90fcd292a9a31bd42b94408930c7cdf06700c9879453e61423a89a75be3";
libraryHaskellDepends = [
base
containers
deepseq
ghc-prim
prettyprinter
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Bodigrim/exp-pairs";
description = "Linear programming over exponent pairs";
license = stdenv.lib.licenses.gpl3;

}) {};
"expiring-cache-map" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "expiring-cache-map";
version = "0.0.6.1";
sha256 = "0e3bc294978b46ee59bf0b4a7e7a5bd7ed5da7bc261ffebdb0cb1b60353c64b9";
libraryHaskellDepends = [
base
containers
hashable
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/elblake/expiring-cache-map";
description = "General purpose simple caching";
license = stdenv.lib.licenses.bsd3;

}) {};
"explicit-exception" = callPackage
({
  mkDerivation
, base
, deepseq
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "explicit-exception";
version = "0.1.9.2";
sha256 = "60f6029777f80ec958e28cef19a15723242987a01f09f6bfef252f24207649f6";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
deepseq
semigroups
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Exception";
description = "Exceptions which are explicit in the type signature";
license = stdenv.lib.licenses.bsd3;

}) {};
"extensible" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cassava
, comonad
, constraints
, deepseq
, ghc-prim
, hashable
, monad-skeleton
, mtl
, prettyprinter
, primitive
, profunctors
, QuickCheck
, semigroups
, StateVar
, stdenv
, tagged
, template-haskell
, text
, th-lift
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "extensible";
version = "0.4.9";
sha256 = "b752ea6f45ff57e2994e12af911c92977b54246756c5181e376e09fd28f93e86";
libraryHaskellDepends = [
aeson
base
bytestring
cassava
comonad
constraints
deepseq
ghc-prim
hashable
monad-skeleton
mtl
prettyprinter
primitive
profunctors
QuickCheck
semigroups
StateVar
tagged
template-haskell
text
th-lift
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/extensible";
description = "Extensible, efficient, optics-friendly data types and effects";
license = stdenv.lib.licenses.bsd3;

}) {};
"extensible-effects" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "extensible-effects";
version = "2.4.0.0";
sha256 = "cc1a6f713e6533f0b025da1b15a88d267af5577a6e59ee84aab6d6b2b7318508";
libraryHaskellDepends = [
base
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/suhailshergill/extensible-effects";
description = "An Alternative to Monad Transformers";
license = stdenv.lib.licenses.mit;

}) {};
"extensible-exceptions" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "extensible-exceptions";
version = "0.1.1.4";
sha256 = "6ce5e8801760385a408dab71b53550f87629e661b260bdc2cd41c6a439b6e388";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Extensible exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"extra" = callPackage
({
  mkDerivation
, base
, clock
, directory
, filepath
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "extra";
version = "1.6.8";
sha256 = "97b6338387536793e94826c73029570ae5215036ac102415be53e6690d99cfce";
libraryHaskellDepends = [
base
clock
directory
filepath
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/extra#readme";
description = "Extra functions I use";
license = stdenv.lib.licenses.bsd3;

}) {};
"extractable-singleton" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "extractable-singleton";
version = "0.0.1";
sha256 = "e8da1928d98c57ef3d1bab7deb1378f51fa496721495777233663dd0b1b2c0ad";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/extractable-singleton#readme";
description = "A functor, where the \"stored\" value is isomorphic to Identity";
license = stdenv.lib.licenses.bsd3;

}) {};
"extrapolate" = callPackage
({
  mkDerivation
, base
, leancheck
, speculate
, stdenv
, template-haskell
}:
mkDerivation {

pname = "extrapolate";
version = "0.3.1";
sha256 = "c4aea5df7abd2d267e012e8e4fde00eb0e7fc3aa18670ff196c433ad5a1de0c3";
libraryHaskellDepends = [
base
leancheck
speculate
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rudymatela/extrapolate#readme";
description = "generalize counter-examples of test properties";
license = stdenv.lib.licenses.bsd3;

}) {};
"fail" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "fail";
version = "4.9.0.0";
sha256 = "6d5cdb1a5c539425a9665f740e364722e1d9d6ae37fbc55f30fe3dbbbb91d4a2";
doHaddock = false;
doCheck = false;
homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
description = "Forward-compatible MonadFail class";
license = stdenv.lib.licenses.bsd3;

}) {};
"farmhash" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "farmhash";
version = "0.1.0.5";
sha256 = "0e685a5445f7bce88682d209bccb47d03f06065a627475df44a8e2af8bc20fa1";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abhinav/farmhash";
description = "Fast hash functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"fast-builder" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "fast-builder";
version = "0.0.1.0";
sha256 = "c18abb40d416e46e7f69e609188c99f1f0646b2db62bc7df6208b2b0a3974027";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/takano-akio/fast-builder";
description = "Fast ByteString Builder";
license = stdenv.lib.licenses.publicDomain;

}) {};
"fast-digits" = callPackage
({
  mkDerivation
, base
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "fast-digits";
version = "0.2.1.0";
sha256 = "ec84576e479202de8257c7c499b66e91bcf18444f7683475d74b575e166dd83b";
libraryHaskellDepends = [
base
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Bodigrim/fast-digits";
description = "The fast library for integer-to-digits conversion";
license = stdenv.lib.licenses.gpl3;

}) {};
"fast-logger" = callPackage
({
  mkDerivation
, array
, auto-update
, base
, bytestring
, directory
, easy-file
, filepath
, stdenv
, text
, unix
, unix-time
}:
mkDerivation {

pname = "fast-logger";
version = "2.4.11";
sha256 = "bbe5deab58f435754dbe938cf0ddf26fc21f317c35fb3431d4bdb96809dea2a9";
libraryHaskellDepends = [
array
auto-update
base
bytestring
directory
easy-file
filepath
text
unix
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kazu-yamamoto/logger";
description = "A fast logging system";
license = stdenv.lib.licenses.bsd3;

}) {};
"fasta" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, foldl
, lens
, parsec
, pipes
, pipes-attoparsec
, pipes-bytestring
, pipes-group
, pipes-text
, split
, stdenv
, text
}:
mkDerivation {

pname = "fasta";
version = "0.10.4.2";
sha256 = "2b760dfd5029dee94d56010f8125f4317d6fa675a84817c352311d308d1897be";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
foldl
lens
parsec
pipes
pipes-attoparsec
pipes-bytestring
pipes-group
pipes-text
split
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GregorySchwartz/fasta";
description = "A simple, mindless parser for fasta files";
license = stdenv.lib.licenses.gpl3;

}) {};
"fb" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base16-bytestring
, base64-bytestring
, bytestring
, cereal
, conduit
, conduit-extra
, crypto-api
, cryptohash
, cryptohash-cryptoapi
, data-default
, http-client
, http-conduit
, http-types
, monad-logger
, old-locale
, resourcet
, stdenv
, text
, time
, transformers
, transformers-base
, unliftio
, unliftio-core
, unordered-containers
}:
mkDerivation {

pname = "fb";
version = "1.2.0";
sha256 = "d474ff3155163032a2f47736b32177b620b7c19dfeecac8c2c7ca40a7178f712";
libraryHaskellDepends = [
aeson
attoparsec
base
base16-bytestring
base64-bytestring
bytestring
cereal
conduit
conduit-extra
crypto-api
cryptohash
cryptohash-cryptoapi
data-default
http-client
http-conduit
http-types
monad-logger
old-locale
resourcet
text
time
transformers
transformers-base
unliftio
unliftio-core
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/fb";
description = "Bindings to Facebook's API";
license = stdenv.lib.licenses.bsd3;

}) {};
"fclabels" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "fclabels";
version = "2.0.3.3";
sha256 = "9a9472a46dc23b5acc0545d345ecd708f7b003f72ab212e2d12125b902b9c2e0";
revision = "1";
editedCabalFile = "0fs17vv85ybl3ws8k25sg758vq49l19vhn4asm8r6q5j9xic2kvl";
libraryHaskellDepends = [
base
mtl
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sebastiaanvisser/fclabels";
description = "First class accessor labels implemented as lenses";
license = stdenv.lib.licenses.bsd3;

}) {};
"feature-flags" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "feature-flags";
version = "0.1.0.1";
sha256 = "0e4cf7db6791b0875975dfa001d71bf31797b2edbfd2424f6b6202ace7935ad3";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iand675/feature-flags";
description = "A simple library for dynamically enabling and disabling functionality";
license = stdenv.lib.licenses.mit;

}) {};
"fedora-haskell-tools" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "fedora-haskell-tools";
version = "0.5.1";
sha256 = "b9a9119aace941ff5860c02462bf340c6f3cce29f7bdcb42af98dedfa9888394";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
directory
filepath
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fedora-haskell/fedora-haskell-tools";
description = "Building and managing tools for Fedora Haskell";
license = stdenv.lib.licenses.gpl3;

}) {};
"feed" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, old-locale
, old-time
, safe
, stdenv
, text
, time
, time-locale-compat
, utf8-string
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "feed";
version = "1.0.0.0";
sha256 = "9359a12d3da138ba50fecfc31eed7f92438a6417e9fc3aa17b95a014fa792f17";
revision = "4";
editedCabalFile = "0baavcavm3ywykcr9cm07aqr7sna98jba2n68lyn3kany8ri214d";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base-compat
bytestring
old-locale
old-time
safe
text
time
time-locale-compat
utf8-string
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bergmark/feed";
description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
license = stdenv.lib.licenses.bsd3;

}) {};
"fft" = callPackage
({
  mkDerivation
, array
, base
, carray
, fftw
, fftwFloat
, ix-shapable
, stdenv
, storable-complex
, syb
, transformers
}:
mkDerivation {

pname = "fft";
version = "0.1.8.6";
sha256 = "2ed8d8301903283c9a62eda1f1cf49db0c471c4c128fbfdef562d598401e5b42";
libraryHaskellDepends = [
array
base
carray
ix-shapable
storable-complex
syb
transformers
];
libraryPkgconfigDepends = [
fftw
fftwFloat
];
doHaddock = false;
doCheck = false;
description = "Bindings to the FFTW library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
"fgl" = callPackage
({
  mkDerivation
, array
, base
, containers
, deepseq
, stdenv
, transformers
}:
mkDerivation {

pname = "fgl";
version = "5.6.0.0";
sha256 = "94722e1eb3dca66069e26a2d4b072c558bc896816ee016fc99521f3e16b9ccc4";
libraryHaskellDepends = [
array
base
containers
deepseq
transformers
];
doHaddock = false;
doCheck = false;
description = "Martin Erwig's Functional Graph Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"file-embed" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "file-embed";
version = "0.0.10.1";
sha256 = "33cdeb44e8fa1ca8ade64e2b8d0924ea8c70b2b521455a0f22cde36f19314152";
libraryHaskellDepends = [
base
bytestring
directory
filepath
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/file-embed";
description = "Use Template Haskell to embed file contents directly";
license = stdenv.lib.licenses.bsd3;

}) {};
"file-modules" = callPackage
({
  mkDerivation
, async
, base
, directory
, filepath
, haskell-src-exts
, MissingH
, regex-compat
, regex-pcre
, stdenv
}:
mkDerivation {

pname = "file-modules";
version = "0.1.2.4";
sha256 = "ffea2dbd51f77ed76f8559d8519674a1210611a35e2dbea72dfb41d7d5f0f235";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
directory
filepath
haskell-src-exts
MissingH
regex-compat
regex-pcre
];
executableHaskellDepends = [
async
base
directory
filepath
haskell-src-exts
MissingH
regex-compat
regex-pcre
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/stack-run-auto";
description = "Takes a Haskell source-code file and outputs its modules";
license = stdenv.lib.licenses.mit;

}) {};
"filecache" = callPackage
({
  mkDerivation
, base
, containers
, directory
, exceptions
, filepath
, fsnotify
, mtl
, stdenv
, stm
, strict-base-types
, time
}:
mkDerivation {

pname = "filecache";
version = "0.3.2";
sha256 = "82e4aff8b774c5256514bdb897cfd2d239986f20ebd0970f87198e244694b7b5";
libraryHaskellDepends = [
base
containers
directory
exceptions
filepath
fsnotify
mtl
stm
strict-base-types
time
];
doHaddock = false;
doCheck = false;
homepage = "http://lpuppet.banquise.net/";
description = "A cache system associating values to files";
license = stdenv.lib.licenses.bsd3;

}) {};
"filelock" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "filelock";
version = "0.1.1.2";
sha256 = "0ff1dcb13ec619f72496035e2a1298ef9dc6a814ba304d882cd9b145eae3203d";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/takano-akio/filelock";
description = "Portable interface to file locking (flock / LockFileEx)";
license = stdenv.lib.licenses.publicDomain;

}) {};
"filemanip" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, mtl
, stdenv
, unix-compat
}:
mkDerivation {

pname = "filemanip";
version = "0.3.6.3";
sha256 = "8836da17baaaf02ca080c9990ece4e0b0c8d6a128f458f8b64fd07b225ca9846";
libraryHaskellDepends = [
base
bytestring
directory
filepath
mtl
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/filemanip";
description = "Expressive file and directory manipulation for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"fileplow" = callPackage
({
  mkDerivation
, base
, binary-search
, bytestring
, stdenv
, vector
}:
mkDerivation {

pname = "fileplow";
version = "0.1.0.0";
sha256 = "9ddc7db62c97fa4413ff2435c96aac9f6f716e2f6bc7a71aa4db25c3871bee04";
libraryHaskellDepends = [
base
binary-search
bytestring
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/fileplow#readme";
description = "Library to process and search large files or a collection of files";
license = stdenv.lib.licenses.bsd3;

}) {};
"filter-logger" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, ansi-terminal
, base
, bytestring
, data-default
, fast-logger
, http-types
, scotty
, semigroups
, stdenv
, time
, wai
, wai-extra
, wai-logger
}:
mkDerivation {

pname = "filter-logger";
version = "0.6.0.0";
sha256 = "7884124056950a7f7ff393ebb7d1622695f9b66f898c60aeb8bc991c73642f21";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-pretty
ansi-terminal
base
bytestring
data-default
fast-logger
http-types
semigroups
time
wai
wai-extra
wai-logger
];
executableHaskellDepends = [
aeson
base
bytestring
scotty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/filter-logger#readme";
description = "Filterable request logging wai middleware. Change how data is logged and when.";
license = stdenv.lib.licenses.mit;

}) {};
"find-clumpiness" = callPackage
({
  mkDerivation
, aeson
, base
, BiobaseNewick
, bytestring
, clumpiness
, containers
, hierarchical-clustering
, listsafe
, mtl
, optparse-applicative
, stdenv
, text
, text-show
, tree-fun
, unordered-containers
, vector
}:
mkDerivation {

pname = "find-clumpiness";
version = "0.2.3.1";
sha256 = "089e55641eedd12ab16ae5e81cbd2c6c0375801c01fc17fb2ce23354a0ec2c2a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
BiobaseNewick
bytestring
clumpiness
containers
hierarchical-clustering
listsafe
mtl
text
text-show
tree-fun
unordered-containers
vector
];
executableHaskellDepends = [
aeson
base
BiobaseNewick
bytestring
clumpiness
containers
optparse-applicative
text
tree-fun
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/GregorySchwartz/find-clumpiness#readme";
description = "Find the clumpiness of labels in a tree";
license = stdenv.lib.licenses.gpl3;

}) {};
"fingertree" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "fingertree";
version = "0.1.4.1";
sha256 = "9778dc162963c376f02239183e782673729d01a2e1e1dbf81924d80bf6f74ea4";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Generic finger-tree structure, with example instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"fingertree-psqueue" = callPackage
({
  mkDerivation
, base
, fingertree
, stdenv
}:
mkDerivation {

pname = "fingertree-psqueue";
version = "0.3";
sha256 = "9f8c2f1965ea7a618d969db6506c8f373c95e09072b2182de40713d265046c92";
libraryHaskellDepends = [
base
fingertree
];
doHaddock = false;
doCheck = false;
description = "Implementation of priority search queues as finger trees";
license = stdenv.lib.licenses.bsd3;

}) {};
"finite-typelits" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "finite-typelits";
version = "0.1.3.0";
sha256 = "db733336de7ba5a2650f33f0b6a82dfe6699124f673b4506ffedaa4b6513489d";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mniip/finite-typelits";
description = "A type inhabited by finitely many values, indexed by type-level naturals";
license = stdenv.lib.licenses.bsd3;

}) {};
"fitspec" = callPackage
({
  mkDerivation
, base
, cmdargs
, leancheck
, stdenv
, template-haskell
}:
mkDerivation {

pname = "fitspec";
version = "0.4.4";
sha256 = "d9f3b682edb7c12f2a1cbd9e522e093e2e092070dc07263ae9e6dfc16f6c7597";
libraryHaskellDepends = [
base
cmdargs
leancheck
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rudymatela/fitspec#readme";
description = "refining property sets for testing Haskell programs";
license = stdenv.lib.licenses.bsd3;

}) {};
"fixed" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "fixed";
version = "0.2.1.1";
sha256 = "24a9e1e251998c9d06037bb771d9eab2980a91132de59a19d0166a1c51e715e2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/fixed";
description = "Signed 15.16 precision fixed point arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"fixed-length" = callPackage
({
  mkDerivation
, base
, non-empty
, stdenv
, tfp
, utility-ht
}:
mkDerivation {

pname = "fixed-length";
version = "0.2";
sha256 = "3171f2d443171a8e92733b3935805c7d5b54eae1f39f9fd729a766f887a6389b";
libraryHaskellDepends = [
base
non-empty
tfp
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/fixed-length/";
description = "Lists with statically known length based on non-empty package";
license = stdenv.lib.licenses.bsd3;

}) {};
"fixed-vector" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, stdenv
}:
mkDerivation {

pname = "fixed-vector";
version = "1.1.0.0";
sha256 = "1ed0bef94b0fead859ad2aea0b73bf1bd3686a6c1faafc75e321fbd9c3ae94c5";
libraryHaskellDepends = [
base
deepseq
primitive
];
doHaddock = false;
doCheck = false;
description = "Generic vectors with statically known size";
license = stdenv.lib.licenses.bsd3;

}) {};
"fixed-vector-hetero" = callPackage
({
  mkDerivation
, base
, deepseq
, fixed-vector
, primitive
, stdenv
}:
mkDerivation {

pname = "fixed-vector-hetero";
version = "0.4.0.0";
sha256 = "36b6487551dc4c93e22c8f5e6e38de75ed0b12884b677b2a92bda47c781f26f4";
revision = "1";
editedCabalFile = "0gc12lyp07yjs1xhdbfwllbw2ccdr131w0naxv5cn09bh9iay5xs";
libraryHaskellDepends = [
base
deepseq
fixed-vector
primitive
];
doHaddock = false;
doCheck = false;
homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
description = "Generic heterogeneous vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"flac" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default-class
, directory
, exceptions
, filepath
, FLAC
, mtl
, stdenv
, text
, transformers
, vector
, wave
}:
mkDerivation {

pname = "flac";
version = "0.1.2";
sha256 = "5692b3dfc561cbeed25b1cf9280705f58eadd8c400aa2e6a725fd5562042ac29";
revision = "3";
editedCabalFile = "09xml5mv63q0wzw09s0ssjdzgnq041gr6gjhk63dr252rydnn4zh";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
data-default-class
directory
exceptions
filepath
mtl
text
transformers
vector
wave
];
librarySystemDepends = [
FLAC
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/flac";
description = "Complete high-level binding to libFLAC";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) FLAC;};
"flac-picture" = callPackage
({
  mkDerivation
, base
, bytestring
, flac
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "flac-picture";
version = "0.1.1";
sha256 = "3c1cf80c48521370ce6351d4b544c14891442bfe47c65e5bf436fe58f6fec1ce";
revision = "1";
editedCabalFile = "02vdh61nzig0yrv6ja6fjlgfcznj5k4iqh3i5f9g5p078ycqb17w";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
flac
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/flac-picture";
description = "Support for writing picture to FLAC metadata blocks with JuicyPixels";
license = stdenv.lib.licenses.bsd3;

}) {};
"flat-mcmc" = callPackage
({
  mkDerivation
, base
, formatting
, mcmc-types
, monad-par
, monad-par-extras
, mwc-probability
, pipes
, primitive
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "flat-mcmc";
version = "1.5.0";
sha256 = "87cea9deac6e2d32d9984741ba222ccb2fb0d5f8c58e843684476bfe7632f1fd";
revision = "1";
editedCabalFile = "1pjkyvs4c6yx6jva08zw2b1qfhhv9q71sy806f5lddjsknnym2fn";
libraryHaskellDepends = [
base
formatting
mcmc-types
monad-par
monad-par-extras
mwc-probability
pipes
primitive
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtobin/flat-mcmc";
description = "Painless general-purpose sampling";
license = stdenv.lib.licenses.mit;

}) {};
"flexible-defaults" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
, th-extras
, transformers
}:
mkDerivation {

pname = "flexible-defaults";
version = "0.0.1.2";
sha256 = "827032cecf5e937d673f3a0b84fbbaba7c03fce6a567c15faf36865da9b76dc2";
libraryHaskellDepends = [
base
containers
template-haskell
th-extras
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/flexible-defaults";
description = "Generate default function implementations for complex type classes";
license = stdenv.lib.licenses.publicDomain;

}) {};
"floatshow" = callPackage
({
  mkDerivation
, array
, base
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "floatshow";
version = "0.2.4";
sha256 = "0c4e9494df46120942b2078db53c16200b46eff603fca5ab85775a541f975dff";
libraryHaskellDepends = [
array
base
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dafis/floatshow";
description = "Alternative faster String representations for Double and Float, String representations for more general numeric types";
license = stdenv.lib.licenses.bsd3;

}) {};
"flow" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "flow";
version = "1.0.12";
sha256 = "77d88b7724c4108ae5bb07820b8b79685dcde0beec4dda356067e7899a793531";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/flow#readme";
description = "Write more understandable Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"fmlist" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "fmlist";
version = "0.9.2";
sha256 = "8fc4b55d04e7f216740a01acd2f38293e3bd9409a9495e6042a162580c420609";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sjoerdvisscher/fmlist";
description = "FoldMap lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"fmt" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, containers
, formatting
, microlens
, stdenv
, text
, time
, time-locale-compat
}:
mkDerivation {

pname = "fmt";
version = "0.6";
sha256 = "5e6f1b510e6f11698c07df4f6369bd85f610eb0142d6b8e2e1ff078954361392";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
containers
formatting
microlens
text
time
time-locale-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/fmt";
description = "A new formatting library";
license = stdenv.lib.licenses.bsd3;

}) {};
"fn" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, directory
, filepath
, http-types
, resourcet
, stdenv
, text
, unordered-containers
, wai
, wai-extra
}:
mkDerivation {

pname = "fn";
version = "0.3.0.2";
sha256 = "1e34b017aa13f60464ec06dfbae970c3c0f01f2160f5001a4e84c8179de7ae5f";
libraryHaskellDepends = [
base
blaze-builder
bytestring
directory
filepath
http-types
resourcet
text
unordered-containers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/positiondev/fn#readme";
description = "A functional web framework";
license = stdenv.lib.licenses.isc;

}) {};
"focus" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "focus";
version = "0.1.5.2";
sha256 = "c2988d48c2bc6861a00be4e02161df96abcbf6c80e801676cee39b7628715cb7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/focus";
description = "A general abstraction for manipulating elements of container data structures";
license = stdenv.lib.licenses.mit;

}) {};
"fold-debounce" = callPackage
({
  mkDerivation
, base
, data-default-class
, stdenv
, stm
, stm-delay
, time
}:
mkDerivation {

pname = "fold-debounce";
version = "0.2.0.7";
sha256 = "ff7ec4537a04beaae6926387f49dbfd98b6b6e5344e9d435503be7f2aca1c68f";
libraryHaskellDepends = [
base
data-default-class
stm
stm-delay
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/fold-debounce";
description = "Fold multiple events that happen in a given period of time";
license = stdenv.lib.licenses.bsd3;

}) {};
"fold-debounce-conduit" = callPackage
({
  mkDerivation
, base
, conduit
, fold-debounce
, resourcet
, stdenv
, stm
, transformers
, transformers-base
}:
mkDerivation {

pname = "fold-debounce-conduit";
version = "0.2.0.1";
sha256 = "5f98432d8d0a193ec1287c438fe53f8bd1ec4d5446aa64914f2f353f44e8500b";
libraryHaskellDepends = [
base
conduit
fold-debounce
resourcet
stm
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/fold-debounce-conduit";
description = "Regulate input traffic from conduit Source with Control.FoldDebounce";
license = stdenv.lib.licenses.bsd3;

}) {};
"foldl" = callPackage
({
  mkDerivation
, base
, bytestring
, comonad
, containers
, contravariant
, hashable
, mwc-random
, primitive
, profunctors
, semigroups
, stdenv
, text
, transformers
, unordered-containers
, vector
, vector-builder
}:
mkDerivation {

pname = "foldl";
version = "1.3.7";
sha256 = "76225f77e5a63891ca9f50fdc053be1506b6508feec73003455286e9bf316984";
libraryHaskellDepends = [
base
bytestring
comonad
containers
contravariant
hashable
mwc-random
primitive
profunctors
semigroups
text
transformers
unordered-containers
vector
vector-builder
];
doHaddock = false;
doCheck = false;
description = "Composable, streaming, and efficient left folds";
license = stdenv.lib.licenses.bsd3;

}) {};
"folds" = callPackage
({
  mkDerivation
, adjunctions
, base
, bifunctors
, Cabal
, cabal-doctest
, comonad
, constraints
, contravariant
, data-reify
, distributive
, lens
, mtl
, pointed
, profunctors
, reflection
, semigroupoids
, stdenv
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "folds";
version = "0.7.4";
sha256 = "5c6e6f7c9c852cbe3d5372f93ed99f82400d15ae99ecf8e9e005481647734572";
configureFlags = [
"-f-test-hlint"
];
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
adjunctions
base
bifunctors
comonad
constraints
contravariant
data-reify
distributive
lens
mtl
pointed
profunctors
reflection
semigroupoids
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/folds";
description = "Beautiful Folding";
license = stdenv.lib.licenses.bsd3;

}) {};
"follow-file" = callPackage
({
  mkDerivation
, attoparsec
, attoparsec-path
, base
, bytestring
, conduit
, conduit-combinators
, directory
, exceptions
, hinotify
, monad-control
, mtl
, path
, stdenv
, text
, unix
, utf8-string
}:
mkDerivation {

pname = "follow-file";
version = "0.0.2";
sha256 = "13922046769351aaeee80cce67d2fce07eca94a3a762033859fe15f7ce75c118";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
attoparsec-path
base
bytestring
conduit
directory
exceptions
hinotify
monad-control
mtl
path
text
unix
utf8-string
];
executableHaskellDepends = [
attoparsec
attoparsec-path
base
bytestring
conduit
conduit-combinators
directory
hinotify
path
text
];
doHaddock = false;
doCheck = false;
description = "Be notified when a file gets appended, solely with what was added";
license = stdenv.lib.licenses.bsd3;

}) {};
"force-layout" = callPackage
({
  mkDerivation
, base
, containers
, data-default-class
, lens
, linear
, stdenv
}:
mkDerivation {

pname = "force-layout";
version = "0.4.0.6";
sha256 = "f7729855b1b14e0b255325faaca9f4834004e02bd21def6a865d2c55c734259d";
revision = "3";
editedCabalFile = "0rp5ggzdqy9i8bsjz7i36l8l2b04vjy6sqm6gxmb4pqmakj1x8q6";
libraryHaskellDepends = [
base
containers
data-default-class
lens
linear
];
doHaddock = false;
doCheck = false;
description = "Simple force-directed layout";
license = stdenv.lib.licenses.bsd3;

}) {};
"foreign-store" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "foreign-store";
version = "0.2";
sha256 = "06718a214d068eaa494cc82376f23b2059a141b01048cd7efcf2176a6c3383dc";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/foreign-store";
description = "Store a stable pointer in a foreign context to be retrieved later";
license = stdenv.lib.licenses.bsd3;

}) {};
"forma" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, data-default-class
, mtl
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "forma";
version = "0.2.0";
sha256 = "00d0a75fb7706bd06f4e47eaafbc07e92461582d8b8e5aee76b44604d2062d17";
revision = "1";
editedCabalFile = "1hqay7gjhnlxya08qwmxnwriy958awafvyi7rws6wla5m1cq0wr6";
libraryHaskellDepends = [
aeson
base
containers
data-default-class
mtl
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/forma";
description = "Parse and validate forms in JSON format";
license = stdenv.lib.licenses.bsd3;

}) {};
"format-numbers" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "format-numbers";
version = "0.1.0.0";
sha256 = "0ca4561b55c888552f7bf0eb68e97b62acedcb0d5e5e1cc4afd94402d01231a6";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/format-numbers#readme";
description = "Various number formatting functions";
license = stdenv.lib.licenses.mit;

}) {};
"formatting" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, clock
, fetchgit
, ghc-prim
, integer-gmp
, old-locale
, scientific
, semigroups
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "formatting";
version = "6.3.6";
src = fetchgit {

url = "https://github.com/chrisdone/formatting.git";
sha256 = "1jsz2az06dcx1ni259j81jjwkv3k660ssyk20m4cjxzmymvigrin";
rev = "444bc8b1190f9c7f94af41b6f538071545392754";

};
libraryHaskellDepends = [
array
base
bytestring
clock
ghc-prim
integer-gmp
old-locale
scientific
semigroups
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
license = stdenv.lib.licenses.bsd3;

}) {};
"foundation" = callPackage
({
  mkDerivation
, base
, basement
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "foundation";
version = "0.0.20";
sha256 = "ba6ae63a9ce0846bf942af2c3ace56600f051c61e83a0b55dd625de23a78e42d";
libraryHaskellDepends = [
base
basement
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-foundation/foundation";
description = "Alternative prelude with batteries and no dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"free" = callPackage
({
  mkDerivation
, base
, bifunctors
, comonad
, containers
, distributive
, exceptions
, mtl
, profunctors
, semigroupoids
, semigroups
, stdenv
, template-haskell
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "free";
version = "5.0.2";
sha256 = "ef05eb1c8e69742a4f962c573ef362e44ad48772940f1ef69fe39f0f77b2a396";
libraryHaskellDepends = [
base
bifunctors
comonad
containers
distributive
exceptions
mtl
profunctors
semigroupoids
semigroups
template-haskell
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/free/";
description = "Monads for free";
license = stdenv.lib.licenses.bsd3;

}) {};
"free-vl" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "free-vl";
version = "0.1.4";
sha256 = "57f63ed35b42fc54fefb3cc183d0655e0d6c4a28d5371dba00fc9c9d3fa602bf";
revision = "1";
editedCabalFile = "1711k76b6w7gfqvc8z9jnylj4hhk3rvx7ap31y1mmq4g2a4s82qm";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aaronlevin/free-vl";
description = "van Laarhoven encoded Free Monad with Extensible Effects";
license = stdenv.lib.licenses.bsd3;

}) {};
"freenect" = callPackage
({
  mkDerivation
, base
, freenect
, freenect_sync
, libfreenect
, stdenv
, vector
}:
mkDerivation {

pname = "freenect";
version = "1.2.1";
sha256 = "fca7aa958ec04396334b101679f8603850d7c6629770d5206d774e115cd70759";
libraryHaskellDepends = [
base
vector
];
librarySystemDepends = [
freenect
freenect_sync
];
libraryPkgconfigDepends = [
libfreenect
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/freenect";
description = "Interface to the Kinect device";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) freenect; inherit (pkgs) freenect_sync;
inherit (pkgs) libfreenect;};
"freer-simple" = callPackage
({
  mkDerivation
, base
, natural-transformation
, stdenv
, transformers-base
}:
mkDerivation {

pname = "freer-simple";
version = "1.1.0.0";
sha256 = "2198cdb1f6206b192bed553757cfc145485ee86be7261878bf44bc0e84b1bb01";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
natural-transformation
transformers-base
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lexi-lambda/freer-simple#readme";
description = "Implementation of a friendly effect system for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"freetype2" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "freetype2";
version = "0.1.2";
sha256 = "517e80298890e903b03134d7840d3d1a517bfdad53127ed57c2fdd18cbfae302";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Haskell binding for FreeType 2 library";
license = stdenv.lib.licenses.bsd3;

}) {};
"friday" = callPackage
({
  mkDerivation
, base
, containers
, convertible
, deepseq
, primitive
, ratio-int
, stdenv
, transformers
, vector
}:
mkDerivation {

pname = "friday";
version = "0.2.3.1";
sha256 = "0827492c1a6116baa5c4866539a4cfa0f6d81bf31f6573616bf5ac4484199613";
revision = "1";
editedCabalFile = "0n1f4plvrmad6gm8dbsi6g5ghahdwwy2fhgippmnp1ixb65x7d58";
libraryHaskellDepends = [
base
containers
convertible
deepseq
primitive
ratio-int
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RaphaelJ/friday";
description = "A functional image processing library for Haskell";
license = stdenv.lib.licenses.lgpl3;

}) {};
"friday-juicypixels" = callPackage
({
  mkDerivation
, base
, friday
, JuicyPixels
, stdenv
, vector
}:
mkDerivation {

pname = "friday-juicypixels";
version = "0.1.2.4";
sha256 = "6d59828fe700ddd0777d180551c5f62444c18fd0b27ae3a675ad185efa90ae3f";
libraryHaskellDepends = [
base
friday
JuicyPixels
vector
];
doHaddock = false;
doCheck = false;
homepage = "github.com/TomMD/friday-juicypixels";
description = "Converts between the Friday and JuicyPixels image types";
license = stdenv.lib.licenses.bsd3;

}) {};
"friendly-time" = callPackage
({
  mkDerivation
, base
, old-locale
, stdenv
, time
}:
mkDerivation {

pname = "friendly-time";
version = "0.4.1";
sha256 = "9af3443227c3f271f5d11ed8c3c15c77a59de3ab82d87d93ac1f8455a54393c8";
revision = "1";
editedCabalFile = "096nfaqxavi6xblqh4q5dxks824liz75b4rm2la2hlkkn5mhqdgs";
libraryHaskellDepends = [
base
old-locale
time
];
doHaddock = false;
doCheck = false;
description = "Print time information in friendly ways";
license = stdenv.lib.licenses.bsd3;

}) {};
"frisby" = callPackage
({
  mkDerivation
, array
, base
, containers
, mtl
, semigroups
, stdenv
}:
mkDerivation {

pname = "frisby";
version = "0.2.2";
sha256 = "c1b318dbf54d56e1012955cc47a1633af5fd77facc128c725353718c0663b6d5";
libraryHaskellDepends = [
array
base
containers
mtl
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://repetae.net/computer/frisby/";
description = "Linear time composable parser for PEG grammars";
license = stdenv.lib.licenses.bsd3;

}) {};
"from-sum" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "from-sum";
version = "0.2.1.0";
sha256 = "a1ed8a433b98df8a70be2f9199abae3e5ed7fb4c2f2b3fb1268b6b588f326667";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/from-sum";
description = "Canonical fromMaybeM and fromEitherM functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"frontmatter" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
, yaml
}:
mkDerivation {

pname = "frontmatter";
version = "0.1.0.2";
sha256 = "66eb97b0d5097397f0238b9af764a8c6ea2bb9a4a16cd1214051719fc313b99d";
libraryHaskellDepends = [
attoparsec
base
bytestring
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-frontmatter";
description = "Parses frontmatter as used in Jekyll markdown files";
license = stdenv.lib.licenses.mit;

}) {};
"fsnotify" = callPackage
({
  mkDerivation
, async
, base
, containers
, directory
, filepath
, hinotify
, stdenv
, text
, time
, unix-compat
}:
mkDerivation {

pname = "fsnotify";
version = "0.2.1.1";
sha256 = "175a75962ad07c30c031fa8931f8d3e32abc06a96676e73e65cb7207e9d2dc90";
revision = "1";
editedCabalFile = "0kag32lqkjmv03bycf6ip2vd6vzpcpq4iqs6ivyjh93v40252xxp";
libraryHaskellDepends = [
async
base
containers
directory
filepath
hinotify
text
time
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-fswatch/hfsnotify";
description = "Cross platform library for file change notification";
license = stdenv.lib.licenses.bsd3;

}) {};
"fsnotify-conduit" = callPackage
({
  mkDerivation
, base
, conduit
, directory
, filepath
, fsnotify
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "fsnotify-conduit";
version = "0.1.1.1";
sha256 = "03990f311f7d66a6996b88722602b6058fbae7ad33e74073875ef0466ef001ce";
libraryHaskellDepends = [
base
conduit
directory
filepath
fsnotify
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/fsnotify-conduit#readme";
description = "Get filesystem notifications as a stream of events";
license = stdenv.lib.licenses.mit;

}) {};
"funcmp" = callPackage
({
  mkDerivation
, base
, filepath
, pretty
, process
, stdenv
}:
mkDerivation {

pname = "funcmp";
version = "1.9";
sha256 = "08b2b982fc301af160ae5f2ab5d01e850b4ed177963fb19b4d4b2a28e7bdaab4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
filepath
pretty
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/funcmp";
description = "Functional MetaPost is a Haskell frontend to the MetaPost language";
license = stdenv.lib.licenses.gpl3;

}) {};
"functor-classes-compat" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "functor-classes-compat";
version = "1";
sha256 = "ef11f94f44a74d6657ee61dcd2cfbc6d0889d233a2fb4caae6a29d9c59a1366f";
revision = "2";
editedCabalFile = "07ldwmqfwi2lgnmia5bb0885664a54g2q55f91swgafb11n0csqg";
libraryHaskellDepends = [
base
containers
hashable
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/functor-classes-compat#readme";
description = "Data.Functor.Classes instances for core packages";
license = stdenv.lib.licenses.bsd3;

}) {};
"fuzzcheck" = callPackage
({
  mkDerivation
, base
, lifted-base
, monad-control
, QuickCheck
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "fuzzcheck";
version = "0.1.1";
sha256 = "ecd664796e9cf5c608ca904897dd9ec18b471a86fcfb4216328382b28023d961";
libraryHaskellDepends = [
base
lifted-base
monad-control
QuickCheck
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/fuzzcheck";
description = "A simple checker for stress testing monadic code";
license = stdenv.lib.licenses.bsd3;

}) {};
"fuzzyset" = callPackage
({
  mkDerivation
, base
, base-unicode-symbols
, data-default
, lens
, stdenv
, text
, text-metrics
, unordered-containers
, vector
}:
mkDerivation {

pname = "fuzzyset";
version = "0.1.0.6";
sha256 = "731ae813678de30bbccac03760f7bb0baed5cc8d91ed21e871b1f8d7aafe61a3";
libraryHaskellDepends = [
base
base-unicode-symbols
data-default
lens
text
text-metrics
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/laserpants/fuzzyset-haskell";
description = "Fuzzy set for approximate string matching";
license = stdenv.lib.licenses.bsd3;

}) {};
"gauge" = callPackage
({
  mkDerivation
, base
, basement
, deepseq
, directory
, process
, stdenv
, vector
}:
mkDerivation {

pname = "gauge";
version = "0.2.1";
sha256 = "2d78584a8fdca851c60a13c79bbb8528e174ec84d6631679e76445f765590110";
libraryHaskellDepends = [
base
basement
deepseq
directory
process
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-gauge";
description = "small framework for performance measurement and analysis";
license = stdenv.lib.licenses.bsd3;

}) {};
"gc" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, stdenv
}:
mkDerivation {

pname = "gc";
version = "0.0.2";
sha256 = "39cc5ac887319aeb184ee0d6ddb5b5a34e3f3d38c3fdf3ecc60bdf31a53dc30c";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/gc/";
description = "Poor Richard's Memory Manager";
license = stdenv.lib.licenses.bsd3;

}) {};
"gd" = callPackage
({
  mkDerivation
, base
, bytestring
, expat
, fontconfig
, freetype
, gd
, libjpeg
, libpng
, stdenv
, zlib
}:
mkDerivation {

pname = "gd";
version = "3000.7.3";
sha256 = "14aecb600d9a058b1905dfdef3d51a1eb11fb92f804fbaaa041103a0bfd97fb6";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
expat
fontconfig
freetype
gd
libjpeg
libpng
zlib
];
doHaddock = false;
doCheck = false;
description = "A Haskell binding to a subset of the GD graphics library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) expat; inherit (pkgs) fontconfig;
inherit (pkgs) freetype; inherit (pkgs) gd;
inherit (pkgs) libjpeg; inherit (pkgs) libpng; inherit (pkgs) zlib;};
"gdax" = callPackage
({
  mkDerivation
, aeson
, aeson-casing
, aeson-pretty
, base
, base64-bytestring
, byteable
, bytestring
, containers
, cryptohash
, exceptions
, hashable
, http-client
, http-client-tls
, lens
, lens-aeson
, mtl
, regex-tdfa
, regex-tdfa-text
, scientific
, stdenv
, text
, time
, unordered-containers
, uuid
, vector
, websockets
, wreq
, wuss
}:
mkDerivation {

pname = "gdax";
version = "0.6.0.0";
sha256 = "deb8efce5e4deb5b45c0d66d23eac65224c3d560d7ac67da6d3616cd5a916721";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-casing
base
base64-bytestring
byteable
bytestring
containers
cryptohash
exceptions
hashable
http-client
http-client-tls
lens
lens-aeson
mtl
regex-tdfa
regex-tdfa-text
scientific
text
time
unordered-containers
uuid
vector
websockets
wreq
wuss
];
executableHaskellDepends = [
aeson
aeson-pretty
base
base64-bytestring
bytestring
text
vector
websockets
wuss
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrewRademacher/gdax";
description = "API Wrapping for Coinbase's GDAX exchange";
license = stdenv.lib.licenses.mit;

}) {};
"general-games" = callPackage
({
  mkDerivation
, base
, monad-loops
, MonadRandom
, random
, random-shuffle
, stdenv
}:
mkDerivation {

pname = "general-games";
version = "1.1.1";
sha256 = "8b8e9e3546738b55a74589cf76ebe46c3a2f2fd346a853f9dbbf8bd0563350c0";
libraryHaskellDepends = [
base
monad-loops
MonadRandom
random
random-shuffle
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cgorski/general-games";
description = "Library supporting simulation of a number of games";
license = stdenv.lib.licenses.mit;

}) {};
"generic-aeson" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, generic-deriving
, mtl
, stdenv
, tagged
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "generic-aeson";
version = "0.2.0.9";
sha256 = "34c13f91ffa72a1f6d7f43b84fdd19b20db547045eb6164a4119f9a95dcd84cb";
revision = "4";
editedCabalFile = "0m2m2wfv9nhq8m7xl1nrmj4wy3yip3s31b4448za58ryrwkdgjzd";
libraryHaskellDepends = [
aeson
attoparsec
base
generic-deriving
mtl
tagged
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Derivation of Aeson instances using GHC generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"generic-arbitrary" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "generic-arbitrary";
version = "0.1.0";
sha256 = "69f30a54e7a3d0a45288778e22e6d0d03cfc3b525dfe0a663cd4f559a619bcc6";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
description = "Generic implementation for QuickCheck's Arbitrary";
license = stdenv.lib.licenses.mit;

}) {};
"generic-deriving" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "generic-deriving";
version = "1.12.1";
sha256 = "f5fd3f733a20deee5a6e752969edac1e04a90e2ee34e005fccb5d35a5c129473";
revision = "1";
editedCabalFile = "1vr9lyvcrdiar6ndqnspwvhvrbnc1fvsjyx458ivpcr6j75j0l5j";
libraryHaskellDepends = [
base
containers
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dreixel/generic-deriving";
description = "Generic programming library for generalised deriving";
license = stdenv.lib.licenses.bsd3;

}) {};
"generic-lens" = callPackage
({
  mkDerivation
, base
, profunctors
, stdenv
, tagged
}:
mkDerivation {

pname = "generic-lens";
version = "0.5.1.0";
sha256 = "87d02379ba33a8039e641f3dc069877b84003541981e96b8f06f02b0ba1a0127";
libraryHaskellDepends = [
base
profunctors
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kcsongor/generic-lens";
description = "Generic data-structure operations exposed as lenses";
license = stdenv.lib.licenses.bsd3;

}) {};
"generic-random" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "generic-random";
version = "1.1.0.2";
sha256 = "e188cec239d67aa8fb563400874987453854d8adefeb82cd6188ffc8c8cf547f";
revision = "1";
editedCabalFile = "1qhjsxaadvnh41qrlnzp2wxrbxxsbsz9np4mhwq5vck07kqws5bk";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lysxia/generic-random";
description = "Generic random generators";
license = stdenv.lib.licenses.mit;

}) {};
"generic-xmlpickler" = callPackage
({
  mkDerivation
, base
, generic-deriving
, hxt
, stdenv
, text
}:
mkDerivation {

pname = "generic-xmlpickler";
version = "0.1.0.5";
sha256 = "d51760f5650051eebe561f2b18670657e8398014fa2a623c0e0169bfeca336af";
revision = "8";
editedCabalFile = "1hpcglml4b5yv192syxazminr5v7qjrgqwb2wk0cf7f0sjpm5d0q";
libraryHaskellDepends = [
base
generic-deriving
hxt
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/silkapp/generic-xmlpickler";
description = "Generic generation of HXT XmlPickler instances using GHC Generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"generics-eot" = callPackage
({
  mkDerivation
, base
, markdown-unlit
, stdenv
}:
mkDerivation {

pname = "generics-eot";
version = "0.2.1.2";
sha256 = "4e3a96f09e360f1b13ac73e6fb9371eb0fcd6a89c3c8c7966632dd8c19f76a1f";
libraryHaskellDepends = [
base
markdown-unlit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/generics-eot#readme";
description = "A library for generic programming that aims to be easy to understand";
license = stdenv.lib.licenses.bsd3;

}) {};
"generics-sop" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "generics-sop";
version = "0.3.2.0";
sha256 = "3060ecd09ccbd27ecf825bb89af0af9cfcadd16f747ce5964c501682a2301b99";
revision = "2";
editedCabalFile = "0hc00hjgxm7vzq146d9kwapgqnjbhdi0c7icyvrpc2fhc4cnwlwf";
libraryHaskellDepends = [
base
deepseq
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Generic Programming using True Sums of Products";
license = stdenv.lib.licenses.bsd3;

}) {};
"generics-sop-lens" = callPackage
({
  mkDerivation
, base
, generics-sop
, lens
, stdenv
}:
mkDerivation {

pname = "generics-sop-lens";
version = "0.1.2.1";
sha256 = "4e49d4cc580d45e25e0abdeee12b1191ae75937af1c7ca03333979584a8a525c";
revision = "3";
editedCabalFile = "1phq0hjpgxfvb8ay9v4ix6axk07mbd266javss9nmqmqmn3vnb51";
libraryHaskellDepends = [
base
generics-sop
lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/generics-sop-lens#readme";
description = "Lenses for types in generics-sop";
license = stdenv.lib.licenses.bsd3;

}) {};
"geniplate-mirror" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
}:
mkDerivation {

pname = "geniplate-mirror";
version = "0.7.6";
sha256 = "4b6b82d0348e79ae4a5e1deac029441251ae87ec15a7667cf0a1de5ff80215f8";
libraryHaskellDepends = [
base
mtl
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/danr/geniplate";
description = "Use Template Haskell to generate Uniplate-like functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"genvalidity" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
, validity
}:
mkDerivation {

pname = "genvalidity";
version = "0.4.0.4";
sha256 = "fca452fe3735be8b4fffdf1e9f9761f5220ed5582a6543a6af4d48a2b56cd63d";
libraryHaskellDepends = [
base
QuickCheck
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Testing utilities for the validity library";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-aeson" = callPackage
({
  mkDerivation
, aeson
, base
, genvalidity
, genvalidity-scientific
, genvalidity-text
, genvalidity-unordered-containers
, genvalidity-vector
, QuickCheck
, stdenv
, validity
, validity-aeson
}:
mkDerivation {

pname = "genvalidity-aeson";
version = "0.1.0.0";
sha256 = "4f8798118961f2c5f7986b02df2b91a1f9daa663990c70d3e1a28c9988863390";
libraryHaskellDepends = [
aeson
base
genvalidity
genvalidity-scientific
genvalidity-text
genvalidity-unordered-containers
genvalidity-vector
QuickCheck
validity
validity-aeson
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for aeson";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, genvalidity
, QuickCheck
, stdenv
, validity
, validity-bytestring
}:
mkDerivation {

pname = "genvalidity-bytestring";
version = "0.1.0.0";
sha256 = "4b8aa18a173740aad49964b802a150f866238973caa36549035009c7dc949cae";
libraryHaskellDepends = [
base
bytestring
genvalidity
QuickCheck
validity
validity-bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for ByteString";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-containers" = callPackage
({
  mkDerivation
, base
, containers
, genvalidity
, QuickCheck
, stdenv
, validity
, validity-containers
}:
mkDerivation {

pname = "genvalidity-containers";
version = "0.3.0.0";
sha256 = "0c79575e61974b3bac1e294fa43e2369c76b10e3d64dafeecb35cf29c293e027";
libraryHaskellDepends = [
base
containers
genvalidity
QuickCheck
validity
validity-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for containers";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-hspec" = callPackage
({
  mkDerivation
, base
, genvalidity
, genvalidity-property
, hspec
, hspec-core
, QuickCheck
, stdenv
, validity
}:
mkDerivation {

pname = "genvalidity-hspec";
version = "0.5.0.0";
sha256 = "b50fcae1425a5da8666d0c6f439c844f87d4406711664166b083573f2b8b0cbc";
libraryHaskellDepends = [
base
genvalidity
genvalidity-property
hspec
hspec-core
QuickCheck
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Standard spec's for GenValidity instances";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-hspec-aeson" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, deepseq
, genvalidity
, genvalidity-hspec
, hspec
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "genvalidity-hspec-aeson";
version = "0.1.0.2";
sha256 = "e1896ac9fea6b11c4726bde6ad77b0e573f7157cb9c40225ec290a6cd7f00316";
libraryHaskellDepends = [
aeson
base
bytestring
deepseq
genvalidity
genvalidity-hspec
hspec
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "http://cs-syd.eu";
description = "Standard spec's for aeson-related instances";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-hspec-binary" = callPackage
({
  mkDerivation
, base
, binary
, deepseq
, genvalidity
, genvalidity-hspec
, hspec
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "genvalidity-hspec-binary";
version = "0.1.0.0";
sha256 = "d4f65a560e2ba34ba9fe36a08241407c235372ed830e8b5842757b9e1a1ca595";
libraryHaskellDepends = [
base
binary
deepseq
genvalidity
genvalidity-hspec
hspec
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Standard spec's for binary-related Instances";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-hspec-cereal" = callPackage
({
  mkDerivation
, base
, cereal
, deepseq
, genvalidity
, genvalidity-hspec
, hspec
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "genvalidity-hspec-cereal";
version = "0.1.0.0";
sha256 = "f330fca068308cfd1606e6438282c3c73c849d9d65618fff4fe044361e9aed05";
libraryHaskellDepends = [
base
cereal
deepseq
genvalidity
genvalidity-hspec
hspec
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "http://cs-syd.eu";
description = "Standard spec's for cereal-related instances";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-hspec-hashable" = callPackage
({
  mkDerivation
, base
, genvalidity
, genvalidity-hspec
, genvalidity-property
, hashable
, hspec
, QuickCheck
, stdenv
, validity
}:
mkDerivation {

pname = "genvalidity-hspec-hashable";
version = "0.1.0.0";
sha256 = "ce8e6131b8c793a4fcf1cf7bedc461817a91ba1ecc5d80de3641384283ae4600";
libraryHaskellDepends = [
base
genvalidity
genvalidity-hspec
genvalidity-property
hashable
hspec
QuickCheck
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity";
description = "Standard spec's for Hashable instances";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-path" = callPackage
({
  mkDerivation
, base
, genvalidity
, path
, stdenv
, validity-path
}:
mkDerivation {

pname = "genvalidity-path";
version = "0.2.0.2";
sha256 = "900c6339e8057cce0a13c0342e09a548d238c6eb7eb69eeb20b82a6174f71590";
libraryHaskellDepends = [
base
genvalidity
path
validity-path
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for Path";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-property" = callPackage
({
  mkDerivation
, base
, genvalidity
, hspec
, QuickCheck
, stdenv
, validity
}:
mkDerivation {

pname = "genvalidity-property";
version = "0.1.0.0";
sha256 = "dfd734fe9020f182c735ac0779f7f76e7d4d8e1294eabfb2f453e39259896af5";
libraryHaskellDepends = [
base
genvalidity
hspec
QuickCheck
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Standard properties for functions on `Validity` types";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-scientific" = callPackage
({
  mkDerivation
, base
, genvalidity
, QuickCheck
, scientific
, stdenv
, validity
, validity-scientific
}:
mkDerivation {

pname = "genvalidity-scientific";
version = "0.1.0.0";
sha256 = "f231bb6a208e4b941803669f60d3121a2122f22c5686d82a027ec0f9bd3666a1";
libraryHaskellDepends = [
base
genvalidity
QuickCheck
scientific
validity
validity-scientific
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for Scientific";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-text" = callPackage
({
  mkDerivation
, array
, base
, genvalidity
, QuickCheck
, stdenv
, text
, validity
, validity-text
}:
mkDerivation {

pname = "genvalidity-text";
version = "0.4.0.0";
sha256 = "769b3633d8770374551b49df01b29e8ef9cce1d8275715ab1cee5868430faced";
libraryHaskellDepends = [
array
base
genvalidity
QuickCheck
text
validity
validity-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for Text";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-time" = callPackage
({
  mkDerivation
, base
, genvalidity
, QuickCheck
, stdenv
, time
, validity-time
}:
mkDerivation {

pname = "genvalidity-time";
version = "0.1.0.1";
sha256 = "2fb7399591faf6d53426d89f3c97a87410042269aa3e2bc9ec7f0eb4993632b5";
libraryHaskellDepends = [
base
genvalidity
QuickCheck
time
validity-time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for time";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-unordered-containers" = callPackage
({
  mkDerivation
, base
, genvalidity
, hashable
, QuickCheck
, stdenv
, unordered-containers
, validity
, validity-unordered-containers
}:
mkDerivation {

pname = "genvalidity-unordered-containers";
version = "0.1.0.0";
sha256 = "e8fac31236806e21681fa7121a513812e54ff42133c7f82601d1af6082e7f38a";
libraryHaskellDepends = [
base
genvalidity
hashable
QuickCheck
unordered-containers
validity
validity-unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for unordered-containers";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-uuid" = callPackage
({
  mkDerivation
, base
, genvalidity
, QuickCheck
, stdenv
, uuid
, validity
, validity-uuid
}:
mkDerivation {

pname = "genvalidity-uuid";
version = "0.0.0.0";
sha256 = "ab784b9bb0465fbfaa16ae9181dc1a0e6dc7000ebde7dd366f659151aa07a9b5";
libraryHaskellDepends = [
base
genvalidity
QuickCheck
uuid
validity
validity-uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for UUID";
license = stdenv.lib.licenses.mit;

}) {};
"genvalidity-vector" = callPackage
({
  mkDerivation
, base
, genvalidity
, QuickCheck
, stdenv
, validity
, validity-vector
, vector
}:
mkDerivation {

pname = "genvalidity-vector";
version = "0.1.0.0";
sha256 = "990ec4f09d5baa30eaf76081db5247f95c2659ac213a185f3bab48d0b93f20c6";
libraryHaskellDepends = [
base
genvalidity
QuickCheck
validity
validity-vector
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "GenValidity support for vector";
license = stdenv.lib.licenses.mit;

}) {};
"getopt-generics" = callPackage
({
  mkDerivation
, base
, base-compat
, base-orphans
, generics-sop
, stdenv
, tagged
}:
mkDerivation {

pname = "getopt-generics";
version = "0.13.0.2";
sha256 = "e604aa25d7843a175ec8803e2d60eb6c959fbb4cc7fb0d8321f315ff8671600c";
libraryHaskellDepends = [
base
base-compat
base-orphans
generics-sop
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/getopt-generics#readme";
description = "Create command line interfaces with ease";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-boot" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, directory
, filepath
, ghc-boot-th
, stdenv
}:
mkDerivation {

pname = "ghc-boot";
version = "8.2.2";
sha256 = "cf38a4d878a944b100a770450f5472d167657330a906b9d56695a0d29b76973b";
libraryHaskellDepends = [
base
binary
bytestring
directory
filepath
ghc-boot-th
];
doHaddock = false;
doCheck = false;
description = "Shared functionality between GHC and its boot libraries";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-compact" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "ghc-compact";
version = "0.1.0.0";
sha256 = "50bc40e5e5b3a17b267250136af0c04027a9d9eb699e9fee8a5a321bae424e0f";
revision = "1";
editedCabalFile = "1fwcfk515lv3pjzxz87bddk3kdbkaxswxrr37spdlkvyyfrbxyak";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
description = "In memory storage of deeply evaluated data structure";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-core" = callPackage
({
  mkDerivation
, base
, colorize-haskell
, directory
, filepath
, pcre-light
, process
, stdenv
}:
mkDerivation {

pname = "ghc-core";
version = "0.5.6";
sha256 = "ec34f3e5892be7c2b52945875cd330397eca3904ae1d9574559855817b8b7e85";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
colorize-haskell
directory
filepath
pcre-light
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/shachaf/ghc-core";
description = "Display GHC's core and assembly output in a pager";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-events" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, containers
, stdenv
, text
, vector
}:
mkDerivation {

pname = "ghc-events";
version = "0.7.2";
sha256 = "b01643f72a448fcd63a0b48781d71b21fb0bb22a54967f0b8a39db0e5638ffbf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
binary
bytestring
containers
text
vector
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Library and tool for parsing .eventlog files from GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-exactprint" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, free
, ghc
, ghc-boot
, ghc-paths
, mtl
, stdenv
, syb
}:
mkDerivation {

pname = "ghc-exactprint";
version = "0.5.6.1";
sha256 = "07fd206d597631d7d8a78fb34423eb436f434a2477c69317c9a002ed23363390";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
free
ghc
ghc-boot
ghc-paths
mtl
syb
];
doHaddock = false;
doCheck = false;
description = "ExactPrint for GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-parser" = callPackage
({
  mkDerivation
, base
, cpphs
, ghc
, happy
, stdenv
}:
mkDerivation {

pname = "ghc-parser";
version = "0.2.0.2";
sha256 = "bb74cc64ff8fd3d10447075d5982c7c684210762faa15226415d0ed7da756084";
libraryHaskellDepends = [
base
ghc
];
libraryToolDepends = [
cpphs
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/gibiansky/IHaskell";
description = "Haskell source parser from GHC";
license = stdenv.lib.licenses.mit;

}) {};
"ghc-paths" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, stdenv
}:
mkDerivation {

pname = "ghc-paths";
version = "0.1.0.9";
sha256 = "afa68fb86123004c37c1dc354286af2d87a9dcfb12ddcb80e8bd0cd55bc87945";
revision = "3";
editedCabalFile = "1gx47xbm3qviqccnbsibzkfnlzljvls33jh1ry4l506yvfnf4j10";
setupHaskellDepends = [
base
Cabal
directory
];
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Knowledge of GHC's installation directories";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-prof" = callPackage
({
  mkDerivation
, attoparsec
, base
, containers
, scientific
, stdenv
, text
, time
}:
mkDerivation {

pname = "ghc-prof";
version = "1.4.1.2";
sha256 = "2ee3a57f27d8dff0bfa9be88625aa4c2509193bb7bba0e37b25f3c73eebf3766";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
containers
scientific
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/maoe/ghc-prof";
description = "Library for parsing GHC time and allocation profiling reports";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-syb-utils" = callPackage
({
  mkDerivation
, base
, ghc
, stdenv
, syb
}:
mkDerivation {

pname = "ghc-syb-utils";
version = "0.2.3.3";
sha256 = "5f4276c987883b487e687a596bb2ecb67a76027b4b1817b55b53acd92666473a";
libraryHaskellDepends = [
base
ghc
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nominolo/ghc-syb";
description = "Scrap Your Boilerplate utilities for the GHC API";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghc-tcplugins-extra" = callPackage
({
  mkDerivation
, base
, ghc
, stdenv
}:
mkDerivation {

pname = "ghc-tcplugins-extra";
version = "0.2.5";
sha256 = "9af31e6a80bf6e4470b13d59fba2c45e23938af937930c534b3b36911b117876";
libraryHaskellDepends = [
base
ghc
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
description = "Utilities for writing GHC type-checker plugins";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghc-typelits-extra" = callPackage
({
  mkDerivation
, base
, ghc
, ghc-prim
, ghc-tcplugins-extra
, ghc-typelits-knownnat
, ghc-typelits-natnormalise
, integer-gmp
, stdenv
, transformers
}:
mkDerivation {

pname = "ghc-typelits-extra";
version = "0.2.4";
sha256 = "afdd095ff413a40bc060c132bf298f967a393100b790d4f232040540cc39d246";
revision = "1";
editedCabalFile = "1ysf5mr85877a995951wjdg633ylrbpqhpqnn27yb6ayimky5z7a";
libraryHaskellDepends = [
base
ghc
ghc-prim
ghc-tcplugins-extra
ghc-typelits-knownnat
ghc-typelits-natnormalise
integer-gmp
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "Additional type-level operations on GHC.TypeLits.Nat";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghc-typelits-knownnat" = callPackage
({
  mkDerivation
, base
, ghc
, ghc-tcplugins-extra
, ghc-typelits-natnormalise
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "ghc-typelits-knownnat";
version = "0.4.2";
sha256 = "792ddd09785fb0f997943ec6128c5550b7480c48cb104ef08aaa5da1272c14c0";
revision = "1";
editedCabalFile = "16x3i6js5z0qr1yw9pfpc7hwhb28djijas2pkx4idwp997mryjaj";
libraryHaskellDepends = [
base
ghc
ghc-tcplugins-extra
ghc-typelits-natnormalise
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://clash-lang.org/";
description = "Derive KnownNat constraints from other KnownNat constraints";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghc-typelits-natnormalise" = callPackage
({
  mkDerivation
, base
, ghc
, ghc-tcplugins-extra
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "ghc-typelits-natnormalise";
version = "0.5.10";
sha256 = "deb60c337401f858b491631cbe3dbc000696d72fa3be4a9a7ff79cdd6432b697";
revision = "1";
editedCabalFile = "1d4j47glcw0xvdr6sgr221rfpjs48bijx5c5hyqqz6jfp0164grr";
libraryHaskellDepends = [
base
ghc
ghc-tcplugins-extra
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "http://www.clash-lang.org/";
description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
license = stdenv.lib.licenses.bsd2;

}) {};
"ghci" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, containers
, deepseq
, filepath
, ghc-boot
, ghc-boot-th
, stdenv
, template-haskell
, transformers
, unix
}:
mkDerivation {

pname = "ghci";
version = "8.2.2";
sha256 = "f6978f3da79c52659d0f63c33cd763190a1bb2214c01b34abe0e6cc9b4c0ca48";
libraryHaskellDepends = [
array
base
binary
bytestring
containers
deepseq
filepath
ghc-boot
ghc-boot-th
template-haskell
transformers
unix
];
doHaddock = false;
doCheck = false;
description = "The library supporting GHC's interactive interpreter";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghcid" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, cmdargs
, containers
, directory
, extra
, filepath
, fsnotify
, process
, stdenv
, terminal-size
, time
, unix
}:
mkDerivation {

pname = "ghcid";
version = "0.6.10";
sha256 = "92abe44d24072573d08a65a84c500974169502c69a2bf7e6ee8c367e53300de3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
cmdargs
directory
extra
filepath
process
time
];
executableHaskellDepends = [
ansi-terminal
base
cmdargs
containers
directory
extra
filepath
fsnotify
process
terminal-size
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/ghcid#readme";
description = "GHCi based bare bones IDE";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghcjs-base-stub" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, containers
, deepseq
, ghc-prim
, primitive
, scientific
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "ghcjs-base-stub";
version = "0.1.0.4";
sha256 = "27ab2b99bb677b6c19813d713a22f5818b2e53062bc45d0f34648cbf26ab12a8";
libraryHaskellDepends = [
aeson
attoparsec
base
containers
deepseq
ghc-prim
primitive
scientific
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/javascript-stub#readme";
description = "Allow GHCJS projects to compile under GHC and develop using intero";
license = stdenv.lib.licenses.bsd3;

}) {};
"ghcjs-codemirror" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ghcjs-codemirror";
version = "0.0.0.1";
sha256 = "dcd9f5288d7624c8a2a5bf8440d9de6ab8400707d366180b13cc3f472280a513";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ghcjs/CodeMirror";
description = "Installs CodeMirror JavaScript files";
license = stdenv.lib.licenses.mit;

}) {};
"ghcjs-perch" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "ghcjs-perch";
version = "0.3.3.2";
sha256 = "a7cee1699b51af9e0aa62dec2ab4a04f68250106da02c77bed19dd69fae5e6d9";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "GHCJS version of Perch library";
license = stdenv.lib.licenses.mit;

}) {};
"ghost-buster" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ghost-buster";
version = "0.1.1.0";
sha256 = "02d0930ee77838e7f5a04ebc0a74f62b15218b8ace4a5b88510d9a6b56dbf6d6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Lazersmoke/ghost-buster#readme";
description = "Existential type utilites";
license = stdenv.lib.licenses.bsd3;

}) {};
"gi-atk" = callPackage
({
  mkDerivation
, atk
, base
, bytestring
, Cabal
, containers
, gi-glib
, gi-gobject
, haskell-gi
, haskell-gi-base
, haskell-gi-overloading
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-atk";
version = "2.0.15";
sha256 = "89753b4517e77ea956dcfd1294b4b98032c6e50df912e28c9a796d2b825fbfee";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-glib
gi-gobject
haskell-gi
haskell-gi-base
haskell-gi-overloading
text
transformers
];
libraryPkgconfigDepends = [
atk
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Atk bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) atk;};
"gi-cairo" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cairo
, containers
, haskell-gi
, haskell-gi-base
, haskell-gi-overloading
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-cairo";
version = "1.0.17";
sha256 = "5dbda70a038a93cb07130597407de9cde1436603beca3f2a0a6b43953c55a7ab";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
haskell-gi
haskell-gi-base
haskell-gi-overloading
text
transformers
];
libraryPkgconfigDepends = [
cairo
];
doHaddock = false;
doCheck = false;
preCompileBuildDriver = ''
  PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
  setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
'';
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Cairo bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) cairo;};
"gi-glib" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, glib
, haskell-gi
, haskell-gi-base
, haskell-gi-overloading
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-glib";
version = "2.0.16";
sha256 = "1cbb6289dcd628ed6044c75daff3237ac5c87ef793c03ecf78df3380bf2e140e";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
haskell-gi
haskell-gi-base
haskell-gi-overloading
text
transformers
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "GLib bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"gi-gobject" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, gi-glib
, glib
, haskell-gi
, haskell-gi-base
, haskell-gi-overloading
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "gi-gobject";
version = "2.0.16";
sha256 = "c57844d5b9566834ece584bfbbdff1c3ef2de5aa67c711c406fe92d4b927f6ad";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
gi-glib
haskell-gi
haskell-gi-base
haskell-gi-overloading
text
transformers
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "GObject bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"gi-javascriptcore" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, haskell-gi
, haskell-gi-base
, haskell-gi-overloading
, stdenv
, text
, transformers
, webkitgtk
}:
mkDerivation {

pname = "gi-javascriptcore";
version = "4.0.15";
sha256 = "03ea9ef17c74bbb57d2b6260a8f46b6e91b22de20788c53de823e9a8e32cbf1d";
setupHaskellDepends = [
base
Cabal
haskell-gi
];
libraryHaskellDepends = [
base
bytestring
containers
haskell-gi
haskell-gi-base
haskell-gi-overloading
text
transformers
];
libraryPkgconfigDepends = [
webkitgtk
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "JavaScriptCore bindings";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) webkitgtk;};
"ginger" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, data-default
, filepath
, http-types
, mtl
, parsec
, safe
, scientific
, stdenv
, text
, time
, transformers
, unordered-containers
, utf8-string
, vector
}:
mkDerivation {

pname = "ginger";
version = "0.7.3.0";
sha256 = "fa1d71fa484e2a96b46bc71669b2d6e8f8233e12c0b29e550867b5797b0493b0";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
data-default
filepath
http-types
mtl
parsec
safe
scientific
text
time
transformers
unordered-containers
utf8-string
vector
];
executableHaskellDepends = [
aeson
base
bytestring
data-default
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/tdammers/ginger";
description = "An implementation of the Jinja2 template language in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"git" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, containers
, cryptonite
, hourglass
, memory
, patience
, random
, stdenv
, system-fileio
, system-filepath
, unix-compat
, utf8-string
, vector
, zlib
, zlib-bindings
}:
mkDerivation {

pname = "git";
version = "0.2.1";
sha256 = "5fb7d86687262fc92faedfdb51fd99d02ef3d4bd09bc151dc2e0a1b23afd1048";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
byteable
bytestring
containers
cryptonite
hourglass
memory
patience
random
system-fileio
system-filepath
unix-compat
utf8-string
vector
zlib
zlib-bindings
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-git";
description = "Git operations in haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"github" = callPackage
({
  mkDerivation
, aeson
, aeson-compat
, base
, base-compat
, base16-bytestring
, binary
, binary-orphans
, byteable
, bytestring
, containers
, cryptohash
, deepseq
, deepseq-generics
, exceptions
, hashable
, http-client
, http-client-tls
, http-link-header
, http-types
, iso8601-time
, mtl
, network-uri
, semigroups
, stdenv
, text
, time
, tls
, transformers
, transformers-compat
, unordered-containers
, vector
, vector-instances
}:
mkDerivation {

pname = "github";
version = "0.19";
sha256 = "f0ea9b57cd21645bba40e37e5e7c83ad78469cc3e32526b15e9a4bb2b3b84394";
revision = "3";
editedCabalFile = "0s3zmkzgfbh1mc0492i7rjiawxkzg0im8z2p10niv5ff58m87yri";
libraryHaskellDepends = [
aeson
aeson-compat
base
base-compat
base16-bytestring
binary
binary-orphans
byteable
bytestring
containers
cryptohash
deepseq
deepseq-generics
exceptions
hashable
http-client
http-client-tls
http-link-header
http-types
iso8601-time
mtl
network-uri
semigroups
text
time
tls
transformers
transformers-compat
unordered-containers
vector
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/github";
description = "Access to the GitHub API, v3";
license = stdenv.lib.licenses.bsd3;

}) {};
"github-release" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, http-types
, mime-types
, optparse-generic
, stdenv
, text
, unordered-containers
, uri-templater
}:
mkDerivation {

pname = "github-release";
version = "1.1.6";
sha256 = "b6c50a9e2bcf499bed0839aff920eda91a291f6298e40c0415cd2c7d745ebbaa";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
http-types
mime-types
optparse-generic
text
unordered-containers
uri-templater
];
executableHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
http-types
mime-types
optparse-generic
text
unordered-containers
uri-templater
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/github-release#readme";
description = "Upload files to GitHub releases";
license = stdenv.lib.licenses.mit;

}) {};
"github-types" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
, text
, time
}:
mkDerivation {

pname = "github-types";
version = "0.2.1";
sha256 = "cce4ea461b3ea7c92d130181244cfe7f29c10aecc7e7a980ee6722b6d6af7867";
libraryHaskellDepends = [
aeson
base
text
time
];
doHaddock = false;
doCheck = false;
description = "Type definitions for objects used by the GitHub v3 API";
license = "unknown";

}) {};
"github-webhook-handler" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cryptohash
, github-types
, stdenv
, text
, transformers
, uuid
, vector
}:
mkDerivation {

pname = "github-webhook-handler";
version = "0.0.8";
sha256 = "1d908854606683c236720c2de3988ae723591be02b1c668bd8ba0ffa03b34fea";
revision = "1";
editedCabalFile = "1nhwindcplcyyffvzw0cig1p0m8165laq3hv94s596rsi3b5pgqr";
libraryHaskellDepends = [
aeson
base
bytestring
cryptohash
github-types
text
transformers
uuid
vector
];
doHaddock = false;
doCheck = false;
description = "GitHub WebHook Handler";
license = stdenv.lib.licenses.mit;

}) {};
"github-webhook-handler-snap" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, github-types
, github-webhook-handler
, snap-core
, stdenv
, uuid
}:
mkDerivation {

pname = "github-webhook-handler-snap";
version = "0.0.7";
sha256 = "d4f526f4027a0c1cd9bdf455fbfb0c1742539eb3379b22ba59f1647133202c91";
revision = "1";
editedCabalFile = "1l0c2xn41pylap7vw33r67pmmcafr1fdm04l9b8h206c270bsinm";
libraryHaskellDepends = [
base
bytestring
case-insensitive
github-types
github-webhook-handler
snap-core
uuid
];
doHaddock = false;
doCheck = false;
description = "GitHub WebHook Handler implementation for Snap";
license = stdenv.lib.licenses.mit;

}) {};
"github-webhooks" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytestring
, cryptonite
, deepseq
, deepseq-generics
, memory
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "github-webhooks";
version = "0.9.1";
sha256 = "0b9918cbc7c870ebaa6f6916bcd583c52d3d1456d98edd863d58bf0c7ac49cc0";
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytestring
cryptonite
deepseq
deepseq-generics
memory
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/onrock-eng/github-webhooks#readme";
description = "Aeson instances for GitHub Webhook payloads";
license = stdenv.lib.licenses.mit;

}) {};
"gitrev" = callPackage
({
  mkDerivation
, base
, base-compat
, directory
, filepath
, process
, stdenv
, template-haskell
}:
mkDerivation {

pname = "gitrev";
version = "1.3.1";
sha256 = "a89964db24f56727b0e7b10c98fe7c116d721d8c46f52d6e77088669aaa38332";
libraryHaskellDepends = [
base
base-compat
directory
filepath
process
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acfoltzer/gitrev";
description = "Compile git revision info into Haskell projects";
license = stdenv.lib.licenses.bsd3;

}) {};
"gl" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, directory
, filepath
, fixed
, half
, hxt
, libGL
, stdenv
, transformers
}:
mkDerivation {

pname = "gl";
version = "0.8.0";
sha256 = "aa4d2838157c86da920bda651458a4266fccc7c291ea93a69558ab02540e1439";
revision = "1";
editedCabalFile = "17m5vagiq1v7zg6409f56qqy28jd0xp13yk44s661rcwj0f4pd14";
setupHaskellDepends = [
base
Cabal
containers
directory
filepath
hxt
transformers
];
libraryHaskellDepends = [
base
containers
fixed
half
transformers
];
librarySystemDepends = [
libGL
];
doHaddock = false;
doCheck = false;
description = "Complete OpenGL raw bindings";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libGL;};
"glabrous" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, attoparsec
, base
, bytestring
, cereal
, cereal-text
, either
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "glabrous";
version = "0.3.5";
sha256 = "e993ccc448eda5e86a680c1cd2a99df3b54f7461aaa190d3183ffd5ed9c57558";
libraryHaskellDepends = [
aeson
aeson-pretty
attoparsec
base
bytestring
cereal
cereal-text
either
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/glabrous";
description = "A template DSL library";
license = stdenv.lib.licenses.bsd3;

}) {};
"glaze" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
}:
mkDerivation {

pname = "glaze";
version = "0.3.0.1";
sha256 = "bbb184408bcf24e8c4f89a960cf7a69ab0c51e98bf84c5fa9901aae1702e22a1";
libraryHaskellDepends = [
base
lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/glaze#readme";
description = "Framework for rendering things with metadata/headers and values";
license = stdenv.lib.licenses.bsd3;

}) {};
"glazier" = callPackage
({
  mkDerivation
, base
, lens
, mmorph
, mtl
, semigroupoids
, stdenv
, transformers
}:
mkDerivation {

pname = "glazier";
version = "0.11.0.1";
sha256 = "1151031c7943140b19fc3b319f6e1c648cc75fa0fd619f17d64dfe7857b60b46";
libraryHaskellDepends = [
base
lens
mmorph
mtl
semigroupoids
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/glazier#readme";
description = "Composable widgets framework with enhanced with transformers and lens";
license = stdenv.lib.licenses.bsd3;

}) {};
"glazier-pipes" = callPackage
({
  mkDerivation
, base
, glazier
, mmorph
, pipes
, stdenv
, stm
, stm-extras
, transformers
}:
mkDerivation {

pname = "glazier-pipes";
version = "0.1.5.1";
sha256 = "9d1d044a4d8641a0da09d6447298530a8a785bb3e29c0177a0b682f9bbf4d1ac";
libraryHaskellDepends = [
base
glazier
mmorph
pipes
stm
stm-extras
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/glazier-pipes#readme";
description = "A threaded rendering framework using glaizer and pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"glib" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, glib
, gtk2hs-buildtools
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "glib";
version = "0.13.6.0";
sha256 = "4e71062c6a458440294d820e21449aa4666deed2ea233ef5915da7c1d4aee8eb";
setupHaskellDepends = [
base
Cabal
gtk2hs-buildtools
];
libraryHaskellDepends = [
base
bytestring
containers
text
utf8-string
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the GLIB library for Gtk2Hs";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"glob-posix" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "glob-posix";
version = "0.1.0.1";
sha256 = "3245382c77ebaceea958ef62510d073b96e10a43bf69536cf9079d69da363caf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rdnetto/glob-posix#readme";
description = "Haskell bindings for POSIX glob library";
license = stdenv.lib.licenses.asl20;

}) {};
"gloss" = callPackage
({
  mkDerivation
, base
, bmp
, bytestring
, containers
, ghc-prim
, gloss-rendering
, GLUT
, OpenGL
, stdenv
}:
mkDerivation {

pname = "gloss";
version = "1.11.1.1";
sha256 = "14e09540ba120c4d0d9153655c35602de4657aa40ad2add693ca12f825d1d653";
revision = "1";
editedCabalFile = "1bxdf2kmdcqndg25jgh0l1bmr39795gxrcx0rgzcich4n8l88pvb";
libraryHaskellDepends = [
base
bmp
bytestring
containers
ghc-prim
gloss-rendering
GLUT
OpenGL
];
doHaddock = false;
doCheck = false;
homepage = "http://gloss.ouroborus.net";
description = "Painless 2D vector graphics, animations and simulations";
license = stdenv.lib.licenses.mit;

}) {};
"gloss-accelerate" = callPackage
({
  mkDerivation
, accelerate
, base
, gloss
, gloss-rendering
, stdenv
}:
mkDerivation {

pname = "gloss-accelerate";
version = "2.0.0.1";
sha256 = "82a90b0093ecb9b2b8a42137071c1ff4aad6dfa9880634c0fc7054d0d544df80";
libraryHaskellDepends = [
accelerate
base
gloss
gloss-rendering
];
doHaddock = false;
doCheck = false;
description = "Extras to interface Gloss and Accelerate";
license = stdenv.lib.licenses.bsd3;

}) {};
"gloss-algorithms" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, gloss
, stdenv
}:
mkDerivation {

pname = "gloss-algorithms";
version = "1.11.1.1";
sha256 = "e1a7561c87a2d105054017d1c4fd393f597ddfcf0409aad097ba7e8e7aae23f2";
revision = "1";
editedCabalFile = "08w84grwvl079gzjwnshfgs12kh1p2gbc5kvbw6qdxc7g292hd5m";
libraryHaskellDepends = [
base
containers
ghc-prim
gloss
];
doHaddock = false;
doCheck = false;
homepage = "http://gloss.ouroborus.net";
description = "Data structures and algorithms for working with 2D graphics";
license = stdenv.lib.licenses.mit;

}) {};
"gloss-raster" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, gloss
, gloss-rendering
, repa
, stdenv
}:
mkDerivation {

pname = "gloss-raster";
version = "1.11.1.1";
sha256 = "277897eb2646fb66e23391796ed9e92360467ddf3acac196f658203cd9787c46";
revision = "1";
editedCabalFile = "1kx0n4kwy5xdg4b5b79a815y8yqcsld8s5p784qhgg92s0cmnsjf";
libraryHaskellDepends = [
base
containers
ghc-prim
gloss
gloss-rendering
repa
];
doHaddock = false;
doCheck = false;
homepage = "http://gloss.ouroborus.net";
description = "Parallel rendering of raster images";
license = stdenv.lib.licenses.mit;

}) {};
"gloss-raster-accelerate" = callPackage
({
  mkDerivation
, accelerate
, base
, colour-accelerate
, gloss
, gloss-accelerate
, stdenv
}:
mkDerivation {

pname = "gloss-raster-accelerate";
version = "2.0.0.0";
sha256 = "2db125ba6435ee4c20ac4210a66899a063f34554e80e4b7a88c6e4e579ea18c4";
revision = "2";
editedCabalFile = "0k0a562qa8khj39zpgp4sr8kh8h2q4krjjhbvpbsll4r83067ahj";
libraryHaskellDepends = [
accelerate
base
colour-accelerate
gloss
gloss-accelerate
];
doHaddock = false;
doCheck = false;
description = "Parallel rendering of raster images using Accelerate";
license = stdenv.lib.licenses.bsd3;

}) {};
"gloss-rendering" = callPackage
({
  mkDerivation
, base
, bmp
, bytestring
, containers
, GLUT
, OpenGL
, stdenv
}:
mkDerivation {

pname = "gloss-rendering";
version = "1.11.1.1";
sha256 = "1f0a9a6d2124d4cbfb30821f1654d2cd9d7c1766310cf7f9009ccc9808474af4";
revision = "1";
editedCabalFile = "1z580vh4idsbndjjla6gniz8cacxwj9206llyafl83brrqjhm14b";
libraryHaskellDepends = [
base
bmp
bytestring
containers
GLUT
OpenGL
];
doHaddock = false;
doCheck = false;
description = "Gloss picture data types and rendering functions";
license = stdenv.lib.licenses.mit;

}) {};
"gluturtle" = callPackage
({
  mkDerivation
, base
, convertible
, GLUT
, stdenv
, stm
, yjsvg
, yjtools
}:
mkDerivation {

pname = "gluturtle";
version = "0.0.58.1";
sha256 = "178658ce4f76ac0a855ca9123cdc8bda0ecc5531356551c00ba6de98dcbd934b";
libraryHaskellDepends = [
base
convertible
GLUT
stm
yjsvg
yjtools
];
doHaddock = false;
doCheck = false;
description = "turtle like LOGO with glut";
license = stdenv.lib.licenses.bsd3;

}) {};
"gnuplot" = callPackage
({
  mkDerivation
, array
, base
, containers
, data-accessor
, data-accessor-transformers
, deepseq
, filepath
, process
, semigroups
, stdenv
, temporary
, time
, transformers
, utility-ht
}:
mkDerivation {

pname = "gnuplot";
version = "0.5.5.2";
sha256 = "b69a2c3173f6c495937b8e73d9c7f265f8cd89f6cd376a5cfdf2f91198bd97d6";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
containers
data-accessor
data-accessor-transformers
deepseq
filepath
process
semigroups
temporary
time
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Gnuplot";
description = "2D and 3D plots using gnuplot";
license = stdenv.lib.licenses.bsd3;

}) {};
"goggles" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, binary
, bytestring
, containers
, cryptonite
, exceptions
, filepath
, http-client
, http-client-tls
, http-types
, memory
, mtl
, pem
, req
, scientific
, stdenv
, stm
, text
, time
, transformers
, unix-time
, x509
, x509-store
}:
mkDerivation {

pname = "goggles";
version = "0.3.2";
sha256 = "a64d25c6506b172ec6f3b8a55f7934c23ccedc66c1acfb62432063dff743e93c";
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
binary
bytestring
containers
cryptonite
exceptions
filepath
http-client
http-client-tls
http-types
memory
mtl
pem
req
scientific
stm
text
time
transformers
unix-time
x509
x509-store
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocramz/goggles";
description = "Extensible interface to Web APIs";
license = stdenv.lib.licenses.bsd3;

}) {};
"google-cloud" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, http-types
, mtl
, random
, scientific
, stdenv
, stm
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "google-cloud";
version = "0.0.4";
sha256 = "09a77ce6846ea0c5f9d7e5578dcddcbaf4905437445edb45c2da35456324fb9a";
revision = "1";
editedCabalFile = "0512swl7ydlcjdbvcb2xm59q97yr3wxgh3sfdsz3zdm1y88qi18c";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
http-types
mtl
random
scientific
stm
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Client for the Google Cloud APIs";
license = stdenv.lib.licenses.mit;

}) {};
"google-oauth2-jwt" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, HsOpenSSL
, RSA
, stdenv
, text
, unix-time
}:
mkDerivation {

pname = "google-oauth2-jwt";
version = "0.2.2";
sha256 = "38dc52d516d085c50c4c1771a0364417d6b79aef1caa7558af21feda35c09b2a";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
HsOpenSSL
RSA
text
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/google-oauth2-jwt";
description = "Get a signed JWT for Google Service Accounts";
license = stdenv.lib.licenses.bsd3;

}) {};
"gpolyline" = callPackage
({
  mkDerivation
, base
, split
, stdenv
}:
mkDerivation {

pname = "gpolyline";
version = "0.1.0.1";
sha256 = "28b3a644853ba6f0a7d6465d8d62646a10c995008a799ae67e728c8cf4a17a05";
libraryHaskellDepends = [
base
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fegu/gpolyline";
description = "Pure module for encoding/decoding Google Polyline";
license = stdenv.lib.licenses.bsd3;

}) {};
"graph-core" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, mtl
, safe
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "graph-core";
version = "0.3.0.0";
sha256 = "378f0baa40ebbb78e8c389f79e363eb573cdf182f799684d2f3d6ac51b10e854";
libraryHaskellDepends = [
base
containers
deepseq
hashable
mtl
safe
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/factisresearch/graph-core";
description = "Fast, memory efficient and persistent graph implementation";
license = stdenv.lib.licenses.mit;

}) {};
"graph-wrapper" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
}:
mkDerivation {

pname = "graph-wrapper";
version = "0.2.5.1";
sha256 = "8361853fca2d2251bd233e18393053dd391d21ca6f210b2bc861b0e0f4c2e113";
libraryHaskellDepends = [
array
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/graph-wrapper";
description = "A wrapper around the standard Data.Graph with a less awkward interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"graphs" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "graphs";
version = "0.7.1";
sha256 = "acd37a7ba5dd02f24131ac8971a5f8639cc0e9db687e7d6790a84af4af0ce209";
libraryHaskellDepends = [
array
base
containers
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/graphs";
description = "A simple monadic graph library";
license = stdenv.lib.licenses.bsd3;

}) {};
"graphviz" = callPackage
({
  mkDerivation
, base
, bytestring
, colour
, containers
, directory
, dlist
, fgl
, filepath
, polyparse
, process
, stdenv
, temporary
, text
, transformers
, wl-pprint-text
}:
mkDerivation {

pname = "graphviz";
version = "2999.19.0.0";
sha256 = "af0a7ff197c9de3f23e6653541446f755c824083ced04b629df6d19523fe04ea";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
colour
containers
directory
dlist
fgl
filepath
polyparse
process
temporary
text
transformers
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/graphviz/";
description = "Bindings to Graphviz for graph visualisation";
license = stdenv.lib.licenses.bsd3;

}) {};
"gravatar" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, HTTP
, pureMD5
, stdenv
, text
}:
mkDerivation {

pname = "gravatar";
version = "0.8.0";
sha256 = "6f6000acaea47f3fc8711f5a2a62d5fbe96f5bb698fcb997f9f07ffe3102f4d7";
libraryHaskellDepends = [
base
bytestring
data-default
HTTP
pureMD5
text
];
doHaddock = false;
doCheck = false;
description = "Generate Gravatar image URLs";
license = stdenv.lib.licenses.mit;

}) {};
"graylog" = callPackage
({
  mkDerivation
, aeson
, aeson-casing
, base
, bytestring
, network
, random
, scientific
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "graylog";
version = "0.1.0.1";
sha256 = "2d8173e61da8d02c39cb95e6ccea8a167c792f682a496aed5fe4edfd0e6a0082";
libraryHaskellDepends = [
aeson
aeson-casing
base
bytestring
network
random
scientific
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrewRademacher/haskell-graylog";
description = "Support for graylog output";
license = "unknown";

}) {};
"groom" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, stdenv
}:
mkDerivation {

pname = "groom";
version = "0.1.2.1";
sha256 = "a6b4a4d3af1b26f63039f04bd4176493f8dd4f6a9ab281f0e33c0151c20de59d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
haskell-src-exts
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Pretty printing for well-behaved Show instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"groundhog" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, containers
, monad-control
, mtl
, resourcet
, safe-exceptions
, scientific
, stdenv
, text
, time
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "groundhog";
version = "0.8.0.1";
sha256 = "b95ca6023e44c0e6592b5823235f794ebb2a35b0bcb26a241216dbc06f163b63";
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
blaze-builder
bytestring
containers
monad-control
mtl
resourcet
safe-exceptions
scientific
text
time
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lykahb/groundhog";
description = "Type-safe datatype-database mapping library";
license = stdenv.lib.licenses.bsd3;

}) {};
"groundhog-inspector" = callPackage
({
  mkDerivation
, aeson-pretty
, base
, bytestring
, cmdargs
, containers
, groundhog
, groundhog-sqlite
, groundhog-th
, mtl
, regex-compat
, stdenv
, syb
, template-haskell
, text
, time
, transformers
}:
mkDerivation {

pname = "groundhog-inspector";
version = "0.8.0.2";
sha256 = "bfbad62b62174e24f8fe29ce7d3d232392a23221107a32397d91c22531e87af1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson-pretty
base
bytestring
containers
groundhog
groundhog-th
regex-compat
syb
template-haskell
text
time
transformers
];
executableHaskellDepends = [
base
bytestring
cmdargs
containers
groundhog
groundhog-sqlite
groundhog-th
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lykahb/groundhog";
description = "Type-safe datatype-database mapping library";
license = stdenv.lib.licenses.bsd3;

}) {};
"groundhog-mysql" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, groundhog
, monad-control
, monad-logger
, mysql
, mysql-simple
, resource-pool
, resourcet
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "groundhog-mysql";
version = "0.8.0.1";
sha256 = "b90ccb88dd41d3d87392baa9a772082ea316539e6998a45cb6146678e4649a40";
libraryHaskellDepends = [
base
bytestring
containers
groundhog
monad-control
monad-logger
mysql
mysql-simple
resource-pool
resourcet
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "MySQL backend for the groundhog library";
license = stdenv.lib.licenses.bsd3;

}) {};
"groundhog-postgresql" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-builder
, bytestring
, containers
, groundhog
, monad-control
, postgresql-libpq
, postgresql-simple
, resource-pool
, resourcet
, stdenv
, text
, time
, transformers
, vector
}:
mkDerivation {

pname = "groundhog-postgresql";
version = "0.8.0.3";
sha256 = "f4524ee477ca5e2d707821f8d20f926869bca9c5e75c9303c8f1d315b90ae247";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-builder
bytestring
containers
groundhog
monad-control
postgresql-libpq
postgresql-simple
resource-pool
resourcet
text
time
transformers
vector
];
doHaddock = false;
doCheck = false;
description = "PostgreSQL backend for the groundhog library";
license = stdenv.lib.licenses.bsd3;

}) {};
"groundhog-sqlite" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, direct-sqlite
, groundhog
, monad-control
, resource-pool
, resourcet
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "groundhog-sqlite";
version = "0.8.0.1";
sha256 = "570accc9a0c518f47462479e5ef103d607d1fc592eb391cedec1e09cbd75ccf8";
libraryHaskellDepends = [
base
bytestring
containers
direct-sqlite
groundhog
monad-control
resource-pool
resourcet
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Sqlite3 backend for the groundhog library";
license = stdenv.lib.licenses.bsd3;

}) {};
"groundhog-th" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, groundhog
, stdenv
, template-haskell
, text
, time
, unordered-containers
, yaml
}:
mkDerivation {

pname = "groundhog-th";
version = "0.8.0.2";
sha256 = "26958d982f2dd17aeacdf22386fd87bf81a5acdc93b28e80b93beaba6c6d3d8f";
libraryHaskellDepends = [
aeson
base
bytestring
containers
groundhog
template-haskell
text
time
unordered-containers
yaml
];
doHaddock = false;
doCheck = false;
description = "Type-safe datatype-database mapping library";
license = stdenv.lib.licenses.bsd3;

}) {};
"group-by-date" = callPackage
({
  mkDerivation
, base
, explicit-exception
, filemanip
, hsshellscript
, pathtype
, stdenv
, time
, transformers
, unix-compat
, utility-ht
}:
mkDerivation {

pname = "group-by-date";
version = "0.1.0.2";
sha256 = "b0b863add81e83c817dba93a8ab22c0f4b7e57643fafc630ac73190d9ee2a527";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
explicit-exception
filemanip
hsshellscript
pathtype
time
transformers
unix-compat
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/group-by-date/";
description = "Shell command for grouping files by dates into folders";
license = stdenv.lib.licenses.bsd3;

}) {};
"grouped-list" = callPackage
({
  mkDerivation
, base
, binary
, containers
, deepseq
, pointed
, stdenv
}:
mkDerivation {

pname = "grouped-list";
version = "0.2.2.0";
sha256 = "bd4c309d83a8137ddad1aecdda515bb553e67f7c9ef4967d16ed76ea5ae5631c";
libraryHaskellDepends = [
base
binary
containers
deepseq
pointed
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/grouped-list/blob/master/README.md";
description = "Grouped lists. Equal consecutive elements are grouped.";
license = stdenv.lib.licenses.bsd3;

}) {};
"groups" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "groups";
version = "0.4.1.0";
sha256 = "dd4588b71dfff42b9a30cb40304912742b95db964b20f51951aff0eee7f3f33d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Haskell 98 groups";
license = stdenv.lib.licenses.bsd3;

}) {};
"gtk2hs-buildtools" = callPackage
({
  mkDerivation
, alex
, array
, base
, Cabal
, containers
, directory
, filepath
, happy
, hashtables
, pretty
, process
, random
, stdenv
}:
mkDerivation {

pname = "gtk2hs-buildtools";
version = "0.13.4.0";
sha256 = "0f3e6ba90839efd43efe8cecbddb6478a55e2ce7788c57a0add4df477dede679";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
Cabal
containers
directory
filepath
hashtables
pretty
process
random
];
libraryToolDepends = [
alex
happy
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Tools to build the Gtk2Hs suite of User Interface libraries";
license = stdenv.lib.licenses.gpl2;

}) {};
"h2c" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, resourcet
, stdenv
}:
mkDerivation {

pname = "h2c";
version = "1.0.0";
sha256 = "4be2c9d54084175777624770640850aba33d7e4a31e2dc8096c122f737965499";
libraryHaskellDepends = [
base
bytestring
mtl
resourcet
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/fmapE/h2c";
description = "Bindings to Linux I2C with support for repeated-start transactions";
license = stdenv.lib.licenses.mit;

}) {};
"hOpenPGP" = callPackage
({
  mkDerivation
, aeson
, asn1-encoding
, attoparsec
, base
, base16-bytestring
, base64-bytestring
, bifunctors
, binary
, binary-conduit
, bytestring
, bzlib
, conduit
, conduit-extra
, containers
, crypto-cipher-types
, cryptonite
, errors
, hashable
, incremental-parser
, ixset-typed
, lens
, memory
, monad-loops
, nettle
, network-uri
, newtype
, openpgp-asciiarmor
, resourcet
, semigroups
, split
, stdenv
, text
, time
, time-locale-compat
, transformers
, unliftio-core
, unordered-containers
, wl-pprint-extras
, zlib
}:
mkDerivation {

pname = "hOpenPGP";
version = "2.6.2";
sha256 = "9606c7a25ea3be26925ab2dbc361e1a93ca7d9bdae6a2ebf255cd358688490ca";
libraryHaskellDepends = [
aeson
asn1-encoding
attoparsec
base
base16-bytestring
base64-bytestring
bifunctors
binary
binary-conduit
bytestring
bzlib
conduit
conduit-extra
containers
crypto-cipher-types
cryptonite
errors
hashable
incremental-parser
ixset-typed
lens
memory
monad-loops
nettle
network-uri
newtype
openpgp-asciiarmor
resourcet
semigroups
split
text
time
time-locale-compat
transformers
unliftio-core
unordered-containers
wl-pprint-extras
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://salsa.debian.org/clint/hOpenPGP";
description = "native Haskell implementation of OpenPGP (RFC4880)";
license = stdenv.lib.licenses.mit;

}) {};
"hackage-db" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, stdenv
, tar
, time
, utf8-string
}:
mkDerivation {

pname = "hackage-db";
version = "2.0";
sha256 = "f8390ab421f89bd8b03df9c3d34c86a82ea26d150dfb5cfb1bdb16f20452bf27";
revision = "1";
editedCabalFile = "1zsdy9c0gngl8k690311zchd3lhl7h64arab77p7v9j5bradziiq";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
Cabal
containers
directory
filepath
tar
time
utf8-string
];
executableHaskellDepends = [
base
bytestring
Cabal
containers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/hackage-db#readme";
description = "Access Hackage's package database via Data.Map";
license = stdenv.lib.licenses.bsd3;

}) {};
"hackage-security" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, base64-bytestring
, bytestring
, Cabal
, containers
, cryptohash-sha256
, directory
, ed25519
, filepath
, ghc-prim
, mtl
, network
, network-uri
, parsec
, pretty
, stdenv
, tar
, template-haskell
, time
, transformers
, zlib
}:
mkDerivation {

pname = "hackage-security";
version = "0.5.3.0";
sha256 = "db986e17e9265aa9e40901690815b890b97d53159eb24d0a6cafaa7c18577c21";
revision = "1";
editedCabalFile = "0m0xhcivjqq6cwmhr60sva4qz2ciknyacv7dxpdiwbsl3kwyx9sz";
libraryHaskellDepends = [
base
base16-bytestring
base64-bytestring
bytestring
Cabal
containers
cryptohash-sha256
directory
ed25519
filepath
ghc-prim
mtl
network
network-uri
parsec
pretty
tar
template-haskell
time
transformers
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/hackage-security";
description = "Hackage security library";
license = stdenv.lib.licenses.bsd3;

}) {};
"haddock-library" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, stdenv
, transformers
}:
mkDerivation {

pname = "haddock-library";
version = "1.4.5";
sha256 = "c94b69556bb17e1f21a794d4866ce51341ca32f4c4d1ce40d232ede78cecb736";
libraryHaskellDepends = [
base
bytestring
deepseq
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haddock/";
description = "Library exposing some functionality of Haddock";
license = stdenv.lib.licenses.bsd3;

}) {};
"hailgun" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, email-validate
, exceptions
, filepath
, http-client
, http-client-tls
, http-types
, stdenv
, tagsoup
, text
, time
, transformers
}:
mkDerivation {

pname = "hailgun";
version = "0.4.1.8";
sha256 = "9dcc7367afec6605045246d4959f27a29a54bbdbcec543e6f5ae59b048e2dcc3";
libraryHaskellDepends = [
aeson
base
bytestring
email-validate
exceptions
filepath
http-client
http-client-tls
http-types
tagsoup
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/robertmassaioli/hailgun";
description = "Mailgun REST api interface for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hailgun-simple" = callPackage
({
  mkDerivation
, base
, email-validate
, hailgun
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "hailgun-simple";
version = "0.1.0.0";
sha256 = "30526e6b7ec6083b090e880ef6fe942cc8425d3b2700bac565e4fc6629ec2954";
libraryHaskellDepends = [
base
email-validate
hailgun
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/hailgun-simple";
description = "Easy-to-use wrapper for the hailgun package";
license = stdenv.lib.licenses.bsd3;

}) {};
"hakyll" = callPackage
({
  mkDerivation
, base
, binary
, blaze-html
, blaze-markup
, bytestring
, containers
, cryptohash
, data-default
, deepseq
, directory
, file-embed
, filepath
, fsnotify
, http-conduit
, http-types
, lrucache
, mtl
, network-uri
, optparse-applicative
, pandoc
, pandoc-citeproc
, parsec
, process
, random
, regex-tdfa
, resourcet
, scientific
, stdenv
, tagsoup
, text
, time
, time-locale-compat
, unordered-containers
, vector
, wai
, wai-app-static
, warp
, yaml
}:
mkDerivation {

pname = "hakyll";
version = "4.12.3.0";
sha256 = "a472dc12e18415c0d8bab788334d753233789f2fd58a8f70de57172814639fb1";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
blaze-html
blaze-markup
bytestring
containers
cryptohash
data-default
deepseq
directory
file-embed
filepath
fsnotify
http-conduit
http-types
lrucache
mtl
network-uri
optparse-applicative
pandoc
pandoc-citeproc
parsec
process
random
regex-tdfa
resourcet
scientific
tagsoup
text
time
time-locale-compat
unordered-containers
vector
wai
wai-app-static
warp
yaml
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/hakyll";
description = "A static website compiler library";
license = stdenv.lib.licenses.bsd3;

}) {};
"half" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "half";
version = "0.2.2.3";
sha256 = "85c244c80d1c889a3d79073a6f5a99d9e769dbe3c574ca11d992b2b4f7599a5c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/half";
description = "Half-precision floating-point";
license = stdenv.lib.licenses.bsd3;

}) {};
"hamilton" = callPackage
({
  mkDerivation
, ad
, ansi-wl-pprint
, base
, comonad
, containers
, free
, hmatrix
, hmatrix-gsl
, optparse-applicative
, stdenv
, typelits-witnesses
, vector
, vector-sized
, vty
}:
mkDerivation {

pname = "hamilton";
version = "0.1.0.2";
sha256 = "15acc8563f60448621cffc58acf880487cc997e682e8cbc79032d5886bdc1cba";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ad
base
comonad
free
hmatrix
hmatrix-gsl
typelits-witnesses
vector-sized
];
executableHaskellDepends = [
ansi-wl-pprint
base
containers
hmatrix
optparse-applicative
vector
vector-sized
vty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/hamilton";
description = "Physics on generalized coordinate systems using Hamiltonian Mechanics and AD";
license = stdenv.lib.licenses.bsd3;

}) {};
"handwriting" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, filepath
, lens
, lens-aeson
, random
, split
, stdenv
, text
, transformers
, wreq
}:
mkDerivation {

pname = "handwriting";
version = "0.1.0.3";
sha256 = "7e1b406d19b2f39b34910462dce214c7ca91bb9d78bf9fafb9f906dd44d5beaa";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
lens
lens-aeson
split
text
transformers
wreq
];
executableHaskellDepends = [
base
bytestring
directory
filepath
random
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ismailmustafa/handwriting-haskell#readme";
description = "API Client for the handwriting.io API.";
license = stdenv.lib.licenses.bsd3;

}) {};
"hapistrano" = callPackage
({
  mkDerivation
, aeson
, async
, base
, filepath
, formatting
, gitrev
, mtl
, optparse-applicative
, path
, path-io
, process
, stdenv
, stm
, time
, transformers
, yaml
}:
mkDerivation {

pname = "hapistrano";
version = "0.3.5.6";
sha256 = "4cf079fa4fd616e41ccfaac7830f196a64df97f504d7ef2c6c9f8f0d53193b6e";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
filepath
formatting
gitrev
mtl
path
process
time
transformers
];
executableHaskellDepends = [
aeson
async
base
formatting
gitrev
optparse-applicative
path
path-io
stm
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/hapistrano";
description = "A deployment library for Haskell applications";
license = stdenv.lib.licenses.mit;

}) {};
"happstack-jmacro" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, cereal
, digest
, happstack-server
, jmacro
, stdenv
, text
, utf8-string
, wl-pprint-text
}:
mkDerivation {

pname = "happstack-jmacro";
version = "7.0.12";
sha256 = "bab4b4197373cb674c6fcbfe48a7a5d34ec31967b6e3c771f0049d885b74aeae";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
cereal
digest
happstack-server
jmacro
text
utf8-string
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Support for using JMacro with Happstack";
license = stdenv.lib.licenses.bsd3;

}) {};
"happstack-server" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-html
, bytestring
, containers
, directory
, exceptions
, extensible-exceptions
, filepath
, hslogger
, html
, monad-control
, mtl
, network
, network-uri
, old-locale
, parsec
, process
, semigroups
, sendfile
, stdenv
, syb
, system-filepath
, template-haskell
, text
, threads
, time
, time-compat
, transformers
, transformers-base
, transformers-compat
, unix
, utf8-string
, xhtml
, zlib
}:
mkDerivation {

pname = "happstack-server";
version = "7.5.1";
sha256 = "32877ec758149dd3ffbd2a03f3fecd3a69bcac8f6c499e3a08e43bee1c9f8ea1";
libraryHaskellDepends = [
base
base64-bytestring
blaze-html
bytestring
containers
directory
exceptions
extensible-exceptions
filepath
hslogger
html
monad-control
mtl
network
network-uri
old-locale
parsec
process
semigroups
sendfile
syb
system-filepath
template-haskell
text
threads
time
time-compat
transformers
transformers-base
transformers-compat
unix
utf8-string
xhtml
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://happstack.com";
description = "Web related tools and services";
license = stdenv.lib.licenses.bsd3;

}) {};
"happstack-server-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, extensible-exceptions
, happstack-server
, hslogger
, HsOpenSSL
, network
, openssl
, sendfile
, stdenv
, time
, unix
}:
mkDerivation {

pname = "happstack-server-tls";
version = "7.1.6.5";
sha256 = "782fb8d8bf6b2f63c337a1308710f1611d789f42cedf7571a346c3a73a1fe142";
libraryHaskellDepends = [
base
bytestring
extensible-exceptions
happstack-server
hslogger
HsOpenSSL
network
sendfile
time
unix
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "extend happstack-server with https:// support (TLS/SSL)";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openssl;};
"happy" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, containers
, directory
, filepath
, mtl
, stdenv
}:
mkDerivation {

pname = "happy";
version = "1.19.5";
sha256 = "62f03ac11d7b4b9913f212f5aa2eee1087f3b46dc07d799d41e1854ff02843da";
revision = "2";
editedCabalFile = "1dvhv94lzmya938i5crshg9qbx7dxvkyxkhfbqimxkydxn7l2w7w";
isLibrary = false;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
directory
filepath
];
executableHaskellDepends = [
array
base
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/happy/";
description = "Happy is a parser generator for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasbolt" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, connection
, containers
, data-binary-ieee754
, data-default
, hex
, network
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "hasbolt";
version = "0.1.3.0";
sha256 = "fd6fc49f57e8c03087103f733c130739a046398b5118b078aad2def31059665d";
revision = "2";
editedCabalFile = "1isygckkasffk06bd6023imr51c7l9cdvk4vf2vgv9x10v8kpp37";
libraryHaskellDepends = [
base
binary
bytestring
connection
containers
data-binary-ieee754
data-default
hex
network
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/zmactep/hasbolt#readme";
description = "Haskell driver for Neo4j 3+ (BOLT protocol)";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashable" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, ghc-prim
, integer-gmp
, stdenv
, text
}:
mkDerivation {

pname = "hashable";
version = "1.2.7.0";
sha256 = "ecb5efc0586023f5a0dc861100621c1dbb4cbb2f0516829a16ebac39f0432abf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
deepseq
ghc-prim
integer-gmp
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tibbe/hashable";
description = "A class for types that can be converted to a hash value";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashable-time" = callPackage
({
  mkDerivation
, base
, hashable
, stdenv
, time
}:
mkDerivation {

pname = "hashable-time";
version = "0.2.0.1";
sha256 = "b5752bb9b91d7cb98b01aa68c27d6a9338e1af39763c0157ef8322d0bc15234d";
revision = "1";
editedCabalFile = "0rv40xkg3gj8jnqsry1gq3f5s5la6d5arg8fzkirnwdpcgha1as6";
libraryHaskellDepends = [
base
hashable
time
];
doHaddock = false;
doCheck = false;
description = "Hashable instances for Data.Time";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashids" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, split
, stdenv
}:
mkDerivation {

pname = "hashids";
version = "1.0.2.4";
sha256 = "27991fc8a6debe76a086af80f6b72a5d451e7f1466b79cb0df973b98a2f5f3cf";
libraryHaskellDepends = [
base
bytestring
containers
split
];
doHaddock = false;
doCheck = false;
homepage = "http://hashids.org/";
description = "Hashids generates short, unique, non-sequential ids from numbers";
license = stdenv.lib.licenses.mit;

}) {};
"hashmap" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, stdenv
}:
mkDerivation {

pname = "hashmap";
version = "1.3.3";
sha256 = "dc06b57cd1bcd656d4602df7705a3f11a54ae65f664e9be472d42a9bdcd64755";
libraryHaskellDepends = [
base
containers
deepseq
hashable
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/foxik/hashmap";
description = "Persistent containers Map and Set based on hashing";
license = stdenv.lib.licenses.bsd3;

}) {};
"hashtables" = callPackage
({
  mkDerivation
, base
, ghc-prim
, hashable
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "hashtables";
version = "1.2.3.1";
sha256 = "8fd1c7c77c267eae6af01f1d9ca427754fb092cfffc8041cd50764a9144b3cbe";
libraryHaskellDepends = [
base
ghc-prim
hashable
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/gregorycollins/hashtables";
description = "Mutable hash tables in the ST monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskeline" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, process
, stdenv
, stm
, terminfo
, transformers
, unix
}:
mkDerivation {

pname = "haskeline";
version = "0.7.4.2";
sha256 = "5543ec8cd932396360a5c707bf0958b39bb99a559fb4fd80ed366a953c6cb0eb";
configureFlags = [
"-fterminfo"
];
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
process
stm
terminfo
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/judah/haskeline";
description = "A command-line interface for user input, written in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-gi" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, glib
, gobjectIntrospection
, haskell-gi-base
, mtl
, pretty-show
, process
, regex-tdfa
, safe
, stdenv
, text
, transformers
, xdg-basedir
, xml-conduit
}:
mkDerivation {

pname = "haskell-gi";
version = "0.21.3";
sha256 = "c0ae6687f2402742109c3c5dab03d17ca96dfce0680624ea595ee269deb75527";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
Cabal
containers
directory
filepath
haskell-gi-base
mtl
pretty-show
process
regex-tdfa
safe
text
transformers
xdg-basedir
xml-conduit
];
libraryPkgconfigDepends = [
glib
gobjectIntrospection
];
executableHaskellDepends = [
base
containers
directory
filepath
haskell-gi-base
pretty-show
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Generate Haskell bindings for GObject Introspection capable libraries";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib; inherit (pkgs) gobjectIntrospection;};
"haskell-gi-base" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, glib
, stdenv
, text
}:
mkDerivation {

pname = "haskell-gi-base";
version = "0.21.1";
sha256 = "667cf211eb6ce1e3e84fc2126670847228b4cb4211dd7d7f4ae627ef6f15295d";
libraryHaskellDepends = [
base
bytestring
containers
text
];
libraryPkgconfigDepends = [
glib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi-base";
description = "Foundation for libraries generated by haskell-gi";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) glib;};
"haskell-gi-overloading" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "haskell-gi-overloading";
version = "0.0";
sha256 = "a5c727a82f07caab27afb39471dccaf590ebb96738089844a0812b5db22bbfea";
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-gi/haskell-gi";
description = "Overloading support for haskell-gi";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-lexer" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "haskell-lexer";
version = "1.0.1";
sha256 = "d7d42ab3c4bc2f0232ede8b005fb9de57f862ee4c1c83aa61e1022346fc84366";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A fully compliant Haskell 98 lexer";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-lsp" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-default
, directory
, filepath
, hashable
, hslogger
, lens
, mtl
, parsec
, sorted-list
, stdenv
, stm
, text
, time
, transformers
, unordered-containers
, vector
, yi-rope
}:
mkDerivation {

pname = "haskell-lsp";
version = "0.2.0.1";
sha256 = "1ed5ce34cf5ddd86ad7babdde239fc81455a1ebc07b8445270be7c3767a86f77";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default
directory
filepath
hashable
hslogger
lens
mtl
parsec
sorted-list
stm
text
time
unordered-containers
yi-rope
];
executableHaskellDepends = [
aeson
base
bytestring
containers
data-default
directory
filepath
hslogger
lens
mtl
parsec
stm
text
time
transformers
unordered-containers
vector
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alanz/haskell-lsp";
description = "Haskell library for the Microsoft Language Server Protocol";
license = stdenv.lib.licenses.mit;

}) {};
"haskell-lsp-client" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, haskell-lsp
, lens
, process
, stdenv
, text
, unix
}:
mkDerivation {

pname = "haskell-lsp-client";
version = "1.0.0.1";
sha256 = "1c9b131e405bd1aec6e98e43f3926061fbe4e5ef4ac64cd08cae38082d40fd1b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
haskell-lsp
lens
process
text
];
executableHaskellDepends = [
base
directory
haskell-lsp
lens
process
text
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/noughtmare/haskell-lsp-client#readme";
description = "A haskell package to build your own Language Server client";
license = stdenv.lib.licenses.gpl2;

}) {};
"haskell-names" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-lens-light
, filepath
, haskell-src-exts
, mtl
, stdenv
, transformers
, traverse-with-class
, uniplate
}:
mkDerivation {

pname = "haskell-names";
version = "0.9.1";
sha256 = "10727b132631696701ff541484a660dabb18aa8911b43db0c685026f7e6f6cf9";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-lens-light
filepath
haskell-src-exts
mtl
transformers
traverse-with-class
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/haskell-suite/haskell-names";
description = "Name resolution library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-neo4j-client" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-default
, hashable
, HTTP
, http-client
, http-client-tls
, http-conduit
, http-types
, lifted-base
, mtl
, network-uri
, resourcet
, scientific
, stdenv
, text
, transformers
, transformers-base
, transformers-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "haskell-neo4j-client";
version = "0.3.2.4";
sha256 = "30eea529b6d8bd4b887cec7a6b210dd80223d97811bb26042b0c1ccfc8c381c2";
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default
hashable
HTTP
http-client
http-client-tls
http-conduit
http-types
lifted-base
mtl
network-uri
resourcet
scientific
text
transformers
transformers-base
transformers-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/asilvestre/haskell-neo4j-rest-client";
description = "A Haskell neo4j client";
license = stdenv.lib.licenses.mit;

}) {};
"haskell-spacegoo" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, conduit-extra
, mtl
, pretty
, pretty-show
, stdenv
, text
, vector
, vector-space
}:
mkDerivation {

pname = "haskell-spacegoo";
version = "0.2.0.1";
sha256 = "1eb3faa9a7f6a5870337eeb0bb3ad915f58987dfe4643fe95c91cbb2738ddd3c";
libraryHaskellDepends = [
aeson
base
bytestring
conduit
conduit-extra
mtl
pretty
pretty-show
text
vector
vector-space
];
doHaddock = false;
doCheck = false;
description = "Client API for Rocket Scissor Spacegoo";
license = stdenv.lib.licenses.mit;

}) {};
"haskell-src" = callPackage
({
  mkDerivation
, array
, base
, happy
, pretty
, stdenv
, syb
}:
mkDerivation {

pname = "haskell-src";
version = "1.0.3.0";
sha256 = "b4b4941e8883da32c3f2b93f3ecdd5cff82ff9304cb91e89850b19095c908dbc";
libraryHaskellDepends = [
array
base
pretty
syb
];
libraryToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
description = "Support for manipulating Haskell source code";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-src-exts" = callPackage
({
  mkDerivation
, array
, base
, cpphs
, ghc-prim
, happy
, pretty
, stdenv
}:
mkDerivation {

pname = "haskell-src-exts";
version = "1.20.2";
sha256 = "9f6686e8bc8b849991207304e524747b0d1dcedfea351ac073ce971b36f9a3ea";
libraryHaskellDepends = [
array
base
cpphs
ghc-prim
pretty
];
libraryToolDepends = [
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-suite/haskell-src-exts";
description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-src-exts-util" = callPackage
({
  mkDerivation
, base
, containers
, data-default
, haskell-src-exts
, semigroups
, stdenv
, transformers
, uniplate
}:
mkDerivation {

pname = "haskell-src-exts-util";
version = "0.2.3";
sha256 = "e833ef33423645fee4a300ff4e1354618a0d115a954cd62e72096175513803a0";
libraryHaskellDepends = [
base
containers
data-default
haskell-src-exts
semigroups
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pepeiborra/haskell-src-exts-util";
description = "Helper functions for working with haskell-src-exts trees";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-src-meta" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, pretty
, stdenv
, syb
, template-haskell
, th-orphans
}:
mkDerivation {

pname = "haskell-src-meta";
version = "0.8.0.2";
sha256 = "4b7b143b94fcf147b96bb34822c2feeae29daadd3a22796ee36cadd5ca262c8b";
revision = "1";
editedCabalFile = "07xxp2r8amd420bzl7xlyfydhyrcrvaxq24ydnx7y2sz4v2nlzsz";
libraryHaskellDepends = [
base
haskell-src-exts
pretty
syb
template-haskell
th-orphans
];
doHaddock = false;
doCheck = false;
description = "Parse source to template-haskell abstract syntax";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-ast" = callPackage
({
  mkDerivation
, base
, classyplate
, ghc
, mtl
, pretty
, references
, stdenv
, template-haskell
, uniplate
}:
mkDerivation {

pname = "haskell-tools-ast";
version = "1.0.1.1";
sha256 = "6b90346b3fd8ad06e304b17bccc4b3a8644eb490fa30c8fd0b6f104437fe7a32";
libraryHaskellDepends = [
base
classyplate
ghc
mtl
pretty
references
template-haskell
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nboldi/haskell-tools";
description = "Haskell AST for efficient tooling";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-backend-ghc" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, ghc
, ghc-boot-th
, haskell-tools-ast
, mtl
, references
, safe
, split
, stdenv
, template-haskell
, transformers
, uniplate
}:
mkDerivation {

pname = "haskell-tools-backend-ghc";
version = "1.0.1.1";
sha256 = "b8ea79153e0a06c7c339d926d035de35b6885bc37a8a16a1207c89a57d3a7615";
libraryHaskellDepends = [
base
bytestring
containers
ghc
ghc-boot-th
haskell-tools-ast
mtl
references
safe
split
template-haskell
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nboldi/haskell-tools";
description = "Creating the Haskell-Tools AST from GHC's representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-prettyprint" = callPackage
({
  mkDerivation
, base
, containers
, ghc
, haskell-tools-ast
, mtl
, references
, split
, stdenv
, text
, uniplate
}:
mkDerivation {

pname = "haskell-tools-prettyprint";
version = "1.0.1.1";
sha256 = "5744c8b8c38a8902db984e9ff618581cec7cbbf732380f4a91fdf1af00553948";
libraryHaskellDepends = [
base
containers
ghc
haskell-tools-ast
mtl
references
split
text
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Pretty printing of Haskell-Tools AST";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-refactor" = callPackage
({
  mkDerivation
, aeson
, base
, Cabal
, containers
, directory
, filepath
, ghc
, ghc-paths
, haskell-tools-ast
, haskell-tools-backend-ghc
, haskell-tools-prettyprint
, haskell-tools-rewrite
, mtl
, references
, split
, stdenv
, template-haskell
, transformers
, uniplate
}:
mkDerivation {

pname = "haskell-tools-refactor";
version = "1.0.1.2";
sha256 = "d30ddea9ce07874ce8a09309fd473c3693659c8a5b919d35c3bfc2a9f3aa6e39";
libraryHaskellDepends = [
aeson
base
Cabal
containers
directory
filepath
ghc
ghc-paths
haskell-tools-ast
haskell-tools-backend-ghc
haskell-tools-prettyprint
haskell-tools-rewrite
mtl
references
split
template-haskell
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Refactoring Tool for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskell-tools-rewrite" = callPackage
({
  mkDerivation
, base
, containers
, ghc
, haskell-tools-ast
, haskell-tools-prettyprint
, mtl
, references
, stdenv
}:
mkDerivation {

pname = "haskell-tools-rewrite";
version = "1.0.1.1";
sha256 = "a286c7d7fdd9238012ad062c2bfce8d04d5a0318c9279b8455b1578816cffa86";
libraryHaskellDepends = [
base
containers
ghc
haskell-tools-ast
haskell-tools-prettyprint
mtl
references
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-tools/haskell-tools";
description = "Facilities for generating new parts of the Haskell-Tools AST";
license = stdenv.lib.licenses.bsd3;

}) {};
"haskintex" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, directory
, filepath
, haskell-src-exts
, HaTeX
, hint
, parsec
, process
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "haskintex";
version = "0.8.0.0";
sha256 = "9d4974112f33baf47124a56f87b96892a0a37c10587098f851c71256d15cddd8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
directory
filepath
haskell-src-exts
HaTeX
hint
parsec
process
text
transformers
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://daniel-diaz.github.io/projects/haskintex";
description = "Haskell Evaluation inside of LaTeX code";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasmin" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, gitrev
, hopfli
, matrix
, mtl
, numbers
, optparse-applicative
, parsers
, stdenv
, text
}:
mkDerivation {

pname = "hasmin";
version = "1.0.2";
sha256 = "a985d77f796b9a39ea3e802034e07515051f216ee22c9d01e008592609a38b8d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
containers
matrix
mtl
numbers
parsers
text
];
executableHaskellDepends = [
base
bytestring
gitrev
hopfli
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/contivero/hasmin#readme";
description = "CSS Minifier";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasql" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-prelude
, bytestring
, bytestring-strict-builder
, contravariant
, contravariant-extras
, data-default-class
, dlist
, hashable
, hashtables
, loch-th
, mtl
, placeholders
, postgresql-binary
, postgresql-libpq
, profunctors
, semigroups
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "hasql";
version = "1.1.1";
sha256 = "262514375a08afac2445e725ebb2d749537ce676984c2ae74f737aea931d088b";
libraryHaskellDepends = [
attoparsec
base
base-prelude
bytestring
bytestring-strict-builder
contravariant
contravariant-extras
data-default-class
dlist
hashable
hashtables
loch-th
mtl
placeholders
postgresql-binary
postgresql-libpq
profunctors
semigroups
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/hasql";
description = "An efficient PostgreSQL driver and a flexible mapping API";
license = stdenv.lib.licenses.mit;

}) {};
"hasql-migration" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, contravariant
, cryptohash
, data-default-class
, directory
, hasql
, hasql-transaction
, stdenv
, text
, time
}:
mkDerivation {

pname = "hasql-migration";
version = "0.1.3";
sha256 = "2d49e3b7a5ed775150abf2164795b10d087d2e1c714b0a8320f0c0094df068b3";
revision = "1";
editedCabalFile = "156s0y5yfc3y0mgv95gcs6n3pv9nd0mgy06x0xriwsf68wjb07ap";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
contravariant
cryptohash
data-default-class
directory
hasql
hasql-transaction
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tvh/hasql-migration";
description = "PostgreSQL Schema Migrations";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasql-optparse-applicative" = callPackage
({
  mkDerivation
, base-prelude
, hasql
, hasql-pool
, optparse-applicative
, stdenv
}:
mkDerivation {

pname = "hasql-optparse-applicative";
version = "0.3.0.2";
sha256 = "816e66078a5da6911811165f928b7af3dbe35d8a9eba9961df78e77d69c238fb";
libraryHaskellDepends = [
base-prelude
hasql
hasql-pool
optparse-applicative
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sannsyn/hasql-optparse-applicative";
description = "\"optparse-applicative\" parsers for \"hasql\"";
license = stdenv.lib.licenses.mit;

}) {};
"hasql-pool" = callPackage
({
  mkDerivation
, base-prelude
, hasql
, resource-pool
, stdenv
, time
}:
mkDerivation {

pname = "hasql-pool";
version = "0.4.3.1";
sha256 = "da3cbe3c0e42849fa6c36b3aa9e14a554c07f3f149a8222a7c12ffa9687754c2";
libraryHaskellDepends = [
base-prelude
hasql
resource-pool
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/hasql-pool";
description = "A pool of connections for Hasql";
license = stdenv.lib.licenses.mit;

}) {};
"hasql-transaction" = callPackage
({
  mkDerivation
, base
, base-prelude
, bytestring
, bytestring-tree-builder
, contravariant
, contravariant-extras
, hasql
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "hasql-transaction";
version = "0.6.0.1";
sha256 = "d166c4fd90e838987594217b1df038bd8514af2c123b7efdc9e1e16be101823b";
libraryHaskellDepends = [
base
base-prelude
bytestring
bytestring-tree-builder
contravariant
contravariant-extras
hasql
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/hasql-transaction";
description = "A composable abstraction over the retryable transactions for Hasql";
license = stdenv.lib.licenses.mit;

}) {};
"hastache" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, directory
, filepath
, ieee754
, mtl
, process
, stdenv
, syb
, text
, transformers
}:
mkDerivation {

pname = "hastache";
version = "0.6.1";
sha256 = "8c8f89669d6125201d7163385ea9055ab8027a69d1513259f8fbdd53c244b464";
revision = "5";
editedCabalFile = "0fwd1jd6sqkscmy2yq1w3dcl4va4w9n8mhs6ldrilh1cj6b54r3f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
directory
filepath
ieee754
mtl
syb
text
transformers
];
executableHaskellDepends = [
base
blaze-builder
bytestring
containers
directory
filepath
ieee754
mtl
process
syb
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lymar/hastache";
description = "Haskell implementation of Mustache templates";
license = stdenv.lib.licenses.bsd3;

}) {};
"hasty-hamiltonian" = callPackage
({
  mkDerivation
, base
, kan-extensions
, lens
, mcmc-types
, mwc-probability
, pipes
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "hasty-hamiltonian";
version = "1.3.2";
sha256 = "e6299d72e145cfabea798e2088284580fc65f01638e3562e1f01cf9df018cc9e";
libraryHaskellDepends = [
base
kan-extensions
lens
mcmc-types
mwc-probability
pipes
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/hasty-hamiltonian";
description = "Speedy traversal through parameter space";
license = stdenv.lib.licenses.mit;

}) {};
"haxl" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, containers
, deepseq
, exceptions
, filepath
, ghc-prim
, hashable
, HUnit
, pretty
, stdenv
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "haxl";
version = "0.5.1.0";
sha256 = "49d485041646d3210385c312d34b0cc0c61d130e95ad935e06a695515f24a827";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
containers
deepseq
exceptions
filepath
ghc-prim
hashable
HUnit
pretty
text
time
transformers
unordered-containers
vector
];
executableHaskellDepends = [
base
hashable
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/facebook/Haxl";
description = "A Haskell library for efficient, concurrent, and concise data access";
license = "unknown";

}) {};
"haxr" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, base64-bytestring
, blaze-builder
, bytestring
, HaXml
, HsOpenSSL
, http-streams
, http-types
, io-streams
, mtl
, mtl-compat
, network
, network-uri
, old-locale
, old-time
, stdenv
, template-haskell
, text
, time
, utf8-string
}:
mkDerivation {

pname = "haxr";
version = "3000.11.2";
sha256 = "ebcda06d7ee79d5e635a7ec34f86400dd54ddd2434eda082aac6d3c8fd6e8b47";
libraryHaskellDepends = [
array
base
base-compat
base64-bytestring
blaze-builder
bytestring
HaXml
HsOpenSSL
http-streams
http-types
io-streams
mtl
mtl-compat
network
network-uri
old-locale
old-time
template-haskell
text
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/HaXR";
description = "XML-RPC client and server library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hbeanstalk" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, containers
, network
, stdenv
}:
mkDerivation {

pname = "hbeanstalk";
version = "0.2.4";
sha256 = "feaf97fd18fedb3e5abf337e61c98a03108d917d9f87f885c8d02b6b838aac8f";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
containers
network
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/scsibug/hbeanstalk/";
description = "Client for the beanstalkd workqueue service";
license = stdenv.lib.licenses.bsd3;

}) {};
"hdaemonize" = callPackage
({
  mkDerivation
, base
, bytestring
, extensible-exceptions
, filepath
, hsyslog
, mtl
, stdenv
, unix
}:
mkDerivation {

pname = "hdaemonize";
version = "0.5.5";
sha256 = "d250cb0c066ec45aa9b8e9e0df094677f9e7788b01eaf51ab5bc9bbd52fe029f";
libraryHaskellDepends = [
base
bytestring
extensible-exceptions
filepath
hsyslog
mtl
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/greydot/hdaemonize";
description = "Library to handle the details of writing daemons for UNIX";
license = stdenv.lib.licenses.bsd3;

}) {};
"hdevtools" = callPackage
({
  mkDerivation
, base
, Cabal
, cmdargs
, directory
, filepath
, ghc
, ghc-boot
, ghc-paths
, network
, process
, stdenv
, syb
, time
, transformers
, unix
}:
mkDerivation {

pname = "hdevtools";
version = "0.1.6.1";
sha256 = "e7e46acf4a6567159e431739f4c4103b91eae257394560e4b1aaa8e427393440";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
cmdargs
directory
filepath
ghc
ghc-boot
ghc-paths
network
process
syb
time
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hdevtools/hdevtools/";
description = "Persistent GHC powered background server for FAST haskell development tools";
license = stdenv.lib.licenses.mit;

}) {};
"heap" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "heap";
version = "1.0.4";
sha256 = "a4c2489e1031e9e8d96dff61ac8c15e5fcd3541080d81e0e47e298b3aad3172a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Heaps in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"heaps" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, stdenv
}:
mkDerivation {

pname = "heaps";
version = "0.3.6";
sha256 = "181c3cd7f2be698f903dc9649e5ec9311245ad2b9fed91b61f05d0dd7b7dddb2";
revision = "2";
editedCabalFile = "0iym09z8039b2v0kfzh1b66b7ky7kqjv85mx1h0xhsayxdy135in";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/heaps/";
description = "Asymptotically optimal Brodal/Okasaki heaps";
license = stdenv.lib.licenses.bsd3;

}) {};
"heatshrink" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, cereal
, stdenv
}:
mkDerivation {

pname = "heatshrink";
version = "0.1.0.0";
sha256 = "59dd111b2deb207b606d6615a3e5ca7ea3ddead77ea7b525e10e0cf26e4df37f";
libraryHaskellDepends = [
base
bytestring
cereal
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpinsight/heatshrink#readme";
description = "Compression and decompression using heatshrink";
license = stdenv.lib.licenses.bsd3;

}) {};
"hebrew-time" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "hebrew-time";
version = "0.1.1";
sha256 = "c7997ee86df43d5d734df63c5e091543bb7fd75a93d530c1857067e27a8b7932";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/hebrew-time";
description = "Hebrew dates and prayer times";
license = stdenv.lib.licenses.mit;

}) {};
"hedgehog" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, bytestring
, concurrent-output
, containers
, directory
, exceptions
, fetchgit
, lifted-async
, mmorph
, monad-control
, mtl
, pretty-show
, primitive
, random
, resourcet
, semigroups
, stdenv
, stm
, template-haskell
, text
, th-lift
, time
, transformers
, transformers-base
, unix
, wl-pprint-annotated
}:
mkDerivation {

pname = "hedgehog";
version = "0.6";
src = fetchgit {

url = "https://github.com/input-output-hk/haskell-hedgehog.git";
sha256 = "07pvrslv6h3rz053lfxp0racnqj70yazik6mrn612i09vfaxis6b";
rev = "2c9e51804e8217dff89f5c32cbe0d79ce20bc508";

};
postUnpack = "sourceRoot+=/hedgehog; echo source root reset to $sourceRoot";
libraryHaskellDepends = [
ansi-terminal
async
base
bytestring
concurrent-output
containers
directory
exceptions
lifted-async
mmorph
monad-control
mtl
pretty-show
primitive
random
resourcet
semigroups
stm
template-haskell
text
th-lift
time
transformers
transformers-base
unix
wl-pprint-annotated
];
doHaddock = false;
doCheck = false;
homepage = "https://hedgehog.qa";
description = "Hedgehog will eat all your bugs";
license = stdenv.lib.licenses.bsd3;

}) {};
"hedgehog-quickcheck" = callPackage
({
  mkDerivation
, base
, hedgehog
, QuickCheck
, stdenv
, transformers
}:
mkDerivation {

pname = "hedgehog-quickcheck";
version = "0.1";
sha256 = "610a5ccdfcdb4d657f5b25da622ad62562d1854ddb2e7381328e0b63a66f8412";
revision = "1";
editedCabalFile = "1l6gpzhi56mj4a4nqmqhndhly3pdffkpbxinypk5ra77nxqns6n5";
libraryHaskellDepends = [
base
hedgehog
QuickCheck
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://hedgehog.qa";
description = "Use QuickCheck generators in Hedgehog and vice versa";
license = stdenv.lib.licenses.bsd3;

}) {};
"hedis" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, bytestring-lexing
, deepseq
, errors
, HTTP
, mtl
, network
, network-uri
, resource-pool
, scanner
, stdenv
, stm
, text
, time
, tls
, unordered-containers
, vector
}:
mkDerivation {

pname = "hedis";
version = "0.10.2";
sha256 = "1c99bd415a3bdc241a8a3ea6397b6fff10ed3b099de79e46ffe435ad89aa7615";
libraryHaskellDepends = [
async
base
bytestring
bytestring-lexing
deepseq
errors
HTTP
mtl
network
network-uri
resource-pool
scanner
stm
text
time
tls
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/informatikr/hedis";
description = "Client library for the Redis datastore: supports full command set, pipelining";
license = stdenv.lib.licenses.bsd3;

}) {};
"heist" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-builder
, blaze-html
, bytestring
, containers
, directory
, directory-tree
, dlist
, filepath
, hashable
, lifted-base
, map-syntax
, monad-control
, mtl
, process
, random
, stdenv
, text
, time
, transformers
, transformers-base
, unordered-containers
, vector
, xmlhtml
}:
mkDerivation {

pname = "heist";
version = "1.0.1.2";
sha256 = "e1ec5f0f95f6fb0131a3a7fc0ce8f184e10ee98305b4ae44a082b423072bf64e";
revision = "3";
editedCabalFile = "0siqhy0svk9lfi8rx7lhjhjihrmjk6plvyjnhhyhvyakmycggqpc";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-builder
blaze-html
bytestring
containers
directory
directory-tree
dlist
filepath
hashable
lifted-base
map-syntax
monad-control
mtl
process
random
text
time
transformers
transformers-base
unordered-containers
vector
xmlhtml
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "An Haskell template system supporting both HTML5 and XML";
license = stdenv.lib.licenses.bsd3;

}) {};
"here" = callPackage
({
  mkDerivation
, base
, haskell-src-meta
, mtl
, parsec
, stdenv
, template-haskell
}:
mkDerivation {

pname = "here";
version = "1.2.13";
sha256 = "406f9c27ba1e59cd662d078d81dcf2908840a77df15aed31d75dd017b7773c00";
libraryHaskellDepends = [
base
haskell-src-meta
mtl
parsec
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tmhedberg/here";
description = "Here docs & interpolated strings via quasiquotation";
license = stdenv.lib.licenses.bsd3;

}) {};
"heredoc" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "heredoc";
version = "0.2.0.0";
sha256 = "c90d9fc61cb8cd812be510845493b6a6eddcc4b772581fd40a9433ed8f130f40";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/heredoc";
description = "multi-line string / here document using QuasiQuotes";
license = stdenv.lib.licenses.publicDomain;

}) {};
"herms" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, brick
, directory
, microlens
, microlens-th
, optparse-applicative
, semigroups
, split
, stdenv
, vty
}:
mkDerivation {

pname = "herms";
version = "1.8.1.4";
sha256 = "6c09005c6b456b076e5018d1fb75d8d157de2cc26e4da735c0dc199cc6e5f9c1";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
ansi-terminal
base
brick
directory
microlens
microlens-th
optparse-applicative
semigroups
split
vty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/JackKiefer/herms";
description = "A command-line manager for delicious kitchen recipes";
license = stdenv.lib.licenses.gpl3;

}) {};
"heterocephalus" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, containers
, dlist
, mtl
, parsec
, shakespeare
, stdenv
, template-haskell
, text
, transformers
}:
mkDerivation {

pname = "heterocephalus";
version = "1.0.5.2";
sha256 = "50b829508715ba246f095accd1b49f7c5f67380948d349df355bac39f4155923";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
containers
dlist
mtl
parsec
shakespeare
template-haskell
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/arowM/heterocephalus#readme";
description = "A type-safe template engine for working with popular front end development tools";
license = stdenv.lib.licenses.mit;

}) {};
"hex" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "hex";
version = "0.1.2";
sha256 = "12ee1243edd80570a486521565fb0c9b5e39374f21a12f050636e71d55ec61ec";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Convert strings into hexadecimal and back";
license = stdenv.lib.licenses.bsd3;

}) {};
"hexml" = callPackage
({
  mkDerivation
, base
, bytestring
, extra
, stdenv
}:
mkDerivation {

pname = "hexml";
version = "0.3.3";
sha256 = "c4edcc6087df13ad9d9c30de9c1e8be527add3835cb94d59c32b1c5dce861cd2";
libraryHaskellDepends = [
base
bytestring
extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/hexml#readme";
description = "XML subset DOM parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"hexml-lens" = callPackage
({
  mkDerivation
, base
, bytestring
, contravariant
, foundation
, hexml
, lens
, profunctors
, stdenv
, text
}:
mkDerivation {

pname = "hexml-lens";
version = "0.2.1";
sha256 = "baa34ef7206ff924b2559a83da8f8f07bf970e9993a171c956b8de7b70cc496b";
libraryHaskellDepends = [
base
bytestring
contravariant
foundation
hexml
lens
profunctors
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pepeiborra/hexml-lens#readme";
description = "Lenses for the hexml package";
license = stdenv.lib.licenses.bsd3;

}) {};
"hexpat" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, expat
, List
, stdenv
, text
, transformers
, utf8-string
}:
mkDerivation {

pname = "hexpat";
version = "0.20.13";
sha256 = "46e1a0e651c1603c1f064c6ca8d4c66cb27e7a66974bfb45ecaa8f9ccc753fd1";
libraryHaskellDepends = [
base
bytestring
containers
deepseq
List
text
transformers
utf8-string
];
librarySystemDepends = [
expat
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Hexpat/";
description = "XML parser/formatter based on expat";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) expat;};
"hexstring" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, binary
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "hexstring";
version = "0.11.1";
sha256 = "40d8dbfe22f572ffdb73f28c448b228a75008e83cc3bf78e939add0c9d800914";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base16-bytestring
binary
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Fast and safe representation of a hex string";
license = stdenv.lib.licenses.mit;

}) {};
"hformat" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, base-unicode-symbols
, stdenv
, text
}:
mkDerivation {

pname = "hformat";
version = "0.3.2.0";
sha256 = "a93fa94b10c1a4bc8e4eeee0482969935944e6c01bd57f89a624abf3007fc19c";
libraryHaskellDepends = [
ansi-terminal
base
base-unicode-symbols
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mvoidex/hformat";
description = "Simple Haskell formatting";
license = stdenv.lib.licenses.bsd3;

}) {};
"hfsevents" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, Cocoa
, CoreServices
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "hfsevents";
version = "0.1.6";
sha256 = "74c3f3f3a5e55fff320c352a2d481069ff915860a0ab970864c6a0e6b65d3f05";
libraryHaskellDepends = [
base
bytestring
cereal
mtl
text
];
librarySystemDepends = [
Cocoa
];
libraryToolDepends = [
CoreServices
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/luite/hfsevents";
description = "File/folder watching for OS X";
license = stdenv.lib.licenses.bsd3;
platforms = [
"x86_64-darwin"
];

}) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;};
"hid" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, hidapi
, stdenv
, transformers
}:
mkDerivation {

pname = "hid";
version = "0.2.2";
sha256 = "0dd5c562b871626cfad11846d0d3b788823adc12fe009403a42e5f56108773d2";
libraryHaskellDepends = [
base
bytestring
transformers
];
libraryPkgconfigDepends = [
hidapi
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/hid";
description = "Interface to hidapi library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) hidapi;};
"hidapi" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, deepseq-generics
, stdenv
, systemd
}:
mkDerivation {

pname = "hidapi";
version = "0.1.4";
sha256 = "fc40ea58320f9f1459a8da6463419bb15930d2e6d8273d5592cde509d4c96a75";
libraryHaskellDepends = [
base
bytestring
deepseq
deepseq-generics
];
librarySystemDepends = [
systemd
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vahokif/haskell-hidapi";
description = "Haskell bindings to HIDAPI";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) systemd;};
"hidden-char" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hidden-char";
version = "0.1.0.2";
sha256 = "ea909372a7cc06cda7ee8e9c1a6a5c16be19fef256ad4bd2c0b39e61d940f498";
revision = "2";
editedCabalFile = "1d0k297hxff31k0x5xbli6l7c151d2y9wq4w0x0prgagjc0l7z5n";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rcook/hidden-char#readme";
description = "Provides cross-platform getHiddenChar function";
license = stdenv.lib.licenses.mit;

}) {};
"hierarchical-clustering" = callPackage
({
  mkDerivation
, array
, base
, containers
, stdenv
}:
mkDerivation {

pname = "hierarchical-clustering";
version = "0.4.6";
sha256 = "75f17f09b9c38d51a208edee10da2f4706ee784b5cdfe8efc31f7f86bbcdccb1";
libraryHaskellDepends = [
array
base
containers
];
doHaddock = false;
doCheck = false;
description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
license = stdenv.lib.licenses.bsd3;

}) {};
"higher-leveldb" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, data-default
, exceptions
, leveldb-haskell
, mtl
, resourcet
, stdenv
, transformers
, transformers-base
, unliftio-core
}:
mkDerivation {

pname = "higher-leveldb";
version = "0.5.0.1";
sha256 = "44fc8de63416b7878e67d8c93f0ae25e3cba4a7fad2149bb5eac34d2b8d2f95c";
libraryHaskellDepends = [
base
bytestring
cereal
data-default
exceptions
leveldb-haskell
mtl
resourcet
transformers
transformers-base
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jeremyjh/higher-leveldb";
description = "A rich monadic API for working with leveldb databases";
license = stdenv.lib.licenses.bsd3;

}) {};
"highjson" = callPackage
({
  mkDerivation
, aeson
, base
, hvect
, lens
, stdenv
, text
}:
mkDerivation {

pname = "highjson";
version = "0.4.0.0";
sha256 = "c3eb05ed1abd9dd59eedcd22bd60b326059d0c3dcaee2a9f8238b0ac08a26962";
libraryHaskellDepends = [
aeson
base
hvect
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/highjson";
description = "Spec based JSON parsing/serialisation";
license = stdenv.lib.licenses.mit;

}) {};
"highjson-swagger" = callPackage
({
  mkDerivation
, base
, highjson
, hvect
, insert-ordered-containers
, lens
, stdenv
, swagger2
, text
}:
mkDerivation {

pname = "highjson-swagger";
version = "0.4.0.0";
sha256 = "2df02d2fd764fd5386094de59e181314ba152bd87dc2905d9869fefd4cb87e1f";
libraryHaskellDepends = [
base
highjson
hvect
insert-ordered-containers
lens
swagger2
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/highjson";
description = "Derive swagger instances from highjson specs";
license = stdenv.lib.licenses.mit;

}) {};
"highjson-th" = callPackage
({
  mkDerivation
, aeson
, base
, highjson
, highjson-swagger
, stdenv
, swagger2
, template-haskell
, text
}:
mkDerivation {

pname = "highjson-th";
version = "0.4.0.0";
sha256 = "f30c4937a9db6eb1cea8b9efef76855af3b4745e3a620798681b8cf3c73202c5";
libraryHaskellDepends = [
aeson
base
highjson
highjson-swagger
swagger2
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/highjson";
description = "Template Haskell helpers for highjson specs";
license = stdenv.lib.licenses.mit;

}) {};
"highlighting-kate" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, containers
, mtl
, parsec
, pcre-light
, stdenv
, utf8-string
}:
mkDerivation {

pname = "highlighting-kate";
version = "0.6.4";
sha256 = "d8b83385f5da2ea7aa59f28eb860fd7eba0d35a4c36192a5044ee7ea1e001baf";
configureFlags = [
"-fpcre-light"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-html
bytestring
containers
mtl
parsec
pcre-light
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/highlighting-kate";
description = "Syntax highlighting";
license = "GPL";

}) {};
"hindent" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, deepseq
, descriptive
, directory
, exceptions
, filepath
, ghc-prim
, haskell-src-exts
, monad-loops
, mtl
, path
, path-io
, stdenv
, text
, transformers
, unix-compat
, utf8-string
, yaml
}:
mkDerivation {

pname = "hindent";
version = "5.2.5";
sha256 = "2f701737a6b05c9535b2e087a8742cac81f0d82e8fc2e3330f0d79acf99f8ca6";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
Cabal
containers
directory
exceptions
filepath
haskell-src-exts
monad-loops
mtl
text
transformers
utf8-string
yaml
];
executableHaskellDepends = [
base
bytestring
deepseq
descriptive
directory
exceptions
ghc-prim
haskell-src-exts
path
path-io
text
transformers
unix-compat
utf8-string
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/commercialhaskell/hindent";
description = "Extensible Haskell pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"hinotify" = callPackage
({
  mkDerivation
, async
, base
, containers
, directory
, stdenv
, unix
}:
mkDerivation {

pname = "hinotify";
version = "0.3.9";
sha256 = "f2480e4c08a516831c2221eebc6a9d3242e892932d9315c34cbe92a101c5df99";
revision = "1";
editedCabalFile = "0df5pak0586626k3ryzg2lb26ys562l3i94jr9vpa0krs8iia209";
libraryHaskellDepends = [
async
base
containers
directory
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kolmodin/hinotify.git";
description = "Haskell binding to inotify";
license = stdenv.lib.licenses.bsd3;

}) {};
"hint" = callPackage
({
  mkDerivation
, base
, directory
, exceptions
, filepath
, ghc
, ghc-paths
, mtl
, random
, stdenv
, unix
}:
mkDerivation {

pname = "hint";
version = "0.7.0";
sha256 = "299a735848bd6b2e0bdeeee4b47d9d52f865198fbb9403df3f6571801b3e8155";
revision = "2";
editedCabalFile = "1w96sfg6vlrw5q7cjdg1rz9jf2yl47fyas9qg3jfa9bcfmvs8cg2";
libraryHaskellDepends = [
base
directory
exceptions
filepath
ghc
ghc-paths
mtl
random
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvdan/hint";
description = "Runtime Haskell interpreter (GHC API wrapper)";
license = stdenv.lib.licenses.bsd3;

}) {};
"histogram-fill" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "histogram-fill";
version = "0.8.5.0";
sha256 = "fbdd167d6f27c0d88f9aa8647ae95a313101c63a827275ac8d016d6028975133";
revision = "1";
editedCabalFile = "0pa5i5187g0y7r7ngy4gf9lqp76k9saz5qjri4nx0f98kwsacagg";
libraryHaskellDepends = [
base
deepseq
ghc-prim
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Shimuuar/histogram-fill/";
description = "Library for histograms creation";
license = stdenv.lib.licenses.bsd3;

}) {};
"hit" = callPackage
({
  mkDerivation
, attoparsec
, base
, byteable
, bytestring
, containers
, cryptohash
, hourglass
, mtl
, parsec
, patience
, random
, stdenv
, system-fileio
, system-filepath
, unix-compat
, utf8-string
, vector
, zlib
, zlib-bindings
}:
mkDerivation {

pname = "hit";
version = "0.6.3";
sha256 = "db86b3712029a4e40d1306dd6cc9ca2c9f4c77fe65a2b74106f1cbd2de26e471";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
byteable
bytestring
containers
cryptohash
hourglass
mtl
parsec
patience
random
system-fileio
system-filepath
unix-compat
utf8-string
vector
zlib
zlib-bindings
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hit";
description = "Git operations in haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hjsmin" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, language-javascript
, optparse-applicative
, stdenv
, text
}:
mkDerivation {

pname = "hjsmin";
version = "0.2.0.2";
sha256 = "bec153d2396962c63998eb12d0a2c7c9f7df6f774cb00e41b6cdb1f5a4905484";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
language-javascript
text
];
executableHaskellDepends = [
base
blaze-builder
bytestring
containers
language-javascript
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/erikd/hjsmin";
description = "Haskell implementation of a javascript minifier";
license = stdenv.lib.licenses.bsd3;

}) {};
"hjsonpointer" = callPackage
({
  mkDerivation
, aeson
, base
, hashable
, QuickCheck
, semigroups
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "hjsonpointer";
version = "1.3.0";
sha256 = "445b496c6408ed0a84b8f4df9cc96f5faa10b437d2ba26ef850171ce3335d831";
revision = "1";
editedCabalFile = "053x0iy7kzmf8b9mqr94lapv95d2rm2zm14lvvviyccqsd3k5gjd";
libraryHaskellDepends = [
aeson
base
hashable
QuickCheck
semigroups
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seagreen/hjsonpointer";
description = "JSON Pointer library";
license = stdenv.lib.licenses.mit;

}) {};
"hjsonschema" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, file-embed
, filepath
, hashable
, hjsonpointer
, http-client
, http-types
, pcre-heavy
, profunctors
, protolude
, QuickCheck
, scientific
, semigroups
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "hjsonschema";
version = "1.7.2";
sha256 = "0381b49800e1928b28f7abf626af0b0ba3eae3d418f58206eafd1f0a1d77fdb3";
libraryHaskellDepends = [
aeson
base
bytestring
containers
file-embed
filepath
hashable
hjsonpointer
http-client
http-types
pcre-heavy
profunctors
protolude
QuickCheck
scientific
semigroups
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seagreen/hjsonschema";
description = "JSON Schema library";
license = stdenv.lib.licenses.mit;

}) {};
"hledger" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, base-compat
, bytestring
, cmdargs
, containers
, csv
, data-default
, Decimal
, Diff
, directory
, file-embed
, filepath
, hashable
, haskeline
, here
, hledger-lib
, HUnit
, megaparsec
, mtl
, mtl-compat
, old-time
, parsec
, pretty-show
, process
, regex-tdfa
, safe
, shakespeare
, split
, stdenv
, tabular
, temporary
, terminfo
, text
, time
, transformers
, unordered-containers
, utf8-string
, utility-ht
, wizards
}:
mkDerivation {

pname = "hledger";
version = "1.5";
sha256 = "0185e2d24a72eae917ca08a8d1de42dceeb93357331c1162156a7adaa092af56";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
ansi-terminal
base
base-compat
bytestring
cmdargs
containers
csv
data-default
Decimal
Diff
directory
file-embed
filepath
hashable
haskeline
here
hledger-lib
HUnit
megaparsec
mtl
mtl-compat
old-time
pretty-show
process
regex-tdfa
safe
shakespeare
split
tabular
temporary
terminfo
text
time
transformers
unordered-containers
utf8-string
utility-ht
wizards
];
executableHaskellDepends = [
ansi-terminal
base
base-compat
bytestring
cmdargs
containers
csv
data-default
Decimal
directory
file-embed
filepath
haskeline
here
hledger-lib
HUnit
mtl
mtl-compat
old-time
parsec
pretty-show
process
regex-tdfa
safe
shakespeare
split
tabular
temporary
terminfo
text
time
unordered-containers
utf8-string
utility-ht
wizards
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Command-line interface for the hledger accounting tool";
license = stdenv.lib.licenses.gpl3;

}) {};
"hledger-api" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, Decimal
, docopt
, either
, hledger
, hledger-lib
, microlens
, microlens-platform
, safe
, servant-server
, servant-swagger
, stdenv
, swagger2
, text
, transformers
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "hledger-api";
version = "1.5";
sha256 = "2948a5f4e404180f3095e243564e583435d61e2a22772929b856b564085456f1";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
aeson
base
bytestring
containers
Decimal
docopt
either
hledger
hledger-lib
microlens
microlens-platform
safe
servant-server
servant-swagger
swagger2
text
transformers
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Web API server for the hledger accounting tool";
license = stdenv.lib.licenses.gpl3;

}) {};
"hledger-iadd" = callPackage
({
  mkDerivation
, base
, brick
, containers
, directory
, free
, hledger-lib
, megaparsec
, microlens
, microlens-th
, optparse-applicative
, semigroups
, stdenv
, text
, text-zipper
, time
, transformers
, unordered-containers
, vector
, vty
, xdg-basedir
}:
mkDerivation {

pname = "hledger-iadd";
version = "1.3.5";
sha256 = "2c01e8702fd5f87ca5eb3df7e7ddf47a89a5eb4ed5e1eb7b1c2720e23694e856";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
brick
containers
directory
free
hledger-lib
megaparsec
microlens
microlens-th
optparse-applicative
semigroups
text
text-zipper
time
transformers
unordered-containers
vector
vty
xdg-basedir
];
executableHaskellDepends = [
base
brick
directory
free
hledger-lib
megaparsec
microlens
optparse-applicative
text
text-zipper
time
transformers
unordered-containers
vector
vty
xdg-basedir
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hpdeifel/hledger-iadd#readme";
description = "A terminal UI as drop-in replacement for hledger add";
license = stdenv.lib.licenses.bsd3;

}) {};
"hledger-interest" = callPackage
({
  mkDerivation
, base
, Cabal
, Decimal
, hledger-lib
, mtl
, stdenv
, text
, time
}:
mkDerivation {

pname = "hledger-interest";
version = "1.5.1";
sha256 = "0a02354f4e8d53e75817e05b140c4760220ac4e414fbf9772abe4f20a9f90da6";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
base
Cabal
Decimal
hledger-lib
mtl
text
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hledger-interest";
description = "computes interest for a given account";
license = stdenv.lib.licenses.bsd3;

}) {};
"hledger-lib" = callPackage
({
  mkDerivation
, ansi-terminal
, array
, base
, base-compat
, blaze-markup
, bytestring
, cmdargs
, containers
, csv
, data-default
, Decimal
, deepseq
, directory
, extra
, filepath
, hashtables
, HUnit
, megaparsec
, mtl
, mtl-compat
, old-time
, parsec
, pretty-show
, regex-tdfa
, safe
, split
, stdenv
, text
, time
, transformers
, uglymemo
, utf8-string
}:
mkDerivation {

pname = "hledger-lib";
version = "1.5.1";
sha256 = "7d784bb96fd91a458ae9a14fe9f8a1164eaa891297fda17933cd9552a48262ae";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
ansi-terminal
array
base
base-compat
blaze-markup
bytestring
cmdargs
containers
csv
data-default
Decimal
deepseq
directory
extra
filepath
hashtables
HUnit
megaparsec
mtl
mtl-compat
old-time
parsec
pretty-show
regex-tdfa
safe
split
text
time
transformers
uglymemo
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Core data types, parsers and functionality for the hledger accounting tools";
license = stdenv.lib.licenses.gpl3;

}) {};
"hledger-ui" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, base-compat
, brick
, cmdargs
, containers
, data-default
, directory
, filepath
, fsnotify
, hledger
, hledger-lib
, HUnit
, megaparsec
, microlens
, microlens-platform
, pretty-show
, process
, safe
, split
, stdenv
, text
, text-zipper
, time
, transformers
, vector
, vty
}:
mkDerivation {

pname = "hledger-ui";
version = "1.5";
sha256 = "ddf0a2777f619b5a84409104ca7f208b126ac9095c2d57d3439bb776b1979b80";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
ansi-terminal
async
base
base-compat
brick
cmdargs
containers
data-default
directory
filepath
fsnotify
hledger
hledger-lib
HUnit
megaparsec
microlens
microlens-platform
pretty-show
process
safe
split
text
text-zipper
time
transformers
vector
vty
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Curses-style user interface for the hledger accounting tool";
license = stdenv.lib.licenses.gpl3;

}) {};
"hledger-web" = callPackage
({
  mkDerivation
, base
, base-compat
, blaze-html
, blaze-markup
, bytestring
, clientsession
, cmdargs
, conduit-extra
, data-default
, directory
, filepath
, hjsmin
, hledger
, hledger-lib
, http-client
, http-conduit
, HUnit
, json
, megaparsec
, mtl
, parsec
, safe
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, wai
, wai-extra
, wai-handler-launch
, warp
, yaml
, yesod
, yesod-core
, yesod-form
, yesod-static
}:
mkDerivation {

pname = "hledger-web";
version = "1.5.1";
sha256 = "43c8841dddaf1fe2c7c7bd0f1217bfaa5e5f808c9469507c2b6587ad7aef723c";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
base-compat
blaze-html
blaze-markup
bytestring
clientsession
cmdargs
conduit-extra
data-default
directory
filepath
hjsmin
hledger
hledger-lib
http-client
http-conduit
HUnit
json
megaparsec
mtl
parsec
safe
shakespeare
template-haskell
text
time
transformers
wai
wai-extra
wai-handler-launch
warp
yaml
yesod
yesod-core
yesod-form
yesod-static
];
executableHaskellDepends = [
base
base-compat
blaze-html
blaze-markup
bytestring
clientsession
cmdargs
conduit-extra
data-default
directory
filepath
hjsmin
hledger
hledger-lib
http-client
http-conduit
HUnit
json
megaparsec
mtl
parsec
safe
shakespeare
template-haskell
text
time
transformers
wai
wai-extra
wai-handler-launch
warp
yaml
yesod
yesod-core
yesod-form
yesod-static
];
doHaddock = false;
doCheck = false;
homepage = "http://hledger.org";
description = "Web interface for the hledger accounting tool";
license = stdenv.lib.licenses.gpl3;

}) {};
"hlibgit2" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, openssl
, stdenv
, zlib
}:
mkDerivation {

pname = "hlibgit2";
version = "0.18.0.16";
sha256 = "199e4027faafe0a39d18ca3168923d44c57b386b960c72398df1c0fb7eff8e5e";
libraryHaskellDepends = [
base
bindings-DSL
zlib
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
description = "Low-level bindings to libgit2";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) openssl;};
"hlibsass" = callPackage
({
  mkDerivation
, base
, Cabal
, directory
, libsass
, stdenv
}:
mkDerivation {

pname = "hlibsass";
version = "0.1.6.1";
sha256 = "3e120a4f266445f50299a0009c24bd0a69a7af4c88376de0e1882a505d580849";
configureFlags = [
"-fexternalLibsass"
];
setupHaskellDepends = [
base
Cabal
directory
];
libraryHaskellDepends = [
base
];
librarySystemDepends = [
libsass
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jakubfijalkowski/hlibsass";
description = "Low-level bindings to Libsass";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) libsass;};
"hlint" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, base
, bytestring
, cmdargs
, containers
, cpphs
, data-default
, directory
, extra
, filepath
, haskell-src-exts
, haskell-src-exts-util
, hscolour
, process
, refact
, stdenv
, text
, transformers
, uniplate
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "hlint";
version = "2.1.5";
sha256 = "41f21566627d02f69f5715d883ebffd54e64e8f2af1d2376830b6880565a7102";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
ansi-terminal
base
bytestring
cmdargs
containers
cpphs
data-default
directory
extra
filepath
haskell-src-exts
haskell-src-exts-util
hscolour
process
refact
text
transformers
uniplate
unordered-containers
vector
yaml
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/hlint#readme";
description = "Source code suggestions";
license = stdenv.lib.licenses.bsd3;

}) {};
"hmatrix" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, deepseq
, openblasCompat
, random
, semigroups
, split
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "hmatrix";
version = "0.18.2.0";
sha256 = "960cdc81143d68841a036f7c642a06c5303bf8ded9737bcfc560755fef138560";
configureFlags = [
"-fdisable-default-paths"
"-fopenblas"
];
libraryHaskellDepends = [
array
base
binary
bytestring
deepseq
random
semigroups
split
storable-complex
vector
];
librarySystemDepends = [
openblasCompat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/albertoruiz/hmatrix";
description = "Numeric Linear Algebra";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openblasCompat;};
"hmatrix-backprop" = callPackage
({
  mkDerivation
, ANum
, backprop
, base
, finite-typelits
, ghc-typelits-knownnat
, ghc-typelits-natnormalise
, hmatrix
, hmatrix-vector-sized
, microlens
, stdenv
, vector
, vector-sized
}:
mkDerivation {

pname = "hmatrix-backprop";
version = "0.1.2.0";
sha256 = "4ce16590ae86bb84eadc5a5af97ae4f662d536a62592f5b4fb7b22da7ff12d53";
libraryHaskellDepends = [
ANum
backprop
base
finite-typelits
ghc-typelits-knownnat
ghc-typelits-natnormalise
hmatrix
hmatrix-vector-sized
microlens
vector
vector-sized
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/hmatrix-backprop#readme";
description = "hmatrix operations lifted for backprop";
license = stdenv.lib.licenses.bsd3;

}) {};
"hmatrix-gsl" = callPackage
({
  mkDerivation
, array
, base
, gsl
, hmatrix
, process
, random
, stdenv
, vector
}:
mkDerivation {

pname = "hmatrix-gsl";
version = "0.18.2.0";
sha256 = "dac92397269deaa2ecd2b2175a85eb35c5634c269e6323100268d2adfc826f3f";
libraryHaskellDepends = [
array
base
hmatrix
process
random
vector
];
libraryPkgconfigDepends = [
gsl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/albertoruiz/hmatrix";
description = "Numerical computation";
license = "GPL";

}) {inherit (pkgs) gsl;};
"hmatrix-gsl-stats" = callPackage
({
  mkDerivation
, base
, binary
, gsl
, hmatrix
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "hmatrix-gsl-stats";
version = "0.4.1.7";
sha256 = "4a0f8b6ea1caefebd30f1e726c94f238d96c0f873bdeb5d920367e8aca7c54bf";
libraryHaskellDepends = [
base
binary
hmatrix
storable-complex
vector
];
libraryPkgconfigDepends = [
gsl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hmatrix-gsl-stats";
description = "GSL Statistics interface";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) gsl;};
"hmatrix-morpheus" = callPackage
({
  mkDerivation
, base
, blas
, hmatrix
, liblapack
, stdenv
}:
mkDerivation {

pname = "hmatrix-morpheus";
version = "0.1.1.1";
sha256 = "729b81f4b434e0132e13508e02e688a9af182390120c0ba2144702b11f9fecf8";
libraryHaskellDepends = [
base
hmatrix
];
librarySystemDepends = [
blas
liblapack
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Alexander-Ignatyev/morpheus/tree/master/hmatrix-morpheus";
description = "Low-level machine learning auxiliary functions";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
"hmatrix-repa" = callPackage
({
  mkDerivation
, base
, hmatrix
, repa
, stdenv
, vector
}:
mkDerivation {

pname = "hmatrix-repa";
version = "0.1.2.2";
sha256 = "51c3a46800aea072258b05047cb0c6f24999bbb626268ce32809c5872e0e71be";
libraryHaskellDepends = [
base
hmatrix
repa
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hmatrix-repa";
description = "Adaptors for interoperability between hmatrix and repa";
license = stdenv.lib.licenses.bsd3;

}) {};
"hmatrix-special" = callPackage
({
  mkDerivation
, base
, hmatrix
, hmatrix-gsl
, stdenv
}:
mkDerivation {

pname = "hmatrix-special";
version = "0.4.0.1";
sha256 = "72a9c9c559da6b6314e6042ddfd53d638fdf1b819978a630fc339e0859c3ec4e";
libraryHaskellDepends = [
base
hmatrix
hmatrix-gsl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/albertoruiz/hmatrix";
description = "Interface to GSL special functions";
license = "GPL";

}) {};
"hmatrix-vector-sized" = callPackage
({
  mkDerivation
, base
, hmatrix
, stdenv
, vector
, vector-sized
}:
mkDerivation {

pname = "hmatrix-vector-sized";
version = "0.1.1.0";
sha256 = "8b4edc591aa301ee2c4d2f5894ad690db8d88c9d48754f6d13c30d3eacc03b1d";
libraryHaskellDepends = [
base
hmatrix
vector
vector-sized
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/hmatrix-vector-sized#readme";
description = "Conversions between hmatrix and vector-sized types";
license = stdenv.lib.licenses.bsd3;

}) {};
"hmpfr" = callPackage
({
  mkDerivation
, base
, integer-gmp
, mpfr
, stdenv
}:
mkDerivation {

pname = "hmpfr";
version = "0.4.4";
sha256 = "2badebf032a24f6ab3bde068d5246bc9cc00bf5a8ac17da8cc0bd45c882816f5";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
integer-gmp
];
librarySystemDepends = [
mpfr
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michalkonecny/hmpfr";
description = "Haskell binding to the MPFR library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) mpfr;};
"hocilib" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, containers
, inline-c
, ocilib
, stdenv
, template-haskell
}:
mkDerivation {

pname = "hocilib";
version = "0.2.0";
sha256 = "7c29cc84e7ac320cd1ddfb9d387d19c7c03fea3eedfb41713115d0e94aeafb78";
libraryHaskellDepends = [
base
bytestring
containers
inline-c
template-haskell
];
librarySystemDepends = [
ocilib
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpinsight/hocilib";
description = "FFI binding to OCILIB";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) ocilib;};
"hoogle" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, cmdargs
, conduit
, conduit-extra
, connection
, containers
, deepseq
, directory
, extra
, filepath
, haskell-src-exts
, http-conduit
, http-types
, js-flot
, js-jquery
, mmap
, network
, network-uri
, old-locale
, process-extras
, QuickCheck
, resourcet
, stdenv
, storable-tuple
, tar
, template-haskell
, text
, time
, transformers
, uniplate
, utf8-string
, vector
, wai
, wai-logger
, warp
, warp-tls
, zlib
}:
mkDerivation {

pname = "hoogle";
version = "5.0.17.3";
sha256 = "66bebaf75600fef1c5fc0613ccc55c137aaed4c8f69653cf903f4fb003b98f9c";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
binary
bytestring
cmdargs
conduit
conduit-extra
connection
containers
deepseq
directory
extra
filepath
haskell-src-exts
http-conduit
http-types
js-flot
js-jquery
mmap
network
network-uri
old-locale
process-extras
QuickCheck
resourcet
storable-tuple
tar
template-haskell
text
time
transformers
uniplate
utf8-string
vector
wai
wai-logger
warp
warp-tls
zlib
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
testTarget = "--test-option=--no-net";
homepage = "http://hoogle.haskell.org/";
description = "Haskell API Search";
license = stdenv.lib.licenses.bsd3;

}) {};
"hopenssl" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cabal-doctest
, openssl
, stdenv
}:
mkDerivation {

pname = "hopenssl";
version = "2.2.1";
sha256 = "7031aac15f132057f8013f819774081cd8fc4a14fb076bc3dffb478d66d0abdf";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
openssl
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hopenssl";
description = "FFI Bindings to OpenSSL's EVP Digest Interface";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) openssl;};
"hopfli" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "hopfli";
version = "0.2.2.1";
sha256 = "4d71dc0f599c87445c22403b447ce310bf8567d6b10cc82efbdd00a4d4d12a18";
revision = "1";
editedCabalFile = "116jns5im51sb9xiwpx308wz3pr67335633anrf8f704pz8vwjka";
libraryHaskellDepends = [
base
bytestring
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ananthakumaran/hopfli";
description = "Bidings to Google's Zopfli compression library";
license = stdenv.lib.licenses.asl20;

}) {};
"hosc" = callPackage
({
  mkDerivation
, base
, binary
, blaze-builder
, bytestring
, data-binary-ieee754
, network
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "hosc";
version = "0.16";
sha256 = "72ed7430ca8b3121cb59325973c4dd75fe9df27c4023618d888eff3fef9c45f6";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
blaze-builder
bytestring
data-binary-ieee754
network
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://rd.slavepianos.org/t/hosc";
description = "Haskell Open Sound Control";
license = "GPL";

}) {};
"hostname" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hostname";
version = "1.0";
sha256 = "9b43dab1b6da521f35685b20555da00738c8e136eb972458c786242406a9cf5c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A very simple package providing a cross-platform means of determining the hostname";
license = stdenv.lib.licenses.bsd3;

}) {};
"hostname-validate" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "hostname-validate";
version = "1.0.0";
sha256 = "7fafb1e0cfe19d453030754962e74cdb8f3e791ec5b974623cbf26872779c857";
libraryHaskellDepends = [
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Validate hostnames e.g. localhost or foo.co.uk.";
license = stdenv.lib.licenses.bsd3;

}) {};
"hourglass" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "hourglass";
version = "0.2.11";
sha256 = "18a6bb303fc055275cca45aaffc17b6a04b2e9d7509aa5aa5bb9d9239f4e4f51";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-hourglass";
description = "simple performant time related library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hourglass-orphans" = callPackage
({
  mkDerivation
, aeson
, base
, hourglass
, stdenv
}:
mkDerivation {

pname = "hourglass-orphans";
version = "0.1.0.0";
sha256 = "9f0ba9f3b3cdd391b26daf3dce0bac44ab1f9dd883eaff063af9ebfb0b373d64";
libraryHaskellDepends = [
aeson
base
hourglass
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/hourglass-orphans#readme";
description = "Orphan Aeson instances to hourglass";
license = stdenv.lib.licenses.bsd3;

}) {};
"hp2pretty" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, containers
, filepath
, floatshow
, mtl
, optparse-applicative
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "hp2pretty";
version = "0.8.0.2";
sha256 = "2fd19796845be73b605ee8830704a6f1f23a80f43731cd36a216fb2b3bb179c8";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
array
attoparsec
base
containers
filepath
floatshow
mtl
optparse-applicative
semigroups
text
];
doHaddock = false;
doCheck = false;
homepage = "https://code.mathr.co.uk/hp2pretty";
description = "generate pretty graphs from heap profiles";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpack" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, bytestring
, Cabal
, containers
, cryptonite
, deepseq
, directory
, filepath
, Glob
, http-client
, http-client-tls
, http-types
, pretty
, scientific
, stdenv
, text
, transformers
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "hpack";
version = "0.27.0";
sha256 = "d54744d77b645eb61d9498409904fca909c6d994402e806ad3c9c65596702bef";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bifunctors
bytestring
Cabal
containers
cryptonite
deepseq
directory
filepath
Glob
http-client
http-client-tls
http-types
pretty
scientific
text
transformers
unordered-containers
vector
yaml
];
executableHaskellDepends = [
aeson
base
bifunctors
bytestring
Cabal
containers
cryptonite
deepseq
directory
filepath
Glob
http-client
http-client-tls
http-types
pretty
scientific
text
transformers
unordered-containers
vector
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/hpack#readme";
description = "An alternative format for Haskell packages";
license = stdenv.lib.licenses.mit;

}) {};
"hpc" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, stdenv
, time
}:
mkDerivation {

pname = "hpc";
version = "0.6.0.3";
sha256 = "16dac73e55899815a32715c35fa5986da077d7e7887ce8ef1c72b4f33a73a2aa";
revision = "1";
editedCabalFile = "1bddfsgn48kh8qa72asgmx7z4ym00zkh09g3hqp6l6yl919drn2i";
libraryHaskellDepends = [
base
containers
directory
filepath
time
];
doHaddock = false;
doCheck = false;
description = "Code Coverage Library for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpc-coveralls" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, Cabal
, cmdargs
, containers
, curl
, directory
, directory-tree
, hpc
, process
, pureMD5
, regex-posix
, retry
, safe
, split
, stdenv
, transformers
}:
mkDerivation {

pname = "hpc-coveralls";
version = "1.0.10";
sha256 = "e222c0d36a6d266205957d0c71e1baeb1581847e79b0b5b9d883a4ef7381d0d9";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
Cabal
cmdargs
containers
curl
directory
directory-tree
hpc
process
pureMD5
retry
safe
split
transformers
];
executableHaskellDepends = [
aeson
async
base
bytestring
Cabal
cmdargs
containers
curl
directory
directory-tree
hpc
process
pureMD5
regex-posix
retry
safe
split
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
description = "Coveralls.io support for Haskell.";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpio" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, containers
, directory
, exceptions
, filepath
, monad-control
, monad-logger
, mtl
, optparse-applicative
, protolude
, QuickCheck
, stdenv
, text
, transformers
, transformers-base
, unix
, unix-bytestring
}:
mkDerivation {

pname = "hpio";
version = "0.9.0.6";
sha256 = "bd1bd338a962d4d5c8a355ef75a24e9bae5b96734a2289ce637c066ed61c841c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
directory
exceptions
filepath
monad-control
monad-logger
mtl
protolude
QuickCheck
text
transformers
transformers-base
unix
unix-bytestring
];
executableHaskellDepends = [
async
base
exceptions
mtl
optparse-applicative
protolude
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/quixoftic/hpio#readme";
description = "Monads for GPIO in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpp" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-trie
, directory
, filepath
, ghc-prim
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "hpp";
version = "0.5.2";
sha256 = "8ced49fbdd2e54be8c1fe99e3a8c908475b063c583cb3d305199759683563ae4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
bytestring-trie
directory
filepath
ghc-prim
time
transformers
];
executableHaskellDepends = [
base
directory
filepath
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acowley/hpp";
description = "A Haskell pre-processor";
license = stdenv.lib.licenses.bsd3;

}) {};
"hpqtypes" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, Cabal
, containers
, data-default-class
, directory
, exceptions
, filepath
, lifted-base
, monad-control
, mtl
, postgresql
, resource-pool
, semigroups
, stdenv
, text
, text-show
, time
, transformers
, transformers-base
, vector
}:
mkDerivation {

pname = "hpqtypes";
version = "1.5.3.0";
sha256 = "ff25807beee2ce9fa59b823313b6e2fdbd6e575e6e91d885ddee0ebf8b92ffc5";
setupHaskellDepends = [
base
Cabal
directory
filepath
];
libraryHaskellDepends = [
aeson
async
base
bytestring
containers
data-default-class
exceptions
lifted-base
monad-control
mtl
resource-pool
semigroups
text
text-show
time
transformers
transformers-base
vector
];
librarySystemDepends = [
postgresql
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/hpqtypes";
description = "Haskell bindings to libpqtypes";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) postgresql;};
"hquantlib" = callPackage
({
  mkDerivation
, base
, containers
, hmatrix
, hmatrix-gsl
, hmatrix-special
, mersenne-random-pure64
, parallel
, random
, statistics
, stdenv
, time
, vector
, vector-algorithms
}:
mkDerivation {

pname = "hquantlib";
version = "0.0.4.0";
sha256 = "b7b2b9ce5e8113dd2d54a1dfce34b661620bd5e0dd43516604395276d7c44474";
revision = "2";
editedCabalFile = "1wx32kkv1as3rras5b1y3v77abx0sqsam6ssa5s7vm83pncx38y4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
hmatrix
hmatrix-gsl
hmatrix-special
mersenne-random-pure64
parallel
random
statistics
time
vector
vector-algorithms
];
executableHaskellDepends = [
base
containers
mersenne-random-pure64
parallel
time
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/paulrzcz/hquantlib.git";
description = "HQuantLib is a port of essencial parts of QuantLib to Haskell";
license = "LGPL";

}) {};
"hreader" = callPackage
({
  mkDerivation
, base
, exceptions
, hset
, mmorph
, monad-control
, mtl
, stdenv
, tagged
, transformers
, transformers-base
}:
mkDerivation {

pname = "hreader";
version = "1.1.0";
sha256 = "2a2b02c059b343ab7ff0d340b6545a003b0d563fb8a1ad2d53d6c2f4759a7d3a";
libraryHaskellDepends = [
base
exceptions
hset
mmorph
monad-control
mtl
tagged
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/s9gf4ult/hreader";
description = "Generalization of MonadReader and ReaderT using hset";
license = stdenv.lib.licenses.bsd3;

}) {};
"hreader-lens" = callPackage
({
  mkDerivation
, base
, comonad
, hreader
, hset
, lens
, lens-action
, profunctors
, stdenv
}:
mkDerivation {

pname = "hreader-lens";
version = "0.1.3.0";
sha256 = "408f0a2c6ce4bc5c00746947262f43f421f0e8fb9cc29c0cd2563ee1e87502d0";
libraryHaskellDepends = [
base
comonad
hreader
hset
lens
lens-action
profunctors
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dredozubov/hreader-lens";
description = "Optics for hreader package";
license = stdenv.lib.licenses.mit;

}) {};
"hruby" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, ruby
, scientific
, stdenv
, stm
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "hruby";
version = "0.3.5.1";
sha256 = "969b829f28d369a3a99960e3890427470459425b3434576e54f8fd3ca13fef3f";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
scientific
stm
text
unordered-containers
vector
];
librarySystemDepends = [
ruby
];
doHaddock = false;
doCheck = false;
description = "Embed a Ruby intepreter in your Haskell program !";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) ruby;};
"hs-GeoIP" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, GeoIP
, stdenv
}:
mkDerivation {

pname = "hs-GeoIP";
version = "0.3";
sha256 = "8e5ff6a132d8944336f10dcaa69d8852cdd7953a5ff18248ae06cb2819a1ab8c";
libraryHaskellDepends = [
base
bytestring
deepseq
];
librarySystemDepends = [
GeoIP
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ozataman/hs-GeoIP";
description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) GeoIP;};
"hs-bibutils" = callPackage
({
  mkDerivation
, base
, stdenv
, syb
}:
mkDerivation {

pname = "hs-bibutils";
version = "6.2.0.1";
sha256 = "4b668090049bf67f107b8bcd39a4664c00b78ff596de9ccb63720af49ed4a630";
libraryHaskellDepends = [
base
syb
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/wilx/hs-bibutils";
description = "Haskell bindings to bibutils, the bibliography conversion utilities";
license = "GPL";

}) {};
"hsass" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, filepath
, hlibsass
, monad-loops
, stdenv
, transformers
}:
mkDerivation {

pname = "hsass";
version = "0.5.0";
sha256 = "8dc4c6a7455a1182ec2dba36c489f89d7e5c1053388b2c63c4ddba6080b7501e";
revision = "1";
editedCabalFile = "00va8x51p6rbg8jbkxpyz74pa2pfm5dsrpi57icbyickx39iaydd";
libraryHaskellDepends = [
base
bytestring
data-default-class
filepath
hlibsass
monad-loops
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jakubfijalkowski/hsass";
description = "Integrating Sass into Haskell applications";
license = stdenv.lib.licenses.mit;

}) {};
"hsb2hs" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, preprocessor-tools
, stdenv
}:
mkDerivation {

pname = "hsb2hs";
version = "0.3.1";
sha256 = "8ad800820554f273ada083dfce2f463d920fb1ceb053255023a4c883b090f9d8";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
containers
directory
filepath
preprocessor-tools
];
doHaddock = false;
doCheck = false;
description = "Preprocesses a file, adding blobs from files as string literals";
license = stdenv.lib.licenses.bsd3;

}) {};
"hscolour" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "hscolour";
version = "1.24.4";
sha256 = "243332b082294117f37b2c2c68079fa61af68b36223b3fc07594f245e0e5321d";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~malcolm/hscolour/";
description = "Colourise Haskell code";
license = "LGPL";

}) {};
"hsdns" = callPackage
({
  mkDerivation
, adns
, base
, containers
, network
, stdenv
}:
mkDerivation {

pname = "hsdns";
version = "1.7.1";
sha256 = "4fcd00e85cde989652ab5c6b179610c9514180a00cd7b161ea33ebfec3b8a044";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
network
];
librarySystemDepends = [
adns
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hsdns";
description = "Asynchronous DNS Resolver";
license = stdenv.lib.licenses.lgpl3;

}) {inherit (pkgs) adns;};
"hsebaysdk" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-types
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "hsebaysdk";
version = "0.4.0.0";
sha256 = "0738d0df113b15bb9148ecbe02f0a34562c557d8f64b65065122925e29df8901";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-types
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/creichert/hsebaysdk";
description = "Haskell eBay SDK";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsemail" = callPackage
({
  mkDerivation
, base
, mtl
, old-time
, parsec
, stdenv
}:
mkDerivation {

pname = "hsemail";
version = "2";
sha256 = "f5f08a879444abd1f9a8a3e620d7fc83bc632ae3ba9b545bebdf58d5f4bfa8d9";
libraryHaskellDepends = [
base
mtl
old-time
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/hsemail#readme";
description = "Parsec parsers for the RFC2822 Internet Message format";
license = stdenv.lib.licenses.bsd3;

}) {};
"hset" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, tagged
, type-fun
}:
mkDerivation {

pname = "hset";
version = "2.2.0";
sha256 = "b8747a0826aeaca2ca814e7a334f9de5a02f36ac83faea5e1c32c8f6040bf130";
libraryHaskellDepends = [
base
deepseq
tagged
type-fun
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/s9gf4ult/hset";
description = "Primitive list with elements of unique types";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsexif" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, iconv
, stdenv
, text
, time
}:
mkDerivation {

pname = "hsexif";
version = "0.6.1.5";
sha256 = "2f12ea1060adb46c9afb74d32b82989b3883968403e21ff125f5cf9da869b06e";
libraryHaskellDepends = [
base
binary
bytestring
containers
iconv
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/emmanueltouzery/hsexif";
description = "EXIF handling library in pure Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsignal" = callPackage
({
  mkDerivation
, array
, base
, binary
, blas
, bytestring
, gsl
, hmatrix
, hmatrix-gsl
, hmatrix-gsl-stats
, hstatistics
, liblapack
, mtl
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "hsignal";
version = "0.2.7.5";
sha256 = "0f61f820556c431c3811643cc40e49a6d6c68075da1be0b39298a41c1c7119ac";
libraryHaskellDepends = [
array
base
binary
bytestring
hmatrix
hmatrix-gsl
hmatrix-gsl-stats
hstatistics
mtl
storable-complex
vector
];
librarySystemDepends = [
blas
liblapack
];
libraryPkgconfigDepends = [
gsl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hsignal";
description = "Signal processing and EEG data analysis";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) blas; inherit (pkgs) gsl; inherit (pkgs) liblapack;};
"hsinstall" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "hsinstall";
version = "1.6";
sha256 = "061090c68bdcdad5efef879c4fc0e4c67c26d34221c333fe4c9880216635c811";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
directory
filepath
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
description = "Install Haskell software";
license = stdenv.lib.licenses.isc;

}) {};
"hslogger" = callPackage
({
  mkDerivation
, base
, containers
, directory
, mtl
, network
, old-locale
, process
, stdenv
, time
, unix
}:
mkDerivation {

pname = "hslogger";
version = "1.2.10";
sha256 = "d7ca6e94a4aacb47a8dc30e3960ab8deff482d2ec9dca9a87b225e03e97e452b";
libraryHaskellDepends = [
base
containers
directory
mtl
network
old-locale
process
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://software.complete.org/hslogger";
description = "Versatile logging framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"hslua" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, exceptions
, fail
, lua5_3
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "hslua";
version = "0.9.5.2";
sha256 = "0e4d26f8a76cbfb219851f33d31417c4a3c8f193123367a0749f047103d8bbe5";
configureFlags = [
"-fsystem-lua"
];
libraryHaskellDepends = [
base
bytestring
containers
exceptions
fail
mtl
text
];
librarySystemDepends = [
lua5_3
];
doHaddock = false;
doCheck = false;
description = "A Lua language interpreter embedding in Haskell";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) lua5_3;};
"hslua-aeson" = callPackage
({
  mkDerivation
, aeson
, base
, hashable
, hslua
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "hslua-aeson";
version = "0.3.0.1";
sha256 = "5c90d514239f8764ebeb6697dc35fe0c6133244c3bdf684c236d9ea7161a9440";
revision = "1";
editedCabalFile = "02p97fsn7g6n0l5i9k0mrffqhw2a3y74vi0zaynsl224r4vwqsbp";
libraryHaskellDepends = [
aeson
base
hashable
hslua
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tarleb/hslua-aeson#readme";
description = "Allow aeson data types to be used with lua";
license = stdenv.lib.licenses.mit;

}) {};
"hslua-module-text" = callPackage
({
  mkDerivation
, base
, hslua
, stdenv
, text
}:
mkDerivation {

pname = "hslua-module-text";
version = "0.1.2.1";
sha256 = "aeb384f9743b76360f3779e44065fe297fb60f27519933f203b75bd8c2ba8e2d";
revision = "1";
editedCabalFile = "0vajlsd7y6pwa08635q0cx8z5c1c55bk7fvavw7g2vmyvxqjzx6n";
libraryHaskellDepends = [
base
hslua
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hslua/hslua-module-test";
description = "Lua module for text";
license = stdenv.lib.licenses.mit;

}) {};
"hsndfile" = callPackage
({
  mkDerivation
, base
, c2hs
, libsndfile
, stdenv
}:
mkDerivation {

pname = "hsndfile";
version = "0.8.0";
sha256 = "e97e7ef4c26b0dba9400d9a77d3d5001735f64094b93f9733443f58f7f568efb";
libraryHaskellDepends = [
base
];
librarySystemDepends = [
libsndfile
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Hsndfile";
description = "Haskell bindings for libsndfile";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) libsndfile;};
"hsndfile-vector" = callPackage
({
  mkDerivation
, base
, hsndfile
, stdenv
, vector
}:
mkDerivation {

pname = "hsndfile-vector";
version = "0.5.2";
sha256 = "2ffe11eb9a3e63aae24e8e06d2e04e8ca4a617ccf1238843cc71517a905b2895";
libraryHaskellDepends = [
base
hsndfile
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.org/haskellwiki/Hsndfile";
description = "Haskell bindings for libsndfile (Data.Vector interface)";
license = stdenv.lib.licenses.lgpl2;

}) {};
"hsp" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "hsp";
version = "0.10.0";
sha256 = "4ed3905a9db91001bde09f060290833af462e87e35476ab0def1579a1ff7ceab";
libraryHaskellDepends = [
base
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/nibro/hsp";
description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec" = callPackage
({
  mkDerivation
, base
, call-stack
, hspec-core
, hspec-discover
, hspec-expectations
, HUnit
, QuickCheck
, stdenv
, transformers
}:
mkDerivation {

pname = "hspec";
version = "2.5.1";
sha256 = "d47b588214dd9c2691a1dc65b27c90d7a505d06391cb616e9b3be77b464237c2";
libraryHaskellDepends = [
base
call-stack
hspec-core
hspec-discover
hspec-expectations
HUnit
QuickCheck
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "A Testing Framework for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-attoparsec" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, hspec-expectations
, stdenv
, text
}:
mkDerivation {

pname = "hspec-attoparsec";
version = "0.1.0.2";
sha256 = "ea7a8b3f2989abde8c8537cec1a2ae312e88df80086b9b01ed12e5324137fb64";
libraryHaskellDepends = [
attoparsec
base
bytestring
hspec-expectations
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/alpmestan/hspec-attoparsec";
description = "Utility functions for testing your attoparsec parsers with hspec";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-checkers" = callPackage
({
  mkDerivation
, base
, checkers
, hspec
, stdenv
}:
mkDerivation {

pname = "hspec-checkers";
version = "0.1.0.2";
sha256 = "e7db79dc527cf5b806723bbe3d511a074297976a0c7042968b9abc57f8337e99";
libraryHaskellDepends = [
base
checkers
hspec
];
doHaddock = false;
doCheck = false;
description = "Allows to use checkers properties from hspec";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-contrib" = callPackage
({
  mkDerivation
, base
, hspec-core
, HUnit
, stdenv
}:
mkDerivation {

pname = "hspec-contrib";
version = "0.4.0";
sha256 = "6f9e2201ee176c723f91ee932b7fc8b677e0d54376f897f52c133c8ca9860c16";
revision = "2";
editedCabalFile = "029h7dl49vlrhn62v8kgk8zdavjjc80ga1m8fwhl0pnmvnfkn7sq";
libraryHaskellDepends = [
base
hspec-core
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "Contributed functionality for Hspec";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-core" = callPackage
({
  mkDerivation
, ansi-terminal
, array
, base
, call-stack
, clock
, deepseq
, directory
, filepath
, hspec-expectations
, HUnit
, QuickCheck
, quickcheck-io
, random
, setenv
, stdenv
, stm
, tf-random
, transformers
}:
mkDerivation {

pname = "hspec-core";
version = "2.5.1";
sha256 = "e88e45fe851c976b4703a9c1e481c0e451abbcdcba7e40c9d26020e87b2edc79";
libraryHaskellDepends = [
ansi-terminal
array
base
call-stack
clock
deepseq
directory
filepath
hspec-expectations
HUnit
QuickCheck
quickcheck-io
random
setenv
stm
tf-random
transformers
];
doHaddock = false;
doCheck = false;
testTarget = "--test-option=--skip --test-option='Test.Hspec.Core.Runner.hspecResult runs specs in parallel'";
homepage = "http://hspec.github.io/";
description = "A Testing Framework for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-discover" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "hspec-discover";
version = "2.5.1";
sha256 = "3c187d35b400b1e22ba9f98d76c94dad8368e2a915ba087509316dd7252a7228";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "Automatically discover and run Hspec tests";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-expectations" = callPackage
({
  mkDerivation
, base
, call-stack
, HUnit
, stdenv
}:
mkDerivation {

pname = "hspec-expectations";
version = "0.8.2";
sha256 = "819607ea1faf35ce5be34be61c6f50f3389ea43892d56fb28c57a9f5d54fb4ef";
libraryHaskellDepends = [
base
call-stack
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/hspec-expectations#readme";
description = "Catchy combinators for HUnit";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-expectations-lifted" = callPackage
({
  mkDerivation
, base
, hspec-expectations
, stdenv
, transformers
}:
mkDerivation {

pname = "hspec-expectations-lifted";
version = "0.10.0";
sha256 = "22cdf1509b396fea2f53a0bb88dec3552f540d58cc60962a82970264c1e73828";
libraryHaskellDepends = [
base
hspec-expectations
transformers
];
doHaddock = false;
doCheck = false;
description = "A version of hspec-expectations generalized to MonadIO";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-expectations-pretty-diff" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, Diff
, hscolour
, HUnit
, nicify-lib
, stdenv
, text
}:
mkDerivation {

pname = "hspec-expectations-pretty-diff";
version = "0.7.2.4";
sha256 = "1bbfd524330be3cb0b27945556d01f48e3005e042ee475cdf6e441ba21b51b0a";
libraryHaskellDepends = [
ansi-terminal
base
Diff
hscolour
HUnit
nicify-lib
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
description = "Catchy combinators for HUnit";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-golden-aeson" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, directory
, filepath
, hspec
, QuickCheck
, quickcheck-arbitrary-adt
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "hspec-golden-aeson";
version = "0.5.1.0";
sha256 = "981a4de2b6bef9c688527f390ab22d3b2485435e86976f6420882ac008e17c34";
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
directory
filepath
hspec
QuickCheck
quickcheck-arbitrary-adt
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/plow-technologies/hspec-golden-aeson#readme";
description = "Use tests to monitor changes in Aeson serialization";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-megaparsec" = callPackage
({
  mkDerivation
, base
, containers
, hspec-expectations
, megaparsec
, stdenv
}:
mkDerivation {

pname = "hspec-megaparsec";
version = "1.0.0";
sha256 = "14961ae19fde7104f5099624195d0f21b4759e5e635e79d9e63f9f2affca4eb5";
libraryHaskellDepends = [
base
containers
hspec-expectations
megaparsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/hspec-megaparsec";
description = "Utility functions for testing Megaparsec parsers with Hspec";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-meta" = callPackage
({
  mkDerivation
, ansi-terminal
, array
, async
, base
, call-stack
, deepseq
, directory
, filepath
, hspec-expectations
, HUnit
, QuickCheck
, quickcheck-io
, random
, setenv
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "hspec-meta";
version = "2.4.6";
sha256 = "2b31671bfbfe5df0604516278bb1051db42b1e55dfe474ecd446a6630398bb62";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
array
async
base
call-stack
deepseq
directory
filepath
hspec-expectations
HUnit
QuickCheck
quickcheck-io
random
setenv
time
transformers
];
executableHaskellDepends = [
ansi-terminal
array
async
base
call-stack
deepseq
directory
filepath
hspec-expectations
HUnit
QuickCheck
quickcheck-io
random
setenv
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "A version of Hspec which is used to test Hspec itself";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-pg-transact" = callPackage
({
  mkDerivation
, base
, bytestring
, hspec
, pg-transact
, postgresql-simple
, resource-pool
, stdenv
, text
, tmp-postgres
}:
mkDerivation {

pname = "hspec-pg-transact";
version = "0.1.0.2";
sha256 = "a5ec2a978a730500f03c15d16eff7e207a4135ebc63afe4cbca7392ad5f01c0c";
libraryHaskellDepends = [
base
bytestring
hspec
pg-transact
postgresql-simple
resource-pool
text
tmp-postgres
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jfischoff/pg-transact-hspec#readme";
description = "Helpers for creating database tests with hspec and pg-transact";
license = stdenv.lib.licenses.bsd3;

}) {};
"hspec-smallcheck" = callPackage
({
  mkDerivation
, base
, call-stack
, hspec-core
, HUnit
, smallcheck
, stdenv
}:
mkDerivation {

pname = "hspec-smallcheck";
version = "0.5.0";
sha256 = "353c74dce3c42f17d012bea96b62e88ca21b0b24ac14d0daf1a5a08a4b02ce51";
libraryHaskellDepends = [
base
call-stack
hspec-core
HUnit
smallcheck
];
doHaddock = false;
doCheck = false;
homepage = "http://hspec.github.io/";
description = "SmallCheck support for the Hspec testing framework";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-wai" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, case-insensitive
, hspec-core
, hspec-expectations
, http-types
, QuickCheck
, stdenv
, text
, transformers
, wai
, wai-extra
}:
mkDerivation {

pname = "hspec-wai";
version = "0.9.0";
sha256 = "c8fe9ed0a1b77d6ad09b3d9c34e4dc65a2e5f1f0bbc6f7b8e2106d3d7556dfba";
libraryHaskellDepends = [
base
base-compat
bytestring
case-insensitive
hspec-core
hspec-expectations
http-types
QuickCheck
text
transformers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/hspec-wai#readme";
description = "Experimental Hspec support for testing WAI applications";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-wai-json" = callPackage
({
  mkDerivation
, aeson
, aeson-qq
, base
, bytestring
, case-insensitive
, hspec-wai
, stdenv
, template-haskell
}:
mkDerivation {

pname = "hspec-wai-json";
version = "0.9.0";
sha256 = "a1c5401fa7fc7ffc46950274702a0ef30045568c2d2f5bc528cd6bf26ae28085";
libraryHaskellDepends = [
aeson
aeson-qq
base
bytestring
case-insensitive
hspec-wai
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/hspec-wai#readme";
description = "Testing JSON APIs with hspec-wai";
license = stdenv.lib.licenses.mit;

}) {};
"hspec-webdriver" = callPackage
({
  mkDerivation
, aeson
, base
, data-default
, hashable
, hspec
, hspec-core
, HUnit
, lifted-base
, stdenv
, stm
, text
, transformers
, unordered-containers
, webdriver
}:
mkDerivation {

pname = "hspec-webdriver";
version = "1.2.0";
sha256 = "05d0f818de7f21e3dcb10860f60fe53b393fad75892ec1c520815dd53a0385c8";
libraryHaskellDepends = [
aeson
base
data-default
hashable
hspec
hspec-core
HUnit
lifted-base
stm
text
transformers
unordered-containers
webdriver
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
description = "Write end2end web application tests using webdriver and hspec";
license = stdenv.lib.licenses.mit;

}) {};
"hsshellscript" = callPackage
({
  mkDerivation
, base
, c2hs
, directory
, parsec
, random
, stdenv
, unix
}:
mkDerivation {

pname = "hsshellscript";
version = "3.4.5";
sha256 = "7dbfd595832e4ecd7d12d8b36ce8a82192d79a764631c98071440a7daa7ec634";
libraryHaskellDepends = [
base
directory
parsec
random
unix
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "http://www.volker-wysk.de/hsshellscript/";
description = "Haskell for Unix shell scripting tasks";
license = "LGPL";

}) {};
"hstatistics" = callPackage
({
  mkDerivation
, array
, base
, hmatrix
, hmatrix-gsl-stats
, random
, stdenv
, vector
}:
mkDerivation {

pname = "hstatistics";
version = "0.3";
sha256 = "7af3f698d1bded8690b1ec05017ae05310fad1f2d25ec138fb72994b0812eeec";
libraryHaskellDepends = [
array
base
hmatrix
hmatrix-gsl-stats
random
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/hstatistics";
description = "Statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"hstatsd" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, network
, stdenv
, text
}:
mkDerivation {

pname = "hstatsd";
version = "0.1";
sha256 = "446779594257c0fa02d5271c997ee0c22f74f7636d89e34394ad87e5bd285824";
libraryHaskellDepends = [
base
bytestring
mtl
network
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/hstatsd";
description = "Quick and dirty statsd interface";
license = stdenv.lib.licenses.publicDomain;

}) {};
"hsx-jmacro" = callPackage
({
  mkDerivation
, base
, hsp
, jmacro
, mtl
, stdenv
, text
, wl-pprint-text
}:
mkDerivation {

pname = "hsx-jmacro";
version = "7.3.8.1";
sha256 = "f1903d80017381408ae3f7b9d7b2e4d8c193d72ede96a33ce68fe7e276f1af59";
libraryHaskellDepends = [
base
hsp
jmacro
mtl
text
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "hsp+jmacro support";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsyslog" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, stdenv
}:
mkDerivation {

pname = "hsyslog";
version = "5.0.1";
sha256 = "86de0d8820a6cb7fe166e046ae00c1bbe37d27885cd3aa701deaca8fdf646016";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/hsyslog";
description = "FFI interface to syslog(3) from POSIX.1-2001";
license = stdenv.lib.licenses.bsd3;

}) {};
"hsyslog-udp" = callPackage
({
  mkDerivation
, base
, bytestring
, hsyslog
, network
, stdenv
, text
, time
, unix
}:
mkDerivation {

pname = "hsyslog-udp";
version = "0.2.2";
sha256 = "a4c1240ee0ef72a65e3c67332809f8077ef3c7afb7e02170ba562b2e876528bb";
libraryHaskellDepends = [
base
bytestring
hsyslog
network
text
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ThoughtLeadr/hsyslog-udp";
description = "Log to syslog over a network via UDP";
license = stdenv.lib.licenses.bsd3;

}) {};
"htaglib" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, taglib
, text
, transformers
}:
mkDerivation {

pname = "htaglib";
version = "1.1.1";
sha256 = "238f11b9018946760a1a22cb7bfab5abe332e4798b20dfeaecf10f3202ff9928";
revision = "1";
editedCabalFile = "0znih19z9ly4m1nadwkalq28xz0vy6pc0yyamyz2fz5s5nv69lr0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
text
transformers
];
librarySystemDepends = [
taglib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/htaglib";
description = "Bindings to TagLib, audio meta-data library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) taglib;};
"html" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "html";
version = "1.0.1.2";
sha256 = "0c35495ea33d65e69c69bc7441ec8e1af69fbb43433c2aa3406c0a13a3ab3061";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "HTML combinator library";
license = stdenv.lib.licenses.bsd3;

}) {};
"html-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, containers
, resourcet
, stdenv
, tagstream-conduit
, text
, transformers
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "html-conduit";
version = "1.3.0";
sha256 = "78bf09e175079bdd0f0dd363b3a4b2d32d095cc09413ca9d8069bc527809ee96";
libraryHaskellDepends = [
base
bytestring
conduit
containers
resourcet
tagstream-conduit
text
transformers
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/xml";
description = "Parse HTML documents using xml-conduit datatypes";
license = stdenv.lib.licenses.mit;

}) {};
"html-email-validate" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
, text
}:
mkDerivation {

pname = "html-email-validate";
version = "0.2.0.0";
sha256 = "3d2a3ec75b638cec71df57512473052d485dc118aec4662d5a8dae5e95aa6daf";
libraryHaskellDepends = [
attoparsec
base
text
];
doHaddock = false;
doCheck = false;
description = "Validating an email address against HTML standard";
license = stdenv.lib.licenses.bsd3;

}) {};
"html-entity-map" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "html-entity-map";
version = "0.1.0.0";
sha256 = "983600c33e8515e6ca31742d25490fb5a7be02503331963621b0ba5cd70d344c";
revision = "2";
editedCabalFile = "1ycg39ys6zzfi6j88l03gdyyzwjpfzzlzy7dbs6i8p1l70ywizfr";
libraryHaskellDepends = [
base
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/html-entity-map";
description = "Map from HTML5 entity names to the corresponding Unicode text";
license = stdenv.lib.licenses.bsd3;

}) {};
"htoml" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, old-locale
, parsec
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "htoml";
version = "1.0.0.3";
sha256 = "08f8d88a326f80fb55c0abb9431941c3a2a30f2d58f49c94349961ceeb4c856f";
libraryHaskellDepends = [
aeson
base
containers
old-locale
parsec
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cies/htoml";
description = "Parser for TOML files";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-api-data" = callPackage
({
  mkDerivation
, attoparsec
, attoparsec-iso8601
, base
, bytestring
, Cabal
, cabal-doctest
, containers
, hashable
, http-types
, stdenv
, text
, time
, time-locale-compat
, unordered-containers
, uri-bytestring
, uuid-types
}:
mkDerivation {

pname = "http-api-data";
version = "0.3.7.2";
sha256 = "68516edab1c01d083a9f08baa9cb78adb60cb3f6e645f1096d02879a68bf6c82";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
attoparsec
attoparsec-iso8601
base
bytestring
containers
hashable
http-types
text
time
time-locale-compat
unordered-containers
uri-bytestring
uuid-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fizruk/http-api-data";
description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-client" = callPackage
({
  mkDerivation
, array
, base
, blaze-builder
, bytestring
, case-insensitive
, containers
, cookie
, deepseq
, exceptions
, filepath
, ghc-prim
, http-types
, memory
, mime-types
, network
, network-uri
, random
, stdenv
, stm
, streaming-commons
, text
, time
, transformers
}:
mkDerivation {

pname = "http-client";
version = "0.5.12.1";
sha256 = "4b5116324d217f0498d258d37135a52f3e69103d3a951b0999618b263c9bd63e";
revision = "1";
editedCabalFile = "03x2ms2nl3jjm2sfk8dwy02v920czhmdlkyfy3kqc1sg4nw2134y";
libraryHaskellDepends = [
array
base
blaze-builder
bytestring
case-insensitive
containers
cookie
deepseq
exceptions
filepath
ghc-prim
http-types
memory
mime-types
network
network-uri
random
stm
streaming-commons
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/http-client";
description = "An HTTP client engine";
license = stdenv.lib.licenses.mit;

}) {};
"http-client-openssl" = callPackage
({
  mkDerivation
, base
, HsOpenSSL
, http-client
, network
, stdenv
}:
mkDerivation {

pname = "http-client-openssl";
version = "0.2.1.1";
sha256 = "24ee231322d25ea17ad9503c9460f5b9c20e3ff11320e3abcac6b13e4e157a9c";
libraryHaskellDepends = [
base
HsOpenSSL
http-client
network
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/http-client";
description = "http-client backend using the OpenSSL library";
license = stdenv.lib.licenses.mit;

}) {};
"http-client-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, connection
, containers
, cryptonite
, data-default-class
, exceptions
, http-client
, http-types
, memory
, network
, network-uri
, stdenv
, text
, tls
, transformers
}:
mkDerivation {

pname = "http-client-tls";
version = "0.3.5.3";
sha256 = "471abf8f29a909f40b21eab26a410c0e120ae12ce337512a61dae9f52ebb4362";
libraryHaskellDepends = [
base
bytestring
case-insensitive
connection
containers
cryptonite
data-default-class
exceptions
http-client
http-types
memory
network
network-uri
text
tls
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/http-client";
description = "http-client backend using the connection package and tls library";
license = stdenv.lib.licenses.mit;

}) {};
"http-common" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, directory
, mtl
, network
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "http-common";
version = "0.8.2.0";
sha256 = "2915e77b0d000a617d4c1304fdc46f45b70acc0942670066a95b2c8d4e504593";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
directory
mtl
network
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://research.operationaldynamics.com/projects/http-streams/";
description = "Common types for HTTP clients and servers";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-conduit" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, conduit-extra
, http-client
, http-client-tls
, http-types
, mtl
, resourcet
, stdenv
, transformers
, unliftio-core
}:
mkDerivation {

pname = "http-conduit";
version = "2.3.1";
sha256 = "8251c3f0ab2a42b998bda4aaf2805e8c3325f0084462502661ce964f671f7859";
libraryHaskellDepends = [
aeson
base
bytestring
conduit
conduit-extra
http-client
http-client-tls
http-types
mtl
resourcet
transformers
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/http-conduit";
description = "HTTP client package with conduit interface and HTTPS support";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-date" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, bytestring
, stdenv
, time
}:
mkDerivation {

pname = "http-date";
version = "0.0.7";
sha256 = "cef9dc7e0fb512bd0c665b208b0687c1d939dc0a3d1f8fc513f7636c88d1ffc2";
libraryHaskellDepends = [
array
attoparsec
base
bytestring
time
];
doHaddock = false;
doCheck = false;
description = "HTTP Date parser/formatter";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-link-header" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, errors
, http-api-data
, network-uri
, stdenv
, text
}:
mkDerivation {

pname = "http-link-header";
version = "1.0.3";
sha256 = "59bd2db4e7d14b6f7ce86848af5e38b4bd2e9963e9ffe5068c7b1a710dbdd7fe";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
errors
http-api-data
network-uri
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/http-link-header";
description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
license = stdenv.lib.licenses.publicDomain;

}) {};
"http-media" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, stdenv
, utf8-string
}:
mkDerivation {

pname = "http-media";
version = "0.7.1.2";
sha256 = "fe93d57a5bfcaf3acf6a0b6f643c179afb69a91f81057f149c5e89e54dcb7b07";
revision = "1";
editedCabalFile = "0lxlig3mhw52ixqq65c9fzawviia2fl00d7hn1diny964h8klwgc";
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/zmthy/http-media";
description = "Processing HTTP Content-Type and Accept headers";
license = stdenv.lib.licenses.mit;

}) {};
"http-reverse-proxy" = callPackage
({
  mkDerivation
, async
, base
, blaze-builder
, bytestring
, case-insensitive
, conduit
, conduit-extra
, containers
, data-default-class
, http-client
, http-types
, lifted-base
, monad-control
, network
, resourcet
, stdenv
, streaming-commons
, text
, transformers
, wai
, wai-logger
, word8
}:
mkDerivation {

pname = "http-reverse-proxy";
version = "0.5.0.1";
sha256 = "5e50ad82e954c2fbb99fb43f7b961bb86dcfebc8a789d0fe3c6a9053ae7e84ba";
libraryHaskellDepends = [
async
base
blaze-builder
bytestring
case-insensitive
conduit
conduit-extra
containers
data-default-class
http-client
http-types
lifted-base
monad-control
network
resourcet
streaming-commons
text
transformers
wai
wai-logger
word8
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/http-reverse-proxy";
description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-streams" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, Cabal
, case-insensitive
, directory
, HsOpenSSL
, http-common
, io-streams
, mtl
, network
, network-uri
, openssl-streams
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "http-streams";
version = "0.8.6.1";
sha256 = "b8d71f2753ac7cda35b4f03ec64e4b3c7cc4ec5c2435b5e5237fe863cb687da3";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
directory
HsOpenSSL
http-common
io-streams
mtl
network
network-uri
openssl-streams
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/afcowie/http-streams/";
description = "An HTTP client using io-streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"http-types" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, case-insensitive
, stdenv
, text
}:
mkDerivation {

pname = "http-types";
version = "0.12.1";
sha256 = "3fa7715428f375b6aa4998ef17822871d7bfe1b55ebd9329efbacd4dad9969f3";
libraryHaskellDepends = [
array
base
bytestring
case-insensitive
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aristidb/http-types";
description = "Generic HTTP types for Haskell (for both client and server code)";
license = stdenv.lib.licenses.bsd3;

}) {};
"http2" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, bytestring-builder
, case-insensitive
, containers
, psqueues
, stdenv
, stm
}:
mkDerivation {

pname = "http2";
version = "1.6.3";
sha256 = "61620eca0f57875a6a9bd24f9cc04c301b5c3c668bf98f85e9989aad5d069c43";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
bytestring
bytestring-builder
case-insensitive
containers
psqueues
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kazu-yamamoto/http2";
description = "HTTP/2 library including frames, priority queues and HPACK";
license = stdenv.lib.licenses.bsd3;

}) {};
"human-readable-duration" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "human-readable-duration";
version = "0.2.0.3";
sha256 = "93f3a91a2994588728ae757dcca5104e18a570b3591773aa7f03c524c97599da";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/human-readable-duration#readme";
description = "Provide duration helper";
license = stdenv.lib.licenses.bsd3;

}) {};
"hunit-dejafu" = callPackage
({
  mkDerivation
, base
, dejafu
, exceptions
, HUnit
, stdenv
}:
mkDerivation {

pname = "hunit-dejafu";
version = "1.1.0.3";
sha256 = "74cde67dfd17af63238553c1c8c494adde7bbc69e353d49057b2817b0edbf7a3";
libraryHaskellDepends = [
base
dejafu
exceptions
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Deja Fu support for the HUnit test framework";
license = stdenv.lib.licenses.mit;

}) {};
"hvect" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hvect";
version = "0.4.0.0";
sha256 = "cb50ef1a7f189f8c217a7d0d55b5568b2fa9bbe415b14ce114a93d2e1d5e30b6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/hvect";
description = "Simple strict heterogeneous lists";
license = stdenv.lib.licenses.mit;

}) {};
"hw-balancedparens" = callPackage
({
  mkDerivation
, base
, hw-bits
, hw-excess
, hw-prim
, hw-rankselect-base
, stdenv
, storable-tuple
, vector
}:
mkDerivation {

pname = "hw-balancedparens";
version = "0.2.0.1";
sha256 = "99d164e1f5b1fc50bfdcc887b1ef5f6cdfc42f702b847d06f31db5dd04b5e8cd";
libraryHaskellDepends = [
base
hw-bits
hw-excess
hw-prim
hw-rankselect-base
storable-tuple
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-balancedparens#readme";
description = "Balanced parentheses";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-bits" = callPackage
({
  mkDerivation
, base
, bytestring
, hw-int
, hw-prim
, hw-string-parse
, safe
, stdenv
, vector
}:
mkDerivation {

pname = "hw-bits";
version = "0.7.0.2";
sha256 = "38621e0166bac49c1f68f85122c3fbfcadc6a3c447dd7f48ff1020151ad10ae8";
revision = "1";
editedCabalFile = "1gvv5ryx1lrgb3hk362fkqz98rggdxfmjp7fy0id7mqvdz6lk2av";
libraryHaskellDepends = [
base
bytestring
hw-int
hw-prim
hw-string-parse
safe
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-bits#readme";
description = "Bit manipulation";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-conduit" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, conduit
, conduit-combinators
, stdenv
, time
, word8
}:
mkDerivation {

pname = "hw-conduit";
version = "0.2.0.3";
sha256 = "6a20170fff38bb940121ecc922aa4cdb979b7869cfab6a0b18f00476eda3dca5";
revision = "1";
editedCabalFile = "0zr1r7px2qgpf5fgq18l6ziy2xaz773qbxc87cp84x0vpwas0yg7";
libraryHaskellDepends = [
array
base
bytestring
conduit
conduit-combinators
time
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-conduit#readme";
description = "Conduits for tokenizing streams";
license = stdenv.lib.licenses.mit;

}) {};
"hw-diagnostics" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hw-diagnostics";
version = "0.0.0.5";
sha256 = "5ceaec01c446c5a507e889f514201e4739ea6f1cc22a4c68894bb023257bd931";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-diagnostics#readme";
description = "Diagnostics library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-excess" = callPackage
({
  mkDerivation
, base
, hw-bits
, hw-prim
, hw-rankselect-base
, safe
, stdenv
, storable-record
, vector
}:
mkDerivation {

pname = "hw-excess";
version = "0.2.0.0";
sha256 = "f17a4b6098f5b0337d00d77025bbcbf2c0736576bcb36eeeec1aff3b00b561a9";
libraryHaskellDepends = [
base
hw-bits
hw-prim
hw-rankselect-base
safe
storable-record
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-excess#readme";
description = "Excess";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-fingertree" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "hw-fingertree";
version = "0.1.0.1";
sha256 = "c38d67decbed224e6b3e9c1648b54adfe55297209bb5395e10dc94104c5094da";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-works/hw-fingertree#readme";
description = "Generic finger-tree structure, with example instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-fingertree-strict" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "hw-fingertree-strict";
version = "0.1.1.1";
sha256 = "1127b7cff38319a292ca6d57c8b7a1996bb80b90e86488a0f82a76eba9f91268";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-works/hw-fingertree-strict#readme";
description = "Generic strict finger-tree structure";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-hedgehog" = callPackage
({
  mkDerivation
, base
, hedgehog
, stdenv
, vector
}:
mkDerivation {

pname = "hw-hedgehog";
version = "0.1.0.1";
sha256 = "26177ea0748f5d85e70e1759ea6a88af15e5bfdbf0a174a80e7f28607addcf3a";
libraryHaskellDepends = [
base
hedgehog
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/githubuser/hw-hedgehog#readme";
description = "Extra hedgehog functionality";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-hspec-hedgehog" = callPackage
({
  mkDerivation
, base
, call-stack
, hedgehog
, hspec
, HUnit
, stdenv
, transformers
}:
mkDerivation {

pname = "hw-hspec-hedgehog";
version = "0.1.0.5";
sha256 = "d3d17aadf474e82bb2d90c2d48cadf18724cbeab08e010bdf250591ce9c5f64f";
libraryHaskellDepends = [
base
call-stack
hedgehog
hspec
HUnit
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-works/hw-hspec-hedgehog#readme";
description = "Interoperability between hspec and hedgehog";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-int" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hw-int";
version = "0.0.0.3";
sha256 = "8336a5111638d3298266c9a1458233a09798bfa6d558219d4fe3bdd35d8d4a3f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-int#readme";
description = "Integers";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-json" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, array
, attoparsec
, base
, bytestring
, conduit
, containers
, criterion
, dlist
, hw-balancedparens
, hw-bits
, hw-conduit
, hw-diagnostics
, hw-mquery
, hw-parser
, hw-prim
, hw-rankselect
, hw-rankselect-base
, mmap
, mono-traversable
, resourcet
, stdenv
, text
, vector
, word8
}:
mkDerivation {

pname = "hw-json";
version = "0.6.0.0";
sha256 = "bb8e20e8a035279ee398c6d9162cda3f965d4f96e39c1d363be2456b1feb41d9";
revision = "1";
editedCabalFile = "18w22jnsjv8f4k2q3548vdzl80p4r80pn96rnp69f6l36ibmx771";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
array
attoparsec
base
bytestring
conduit
containers
dlist
hw-balancedparens
hw-bits
hw-conduit
hw-mquery
hw-parser
hw-prim
hw-rankselect
hw-rankselect-base
mmap
mono-traversable
resourcet
text
vector
word8
];
executableHaskellDepends = [
ansi-wl-pprint
array
attoparsec
base
bytestring
conduit
containers
criterion
dlist
hw-balancedparens
hw-bits
hw-conduit
hw-diagnostics
hw-mquery
hw-parser
hw-prim
hw-rankselect
hw-rankselect-base
mmap
mono-traversable
resourcet
text
vector
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-json#readme";
description = "Memory efficient JSON parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-mquery" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, dlist
, stdenv
}:
mkDerivation {

pname = "hw-mquery";
version = "0.1.0.1";
sha256 = "724aa5b0490b57a89fb71b7042a3770f7978a4c975aa3d1b671576b0e83e113d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
base
dlist
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-mquery#readme";
description = "Conduits for tokenizing streams";
license = stdenv.lib.licenses.mit;

}) {};
"hw-parser" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, hw-prim
, mono-traversable
, stdenv
, text
}:
mkDerivation {

pname = "hw-parser";
version = "0.0.0.3";
sha256 = "dd8417c76ef5da89df2842b42767d825815ec3594c8e80e28e96570d8046c6f2";
libraryHaskellDepends = [
attoparsec
base
bytestring
hw-prim
mono-traversable
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-parser#readme";
description = "Simple parser support";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-prim" = callPackage
({
  mkDerivation
, base
, bytestring
, mmap
, stdenv
, vector
}:
mkDerivation {

pname = "hw-prim";
version = "0.5.0.5";
sha256 = "93c678b816b122aafe2669d7f3fb24f4d66d3332015b8607a277a3cb9a9381ae";
revision = "1";
editedCabalFile = "0i40x22z95zdzhnz0kz8nlaajdykviplgyyxh4v21z0i69xqlxgr";
libraryHaskellDepends = [
base
bytestring
mmap
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-prim#readme";
description = "Primitive functions and data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-rankselect" = callPackage
({
  mkDerivation
, base
, deepseq
, directory
, hw-balancedparens
, hw-bits
, hw-prim
, hw-rankselect-base
, mmap
, stdenv
, vector
}:
mkDerivation {

pname = "hw-rankselect";
version = "0.10.0.3";
sha256 = "aa1d079f56064c649bc820219b55ae16d723faed663283ab73760db4f2f514cb";
revision = "1";
editedCabalFile = "1rkni89h3sq02y03phb2bgx4yrx4gly9mzan6r4ziph0qayf09wf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
deepseq
hw-balancedparens
hw-bits
hw-prim
hw-rankselect-base
vector
];
executableHaskellDepends = [
base
directory
hw-bits
hw-prim
hw-rankselect-base
mmap
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-rankselect#readme";
description = "Rank-select";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-rankselect-base" = callPackage
({
  mkDerivation
, base
, hw-bits
, hw-int
, hw-prim
, hw-string-parse
, safe
, stdenv
, vector
}:
mkDerivation {

pname = "hw-rankselect-base";
version = "0.2.0.2";
sha256 = "de4f88db97ae2f477c3ca1ec18947a086b10a6f4815f0de0a2686d190fbae27a";
libraryHaskellDepends = [
base
hw-bits
hw-int
hw-prim
hw-string-parse
safe
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-rankselect-base#readme";
description = "Rank-select base";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-string-parse" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hw-string-parse";
version = "0.0.0.4";
sha256 = "64a1ebf8d311e255f293c40febfb346da23a55a454b67f2d5e33de1cb7e9f2b7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-string-parse#readme";
description = "String parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"hw-succinct" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, conduit
, containers
, hw-balancedparens
, hw-bits
, hw-prim
, hw-rankselect
, hw-rankselect-base
, mmap
, mono-traversable
, stdenv
, text
, vector
, word8
}:
mkDerivation {

pname = "hw-succinct";
version = "0.1.0.1";
sha256 = "002c578c1ff7a33cbef089b2a943218777c14125629f6bf63dea9e7c8e3749db";
libraryHaskellDepends = [
attoparsec
base
bytestring
conduit
containers
hw-balancedparens
hw-bits
hw-prim
hw-rankselect
hw-rankselect-base
mmap
mono-traversable
text
vector
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-succinct#readme";
description = "Succint datastructures";
license = stdenv.lib.licenses.mit;

}) {};
"hw-xml" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, array
, attoparsec
, base
, bytestring
, cereal
, conduit
, containers
, deepseq
, ghc-prim
, hw-balancedparens
, hw-bits
, hw-conduit
, hw-parser
, hw-prim
, hw-rankselect
, hw-rankselect-base
, lens
, mtl
, resourcet
, stdenv
, transformers
, vector
, word8
}:
mkDerivation {

pname = "hw-xml";
version = "0.1.0.3";
sha256 = "27a9a8212331c8c91d4a66baf8f0785c4ce90c087c02359bd16dfaeabc627e97";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
ansi-wl-pprint
array
attoparsec
base
bytestring
cereal
conduit
containers
deepseq
ghc-prim
hw-balancedparens
hw-bits
hw-conduit
hw-parser
hw-prim
hw-rankselect
hw-rankselect-base
lens
mtl
resourcet
transformers
vector
word8
];
executableHaskellDepends = [
base
bytestring
hw-balancedparens
hw-bits
hw-prim
hw-rankselect
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell-works/hw-xml#readme";
description = "Conduits for tokenizing streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"hweblib" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "hweblib";
version = "0.6.3";
sha256 = "1e8ee12baac496d56831935a60e78f54eb43d2b7268bf7d31acb6b9a63e9b50d";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aycanirican/hweblib";
description = "Haskell Web Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"hworker" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, hedis
, stdenv
, text
, time
, uuid
}:
mkDerivation {

pname = "hworker";
version = "0.1.0.1";
sha256 = "34cbcc4db8f190ab0dc02a072adcf1fc75b7beab7e545982872bf265a1223f1d";
revision = "1";
editedCabalFile = "0w2bpvfr68n2qipvr8gc5096dain3g2536m4n9kqx1fahf12mwy5";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
hedis
text
time
uuid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dbp/hworker";
description = "A reliable at-least-once job queue built on top of redis";
license = stdenv.lib.licenses.isc;

}) {};
"hxt" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, directory
, filepath
, hxt-charproperties
, hxt-regex-xmlschema
, hxt-unicode
, mtl
, network-uri
, parsec
, stdenv
}:
mkDerivation {

pname = "hxt";
version = "9.3.1.16";
sha256 = "0d55e35cc718891d0987b7c8e6c43499efa727c68bc92e88e8b99461dff403e3";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
directory
filepath
hxt-charproperties
hxt-regex-xmlschema
hxt-unicode
mtl
network-uri
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "A collection of tools for processing XML with Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-charproperties" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "hxt-charproperties";
version = "9.2.0.1";
sha256 = "e46614d6bf0390b2a6a1aeeb0771e6d366944da40fb21c12c2f8a94d1f47b4d6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "Character properties and classes for XML and Unicode";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-css" = callPackage
({
  mkDerivation
, base
, hxt
, parsec
, split
, stdenv
}:
mkDerivation {

pname = "hxt-css";
version = "0.1.0.3";
sha256 = "0244fc145d5923df0522ad80949e9b221b01a028c755ebfc4740339881ef65b7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
hxt
parsec
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hxt-css";
description = "CSS selectors for HXT";
license = stdenv.lib.licenses.bsd3;

}) {};
"hxt-curl" = callPackage
({
  mkDerivation
, base
, bytestring
, curl
, hxt
, parsec
, stdenv
}:
mkDerivation {

pname = "hxt-curl";
version = "9.1.1.1";
sha256 = "cdc1cc8bf9b8699cabdee965c9737d497c199b5cf82eabc66a5fe3f2ffb3c5ea";
libraryHaskellDepends = [
base
bytestring
curl
hxt
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "LibCurl interface for HXT";
license = "unknown";

}) {};
"hxt-expat" = callPackage
({
  mkDerivation
, base
, bytestring
, hexpat
, hxt
, stdenv
}:
mkDerivation {

pname = "hxt-expat";
version = "9.1.1";
sha256 = "10d9c43c20c82e879fbc06944fcfed373f8b43bd3e0a44f9c712db30a27022d6";
libraryHaskellDepends = [
base
bytestring
hexpat
hxt
];
doHaddock = false;
doCheck = false;
homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
description = "Expat parser for HXT";
license = "unknown";

}) {};
"hxt-http" = callPackage
({
  mkDerivation
, base
, bytestring
, HTTP
, hxt
, network
, network-uri
, parsec
, stdenv
}:
mkDerivation {

pname = "hxt-http";
version = "9.1.5.2";
sha256 = "6fa19d03991d53c34f4525a4fdfaafde56dd48459093b4502832a1fdd9dfdd0b";
libraryHaskellDepends = [
base
bytestring
HTTP
hxt
network
network-uri
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "Interface to native Haskell HTTP package HTTP";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-pickle-utils" = callPackage
({
  mkDerivation
, base
, hxt
, mtl
, stdenv
}:
mkDerivation {

pname = "hxt-pickle-utils";
version = "0.1.0.3";
sha256 = "9ddba19f27d9d8c155012da4dd9598fb318cab862da10f14ee4bc3eb5321a9c5";
revision = "3";
editedCabalFile = "0d5fg718y7xzw76ip33q0w1liqk70q9074qkd198mjnijxjcrkf3";
libraryHaskellDepends = [
base
hxt
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/silkapp/hxt-pickle-utils";
description = "Utility functions for using HXT picklers";
license = stdenv.lib.licenses.bsd3;

}) {};
"hxt-regex-xmlschema" = callPackage
({
  mkDerivation
, base
, bytestring
, hxt-charproperties
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "hxt-regex-xmlschema";
version = "9.2.0.3";
sha256 = "f4743ba65498d6001cdfcf5cbc3317d4bc43941be5c7030b60beb83408c892b0";
libraryHaskellDepends = [
base
bytestring
hxt-charproperties
parsec
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
description = "A regular expression library for W3C XML Schema regular expressions";
license = stdenv.lib.licenses.mit;

}) {};
"hxt-tagsoup" = callPackage
({
  mkDerivation
, base
, hxt
, hxt-charproperties
, hxt-unicode
, stdenv
, tagsoup
}:
mkDerivation {

pname = "hxt-tagsoup";
version = "9.1.4";
sha256 = "d77b290d63acf0ac8e5a07c5c69753f9984b97e0c9d2c0befadd7dd5b144b283";
libraryHaskellDepends = [
base
hxt
hxt-charproperties
hxt-unicode
tagsoup
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "TagSoup parser for HXT";
license = "unknown";

}) {};
"hxt-unicode" = callPackage
({
  mkDerivation
, base
, hxt-charproperties
, stdenv
}:
mkDerivation {

pname = "hxt-unicode";
version = "9.0.2.4";
sha256 = "7b5823f3bd94b57022d9d84ab3555303653c5121eaaef2ee1fd4918f3c434466";
libraryHaskellDepends = [
base
hxt-charproperties
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/UweSchmidt/hxt";
description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
license = stdenv.lib.licenses.mit;

}) {};
"hybrid-vectors" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "hybrid-vectors";
version = "0.2.2";
sha256 = "41c6c371df64b9083354e66101ad8c92f87458474fed2a149e4632db644f86d7";
libraryHaskellDepends = [
base
deepseq
primitive
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/hybrid-vectors";
description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"hyperloglog" = callPackage
({
  mkDerivation
, approximate
, base
, binary
, bits
, bytes
, Cabal
, cabal-doctest
, cereal
, cereal-vector
, comonad
, deepseq
, distributive
, hashable
, lens
, reflection
, safecopy
, semigroupoids
, semigroups
, siphash
, stdenv
, tagged
, vector
}:
mkDerivation {

pname = "hyperloglog";
version = "0.4.2";
sha256 = "f5b83cfcc2c9d1e40e04bbc9724428b2655c3b54b26beef714c98dabee5f1048";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
approximate
base
binary
bits
bytes
cereal
cereal-vector
comonad
deepseq
distributive
hashable
lens
reflection
safecopy
semigroupoids
semigroups
siphash
tagged
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/analytics/hyperloglog";
description = "An approximate streaming (constant space) unique object counter";
license = stdenv.lib.licenses.bsd3;

}) {};
"hyphenation" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cabal-doctest
, containers
, stdenv
, unordered-containers
, zlib
}:
mkDerivation {

pname = "hyphenation";
version = "0.7.1";
sha256 = "a25c5073f42896ccf81ff5936f3a42f290730f61da7f225b126ad22ff601b1c0";
revision = "2";
editedCabalFile = "1pbsq3y0f0j6cl17narqrwxwwpxsvwgazfbqa5k08m2n0s885pfk";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
bytestring
containers
unordered-containers
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/hyphenation";
description = "Configurable Knuth-Liang hyphenation";
license = stdenv.lib.licenses.bsd2;

}) {};
"iconv" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "iconv";
version = "0.4.1.3";
sha256 = "36425168e3314bc83ba5ee95152872d52e94ee0f9503f3591f84d458e005b554";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "String encoding conversion";
license = stdenv.lib.licenses.bsd3;

}) {};
"identicon" = callPackage
({
  mkDerivation
, base
, bytestring
, JuicyPixels
, stdenv
}:
mkDerivation {

pname = "identicon";
version = "0.2.2";
sha256 = "3679b4fcc0a5bcc93b6ed2009f43e3ec87bf9549aee3eef182f7403d0c10f263";
revision = "3";
editedCabalFile = "0vya6zm3nnbdv3wmj3dwqwwjgsagql8q17078knhjddv2lm8m49q";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
JuicyPixels
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/identicon";
description = "Flexible generation of identicons";
license = stdenv.lib.licenses.bsd3;

}) {};
"ieee754" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ieee754";
version = "0.8.0";
sha256 = "0e2dff9c37f59acf5c64f978ec320005e9830f276f9f314e4bfed3f482289ad1";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/patperry/hs-ieee754";
description = "Utilities for dealing with IEEE floating point numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"if" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "if";
version = "0.1.0.0";
sha256 = "28f673e867dbe0f51324d97fcb7884673a34912593746520a470116b167a141d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/if";
description = "(?) and (?>) conditional operator";
license = stdenv.lib.licenses.bsd3;

}) {};
"iff" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "iff";
version = "0.0.6";
sha256 = "6b8845808481307e2d374fd8d17e82a5de1284e612cf8ade27db8785e9e12837";
libraryHaskellDepends = [
base
binary
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/iff/";
description = "Constructing and dissecting IFF files";
license = "GPL";

}) {};
"ignore" = callPackage
({
  mkDerivation
, base
, directory
, Glob
, mtl
, path
, pcre-heavy
, stdenv
, text
}:
mkDerivation {

pname = "ignore";
version = "0.1.1.0";
sha256 = "aaf481fdab8bdc5a506e4726eadf56697726f82086a3cd0439526b9442c73575";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
Glob
mtl
path
pcre-heavy
text
];
executableHaskellDepends = [
base
directory
path
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/ignore";
description = "Handle ignore files of different VCSes";
license = stdenv.lib.licenses.bsd3;

}) {};
"ihaskell" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, cereal
, cmdargs
, containers
, directory
, filepath
, ghc
, ghc-boot
, ghc-parser
, ghc-paths
, haskeline
, haskell-src-exts
, hlint
, http-client
, http-client-tls
, ipython-kernel
, mtl
, parsec
, process
, random
, shelly
, split
, stdenv
, stm
, strict
, system-argv0
, text
, transformers
, unix
, unordered-containers
, utf8-string
, uuid
, vector
}:
mkDerivation {

pname = "ihaskell";
version = "0.9.0.3";
sha256 = "9720c1037f0bf79f36b2aaa960e8afd30d9672b8b5d7b5b75e4f24cf0fa38b8d";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
cereal
cmdargs
containers
directory
filepath
ghc
ghc-boot
ghc-parser
ghc-paths
haskeline
haskell-src-exts
hlint
http-client
http-client-tls
ipython-kernel
mtl
parsec
process
random
shelly
split
stm
strict
system-argv0
text
transformers
unix
unordered-containers
utf8-string
uuid
vector
];
executableHaskellDepends = [
aeson
base
bytestring
containers
directory
ghc
ipython-kernel
process
strict
text
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/gibiansky/IHaskell";
description = "A Haskell backend kernel for the IPython project";
license = stdenv.lib.licenses.mit;

}) {};
"ihs" = callPackage
({
  mkDerivation
, base
, process
, stdenv
}:
mkDerivation {

pname = "ihs";
version = "0.1.0.2";
sha256 = "98477e742e5f131c8ceae4f2ca451bee3de7135340005252d107fc791edaf932";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/ihs";
description = "Interpolated Haskell";
license = stdenv.lib.licenses.publicDomain;

}) {};
"ilist" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ilist";
version = "0.3.1.0";
sha256 = "e898e1dd1077e5a268f66e2de15f15ef64eddac94133954c9e054d59092afe97";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/ilist";
description = "Optimised list functions for doing index-related things";
license = stdenv.lib.licenses.bsd3;

}) {};
"imagesize-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, exceptions
, stdenv
}:
mkDerivation {

pname = "imagesize-conduit";
version = "1.1";
sha256 = "31c5784578b305921b89f7ab6fca35747e5a35f12884770b78c31e3a0a01ac19";
revision = "3";
editedCabalFile = "0p4zmizr01pg3d7gb0q88j1alvvlzbdvzyf1wbgajng68a4g0li9";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/silkapp/imagesize-conduit";
description = "Determine the size of some common image formats";
license = stdenv.lib.licenses.bsd3;

}) {};
"immortal" = callPackage
({
  mkDerivation
, base
, lifted-base
, monad-control
, stdenv
, stm
, transformers-base
}:
mkDerivation {

pname = "immortal";
version = "0.2.2.1";
sha256 = "ed4aa1a2883a693a73fec47c8c2d5332d61a0626a2013403e1a8fb25cc6c8d8e";
libraryHaskellDepends = [
base
lifted-base
monad-control
stm
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/immortal";
description = "Spawn threads that never die (unless told to do so)";
license = stdenv.lib.licenses.mit;

}) {};
"imprint" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, constraints
, stdenv
}:
mkDerivation {

pname = "imprint";
version = "0.0.1.0";
sha256 = "9b90827c27a7766a060f50989c6a7fb63f3bd91b6cd3ebf0669b1baf8cffa638";
revision = "1";
editedCabalFile = "13418pfcsanj7cl651v4qqbypgjkrpld2gs560kpw3k2lj6w4wa0";
libraryHaskellDepends = [
base
binary
bytestring
constraints
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/imprint";
description = "Serialization of arbitrary Haskell expressions";
license = stdenv.lib.licenses.bsd3;

}) {};
"include-file" = callPackage
({
  mkDerivation
, base
, bytestring
, random
, stdenv
, template-haskell
}:
mkDerivation {

pname = "include-file";
version = "0.1.0.3";
sha256 = "208f1f3bdc717f5f953cb7c9935c84d6a6291b7cd5ed8a22fa8567184be33d29";
libraryHaskellDepends = [
base
bytestring
random
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Inclusion of files in executables at compile-time";
license = stdenv.lib.licenses.bsd3;

}) {};
"incremental-parser" = callPackage
({
  mkDerivation
, base
, monoid-subclasses
, stdenv
}:
mkDerivation {

pname = "incremental-parser";
version = "0.2.5.4";
sha256 = "dce497f80af7d6528e2e4b5548514bd4fdb74674c6f1f11c5d5426ba00a92121";
libraryHaskellDepends = [
base
monoid-subclasses
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/blamario/incremental-parser";
description = "Generic parser library capable of providing partial results from partial input";
license = stdenv.lib.licenses.gpl3;

}) {};
"indentation-core" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "indentation-core";
version = "0.0.0.1";
sha256 = "21b78035e8933dddc15a8e90244c89daebea3043957b10a3f37a6775879dda8c";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/adamsmd/indentation";
description = "Indentation sensitive parsing combinators core library";
license = stdenv.lib.licenses.bsd3;

}) {};
"indentation-parsec" = callPackage
({
  mkDerivation
, base
, indentation-core
, mtl
, parsec
, stdenv
}:
mkDerivation {

pname = "indentation-parsec";
version = "0.0.0.1";
sha256 = "9716e5f757891a8ae07f9e67dd18952c151da66160a9ffed3c4fd013118b478b";
libraryHaskellDepends = [
base
indentation-core
mtl
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/adamsmd/indentation";
description = "Indentation sensitive parsing combinators for Parsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"indents" = callPackage
({
  mkDerivation
, base
, mtl
, parsec
, stdenv
}:
mkDerivation {

pname = "indents";
version = "0.4.0.1";
sha256 = "14cfec09c5f54b47c9905b897cd29acdb5f7975ae3512aea938e846cecaf687f";
libraryHaskellDepends = [
base
mtl
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jaspervdj/indents";
description = "indentation sensitive parser-combinators for parsec";
license = stdenv.lib.licenses.bsd3;

}) {};
"indexed-list-literals" = callPackage
({
  mkDerivation
, base
, OneTuple
, stdenv
}:
mkDerivation {

pname = "indexed-list-literals";
version = "0.1.0.1";
sha256 = "4d61c0736f5c94998787a6ba2bea48ef92bd3ae83acd41becbda3d9034e868d0";
libraryHaskellDepends = [
base
OneTuple
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/davidm-d/indexed-list-literals";
description = "Type safe indexed list literals";
license = stdenv.lib.licenses.bsd3;

}) {};
"inflections" = callPackage
({
  mkDerivation
, base
, exceptions
, megaparsec
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "inflections";
version = "0.4.0.3";
sha256 = "bda19185f3948a8988a53b1d6b7dc8f6676033c988c1d0d3c2e615fd6e920d09";
libraryHaskellDepends = [
base
exceptions
megaparsec
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/inflections-hs";
description = "Inflections library for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"influxdb" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, Cabal
, cabal-doctest
, clock
, containers
, foldl
, http-client
, http-types
, lens
, network
, optional-args
, scientific
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "influxdb";
version = "1.3.0.1";
sha256 = "d4ad306d04da0f7efeaa5c5aae6c8e05fb684beb3d6c5832d1e5edcaa85b2722";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
clock
containers
foldl
http-client
http-types
lens
network
optional-args
scientific
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/maoe/influxdb-haskell";
description = "Haskell client library for InfluxDB";
license = stdenv.lib.licenses.bsd3;

}) {};
"ini" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "ini";
version = "0.3.6";
sha256 = "fcbbe3745a125e80dd6d0b4fe9b3a590507cf73dfaa62e115b20a46f0fd53cd9";
revision = "1";
editedCabalFile = "0gfikdal67aws20i5r4wg4r0lgn844glykcn3nnmbmyvwsks049l";
libraryHaskellDepends = [
attoparsec
base
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/chrisdone/ini";
description = "Quick and easy configuration files in the INI format";
license = stdenv.lib.licenses.bsd3;

}) {};
"inline-c" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, bytestring
, containers
, hashable
, mtl
, parsec
, parsers
, stdenv
, template-haskell
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "inline-c";
version = "0.6.0.6";
sha256 = "9130e5837075c6fb78ed2a7793e558c9976607eb7e4ee1b48a50d3a19bb5ee3d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-wl-pprint
base
bytestring
containers
hashable
mtl
parsec
parsers
template-haskell
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Write Haskell source files including C code inline. No FFI required.";
license = stdenv.lib.licenses.mit;

}) {};
"inline-c-cpp" = callPackage
({
  mkDerivation
, base
, inline-c
, safe-exceptions
, stdenv
, template-haskell
}:
mkDerivation {

pname = "inline-c-cpp";
version = "0.2.1.0";
sha256 = "37a690b7d1d798f16b81f6634d9597811dbf057be2d21b6d8ed6cb9cece0a70a";
libraryHaskellDepends = [
base
inline-c
safe-exceptions
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Lets you embed C++ code into Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"inline-java" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, directory
, filepath
, ghc
, jni
, jvm
, language-java
, mtl
, process
, stdenv
, template-haskell
, temporary
, text
}:
mkDerivation {

pname = "inline-java";
version = "0.8.2";
sha256 = "be72beed3bc8c7483394a2c8c59b892aa62aa0f3230bdb24fef9f7242ee16838";
libraryHaskellDepends = [
base
bytestring
Cabal
directory
filepath
ghc
jni
jvm
language-java
mtl
process
template-haskell
temporary
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/inline-java#readme";
description = "Java interop via inline Java code in Haskell modules";
license = stdenv.lib.licenses.bsd3;

}) {};
"inline-r" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-default-class
, deepseq
, exceptions
, inline-c
, mtl
, pretty
, primitive
, process
, R
, reflection
, setenv
, singletons
, stdenv
, template-haskell
, text
, th-lift
, th-orphans
, transformers
, unix
, vector
}:
mkDerivation {

pname = "inline-r";
version = "0.9.1";
sha256 = "5a65cf0ebc8c1b7647e9f690f518b10e9328e823461dae769fd29bc29ef2fbf2";
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default-class
deepseq
exceptions
inline-c
mtl
pretty
primitive
process
reflection
setenv
singletons
template-haskell
text
th-lift
th-orphans
transformers
unix
vector
];
libraryPkgconfigDepends = [
R
];
doHaddock = false;
doCheck = false;
homepage = "https://tweag.github.io/HaskellR";
description = "Seamlessly call R from Haskell and vice versa. No FFI required.";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) R;};
"insert-ordered-containers" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, hashable
, lens
, semigroupoids
, semigroups
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "insert-ordered-containers";
version = "0.2.1.0";
sha256 = "d71d126bf455898492e1d2ba18b2ad04453f8b0e4daff3926a67f0560a712298";
revision = "7";
editedCabalFile = "1mqdqrr25igra0bhqkjsc5y87q9ciwm5w14gmchx2p7xy7x0xy9b";
libraryHaskellDepends = [
aeson
base
base-compat
hashable
lens
semigroupoids
semigroups
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/insert-ordered-containers#readme";
description = "Associative containers retaining insertion order for traversals";
license = stdenv.lib.licenses.bsd3;

}) {};
"inspection-testing" = callPackage
({
  mkDerivation
, base
, containers
, ghc
, mtl
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "inspection-testing";
version = "0.2.0.1";
sha256 = "1f699bf8e95ab90d36725a8a090ad052dbb051cce379fd45a664f561e66ea194";
libraryHaskellDepends = [
base
containers
ghc
mtl
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nomeata/inspection-testing";
description = "GHC plugin to do inspection testing";
license = stdenv.lib.licenses.mit;

}) {};
"instance-control" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "instance-control";
version = "0.1.2.0";
sha256 = "7d6dd381d8fb449584cdb016464cd02794e3ccc527c0589aab16d8a2221c6b73";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lazac/instance-control";
description = "Controls how the compiler searches for instances using type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"integer-logarithms" = callPackage
({
  mkDerivation
, array
, base
, ghc-prim
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "integer-logarithms";
version = "1.0.2.1";
sha256 = "32ad4a482a60ec957d1af1268952e2a6b382b67438c14f74f6c2aef2e49b48f2";
libraryHaskellDepends = [
array
base
ghc-prim
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/integer-logarithms";
description = "Integer logarithms";
license = stdenv.lib.licenses.mit;

}) {};
"integration" = callPackage
({
  mkDerivation
, base
, parallel
, stdenv
}:
mkDerivation {

pname = "integration";
version = "0.2.1";
sha256 = "0c27385eadc10a580e78f7b7d4bc919c346b2c9b1e73aea7e7804d824d53582f";
libraryHaskellDepends = [
base
parallel
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ekmett/integration";
description = "Fast robust numeric integration via tanh-sinh quadrature";
license = stdenv.lib.licenses.bsd3;

}) {};
"intern" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, hashable
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "intern";
version = "0.9.2";
sha256 = "93a3b20e96dad8d83c9145dfc68bd9d2a6a72c9f64e4a7bc257d330070f42e20";
libraryHaskellDepends = [
array
base
bytestring
hashable
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/intern/";
description = "Efficient hash-consing for arbitrary data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"interpolate" = callPackage
({
  mkDerivation
, base
, haskell-src-meta
, stdenv
, template-haskell
}:
mkDerivation {

pname = "interpolate";
version = "0.2.0";
sha256 = "6e112006073f2d91e7e93432ccb147b79a21fcc21a9dedd0d8c38cef51926abe";
libraryHaskellDepends = [
base
haskell-src-meta
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/interpolate#readme";
description = "String interpolation done right";
license = stdenv.lib.licenses.mit;

}) {};
"interpolatedstring-perl6" = callPackage
({
  mkDerivation
, base
, bytestring
, haskell-src-meta
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "interpolatedstring-perl6";
version = "1.0.0";
sha256 = "65e0b2ad2d7482755570637212417b84d1db3bcc3cd1aa348b6b37f57911a1d3";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
haskell-src-meta
template-haskell
text
];
doHaddock = false;
doCheck = false;
description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
license = stdenv.lib.licenses.publicDomain;

}) {};
"interpolation" = callPackage
({
  mkDerivation
, base
, stdenv
, utility-ht
}:
mkDerivation {

pname = "interpolation";
version = "0.1.0.2";
sha256 = "18839b5b8a55bc7844c3d9839eaace933bad160a1879151b403df46eba0450e2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/interpolation/";
description = "piecewise linear and cubic Hermite interpolation";
license = stdenv.lib.licenses.bsd3;

}) {};
"intervals" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, cabal-doctest
, distributive
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "intervals";
version = "0.8.1";
sha256 = "9ce3bf9d31b9ab2296fccc25031fd52e1c3e4abeca5d3bb452a725b586eb7e03";
revision = "3";
editedCabalFile = "1dzv19jq6xwf9zff6xkzmn9vab2ch2mds75n7hg9n0xg664q1b95";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
array
base
distributive
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/intervals";
description = "Interval Arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"intro" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, dlist
, extra
, hashable
, mtl
, safe
, stdenv
, text
, transformers
, unordered-containers
, writer-cps-mtl
}:
mkDerivation {

pname = "intro";
version = "0.3.1.0";
sha256 = "da5e5e2c1a44d935271ad97b921e97be121f85a923152b5d0a756261ba357492";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
dlist
extra
hashable
mtl
safe
text
transformers
unordered-containers
writer-cps-mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/intro#readme";
description = "\"Fixed Prelude\" - Mostly total and safe, provides Text and Monad transformers";
license = stdenv.lib.licenses.mit;

}) {};
"invariant" = callPackage
({
  mkDerivation
, array
, base
, bifunctors
, comonad
, containers
, contravariant
, ghc-prim
, profunctors
, semigroups
, StateVar
, stdenv
, stm
, tagged
, template-haskell
, th-abstraction
, transformers
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "invariant";
version = "0.5";
sha256 = "80bbcaeaeeeb69dfbb28648d7737b48e1d1d6cc4e7ee0d192eaade9a6351e9ff";
revision = "1";
editedCabalFile = "04sxa2jfv613ff3fxpnk0cn31f6fr80gzr7va47nrc0abp34vd7y";
libraryHaskellDepends = [
array
base
bifunctors
comonad
containers
contravariant
ghc-prim
profunctors
semigroups
StateVar
stm
tagged
template-haskell
th-abstraction
transformers
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nfrisby/invariant-functors";
description = "Haskell98 invariant functors";
license = stdenv.lib.licenses.bsd2;

}) {};
"invertible" = callPackage
({
  mkDerivation
, base
, haskell-src-meta
, invariant
, lens
, partial-isomorphisms
, semigroupoids
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "invertible";
version = "0.2.0.5";
sha256 = "0a0adaa1f371f739fd2c506ff2ba3c4db278bbdfda0171bd8329d678c15b8dbb";
libraryHaskellDepends = [
base
haskell-src-meta
invariant
lens
partial-isomorphisms
semigroupoids
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
description = "bidirectional arrows, bijective functions, and invariant functors";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-choice" = callPackage
({
  mkDerivation
, base
, lifted-base
, monad-control
, stdenv
, template-haskell
, transformers
, transformers-base
}:
mkDerivation {

pname = "io-choice";
version = "0.0.6";
sha256 = "612b281110d18615000704f24fdb54a3b4401f7a39dcfe358433d7b4c22e1cef";
libraryHaskellDepends = [
base
lifted-base
monad-control
template-haskell
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "Choice for IO and lifted IO";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-machine" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "io-machine";
version = "0.2.0.0";
sha256 = "05dcc8d5fcbb6f0d7f3519488ebf743eaa776bc93c2f8b0d4bbd866ac1331ccb";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoshikuniJujo/io-machine#readme";
description = "Easy I/O model to learn IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-manager" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "io-manager";
version = "0.1.0.2";
sha256 = "bf0aa7740a8aaf31fc4f2570a47957365ae7d9248edd309e694053f1cd804138";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Skeleton library around the IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-memoize" = callPackage
({
  mkDerivation
, async
, base
, stdenv
}:
mkDerivation {

pname = "io-memoize";
version = "1.1.1.0";
sha256 = "c753a1b1a2fb286bf608d6467e6e7599cde8e641c619885197f298bf1b2f483d";
libraryHaskellDepends = [
async
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/io-memoize";
description = "Memoize IO actions";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-region" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "io-region";
version = "0.1.1";
sha256 = "ee303f66c2b3d33fae877b0dbb7c64624109fc759dffa669ca182e387f1015f1";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/io-region/wiki";
description = "Exception safe resource management with dynamic regions";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-storage" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "io-storage";
version = "0.3";
sha256 = "9a0df5cc7ff2eeef11e29e1362fea284f535bc2fe67469bba6dbc41c4f5b49bd";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/willdonnelly/io-storage";
description = "A key-value store in the IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-streams" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-builder
, network
, primitive
, process
, stdenv
, text
, time
, transformers
, vector
, zlib-bindings
}:
mkDerivation {

pname = "io-streams";
version = "1.5.0.1";
sha256 = "5dcb3717933197a84f31be74abf545126b3d25eb0e0d64f722c480d3c46b2c8b";
revision = "1";
editedCabalFile = "1d7rpwi10rqcry58d4hc651xvk9xzni6n6k22wm9532l14i3x21c";
configureFlags = [
"-fNoInteractiveTests"
];
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-builder
network
primitive
process
text
time
transformers
vector
zlib-bindings
];
doHaddock = false;
doCheck = false;
description = "Simple, composable, and easy-to-use stream I/O";
license = stdenv.lib.licenses.bsd3;

}) {};
"io-streams-haproxy" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, io-streams
, network
, stdenv
, transformers
}:
mkDerivation {

pname = "io-streams-haproxy";
version = "1.0.0.2";
sha256 = "77814f8258b5c32707a13e0d30ab2e144e7ad073aee821d6def65554024ed086";
revision = "2";
editedCabalFile = "0jrasbn4s6ac0691bf88fbflpha2vn24bd45gk0s3znvl395dxgr";
libraryHaskellDepends = [
attoparsec
base
bytestring
io-streams
network
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "HAProxy protocol 1.5 support for io-streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"ip6addr" = callPackage
({
  mkDerivation
, base
, cmdargs
, IPv6Addr
, stdenv
, text
}:
mkDerivation {

pname = "ip6addr";
version = "0.5.3";
sha256 = "1ff90994e691785a6eb4bc080d71556761f0ef6f91f0a3a1452c58a8b06e03c6";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
cmdargs
IPv6Addr
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/MichelBoucey/ip6addr";
description = "Commandline tool to generate IPv6 address text representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"iproute" = callPackage
({
  mkDerivation
, appar
, base
, byteorder
, containers
, network
, stdenv
}:
mkDerivation {

pname = "iproute";
version = "1.7.5";
sha256 = "ed638e0b0a098ee4a0f5c5fe48b2a803939c0be4a3612b2d86e16fa447b581ef";
libraryHaskellDepends = [
appar
base
byteorder
containers
network
];
doHaddock = false;
doCheck = false;
homepage = "http://www.mew.org/~kazu/proj/iproute/";
description = "IP Routing Table";
license = stdenv.lib.licenses.bsd3;

}) {};
"ipython-kernel" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cereal
, containers
, directory
, filepath
, mtl
, process
, SHA
, stdenv
, temporary
, text
, transformers
, unordered-containers
, uuid
, zeromq4-haskell
}:
mkDerivation {

pname = "ipython-kernel";
version = "0.9.0.2";
sha256 = "5923468f359c50c2e9313cf1aadc1d0ba09b571a621129ff672f8e337d158206";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
cereal
containers
directory
filepath
mtl
process
SHA
temporary
text
transformers
unordered-containers
uuid
zeromq4-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/gibiansky/IHaskell";
description = "A library for creating kernels for IPython frontends";
license = stdenv.lib.licenses.mit;

}) {};
"irc" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "irc";
version = "0.6.1.0";
sha256 = "3816ead4dfb32d61c03265e3a2a45053508cb27ca3132595773a27ef381637e1";
libraryHaskellDepends = [
attoparsec
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "A small library for parsing IRC messages";
license = stdenv.lib.licenses.bsd3;

}) {};
"irc-client" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, connection
, containers
, contravariant
, exceptions
, irc-conduit
, irc-ctcp
, mtl
, network-conduit-tls
, old-locale
, profunctors
, stdenv
, stm
, stm-chans
, text
, time
, tls
, transformers
, x509
, x509-store
, x509-validation
}:
mkDerivation {

pname = "irc-client";
version = "1.1.0.3";
sha256 = "bee3aa29121bdd0c094427c4207cad702e78222c492bd13a05fa1e3a693882d3";
libraryHaskellDepends = [
base
bytestring
conduit
connection
containers
contravariant
exceptions
irc-conduit
irc-ctcp
mtl
network-conduit-tls
old-locale
profunctors
stm
stm-chans
text
time
tls
transformers
x509
x509-store
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/irc-client";
description = "An IRC client library";
license = stdenv.lib.licenses.mit;

}) {};
"irc-conduit" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, conduit
, conduit-extra
, connection
, irc
, irc-ctcp
, network-conduit-tls
, profunctors
, stdenv
, text
, time
, tls
, transformers
, x509-validation
}:
mkDerivation {

pname = "irc-conduit";
version = "0.3.0.1";
sha256 = "b0a8f935eb3b4613e74efce7a913592f72835194b8977271f35eb09c578b3b52";
libraryHaskellDepends = [
async
base
bytestring
conduit
conduit-extra
connection
irc
irc-ctcp
network-conduit-tls
profunctors
text
time
tls
transformers
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/irc-conduit";
description = "Streaming IRC message library using conduits";
license = stdenv.lib.licenses.mit;

}) {};
"irc-ctcp" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "irc-ctcp";
version = "0.1.3.0";
sha256 = "d67cd91a5521173565033777cea76636e4d2be6e6224f681392d9e726f4bb79a";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/irc-ctcp";
description = "A CTCP encoding and decoding library for IRC clients";
license = stdenv.lib.licenses.mit;

}) {};
"irc-dcc" = callPackage
({
  mkDerivation
, attoparsec
, base
, binary
, bytestring
, io-streams
, iproute
, irc-ctcp
, mtl
, network
, path
, safe-exceptions
, stdenv
, transformers
, utf8-string
}:
mkDerivation {

pname = "irc-dcc";
version = "2.0.1";
sha256 = "6408a28733743d3463664677c5e3ad72e46c168799dad458988067039f25d2df";
revision = "8";
editedCabalFile = "1ya1bl8pdzbs3gxkq7hsyvkaajf8prrdhr1lx5hm9pi1nqsi879z";
libraryHaskellDepends = [
attoparsec
base
binary
bytestring
io-streams
iproute
irc-ctcp
mtl
network
path
safe-exceptions
transformers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/JanGe/irc-dcc";
description = "A DCC message parsing and helper library for IRC clients";
license = stdenv.lib.licenses.mit;

}) {};
"islink" = callPackage
({
  mkDerivation
, base
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "islink";
version = "0.1.0.0";
sha256 = "cfbf9c1a6dc46327b7ed7bf9336e245a255626c9d04aeba3d887d90f26d2aed7";
libraryHaskellDepends = [
base
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/islink";
description = "Check if an HTML element is a link";
license = stdenv.lib.licenses.bsd3;

}) {};
"iso3166-country-codes" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "iso3166-country-codes";
version = "0.20140203.8";
sha256 = "b4d6e01cd61bcaef9a8e455c331a8e7a2298531cb587ef6f23675eae7a6b0a36";
revision = "1";
editedCabalFile = "0n01pmvkqi0w9l203i1v7kb6bb867plv4h5hmzlkpnhrf5abf0zf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A datatype for ISO 3166 country codes";
license = "LGPL";

}) {};
"iso639" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "iso639";
version = "0.1.0.3";
sha256 = "124b8322fabaedb4de3dbc39880b36d0eab0e28d5775954aadb6630bc0da25e8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/HugoDaniel/iso639";
description = "ISO-639-1 language codes";
license = stdenv.lib.licenses.bsd3;

}) {};
"iso8601-time" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "iso8601-time";
version = "0.1.4";
sha256 = "761d737ea0841ee8fd3660cfe20041e9458be8ab424de8b3b661bb249b930126";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/iso8601-time";
description = "Convert to/from the ISO 8601 time format";
license = stdenv.lib.licenses.mit;

}) {};
"iterable" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, tagged
, template-haskell
, vector
}:
mkDerivation {

pname = "iterable";
version = "3.0";
sha256 = "6cd13d621144e937cc88acfed1663bd2e208dcbe54be4bad1f7b7279250a87a4";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
mtl
tagged
template-haskell
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/BioHaskell/iterable";
description = "API for hierarchical multilevel collections";
license = stdenv.lib.licenses.bsd3;

}) {};
"ix-shapable" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "ix-shapable";
version = "0.1.0";
sha256 = "5007ffb6a8a7bb490f962cedceed5ceb7c435126d09bc565441070cbfda79222";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
description = "Reshape multi-dimensional arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"ixset" = callPackage
({
  mkDerivation
, base
, containers
, safecopy
, stdenv
, syb
, syb-with-class
, template-haskell
}:
mkDerivation {

pname = "ixset";
version = "1.0.7";
sha256 = "2f0e5a581b1d3c5e4685da8b109b2089177632fe8931ae68f5973fba687b42d1";
libraryHaskellDepends = [
base
containers
safecopy
syb
syb-with-class
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://happstack.com";
description = "Efficient relational queries on Haskell sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"ixset-typed" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, safecopy
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "ixset-typed";
version = "0.3.1.1";
sha256 = "d06b466c2cc56df15035d0b79f3a3eb6e7d39d878ae27dea3a7fbb9c78addc12";
libraryHaskellDepends = [
base
containers
deepseq
safecopy
syb
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Efficient relational queries on Haskell sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"jack" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, enumset
, event-list
, explicit-exception
, libjack2
, midi
, non-negative
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "jack";
version = "0.7.1.3";
sha256 = "8cbc488ebfdb359d55f89b2ace9ea233c3875b359bee300f6171233ca6b51fd8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
bytestring
enumset
event-list
explicit-exception
midi
non-negative
semigroups
transformers
];
libraryPkgconfigDepends = [
libjack2
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/JACK";
description = "Bindings for the JACK Audio Connection Kit";
license = "GPL";

}) {inherit (pkgs) libjack2;};
"javascript-extras" = callPackage
({
  mkDerivation
, base
, deepseq
, ghcjs-base-stub
, parallel
, stdenv
, text
}:
mkDerivation {

pname = "javascript-extras";
version = "0.3.2.0";
sha256 = "6820e8a2b33f88a10b2836d69d03bd8697d094ea7e13046c4ce09437d9640c79";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
deepseq
ghcjs-base-stub
parallel
text
];
executableHaskellDepends = [
base
ghcjs-base-stub
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/javascript-extras#readme";
description = "Extra javascript functions when using GHCJS";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, haskell-src-exts
, haskell-src-meta
, mtl
, parseargs
, parsec
, regex-posix
, safe
, stdenv
, syb
, template-haskell
, text
, unordered-containers
, vector
, wl-pprint-text
}:
mkDerivation {

pname = "jmacro";
version = "0.6.15";
sha256 = "fae43fec6f4ba9ebc1fbd5605fc1b65b1c80bb0869bcfcd80d417e6d82cb6cac";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
haskell-src-exts
haskell-src-meta
mtl
parsec
regex-posix
safe
syb
template-haskell
text
unordered-containers
vector
wl-pprint-text
];
executableHaskellDepends = [
aeson
base
bytestring
containers
haskell-src-exts
haskell-src-meta
mtl
parseargs
parsec
regex-posix
safe
syb
template-haskell
text
unordered-containers
vector
wl-pprint-text
];
doHaddock = false;
doCheck = false;
description = "QuasiQuotation library for programmatic generation of Javascript code";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro-rpc" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-html
, bytestring
, containers
, contravariant
, jmacro
, mtl
, scientific
, split
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "jmacro-rpc";
version = "0.3.2";
sha256 = "a32f53b97bc84e79834df4c4630745c6b07ae46b45bc2ca2d43d91a38571c5d9";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-html
bytestring
containers
contravariant
jmacro
mtl
scientific
split
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/gershomb/jmacro";
description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro-rpc-happstack" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, bytestring
, containers
, happstack-server
, jmacro
, jmacro-rpc
, mtl
, stdenv
}:
mkDerivation {

pname = "jmacro-rpc-happstack";
version = "0.3.2";
sha256 = "99cdee3c1a5bd4499acf8decb2e76af48e7da7ccba01d51b86f65ea92944b064";
libraryHaskellDepends = [
aeson
base
blaze-html
bytestring
containers
happstack-server
jmacro
jmacro-rpc
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
description = "Happstack backend for jmacro-rpc";
license = stdenv.lib.licenses.bsd3;

}) {};
"jmacro-rpc-snap" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, jmacro
, jmacro-rpc
, mtl
, snap-core
, stdenv
}:
mkDerivation {

pname = "jmacro-rpc-snap";
version = "0.3";
sha256 = "48aea4a4ba90532ca105b6b274060a47a1c509b8346e0db1b61365c2a9e8dfeb";
libraryHaskellDepends = [
aeson
base
bytestring
containers
jmacro
jmacro-rpc
mtl
snap-core
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
description = "Snap backend for jmacro-rpc";
license = stdenv.lib.licenses.bsd3;

}) {};
"jni" = callPackage
({
  mkDerivation
, base
, bytestring
, choice
, constraints
, containers
, cpphs
, deepseq
, inline-c
, jdk
, singletons
, stdenv
}:
mkDerivation {

pname = "jni";
version = "0.6.0";
sha256 = "6aa58f10f2db9becb9d4b6856823e5a08c41a4789d0ae9704e0f5d87b571f012";
libraryHaskellDepends = [
base
bytestring
choice
constraints
containers
deepseq
inline-c
singletons
];
librarySystemDepends = [
jdk
];
libraryToolDepends = [
cpphs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tweag/inline-java/tree/master/jni#readme";
description = "Complete JNI raw bindings";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) jdk;};
"jose" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, bytestring
, concise
, containers
, cryptonite
, lens
, memory
, monad-time
, mtl
, network-uri
, QuickCheck
, quickcheck-instances
, safe
, semigroups
, stdenv
, template-haskell
, text
, time
, unordered-containers
, vector
, x509
}:
mkDerivation {

pname = "jose";
version = "0.6.0.3";
sha256 = "bd8b5bd4b2bd5a81c1a3d71f2be1fe2b8978ba2641ebd05c35b1951d0c17cdb4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
bytestring
concise
containers
cryptonite
lens
memory
monad-time
mtl
network-uri
QuickCheck
quickcheck-instances
safe
semigroups
template-haskell
text
time
unordered-containers
vector
x509
];
executableHaskellDepends = [
aeson
base
bytestring
lens
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/frasertweedale/hs-jose";
description = "Javascript Object Signing and Encryption and JSON Web Token library";
license = stdenv.lib.licenses.asl20;

}) {};
"jose-jwt" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, cereal
, containers
, cryptonite
, either
, memory
, mtl
, stdenv
, text
, time
, transformers
, transformers-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "jose-jwt";
version = "0.7.8";
sha256 = "d3e1693e28d2de4914011a4f573070b02a71c8e40c142c9ab8b00c8629c5f32b";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
cereal
containers
cryptonite
either
memory
mtl
text
time
transformers
transformers-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tekul/jose-jwt";
description = "JSON Object Signing and Encryption Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"js-flot" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "js-flot";
version = "0.8.3";
sha256 = "1ba2f2a6b8d85da76c41f526c98903cbb107f8642e506c072c1e7e3c20fe5e7a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/js-flot#readme";
description = "Obtain minified flot code";
license = stdenv.lib.licenses.mit;

}) {};
"js-jquery" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "js-jquery";
version = "3.3.1";
sha256 = "e0e0681f0da1130ede4e03a051630ea439c458cb97216cdb01771ebdbe44069b";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/js-jquery#readme";
description = "Obtain minified jQuery code";
license = stdenv.lib.licenses.mit;

}) {};
"json" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, mtl
, parsec
, pretty
, stdenv
, syb
, text
}:
mkDerivation {

pname = "json";
version = "0.9.2";
sha256 = "e6bb16fa791cc3833ae7b459b7e7885c1c2b11b0d294b7e095287c54fa73738e";
libraryHaskellDepends = [
array
base
bytestring
containers
mtl
parsec
pretty
syb
text
];
doHaddock = false;
doCheck = false;
description = "Support for serialising Haskell to and from JSON";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-autotype" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, filepath
, GenericPretty
, hashable
, lens
, mtl
, optparse-applicative
, pretty
, process
, scientific
, stdenv
, text
, uniplate
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "json-autotype";
version = "1.0.18";
sha256 = "f0f09112c9e329f7dda2a67276d0009129b70d8ae7c85c03e25868330f8e4a40";
revision = "2";
editedCabalFile = "1b7q8af32zpsrq32m34d4h4245ww19kxfqjrbq6s2mfx5qd5s5y6";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
filepath
GenericPretty
hashable
lens
mtl
optparse-applicative
pretty
process
scientific
text
uniplate
unordered-containers
vector
];
executableHaskellDepends = [
aeson
base
bytestring
containers
filepath
GenericPretty
hashable
lens
mtl
optparse-applicative
pretty
process
scientific
text
uniplate
unordered-containers
vector
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mgajda/json-autotype";
description = "Automatic type declaration for JSON input data";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-builder" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-textual
, bytestring
, containers
, stdenv
, text
, unordered-containers
, utf8-string
, vector
}:
mkDerivation {

pname = "json-builder";
version = "0.3";
sha256 = "b5ef217d5432e8e962fac45f5a266993a0ea26d29c2580b93d0c9988d7480b4d";
libraryHaskellDepends = [
base
blaze-builder
blaze-textual
bytestring
containers
text
unordered-containers
utf8-string
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lpsmith/json-builder";
description = "Data structure agnostic JSON serialization";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-rpc-generic" = callPackage
({
  mkDerivation
, aeson
, aeson-generic-compat
, base
, containers
, dlist
, scientific
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "json-rpc-generic";
version = "0.2.1.4";
sha256 = "741e68586714f163cc044634c718a3b940ffac3271c9e6beaaa96257585f2b7e";
libraryHaskellDepends = [
aeson
aeson-generic-compat
base
containers
dlist
scientific
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/khibino/haskell-json-rpc-generic";
description = "Generic encoder and decode for JSON-RPC";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-schema" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, generic-aeson
, generic-deriving
, mtl
, scientific
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "json-schema";
version = "0.7.4.1";
sha256 = "560d6a17d6eab734f43d329e51967e3ed62f8df2a6fea4a92d06359fe77d7c96";
revision = "16";
editedCabalFile = "0mn7aj3rr4vpg99kcpvgq1qvdl28dx9yld2b9pb79wdva9x69c2h";
libraryHaskellDepends = [
aeson
base
containers
generic-aeson
generic-deriving
mtl
scientific
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Types and type classes for defining JSON schemas";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-sop" = callPackage
({
  mkDerivation
, aeson
, base
, generics-sop
, lens-sop
, stdenv
, tagged
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "json-sop";
version = "0.2.0.3";
sha256 = "3065f11df636f9b72d988247bcc1273de9155255d8b31ed9105929e2ab67c22b";
revision = "1";
editedCabalFile = "1bvmfl6fqdr8fklv8zai5jgzlnv1jf9xy8i656lfz1ys95q9yr48";
libraryHaskellDepends = [
aeson
base
generics-sop
lens-sop
tagged
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Generics JSON (de)serialization using generics-sop";
license = stdenv.lib.licenses.bsd3;

}) {};
"json-stream" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "json-stream";
version = "0.4.2.3";
sha256 = "875b4f25dd90975f56f5c1467037653b4855a52329d2218fffd3dfecb6615146";
libraryHaskellDepends = [
aeson
base
bytestring
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ondrap/json-stream";
description = "Incremental applicative JSON parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"justified-containers" = callPackage
({
  mkDerivation
, base
, containers
, roles
, stdenv
}:
mkDerivation {

pname = "justified-containers";
version = "0.3.0.0";
sha256 = "d830c0ccd036e98ec6bab2bd336bb0bd580ce0495dedf3bf2176bd8084733e87";
libraryHaskellDepends = [
base
containers
roles
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/matt-noonan/justified-containers";
description = "Keyed container types with type-checked proofs of key presence";
license = stdenv.lib.licenses.bsd2;

}) {};
"jvm" = callPackage
({
  mkDerivation
, base
, bytestring
, choice
, constraints
, distributed-closure
, exceptions
, jni
, singletons
, stdenv
, text
, vector
}:
mkDerivation {

pname = "jvm";
version = "0.4.2";
sha256 = "70f1d6ecec95fc31e633158fd3e467c92d9165f54e8c4de44211d6759c9874fc";
libraryHaskellDepends = [
base
bytestring
choice
constraints
distributed-closure
exceptions
jni
singletons
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/inline-java/tree/master/jvm#readme";
description = "Call JVM methods from Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"jvm-batching" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, distributed-closure
, inline-java
, jni
, jvm
, singletons
, stdenv
, text
, vector
}:
mkDerivation {

pname = "jvm-batching";
version = "0.1.1";
sha256 = "b837a1732970467aaa78489c4311a9c701abef87eccc523b9034a2b52f857d1b";
setupHaskellDepends = [
base
Cabal
inline-java
];
libraryHaskellDepends = [
base
bytestring
distributed-closure
inline-java
jni
jvm
singletons
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/inline-java/tree/master/jvm-batching#readme";
description = "Provides batched marshalling of values between Java and Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"jvm-streaming" = callPackage
({
  mkDerivation
, base
, Cabal
, distributed-closure
, inline-java
, jni
, jvm
, jvm-batching
, singletons
, stdenv
, streaming
, vector
}:
mkDerivation {

pname = "jvm-streaming";
version = "0.3.1";
sha256 = "8d1b7c7e9b142a0e80bb7540082ff3bec0505ce82ea1dcc1f8c277f60215f94d";
setupHaskellDepends = [
base
Cabal
inline-java
jvm-batching
];
libraryHaskellDepends = [
base
distributed-closure
inline-java
jni
jvm
jvm-batching
singletons
streaming
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/inline-java/tree/master/jvm-streaming#readme";
description = "Expose Java iterators as streams from the streaming package";
license = stdenv.lib.licenses.bsd3;

}) {};
"jwt" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, cryptonite
, data-default
, http-types
, memory
, network-uri
, scientific
, semigroups
, stdenv
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "jwt";
version = "0.7.2";
sha256 = "17967413d21399596a236bc8169d9e030bb85e2b1c349c6e470543767cc20a31";
revision = "1";
editedCabalFile = "1q8h94yslw6k6zcjbwx94pnji8dcr2w5n1wzgzfb8hb78w2qr1dm";
libraryHaskellDepends = [
aeson
base
bytestring
containers
cryptonite
data-default
http-types
memory
network-uri
scientific
semigroups
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
description = "JSON Web Token (JWT) decoding and encoding";
license = stdenv.lib.licenses.mit;

}) {};
"kademlia" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, contravariant
, cryptonite
, data-default
, extra
, fetchgit
, memory
, MonadRandom
, mtl
, network
, random
, random-shuffle
, stdenv
, stm
, time
, transformers
, transformers-compat
}:
mkDerivation {

pname = "kademlia";
version = "1.1.0.1";
src = fetchgit {

url = "https://github.com/serokell/kademlia.git";
sha256 = "1k1wp9dwhzzqfivxc28vhxfqplnyh916crr7bhsiv829d6qifhw1";
rev = "7120bb4d28e708acd52dfd61d3dca7914fac7d7f";

};
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
contravariant
cryptonite
extra
memory
MonadRandom
mtl
network
random
random-shuffle
stm
time
transformers
];
executableHaskellDepends = [
base
binary
bytestring
containers
data-default
extra
MonadRandom
mtl
network
random
random-shuffle
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/serokell/kademlia";
description = "An implementation of the Kademlia DHT Protocol";
license = stdenv.lib.licenses.bsd3;

}) {};
"kan-extensions" = callPackage
({
  mkDerivation
, adjunctions
, array
, base
, comonad
, containers
, contravariant
, distributive
, fail
, free
, mtl
, profunctors
, semigroupoids
, stdenv
, tagged
, transformers
, transformers-compat
}:
mkDerivation {

pname = "kan-extensions";
version = "5.1";
sha256 = "193f8e58f267663d5da8e38045b000d0983ac08b84808de42af1a44963f63205";
revision = "1";
editedCabalFile = "1xaam291gxmsbibi2ai4l6c36iwkpmfy6vik1916j6jp326pa3z9";
libraryHaskellDepends = [
adjunctions
array
base
comonad
containers
contravariant
distributive
fail
free
mtl
profunctors
semigroupoids
tagged
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/kan-extensions/";
description = "Kan extensions, Kan lifts, the Yoneda lemma, and (co)density (co)monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"kanji" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, containers
, deepseq
, hashable
, microlens
, microlens-aeson
, microlens-platform
, optparse-applicative
, protolude
, stdenv
, text
}:
mkDerivation {

pname = "kanji";
version = "3.1.0.1";
sha256 = "9213b0074bc44336dc77d1a3a1597497bdcd3bb6dd0ed570311cc5b13056b2e3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
containers
deepseq
hashable
text
];
executableHaskellDepends = [
aeson
aeson-pretty
base
containers
microlens
microlens-aeson
microlens-platform
optparse-applicative
protolude
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fosskers/kanji";
description = "Perform 漢字検定 (Japan Kanji Aptitude Test) level analysis on Japanese Kanji";
license = stdenv.lib.licenses.bsd3;

}) {};
"katydid" = callPackage
({
  mkDerivation
, base
, containers
, hxt
, json
, mtl
, parsec
, regex-tdfa
, stdenv
}:
mkDerivation {

pname = "katydid";
version = "0.1.1.0";
sha256 = "7c7bdea56f41bea000b1b0f0985e890e53529f85ed5fa6b2ff4af99ee76934c8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
hxt
json
mtl
parsec
regex-tdfa
];
executableHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/katydid/katydid-haskell";
description = "A haskell implementation of Katydid";
license = stdenv.lib.licenses.bsd3;

}) {};
"kawhi" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, exceptions
, http-client
, http-conduit
, http-types
, mtl
, safe
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "kawhi";
version = "0.3.0";
sha256 = "2321387a3ddaa17c09db3a8e7a41a39f8e211467bd80bccd73791de8fca2a44f";
libraryHaskellDepends = [
aeson
base
bytestring
exceptions
http-client
http-conduit
http-types
mtl
safe
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/thunky-monk/kawhi";
description = "stats.NBA.com library";
license = stdenv.lib.licenses.mit;

}) {};
"kdt" = callPackage
({
  mkDerivation
, base
, deepseq
, deepseq-generics
, heap
, stdenv
}:
mkDerivation {

pname = "kdt";
version = "0.2.4";
sha256 = "bc0f8f9ac0cb01466273171f47b627abe170d1130bd59657fb9198b4f9479f9a";
libraryHaskellDepends = [
base
deepseq
deepseq-generics
heap
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/giogadi/kdt";
description = "Fast and flexible k-d trees for various types of point queries";
license = stdenv.lib.licenses.mit;

}) {};
"keycode" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "keycode";
version = "0.2.2";
sha256 = "56f9407cf182b01e5f0fda80f569ff629f37d894f75ef28b6b8af3024343d310";
revision = "2";
editedCabalFile = "0g19sjk2sh1w9ahn93dnvjkim4mqapq0plmdd37179qfgi49qnp8";
libraryHaskellDepends = [
base
containers
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/keycode";
description = "Maps web browser keycodes to their corresponding keyboard keys";
license = stdenv.lib.licenses.bsd3;

}) {};
"keys" = callPackage
({
  mkDerivation
, array
, base
, comonad
, containers
, free
, hashable
, semigroupoids
, semigroups
, stdenv
, tagged
, transformers
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "keys";
version = "3.12";
sha256 = "d4bfa78ff9df50224f1722925ae148279377193d04277a7dad224a47b34d5e55";
revision = "2";
editedCabalFile = "0cy2fdxxqg0bgkb8xhnw6zws00d78bpk48xv7zzmvnj549l819ib";
libraryHaskellDepends = [
array
base
comonad
containers
free
hashable
semigroupoids
semigroups
tagged
transformers
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/keys/";
description = "Keyed functors and containers";
license = stdenv.lib.licenses.bsd3;

}) {};
"kmeans" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "kmeans";
version = "0.1.3";
sha256 = "3d9e24a12ce01354c2a731ee079144c3bea2c9f011ffd51db82e5c26da1a2c0b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "K-means clustering algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"knob" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, transformers
}:
mkDerivation {

pname = "knob";
version = "0.1.1";
sha256 = "8c2c84cfa20f3a2d7ca0636d2b3f2822c62501358075bfa356eb964b803e1217";
libraryHaskellDepends = [
base
bytestring
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/knob/";
description = "Memory-backed handles";
license = stdenv.lib.licenses.mit;

}) {};
"koofr-client" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, filepath
, http-client
, http-client-tls
, http-types
, mtl
, stdenv
}:
mkDerivation {

pname = "koofr-client";
version = "1.0.0.3";
sha256 = "2ab6f0af8be4f1912ad06ad860db993f9c33c8f0206f87ff0b566b7dda54e7af";
revision = "1";
editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
libraryHaskellDepends = [
aeson
base
bytestring
filepath
http-client
http-client-tls
http-types
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/edofic/koofr-api-hs";
description = "Client to Koofr API";
license = stdenv.lib.licenses.mit;

}) {};
"kraken" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, mtl
, stdenv
}:
mkDerivation {

pname = "kraken";
version = "0.1.0";
sha256 = "335ce7cb85f7d3ed71eb067ad9642d13d2ca1d62ce8670596c8b69aacc27828a";
revision = "1";
editedCabalFile = "0ycdikk0mwy1ys9v29ybiws4fr59arwkpibdx62p9vpdv9f0p9k6";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
mtl
];
doHaddock = false;
doCheck = false;
description = "Kraken.io API client";
license = stdenv.lib.licenses.mit;

}) {};
"l10n" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, time
}:
mkDerivation {

pname = "l10n";
version = "0.1.0.1";
sha256 = "0a7032476d257981eb7c274600bef809b4a515ab162a1772a7887f0113455ca0";
libraryHaskellDepends = [
base
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/l10n#readme";
description = "Enables providing localization as typeclass instances in separate files";
license = stdenv.lib.licenses.bsd3;

}) {};
"labels" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "labels";
version = "0.3.3";
sha256 = "e6b4c02b5340c68b911fd2df157766260e06939ad2919f555339356613433013";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/labels#readme";
description = "Anonymous records via named tuples";
license = stdenv.lib.licenses.bsd3;

}) {};
"lackey" = callPackage
({
  mkDerivation
, base
, servant
, servant-foreign
, stdenv
, text
}:
mkDerivation {

pname = "lackey";
version = "1.0.2";
sha256 = "c4930a1ddf9d2d714a3b4fd4f15e898dbacbc647b9278450c0245ba0695bfb03";
libraryHaskellDepends = [
base
servant
servant-foreign
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/lackey#readme";
description = "Generate Ruby clients from Servant APIs";
license = stdenv.lib.licenses.mit;

}) {};
"lambdabot-core" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, dependent-map
, dependent-sum
, dependent-sum-template
, directory
, edit-distance
, filepath
, haskeline
, hslogger
, HTTP
, lifted-base
, monad-control
, mtl
, network
, parsec
, prim-uniq
, random
, random-fu
, random-source
, regex-tdfa
, SafeSemaphore
, split
, stdenv
, syb
, template-haskell
, time
, transformers
, transformers-base
, unix
, utf8-string
, zlib
}:
mkDerivation {

pname = "lambdabot-core";
version = "5.1.0.1";
sha256 = "ebb542e189ce551c79e3d89f9a0c2898e545abb8c6bf19655b0ec8052cd28970";
libraryHaskellDepends = [
base
binary
bytestring
containers
dependent-map
dependent-sum
dependent-sum-template
directory
edit-distance
filepath
haskeline
hslogger
HTTP
lifted-base
monad-control
mtl
network
parsec
prim-uniq
random
random-fu
random-source
regex-tdfa
SafeSemaphore
split
syb
template-haskell
time
transformers
transformers-base
unix
utf8-string
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://wiki.haskell.org/Lambdabot";
description = "Lambdabot core functionality";
license = "GPL";

}) {};
"lambdabot-irc-plugins" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, lambdabot-core
, lifted-base
, mtl
, network
, SafeSemaphore
, split
, stdenv
, time
}:
mkDerivation {

pname = "lambdabot-irc-plugins";
version = "5.1.0.1";
sha256 = "4e50f2430da752ac36e23cf87ce5b2db9e42cf2e76b48447d2fbc882cdeab1ab";
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
lambdabot-core
lifted-base
mtl
network
SafeSemaphore
split
time
];
doHaddock = false;
doCheck = false;
homepage = "https://wiki.haskell.org/Lambdabot";
description = "IRC plugins for lambdabot";
license = "GPL";

}) {};
"lame" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, directory
, exceptions
, filepath
, mp3lame
, stdenv
, text
, transformers
, wave
}:
mkDerivation {

pname = "lame";
version = "0.1.1";
sha256 = "b36009a35c02f7f18b4ba91d9ead7e5b47aef4eb5c0d014d4d60dd0bddfd6548";
revision = "4";
editedCabalFile = "0r364limqm570a8xd82wwpcvmcx2j7nfndg5kad022vz2v5n0smz";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
data-default-class
directory
exceptions
filepath
text
transformers
wave
];
librarySystemDepends = [
mp3lame
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/lame";
description = "Fairly complete high-level binding to LAME encoder";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) mp3lame;};
"language-c" = callPackage
({
  mkDerivation
, alex
, array
, base
, bytestring
, containers
, directory
, filepath
, happy
, pretty
, process
, stdenv
, syb
}:
mkDerivation {

pname = "language-c";
version = "0.7.2";
sha256 = "63ad22ddd8e51747c8d64239029cf4afd3e7d4060c9b9478145479f5d4d549e5";
libraryHaskellDepends = [
array
base
bytestring
containers
directory
filepath
pretty
process
syb
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "http://visq.github.io/language-c/";
description = "Analysis and generation of C code";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-c-quote" = callPackage
({
  mkDerivation
, alex
, array
, base
, bytestring
, containers
, exception-mtl
, exception-transformers
, filepath
, happy
, haskell-src-meta
, mainland-pretty
, mtl
, srcloc
, stdenv
, syb
, symbol
, template-haskell
}:
mkDerivation {

pname = "language-c-quote";
version = "0.12.1";
sha256 = "ec3537f5764068890b9e9a12ec94e42f33b9d0ae2549af7eb916d59457dd3584";
libraryHaskellDepends = [
array
base
bytestring
containers
exception-mtl
exception-transformers
filepath
haskell-src-meta
mainland-pretty
mtl
srcloc
syb
symbol
template-haskell
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mainland/language-c-quote";
description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-docker" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, directory
, filepath
, free
, Glob
, mtl
, parsec
, pretty
, semigroups
, split
, stdenv
, template-haskell
, text
, th-lift
, th-lift-instances
, time
, transformers
, unordered-containers
, yaml
}:
mkDerivation {

pname = "language-docker";
version = "2.0.1";
sha256 = "4c8375503b6559c850797a7a8f9be13cd3e11cde2db27e076c7f9e7cadc9a775";
libraryHaskellDepends = [
aeson
base
bytestring
directory
filepath
free
Glob
mtl
parsec
pretty
semigroups
split
template-haskell
text
th-lift
th-lift-instances
time
transformers
unordered-containers
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hadolint/language-docker#readme";
description = "Dockerfile parser, pretty-printer and embedded DSL";
license = stdenv.lib.licenses.gpl3;

}) {};
"language-ecmascript" = callPackage
({
  mkDerivation
, base
, charset
, containers
, data-default-class
, Diff
, mtl
, parsec
, QuickCheck
, stdenv
, template-haskell
, testing-feat
, uniplate
, wl-pprint
}:
mkDerivation {

pname = "language-ecmascript";
version = "0.17.2.0";
sha256 = "14849fd90314ede96c790b9fe5b771a14695b10352991fb2e8678ed49311f6eb";
libraryHaskellDepends = [
base
charset
containers
data-default-class
Diff
mtl
parsec
QuickCheck
template-haskell
testing-feat
uniplate
wl-pprint
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jswebtools/language-ecmascript";
description = "JavaScript parser and pretty-printer library";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-fortran" = callPackage
({
  mkDerivation
, alex
, array
, base
, happy
, haskell-src
, parsec
, stdenv
, syb
}:
mkDerivation {

pname = "language-fortran";
version = "0.5.1";
sha256 = "44cd3f3e76dc627cce8f442dbaf4f1d54b1db633c313868c8ad1d5dbe16e7f9a";
libraryHaskellDepends = [
array
base
haskell-src
parsec
syb
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
description = "Fortran lexer and parser, language support, and extensions";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-glsl" = callPackage
({
  mkDerivation
, base
, parsec
, prettyclass
, stdenv
}:
mkDerivation {

pname = "language-glsl";
version = "0.2.1";
sha256 = "0012116b0a164831906386205df7136bc8810bcf12ea766d300a108374a21922";
revision = "1";
editedCabalFile = "1dlax6dfjc8ca0p5an3k1f29b078hgb44aj48njf97shvl9hqf5v";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
prettyclass
];
executableHaskellDepends = [
base
parsec
prettyclass
];
doHaddock = false;
doCheck = false;
description = "GLSL abstract syntax tree, parser, and pretty-printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-haskell-extract" = callPackage
({
  mkDerivation
, base
, regex-posix
, stdenv
, template-haskell
}:
mkDerivation {

pname = "language-haskell-extract";
version = "0.2.4";
sha256 = "14da16e56665bf971723e0c5fd06dbb7cc30b4918cf8fb5748570785ded1acdb";
libraryHaskellDepends = [
base
regex-posix
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/finnsson/template-helper";
description = "Module to automatically extract functions from the local code";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-java" = callPackage
({
  mkDerivation
, alex
, array
, base
, parsec
, pretty
, stdenv
}:
mkDerivation {

pname = "language-java";
version = "0.2.9";
sha256 = "1d15c8ad2a1eff6b195ec1ed799b8523aeda1c183392b9b713bc4aff2092190e";
libraryHaskellDepends = [
array
base
parsec
pretty
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/language-java";
description = "Java source manipulation";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-javascript" = callPackage
({
  mkDerivation
, alex
, array
, base
, blaze-builder
, bytestring
, containers
, happy
, mtl
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "language-javascript";
version = "0.6.0.11";
sha256 = "d4756e9bc9a180cb93701e964a3157a03d4db4c7cb5a7b6b196067e587cc6143";
libraryHaskellDepends = [
array
base
blaze-builder
bytestring
containers
mtl
text
utf8-string
];
libraryToolDepends = [
alex
happy
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/erikd/language-javascript";
description = "Parser for JavaScript";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-nix" = callPackage
({
  mkDerivation
, base
, base-compat
, Cabal
, deepseq
, lens
, pretty
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "language-nix";
version = "2.1.0.1";
sha256 = "f0147300724ac39ce388cd6cd717ac3ccc6ed1884ffaafebb18d0f3021e01acf";
revision = "1";
editedCabalFile = "1zv12p4ralrks0517zs52rzmzmsxxkcxkqz7zijfgcsvh6bsmafi";
libraryHaskellDepends = [
base
base-compat
Cabal
deepseq
lens
pretty
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/language-nix#readme";
description = "Data types and useful functions to represent and manipulate the Nix language";
license = stdenv.lib.licenses.bsd3;

}) {};
"language-puppet" = callPackage
({
  mkDerivation
, aeson
, ansi-wl-pprint
, attoparsec
, base
, base16-bytestring
, bytestring
, case-insensitive
, containers
, cryptonite
, directory
, exceptions
, filecache
, filepath
, formatting
, Glob
, hashable
, hruby
, hslogger
, hspec
, http-api-data
, http-client
, lens
, lens-aeson
, megaparsec
, memory
, mtl
, operational
, optparse-applicative
, parallel-io
, parsec
, pcre-utils
, process
, protolude
, random
, regex-pcre-builtin
, scientific
, servant
, servant-client
, split
, stdenv
, stm
, strict-base-types
, text
, time
, transformers
, unix
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "language-puppet";
version = "1.3.17";
sha256 = "b8a3bf806fddef136a749ae4428d75206003fa4c89683ff11e3f15ae607ee158";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
ansi-wl-pprint
attoparsec
base
base16-bytestring
bytestring
case-insensitive
containers
cryptonite
directory
exceptions
filecache
filepath
formatting
hashable
hruby
hslogger
hspec
http-api-data
http-client
lens
lens-aeson
megaparsec
memory
mtl
operational
parsec
pcre-utils
process
protolude
random
regex-pcre-builtin
scientific
servant
servant-client
split
stm
strict-base-types
text
time
transformers
unix
unordered-containers
vector
yaml
];
executableHaskellDepends = [
aeson
ansi-wl-pprint
base
bytestring
containers
Glob
hslogger
http-client
lens
megaparsec
mtl
optparse-applicative
parallel-io
regex-pcre-builtin
strict-base-types
text
transformers
unordered-containers
vector
yaml
];
doHaddock = false;
doCheck = false;
homepage = "http://lpuppet.banquise.net/";
description = "Tools to parse and evaluate the Puppet DSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"lapack-carray" = callPackage
({
  mkDerivation
, base
, carray
, lapack-ffi
, netlib-carray
, netlib-ffi
, stdenv
, storable-complex
, transformers
}:
mkDerivation {

pname = "lapack-carray";
version = "0.0.2";
sha256 = "ca3a3d99016b7428b3781142ca2ab96eb2ad3318257a3dedaa41f8c2e0aa24b7";
libraryHaskellDepends = [
base
carray
lapack-ffi
netlib-carray
netlib-ffi
storable-complex
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/lapack-carray/";
description = "Auto-generated interface to Fortran LAPACK via CArrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"lapack-ffi" = callPackage
({
  mkDerivation
, base
, liblapack
, netlib-ffi
, stdenv
}:
mkDerivation {

pname = "lapack-ffi";
version = "0.0.2";
sha256 = "d4b73268bb25244f0234ef4a8b4407818e244d297612a189c7f34fe0b64ae584";
libraryHaskellDepends = [
base
netlib-ffi
];
libraryPkgconfigDepends = [
liblapack
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/lapack-ffi/";
description = "Auto-generated interface to Fortran LAPACK";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) liblapack;};
"lapack-ffi-tools" = callPackage
({
  mkDerivation
, base
, bytestring
, cassava
, containers
, explicit-exception
, filepath
, non-empty
, optparse-applicative
, parsec
, pathtype
, stdenv
, transformers
, unordered-containers
, utility-ht
, vector
}:
mkDerivation {

pname = "lapack-ffi-tools";
version = "0.1.0.1";
sha256 = "7c9c500a04bd4c56b6d86f59498867a012b7c647c39538e4945a9c0a0d83ad31";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
base
bytestring
cassava
containers
explicit-exception
filepath
non-empty
optparse-applicative
parsec
pathtype
transformers
unordered-containers
utility-ht
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/lapack-ffi-tools/";
description = "Generator for Haskell interface to Fortran LAPACK";
license = stdenv.lib.licenses.bsd3;

}) {};
"large-hashable" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytes
, bytestring
, containers
, scientific
, stdenv
, strict
, template-haskell
, text
, time
, transformers
, unordered-containers
, utf8-light
, vector
, void
}:
mkDerivation {

pname = "large-hashable";
version = "0.1.0.4";
sha256 = "e9c3345d9fa0161f1b809f2c57e00b4c687ebd48ea42623fe480cc85339a628e";
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytes
bytestring
containers
scientific
strict
template-haskell
text
time
transformers
unordered-containers
utf8-light
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/factisresearch/large-hashable";
description = "Efficiently hash (large) Haskell values";
license = stdenv.lib.licenses.bsd3;

}) {};
"largeword" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "largeword";
version = "1.2.5";
sha256 = "00b3b06d846649bf404f52a725c88349a38bc8c810e16c99f3100c4e1e9d7d46";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/idontgetoutmuch/largeword";
description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
license = stdenv.lib.licenses.bsd3;

}) {};
"latex" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, utility-ht
}:
mkDerivation {

pname = "latex";
version = "0.1.0.3";
sha256 = "b742ff5c83f6019469e55d2f3559d8efbc7ce62607e5de76485a7cb314e636d2";
libraryHaskellDepends = [
base
containers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/LaTeX";
description = "Parse, format and process LaTeX files";
license = stdenv.lib.licenses.bsd3;

}) {};
"lattices" = callPackage
({
  mkDerivation
, base
, base-compat
, containers
, deepseq
, hashable
, semigroupoids
, stdenv
, tagged
, universe-base
, universe-reverse-instances
, unordered-containers
}:
mkDerivation {

pname = "lattices";
version = "1.7.1";
sha256 = "7d5450aec9cd1124c8d0e0d50c042319821a773aa52d694cb0e0abaf1a129b2d";
revision = "2";
editedCabalFile = "0ngxvs48hqdr5353fbblcrq5hqrwr89xl39akxg8rkridkr3hq96";
libraryHaskellDepends = [
base
base-compat
containers
deepseq
hashable
semigroupoids
tagged
universe-base
universe-reverse-instances
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/phadej/lattices/";
description = "Fine-grained library for constructing and manipulating lattices";
license = stdenv.lib.licenses.bsd3;

}) {};
"lazyio" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, unsafe
}:
mkDerivation {

pname = "lazyio";
version = "0.1.0.4";
sha256 = "8b54f0bccdc1c836393ce667ea0f1ad069d52c04762e61fad633d4d44916cf6c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
transformers
unsafe
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Lazy_IO";
description = "Run IO actions lazily while respecting their order";
license = stdenv.lib.licenses.bsd3;

}) {};
"lca" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, stdenv
}:
mkDerivation {

pname = "lca";
version = "0.3.1";
sha256 = "8a8d045ae00d82ddb491e873cc36f1ca89e91556a183c343b99f4df6abfe434e";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/lca/";
description = "O(log n) persistent online lowest common ancestor search without preprocessing";
license = stdenv.lib.licenses.bsd3;

}) {};
"leancheck" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "leancheck";
version = "0.7.0";
sha256 = "6e5c30ca628077921adb7195a68b01e7d9b00901b046124a7793af3c2077e6d7";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rudymatela/leancheck#readme";
description = "Cholesterol-free property-based testing";
license = stdenv.lib.licenses.bsd3;

}) {};
"leapseconds-announced" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "leapseconds-announced";
version = "2017.1.0.1";
sha256 = "cd3bb27caf704a975ef5718a9a8e641cd9cf9a9f2df27153f7cf80405292a8d6";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bjornbm/leapseconds-announced";
description = "Leap seconds announced at library release time";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens" = callPackage
({
  mkDerivation
, array
, base
, base-orphans
, bifunctors
, bytestring
, Cabal
, cabal-doctest
, call-stack
, comonad
, containers
, contravariant
, distributive
, exceptions
, filepath
, free
, ghc-prim
, hashable
, kan-extensions
, mtl
, parallel
, profunctors
, reflection
, semigroupoids
, semigroups
, stdenv
, tagged
, template-haskell
, text
, th-abstraction
, transformers
, transformers-compat
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "lens";
version = "4.16.1";
sha256 = "f5bec97b1d5cf3d6487afebc79b927bd5a18f1fd594b104de36a35bf606ea4c6";
setupHaskellDepends = [
base
Cabal
cabal-doctest
filepath
];
libraryHaskellDepends = [
array
base
base-orphans
bifunctors
bytestring
call-stack
comonad
containers
contravariant
distributive
exceptions
filepath
free
ghc-prim
hashable
kan-extensions
mtl
parallel
profunctors
reflection
semigroupoids
semigroups
tagged
template-haskell
text
th-abstraction
transformers
transformers-compat
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/lens/";
description = "Lenses, Folds and Traversals";
license = stdenv.lib.licenses.bsd2;

}) {};
"lens-accelerate" = callPackage
({
  mkDerivation
, accelerate
, base
, lens
, stdenv
}:
mkDerivation {

pname = "lens-accelerate";
version = "0.1.0.0";
sha256 = "e4a736962342c116960425a32a17f4eaccc03bf583c09d2a619779deee5c9548";
revision = "2";
editedCabalFile = "1yk1zjwp7sabh90rgz4sa15vqj1wq837nypqjb0qhymslmrnvvnl";
libraryHaskellDepends = [
accelerate
base
lens
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tmcdonell/lens-accelerate";
description = "Instances to mix lens with accelerate";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-action" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, comonad
, contravariant
, lens
, mtl
, profunctors
, semigroupoids
, semigroups
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-action";
version = "0.2.3";
sha256 = "06848a6c7f217c3dd3228633bedc9a73b2cce139c1a6dff61af0994d410a98e0";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
comonad
contravariant
lens
mtl
profunctors
semigroupoids
semigroups
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/lens-action/";
description = "Monadic Getters and Folds";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-aeson" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, Cabal
, cabal-doctest
, lens
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "lens-aeson";
version = "1.0.2";
sha256 = "4311f035caa39db3a70915a165bcbfb55ad22376085d95a9b4f57c58994702cc";
revision = "5";
editedCabalFile = "0z6ib6kndbk5dgzlacmdlsdjrrazj9hwnkk9ldc6flgq15ba74nr";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
lens
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lens/lens-aeson/";
description = "Law-abiding lenses for aeson";
license = stdenv.lib.licenses.mit;

}) {};
"lens-datetime" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
, time
}:
mkDerivation {

pname = "lens-datetime";
version = "0.3";
sha256 = "bb1f8d7bf71c9ef8901bc39e2a2d629b1101307115c0c4d844fcbd8e86b6ccd4";
libraryHaskellDepends = [
base
lens
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nilcons/lens-datetime";
description = "Lenses for Data.Time.* types";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-family" = callPackage
({
  mkDerivation
, base
, containers
, lens-family-core
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-family";
version = "1.2.2";
sha256 = "dda24de579550daa56c49d2d4fbe59deac18e5fbcbbe6a9b0196ba0a1b27433b";
libraryHaskellDepends = [
base
containers
lens-family-core
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "Lens Families";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-family-core" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-family-core";
version = "1.2.2";
sha256 = "95fe891b61f2d2a7c9ff86f56e40866534a947f87ccf2fcaa5e727ccdfca4628";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
description = "Haskell 98 Lens Families";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-family-th" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "lens-family-th";
version = "0.5.0.1";
sha256 = "fa37572374dc69fc859c023864654704d490160b579a51434ae22208cbe93703";
revision = "1";
editedCabalFile = "190jxqskd61irc97zb95h08zlkszlhpik4zmb7y4vk7x06zz00m6";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/DanBurton/lens-family-th#readme";
description = "Generate lens-family style lenses";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-labels" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "lens-labels";
version = "0.1.0.2";
sha256 = "01ef26c8a59e720d8dff21658cffac91f1b6535b2e9defb25cfe81262d6efc86";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/google/proto-lens";
description = "Integration of lenses with OverloadedLabels";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-properties" = callPackage
({
  mkDerivation
, base
, lens
, QuickCheck
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-properties";
version = "4.11.1";
sha256 = "4f7c5b75a7204c151dbe62160a6917a22ab9e2a1b2e3848b7043d972ac8f4cb1";
revision = "1";
editedCabalFile = "1b9db7dbfq46q63y6w1471nffj77rb363rk4b1l3l23g15cq6a5i";
libraryHaskellDepends = [
base
lens
QuickCheck
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/lens/";
description = "QuickCheck properties for lens";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-regex" = callPackage
({
  mkDerivation
, array
, base
, lens
, regex-base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "lens-regex";
version = "0.1.0";
sha256 = "4954b3ae395661e916c536bfe837c42a1cd8223ea81ffd86b1fdd9b6abfc5142";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
lens
regex-base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/himura/lens-regex";
description = "Lens powered regular expression";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-simple" = callPackage
({
  mkDerivation
, base
, lens-family
, lens-family-core
, lens-family-th
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-simple";
version = "0.1.0.9";
sha256 = "613d99b8074197f8a026a641a9940dd188e0d81e808169f420981a9ca15b832a";
libraryHaskellDepends = [
base
lens-family
lens-family-core
lens-family-th
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelt/lens-simple";
description = "simplified import of elementary lens-family combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"lens-sop" = callPackage
({
  mkDerivation
, base
, fclabels
, generics-sop
, stdenv
, transformers
}:
mkDerivation {

pname = "lens-sop";
version = "0.2.0.2";
sha256 = "7f6800088634aeb6788c1bc65dcdaeb7f0c8cdaee288a24bf9f946cc59496d99";
libraryHaskellDepends = [
base
fclabels
generics-sop
transformers
];
doHaddock = false;
doCheck = false;
description = "Computing lenses generically using generics-sop";
license = stdenv.lib.licenses.bsd3;

}) {};
"lentil" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, csv
, directory
, filemanip
, filepath
, natural-sort
, optparse-applicative
, parsec
, pipes
, regex-tdfa
, semigroups
, stdenv
, terminal-progress-bar
, text
, transformers
}:
mkDerivation {

pname = "lentil";
version = "1.0.11.3";
sha256 = "43044f010cc4a9f76a6f2ac7b2b9c079a3aadec30b6eb848ba5383cd9a77694d";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
ansi-wl-pprint
base
csv
directory
filemanip
filepath
natural-sort
optparse-applicative
parsec
pipes
regex-tdfa
semigroups
terminal-progress-bar
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.ariis.it/static/articles/lentil/page.html";
description = "frugal issue tracker";
license = stdenv.lib.licenses.gpl3;

}) {};
"leveldb-haskell" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, exceptions
, filepath
, leveldb
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "leveldb-haskell";
version = "0.6.5";
sha256 = "a417b088068deba73a77936c1345302bac7ce06019fb10254857cafad1d76c28";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
data-default
exceptions
filepath
resourcet
transformers
];
librarySystemDepends = [
leveldb
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/kim/leveldb-haskell";
description = "Haskell bindings to LevelDB";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) leveldb;};
"lexer-applicative" = callPackage
({
  mkDerivation
, base
, regex-applicative
, srcloc
, stdenv
}:
mkDerivation {

pname = "lexer-applicative";
version = "2.1.0.2";
sha256 = "ae433c0f2a59d0e848ecedb5820c3ab3d5ea10dcb3e79ad057882ad112eb5cbe";
libraryHaskellDepends = [
base
regex-applicative
srcloc
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/lexer-applicative";
description = "Simple lexer based on applicative regular expressions";
license = stdenv.lib.licenses.mit;

}) {};
"libffi" = callPackage
({
  mkDerivation
, base
, bytestring
, ffi
, libffi
, stdenv
}:
mkDerivation {

pname = "libffi";
version = "0.1";
sha256 = "48387067c0f33bcfadf7a3bebbf48a55294202500f2b754229ffc8f12cb4f23c";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
ffi
];
libraryPkgconfigDepends = [
libffi
];
doHaddock = false;
doCheck = false;
description = "A binding to libffi";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) ffi; inherit (pkgs) libffi;};
"libgit" = callPackage
({
  mkDerivation
, base
, mtl
, process
, stdenv
}:
mkDerivation {

pname = "libgit";
version = "0.3.1";
sha256 = "1d4c60dd987c363d77c4be947678d01a51ab4b568964c30a33827ccc854f7522";
libraryHaskellDepends = [
base
mtl
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-libgit";
description = "Simple Git Wrapper";
license = stdenv.lib.licenses.bsd3;

}) {};
"libgraph" = callPackage
({
  mkDerivation
, array
, base
, containers
, monads-tf
, process
, stdenv
, union-find
}:
mkDerivation {

pname = "libgraph";
version = "1.14";
sha256 = "b7978be50d6182101ca79fb3ea83d0621f5394d483d1fa1eb7d590e45f8d3f3f";
libraryHaskellDepends = [
array
base
containers
monads-tf
process
union-find
];
doHaddock = false;
doCheck = false;
homepage = "http://maartenfaddegon.nl";
description = "Store and manipulate data in a graph";
license = stdenv.lib.licenses.bsd3;

}) {};
"libinfluxdb" = callPackage
({
  mkDerivation
, base
, bytestring
, clock
, containers
, http-client
, http-client-tls
, http-types
, resource-pool
, stdenv
, stm
, text
}:
mkDerivation {

pname = "libinfluxdb";
version = "0.0.4";
sha256 = "25b5bbc274c9e18bc46ea0271805adfcaaec6d46caa69eb465e0cbc03f63ef3f";
revision = "1";
editedCabalFile = "17ddlql04hgah7pr0zi8zvpza17ig7a0m27wr2c47gdzy7k0nr2v";
libraryHaskellDepends = [
base
bytestring
clock
containers
http-client
http-client-tls
http-types
resource-pool
stm
text
];
doHaddock = false;
doCheck = false;
description = "libinfluxdb";
license = stdenv.lib.licenses.mit;

}) {};
"libmpd" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, data-default-class
, filepath
, mtl
, network
, old-locale
, stdenv
, text
, time
, utf8-string
}:
mkDerivation {

pname = "libmpd";
version = "0.9.0.8";
sha256 = "582b0a405e39148d3a5046e8ad00c9e217688e60c70393eb36cd651e1991ed4e";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
data-default-class
filepath
mtl
network
old-locale
text
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vimus/libmpd-haskell#readme";
description = "An MPD client library";
license = stdenv.lib.licenses.mit;

}) {};
"liboath-hs" = callPackage
({
  mkDerivation
, base
, bytestring
, inline-c
, liboath
, oath
, safe-exceptions
, stdenv
, time
}:
mkDerivation {

pname = "liboath-hs";
version = "0.0.1.0";
sha256 = "cf2a2763d43b59747e2e35429fa4f5f09af803c4744a8aaec924d27240caafb2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
inline-c
safe-exceptions
time
];
librarySystemDepends = [
oath
];
libraryPkgconfigDepends = [
liboath
];
executableHaskellDepends = [
base
bytestring
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/parsonsmatt/liboath-hs#readme";
description = "Bindings to liboath";
license = stdenv.lib.licenses.gpl3;

}) {inherit (pkgs) liboath; inherit (pkgs) oath;};
"libsystemd-journal" = callPackage
({
  mkDerivation
, base
, bytestring
, hashable
, hsyslog
, pipes
, pipes-safe
, semigroups
, stdenv
, systemd
, text
, transformers
, uniplate
, unix-bytestring
, unordered-containers
, uuid
, vector
}:
mkDerivation {

pname = "libsystemd-journal";
version = "1.4.3";
sha256 = "586d7cae7b02ba6be8fdb7f99b128a8a1ca8fb77c8e3c069ca1ee7f71d70e9d8";
libraryHaskellDepends = [
base
bytestring
hashable
hsyslog
pipes
pipes-safe
semigroups
text
transformers
uniplate
unix-bytestring
unordered-containers
uuid
vector
];
libraryPkgconfigDepends = [
systemd
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/libsystemd-journal";
description = "Haskell bindings to libsystemd-journal";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) systemd;};
"libxml-sax" = callPackage
({
  mkDerivation
, base
, bytestring
, libxml2
, stdenv
, text
, xml-types
}:
mkDerivation {

pname = "libxml-sax";
version = "0.7.5";
sha256 = "99141784cc0d6c5749f0df618b2d46922391eede09f4f9ccfc36fb58a9c16d51";
libraryHaskellDepends = [
base
bytestring
text
xml-types
];
librarySystemDepends = [
libxml2
];
libraryPkgconfigDepends = [
libxml2
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/haskell-libxml/";
description = "Bindings for the libXML2 SAX interface";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) libxml2;};
"licensor" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, cmdargs
, containers
, directory
, http-conduit
, process
, stdenv
}:
mkDerivation {

pname = "licensor";
version = "0.2.2";
sha256 = "9f7e0d24279553b79af2152d04f652d0f569ce67dc2e58f5550827dd02d7ac4f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
Cabal
containers
directory
http-conduit
process
];
executableHaskellDepends = [
base
Cabal
cmdargs
containers
directory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jpvillaisaza/licensor";
description = "A license compatibility helper";
license = stdenv.lib.licenses.mit;

}) {};
"lift-generics" = callPackage
({
  mkDerivation
, base
, generic-deriving
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "lift-generics";
version = "0.1.2";
sha256 = "0e9fbd17cd3e1af6ef1e994e7c14cfd42896e56499864e707f72246b6e2b604e";
revision = "1";
editedCabalFile = "02hg33ikmwl81zsw8fgppix740rdc3h8fv6nr9b9h37vizhs50zw";
libraryHaskellDepends = [
base
generic-deriving
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/lift-generics";
description = "GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"lifted-async" = callPackage
({
  mkDerivation
, async
, base
, constraints
, lifted-base
, monad-control
, stdenv
, transformers-base
}:
mkDerivation {

pname = "lifted-async";
version = "0.10.0.1";
sha256 = "0d925b16fffe6fb3db994165401aeb0752595d1feec3011eba5b8b2c8524c4b1";
libraryHaskellDepends = [
async
base
constraints
lifted-base
monad-control
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/maoe/lifted-async";
description = "Run lifted IO operations asynchronously and wait for their results";
license = stdenv.lib.licenses.bsd3;

}) {};
"lifted-base" = callPackage
({
  mkDerivation
, base
, monad-control
, stdenv
, transformers-base
}:
mkDerivation {

pname = "lifted-base";
version = "0.2.3.12";
sha256 = "c134a95f56750aae806e38957bb03c59627cda16034af9e00a02b699474317c5";
libraryHaskellDepends = [
base
monad-control
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/lifted-base";
description = "lifted IO operations from the base library";
license = stdenv.lib.licenses.bsd3;

}) {};
"line" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, cryptohash-sha256
, http-conduit
, http-types
, scotty
, stdenv
, text
, time
, transformers
, wai
}:
mkDerivation {

pname = "line";
version = "4.0.1";
sha256 = "a1dfab5dcd078747920fc61a024eb096a554f465d57c8bc642c155150f41667c";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
cryptohash-sha256
http-conduit
http-types
scotty
text
time
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/utatti/line";
description = "Haskell SDK for the LINE API";
license = stdenv.lib.licenses.bsd3;

}) {};
"linear" = callPackage
({
  mkDerivation
, adjunctions
, base
, base-orphans
, binary
, bytes
, Cabal
, cabal-doctest
, cereal
, containers
, deepseq
, distributive
, ghc-prim
, hashable
, lens
, reflection
, semigroupoids
, semigroups
, stdenv
, tagged
, template-haskell
, transformers
, transformers-compat
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "linear";
version = "1.20.7";
sha256 = "4b88b6268d327220a296b6790c82db8ebab52973735af0a9de1c734cdc07cab6";
revision = "4";
editedCabalFile = "11fxa2bqpyf99iv2b3yzi9z17y0r70afqij52lmifsyzr24zizv3";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
adjunctions
base
base-orphans
binary
bytes
cereal
containers
deepseq
distributive
ghc-prim
hashable
lens
reflection
semigroupoids
semigroups
tagged
template-haskell
transformers
transformers-compat
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/linear/";
description = "Linear Algebra";
license = stdenv.lib.licenses.bsd3;

}) {};
"linear-accelerate" = callPackage
({
  mkDerivation
, accelerate
, base
, Cabal
, cabal-doctest
, distributive
, lens
, linear
, stdenv
}:
mkDerivation {

pname = "linear-accelerate";
version = "0.5.0.1";
sha256 = "3444712b29b06f8412d1f34fbe4252f81e4d3704e546e7b914fb2232be810b4e";
revision = "2";
editedCabalFile = "0b7amkafmf82q6a8q49q6n3v33xs16n5h6y005jva5bhpxkmn26w";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
accelerate
base
distributive
lens
linear
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/linear-accelerate/";
description = "Lifting linear vector spaces into Accelerate";
license = stdenv.lib.licenses.bsd3;

}) {};
"linked-list-with-iterator" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "linked-list-with-iterator";
version = "0.1.1.0";
sha256 = "c6ae37cc9d123afcb92f28fef9c5dae6d3713489bdf7f73ac9af420bb3f11b89";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/CindyLinz/Haskell-linked-list-with-iterator#readme";
description = "A pure linked list which is mutable through iterators";
license = stdenv.lib.licenses.bsd3;

}) {};
"linux-file-extents" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "linux-file-extents";
version = "0.2.0.0";
sha256 = "6c7cd9e700f666f774736d31a0e6aa7bfe9bd1e075c11eed701ba95095fd9bd0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/linux-file-extents";
description = "Retrieve file fragmentation information under Linux";
license = stdenv.lib.licenses.bsd3;

}) {};
"linux-namespaces" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "linux-namespaces";
version = "0.1.2.0";
sha256 = "585c69130dfcc499cfba00385ae7facc8ab9f2c26bdf746a6e25fc96d3b5f67b";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/redneb/hs-linux-namespaces";
description = "Create new or enter an existing linux namespaces";
license = stdenv.lib.licenses.bsd3;

}) {};
"list-t" = callPackage
({
  mkDerivation
, base
, mmorph
, monad-control
, mtl
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "list-t";
version = "1.0.1";
sha256 = "c3438dde9d22e882ccdad091eb9c6f95706e9d564a57d5f845e991e706436773";
libraryHaskellDepends = [
base
mmorph
monad-control
mtl
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/list-t";
description = "ListT done right";
license = stdenv.lib.licenses.mit;

}) {};
"listsafe" = callPackage
({
  mkDerivation
, base
, exceptions
, stdenv
}:
mkDerivation {

pname = "listsafe";
version = "0.1.0.1";
sha256 = "1a073247edfbea7dd7b7f9629fc64ddd3bce67fa61695da23ff43fb31d398d69";
libraryHaskellDepends = [
base
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ombocomp/listsafe";
description = "Safe wrappers for partial list functions, supporting MonadThrow";
license = stdenv.lib.licenses.asl20;

}) {};
"llvm-hs" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, bytestring
, Cabal
, containers
, exceptions
, llvm-config
, llvm-hs-pure
, mtl
, stdenv
, template-haskell
, transformers
, utf8-string
}:
mkDerivation {

pname = "llvm-hs";
version = "5.1.3";
sha256 = "ccdac4683f56135ba83ed0883231f686d1784e9bc7f072a34fcf041e0661976b";
revision = "1";
editedCabalFile = "0r8xgz6r2miw1l3az343jwz8f9jgzqywxnzl2xhanv05g3i462yh";
setupHaskellDepends = [
base
Cabal
containers
];
libraryHaskellDepends = [
array
attoparsec
base
bytestring
containers
exceptions
llvm-hs-pure
mtl
template-haskell
transformers
utf8-string
];
libraryToolDepends = [
llvm-config
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/llvm-hs/llvm-hs/";
description = "General purpose LLVM bindings";
license = stdenv.lib.licenses.bsd3;

}) {};
"llvm-hs-pure" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, fail
, mtl
, stdenv
, template-haskell
, transformers
, unordered-containers
}:
mkDerivation {

pname = "llvm-hs-pure";
version = "5.1.2";
sha256 = "c4d0993aacda72107e6d34865421f128b8c27b586b95a68e2a3e94700645d954";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
fail
mtl
template-haskell
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/llvm-hs/llvm-hs/";
description = "Pure Haskell LLVM functionality (no FFI)";
license = stdenv.lib.licenses.bsd3;

}) {};
"lmdb" = callPackage
({
  mkDerivation
, array
, base
, lmdb
, stdenv
}:
mkDerivation {

pname = "lmdb";
version = "0.2.5";
sha256 = "80552856211cdce06b808685d621bdd9c33a5ac5540a4dafe120c6b20c901c7d";
libraryHaskellDepends = [
array
base
];
librarySystemDepends = [
lmdb
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dmbarbour/haskell-lmdb";
description = "Lightning MDB bindings";
license = stdenv.lib.licenses.bsd2;

}) {inherit (pkgs) lmdb;};
"load-env" = callPackage
({
  mkDerivation
, base
, directory
, parsec
, stdenv
}:
mkDerivation {

pname = "load-env";
version = "0.1.2";
sha256 = "062cdaed7fc6d8958b60de1e0e7192896981fe231b0f397c0e3c998489aebdb4";
libraryHaskellDepends = [
base
directory
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pbrisbin/load-env#readme";
description = "Load environment variables from a file";
license = stdenv.lib.licenses.bsd3;

}) {};
"loc" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "loc";
version = "0.1.3.2";
sha256 = "d3aa6c3b1873a1be9b739201f008059836651c8eef2b52661daab6e625720ddd";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chris-martin/loc";
description = "Types representing line and column positions and ranges in text files";
license = stdenv.lib.licenses.asl20;

}) {};
"loch-th" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
, template-haskell
}:
mkDerivation {

pname = "loch-th";
version = "0.2.2";
sha256 = "cc059372b12a79375a0f268db7dc5a2973307a200440d4112e665b9a3d9b6dc3";
libraryHaskellDepends = [
base
pretty
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/liskin/loch-th";
description = "Support for precise error locations in source files (Template Haskell version)";
license = stdenv.lib.licenses.bsd3;

}) {};
"lockfree-queue" = callPackage
({
  mkDerivation
, abstract-deque
, atomic-primops
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "lockfree-queue";
version = "0.2.3.1";
sha256 = "2a576a54bae8eabde01ebe901c9fd26a11bebb30516841de4525b5b60c0f3a8c";
libraryHaskellDepends = [
abstract-deque
atomic-primops
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
description = "Michael and Scott lock-free queues";
license = stdenv.lib.licenses.bsd3;

}) {};
"log" = callPackage
({
  mkDerivation
, base
, log-base
, log-elasticsearch
, log-postgres
, stdenv
}:
mkDerivation {

pname = "log";
version = "0.9.0.1";
sha256 = "c32bd5eabc0f37d0a410aac44bda615f2c880bb39358fb0283e26021411c50be";
libraryHaskellDepends = [
base
log-base
log-elasticsearch
log-postgres
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution with multiple backends";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-base" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, deepseq
, exceptions
, mmorph
, monad-control
, monad-time
, mtl
, semigroups
, stdenv
, stm
, text
, time
, transformers-base
, unordered-containers
}:
mkDerivation {

pname = "log-base";
version = "0.7.4.0";
sha256 = "4067eba80db49eb4509c10770959d0350f9eb9df5e0bde2fbf9024f106dc3f1b";
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
deepseq
exceptions
mmorph
monad-control
monad-time
mtl
semigroups
stm
text
time
transformers-base
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution (base package)";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-domain" = callPackage
({
  mkDerivation
, base
, binary
, bytes
, Cabal
, cabal-doctest
, cereal
, comonad
, deepseq
, distributive
, hashable
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "log-domain";
version = "0.12";
sha256 = "7191cba40b9b348c54171f2b86caabb75a30e52b6d7e4c57321bf5dcdf1f367e";
revision = "2";
editedCabalFile = "1yjphyqyn8122ikxxv0a10fh2cbavy7xyb435jxq6gln8sw3m54d";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
binary
bytes
cereal
comonad
deepseq
distributive
hashable
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/log-domain/";
description = "Log-domain arithmetic";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-elasticsearch" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, base64-bytestring
, bloodhound
, bytestring
, deepseq
, http-client
, http-client-tls
, log-base
, semigroups
, stdenv
, text
, text-show
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "log-elasticsearch";
version = "0.9.1.0";
sha256 = "a5a6ecae199afc03ce20b58af6c11f10cb16cfd3b1dc347d52bc881760bbd544";
revision = "2";
editedCabalFile = "11c7jrc16nwg5jxwsggip5bsvw9zbk8c3gw1my22rwfglnpxg885";
libraryHaskellDepends = [
aeson
aeson-pretty
base
base64-bytestring
bloodhound
bytestring
deepseq
http-client
http-client-tls
log-base
semigroups
text
text-show
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution (Elasticsearch back end)";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-postgres" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, base64-bytestring
, bytestring
, deepseq
, hpqtypes
, http-client
, lifted-base
, log-base
, mtl
, semigroups
, split
, stdenv
, text
, text-show
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "log-postgres";
version = "0.7.0.2";
sha256 = "51c60374838cbd89d027cde9cdf2d8982b4f4152befe76899085520922e5639b";
revision = "1";
editedCabalFile = "1f18nzrh3bxnb58cmd3zyqpwaw2jyfl92dg6qd30zhlvlnkz1q7q";
libraryHaskellDepends = [
aeson
aeson-pretty
base
base64-bytestring
bytestring
deepseq
hpqtypes
http-client
lifted-base
log-base
mtl
semigroups
split
text
text-show
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/log";
description = "Structured logging solution (PostgreSQL back end)";
license = stdenv.lib.licenses.bsd3;

}) {};
"log-warper" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, base
, containers
, deepseq
, directory
, fetchgit
, filepath
, fmt
, lifted-async
, microlens-platform
, mmorph
, monad-control
, monad-loops
, mtl
, o-clock
, stdenv
, text
, time
, transformers
, transformers-base
, universum
, unix
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "log-warper";
version = "1.8.10.1";
src = fetchgit {

url = "https://github.com/input-output-hk/log-warper.git";
sha256 = "09jl7wb48q1vc3cll1bbdp8d2dh5dhcgxiyq1z7mpwfikdph0d4c";
rev = "4af8114fbcd5698a4e1fbc653031f0300e29faee";

};
libraryHaskellDepends = [
aeson
ansi-terminal
base
containers
deepseq
directory
filepath
fmt
lifted-async
microlens-platform
mmorph
monad-control
monad-loops
mtl
o-clock
text
time
transformers
transformers-base
universum
unix
unordered-containers
vector
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/serokell/log-warper";
description = "Flexible, configurable, monadic and pretty logging";
license = stdenv.lib.licenses.mit;

}) {};
"logfloat" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "logfloat";
version = "0.13.3.3";
sha256 = "f774bd71d82ae053046ab602aa451ce4f65440d5c634dc8d950ae87f53527f82";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Log-domain floating point numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"logger-thread" = callPackage
({
  mkDerivation
, base
, fast-logger
, protolude
, safe-exceptions
, stdenv
, stm
, text
, time
}:
mkDerivation {

pname = "logger-thread";
version = "0.1.0.2";
sha256 = "ac0a54001a69cff6f975209c4d9d399fb58ef59bb0ad6ac742c5ffedeac04a2a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
fast-logger
protolude
safe-exceptions
stm
text
time
];
executableHaskellDepends = [
base
protolude
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joe9/logger-thread#readme";
description = "Run FastLogger in a thread and direct all queued messages to it";
license = stdenv.lib.licenses.bsd3;

}) {};
"logging-effect" = callPackage
({
  mkDerivation
, async
, base
, exceptions
, free
, monad-control
, mtl
, semigroups
, stdenv
, stm
, stm-delay
, text
, time
, transformers
, transformers-base
, wl-pprint-text
}:
mkDerivation {

pname = "logging-effect";
version = "1.2.6";
sha256 = "67d32846e244b82d1ae655598ba4143a6df524937cb23a584ddaf28299883124";
libraryHaskellDepends = [
async
base
exceptions
free
monad-control
mtl
semigroups
stm
stm-delay
text
time
transformers
transformers-base
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocharles/logging-effect";
description = "A mtl-style monad transformer for general purpose & compositional logging";
license = stdenv.lib.licenses.bsd3;

}) {};
"logging-effect-extra" = callPackage
({
  mkDerivation
, base
, logging-effect
, logging-effect-extra-file
, logging-effect-extra-handler
, stdenv
, wl-pprint-text
}:
mkDerivation {

pname = "logging-effect-extra";
version = "1.2.2";
sha256 = "fccb190db3f4f81b761df1b6a4428311691d57a435dc78916e00a1f1bb0b2a4b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
logging-effect
logging-effect-extra-file
logging-effect-extra-handler
wl-pprint-text
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jship/logging-effect-extra#readme";
description = "Supplemental packages for `logging-effect`";
license = stdenv.lib.licenses.mit;

}) {};
"logging-effect-extra-file" = callPackage
({
  mkDerivation
, base
, logging-effect
, stdenv
, template-haskell
, wl-pprint-text
}:
mkDerivation {

pname = "logging-effect-extra-file";
version = "1.1.2";
sha256 = "d53334812651a2c1dfa87e93f43913b190bc63380752498593f593717026b1b7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
logging-effect
template-haskell
wl-pprint-text
];
executableHaskellDepends = [
base
logging-effect
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jship/logging-effect-extra#readme";
description = "TH splices to augment log messages with file info";
license = stdenv.lib.licenses.mit;

}) {};
"logging-effect-extra-handler" = callPackage
({
  mkDerivation
, base
, exceptions
, logging-effect
, stdenv
, time
, wl-pprint-text
}:
mkDerivation {

pname = "logging-effect-extra-handler";
version = "1.1.4";
sha256 = "354a4b969977dd19f2860cb0dc0040e47f455bc1c32d40f89122679e31886224";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
exceptions
logging-effect
time
wl-pprint-text
];
executableHaskellDepends = [
base
logging-effect
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jship/logging-effect-extra#readme";
description = "Handy logging handler combinators";
license = stdenv.lib.licenses.mit;

}) {};
"logging-facade" = callPackage
({
  mkDerivation
, base
, call-stack
, stdenv
, transformers
}:
mkDerivation {

pname = "logging-facade";
version = "0.3.0";
sha256 = "8e7115258b76e0bf5d21b532dd916c63e79b32d1776cc355d2d184f67ae71434";
libraryHaskellDepends = [
base
call-stack
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/logging-facade#readme";
description = "Simple logging abstraction that allows multiple back-ends";
license = stdenv.lib.licenses.mit;

}) {};
"logging-facade-syslog" = callPackage
({
  mkDerivation
, base
, hsyslog
, logging-facade
, stdenv
}:
mkDerivation {

pname = "logging-facade-syslog";
version = "1";
sha256 = "eb8b23c3f77a788891eac00e2d84bf489b683d761028a7938cf93e36729d8ea9";
libraryHaskellDepends = [
base
hsyslog
logging-facade
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/logging-facade-syslog#readme";
description = "A logging back-end to syslog(3) for the logging-facade library";
license = stdenv.lib.licenses.bsd3;

}) {};
"logict" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "logict";
version = "0.6.0.2";
sha256 = "1182b68e8d00279460c7fb9b8284bf129805c07754c678b2a8de5a6d768e161e";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~dolio/";
description = "A backtracking logic-programming monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"loop" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "loop";
version = "0.3.0";
sha256 = "92962010bdab28cc0092dd3fe42819d6f215c717dd10d9349626d92a0d0b3ecf";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/loop";
description = "Fast loops (for when GHC can't optimize forM_)";
license = stdenv.lib.licenses.mit;

}) {};
"lrucache" = callPackage
({
  mkDerivation
, base
, containers
, contravariant
, stdenv
}:
mkDerivation {

pname = "lrucache";
version = "1.2.0.0";
sha256 = "5f17a9e026e198152d13830a0eae0df21be437c238a3f157f7c188fe27a37616";
libraryHaskellDepends = [
base
containers
contravariant
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/chowells79/lrucache";
description = "a simple, pure LRU cache";
license = stdenv.lib.licenses.bsd3;

}) {};
"lrucaching" = callPackage
({
  mkDerivation
, base
, base-compat
, deepseq
, hashable
, psqueues
, stdenv
, vector
}:
mkDerivation {

pname = "lrucaching";
version = "0.3.3";
sha256 = "aa7e5fd27963c70fc1108a7c0526ca0e05f76ccd885844bc50bdae70d5174aa4";
revision = "2";
editedCabalFile = "0ypilhv8im5vqwdy6wk9ql2dlpr4cykag6ikvyjapl8bpyfm44xa";
libraryHaskellDepends = [
base
base-compat
deepseq
hashable
psqueues
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cocreature/lrucaching#readme";
description = "LRU cache";
license = stdenv.lib.licenses.bsd3;

}) {};
"lucid" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, hashable
, mmorph
, mtl
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "lucid";
version = "2.9.10";
sha256 = "c0e7dfae8337694082e3f34573c144d2672dc8c8e16175614079cd9d2d434390";
revision = "1";
editedCabalFile = "0n94x2havrvks85z8azsa4pvz33amhb444cias3kfxmkyvypn5ah";
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
hashable
mmorph
mtl
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/lucid";
description = "Clear to write, read and edit DSL for HTML";
license = stdenv.lib.licenses.bsd3;

}) {};
"lxd-client" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bimap
, bytestring
, connection
, containers
, data-default
, directory
, either
, exceptions
, filepath
, http-api-data
, http-client
, http-client-tls
, http-media
, http-types
, mtl
, network
, semigroups
, servant
, servant-client
, stdenv
, text
, tls
, transformers
, unix
, websockets
, x509
, x509-store
, x509-validation
}:
mkDerivation {

pname = "lxd-client";
version = "0.1.0.6";
sha256 = "8b50bb6fa10aad3e900ea311d3dcff44768495de729ab5ac376dfe2e60aa801b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
base
bimap
bytestring
connection
containers
data-default
directory
either
exceptions
filepath
http-api-data
http-client
http-client-tls
http-media
http-types
mtl
network
semigroups
servant
servant-client
text
tls
transformers
unix
websockets
x509
x509-store
x509-validation
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hverr/haskell-lxd-client#readme";
description = "LXD client written in Haskell";
license = stdenv.lib.licenses.gpl3;

}) {};
"lxd-client-config" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, directory
, filepath
, stdenv
, text
, yaml
}:
mkDerivation {

pname = "lxd-client-config";
version = "0.1.0.1";
sha256 = "903852c99bebc0af3cc3a26734056003f9097ada08eb1f361abce097a120afcf";
libraryHaskellDepends = [
aeson
base
containers
directory
filepath
text
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hverr/haskell-lxd-client-config#readme";
description = "Read the configuration file of the standard LXD client";
license = stdenv.lib.licenses.gpl3;

}) {};
"lzma" = callPackage
({
  mkDerivation
, base
, bytestring
, lzma
, stdenv
}:
mkDerivation {

pname = "lzma";
version = "0.0.0.3";
sha256 = "af8321c3511bde3e2745093fa3bd74c642e386db7d2e7c43b3a54814f1338144";
revision = "2";
editedCabalFile = "0c6jkr22w797jvmad9vki2mm7cdzxpqqxkpv836fh5m248nnc618";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
lzma
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/lzma";
description = "LZMA/XZ compression and decompression";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) lzma;};
"lzma-clib" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "lzma-clib";
version = "5.2.2";
sha256 = "0aed9cb8ef3a2b0e71c429b00161ee3fb342cce2603ccb934f507fb236a09fd5";
doHaddock = false;
doCheck = false;
description = "liblzma C library and headers for use by LZMA bindings";
license = stdenv.lib.licenses.publicDomain;
platforms = stdenv.lib.platforms.none;

}) {};
"lzma-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, lzma
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "lzma-conduit";
version = "1.2.1";
sha256 = "e955da2b8b108b3bf07073e12e5b01c46d42c8f3e40828fb1f34cd7e5413a742";
libraryHaskellDepends = [
base
bytestring
conduit
lzma
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/alphaHeavy/lzma-conduit";
description = "Conduit interface for lzma/xz compression";
license = stdenv.lib.licenses.bsd3;

}) {};
"machines" = callPackage
({
  mkDerivation
, adjunctions
, base
, Cabal
, cabal-doctest
, comonad
, containers
, distributive
, mtl
, pointed
, profunctors
, semigroupoids
, semigroups
, stdenv
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "machines";
version = "0.6.3";
sha256 = "3fd2e863a9a2ea2e3ef123668082757e48a5ec25e9659f4e02a3f56e44bdbecf";
revision = "6";
editedCabalFile = "0ga5x9lpik7gz2fx4j3jnn6dw8xkd9cxg19ngj8iwrx4b946m1w7";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
adjunctions
base
comonad
containers
distributive
mtl
pointed
profunctors
semigroupoids
semigroups
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/machines/";
description = "Networked stream transducers";
license = stdenv.lib.licenses.bsd3;

}) {};
"machines-binary" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, machines
, stdenv
}:
mkDerivation {

pname = "machines-binary";
version = "0.3.0.3";
sha256 = "60ff456d658ea1a427f32ee5ae1c726e2e7703942bd33edf28b457d753c20652";
libraryHaskellDepends = [
base
binary
bytestring
machines
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aloiscochard/machines-binary";
description = "Binary utilities for the machines library";
license = stdenv.lib.licenses.asl20;

}) {};
"machines-directory" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, machines
, machines-io
, stdenv
, transformers
}:
mkDerivation {

pname = "machines-directory";
version = "0.2.1.0";
sha256 = "849c07db6ff6cfd88348d228a7a3f8ccb16e99568230ee0d20faa5670474deb4";
libraryHaskellDepends = [
base
directory
filepath
machines
machines-io
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aloiscochard/machines-directory";
description = "Directory (system) utilities for the machines library";
license = stdenv.lib.licenses.asl20;

}) {};
"machines-io" = callPackage
({
  mkDerivation
, base
, bytestring
, chunked-data
, machines
, stdenv
, transformers
}:
mkDerivation {

pname = "machines-io";
version = "0.2.0.13";
sha256 = "4d579d5e9e94fafcfca91322734263498999d2e2af45c40ff0d1db78f4a8f5d4";
libraryHaskellDepends = [
base
bytestring
chunked-data
machines
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aloiscochard/machines-io";
description = "IO utilities for the machines library";
license = stdenv.lib.licenses.asl20;

}) {};
"mainland-pretty" = callPackage
({
  mkDerivation
, base
, containers
, srcloc
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "mainland-pretty";
version = "0.6.1";
sha256 = "e34624877cd2d2a2caae87598d0a9512834f560d7b17982fcdab533992dd45e0";
libraryHaskellDepends = [
base
containers
srcloc
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mainland/mainland-pretty";
description = "Pretty printing designed for printing source code";
license = stdenv.lib.licenses.bsd3;

}) {};
"makefile" = callPackage
({
  mkDerivation
, attoparsec
, base
, stdenv
, text
}:
mkDerivation {

pname = "makefile";
version = "1.1.0.0";
sha256 = "ed7a12094fe93ef0c6350ed6607ad488703f54bc2ad5d8cb2f9d89eb10b75c07";
libraryHaskellDepends = [
attoparsec
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nmattia/mask";
description = "Simple Makefile parser and generator";
license = stdenv.lib.licenses.mit;

}) {};
"managed" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "managed";
version = "1.0.6";
sha256 = "f1a70a23c0866b75d609b2c818b426712d7a2b4256f43a3d5da517e853e279cd";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "A monad for managed values";
license = stdenv.lib.licenses.bsd3;

}) {};
"mandrill" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, blaze-html
, bytestring
, containers
, email-validate
, http-client
, http-client-tls
, http-types
, lens
, mtl
, old-locale
, QuickCheck
, stdenv
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "mandrill";
version = "0.5.3.3";
sha256 = "c85a7a5211006abd496df2a21470c2b6666149f9e7dfbd8a8826604c918b1e42";
libraryHaskellDepends = [
aeson
base
base64-bytestring
blaze-html
bytestring
containers
email-validate
http-client
http-client-tls
http-types
lens
mtl
old-locale
QuickCheck
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Library for interfacing with the Mandrill JSON API";
license = stdenv.lib.licenses.mit;

}) {};
"map-syntax" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "map-syntax";
version = "0.2.0.2";
sha256 = "b18f95a6369a600fda189c6f475606cbf5f5f1827f96ca3384f33ae76bda4d8a";
revision = "2";
editedCabalFile = "12b3pbrd70xpx634ngl4dcvda5p9494wq6mc8s1wv4624hwlgja6";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
description = "Syntax sugar for defining maps";
license = stdenv.lib.licenses.bsd3;

}) {};
"mapquest-api" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, exceptions
, goggles
, mtl
, req
, stdenv
, text
}:
mkDerivation {

pname = "mapquest-api";
version = "0.3.1";
sha256 = "43339221b91816e8f793a98a4d281285e8e9de8788f13bb30ec345ef855a7b85";
libraryHaskellDepends = [
aeson
base
bytestring
exceptions
goggles
mtl
req
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocramz/mapquest-api";
description = "Bindings to the MapQuest API";
license = stdenv.lib.licenses.bsd3;

}) {};
"markdown" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-html
, blaze-markup
, conduit
, conduit-extra
, containers
, data-default
, stdenv
, text
, transformers
, xml-conduit
, xml-types
, xss-sanitize
}:
mkDerivation {

pname = "markdown";
version = "0.1.17.1";
sha256 = "e1f72d8829bdc86f52aba9f31f107847dc29b240cca9de7dd5efc2ba01673b58";
libraryHaskellDepends = [
attoparsec
base
blaze-html
blaze-markup
conduit
conduit-extra
containers
data-default
text
transformers
xml-conduit
xml-types
xss-sanitize
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/markdown";
description = "Convert Markdown to HTML, with XSS protection";
license = stdenv.lib.licenses.bsd3;

}) {};
"markdown-unlit" = callPackage
({
  mkDerivation
, base
, base-compat
, stdenv
}:
mkDerivation {

pname = "markdown-unlit";
version = "0.5.0";
sha256 = "e72d0d7b82525e2a2c664012ce9dc35835b3fff91040d9f20897ed82f24ec7bf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
];
executableHaskellDepends = [
base
base-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/markdown-unlit#readme";
description = "Literate Haskell support for Markdown";
license = stdenv.lib.licenses.mit;

}) {};
"markov-chain" = callPackage
({
  mkDerivation
, base
, containers
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "markov-chain";
version = "0.0.3.4";
sha256 = "6e51b800101a28593be28ce7ef1b21b7cc7a177a821fb99ecd8a28c69b7b92cd";
libraryHaskellDepends = [
base
containers
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/markov-chain/";
description = "Markov Chains for generating random sequences with a user definable behaviour";
license = "GPL";

}) {};
"marvin-interpolate" = callPackage
({
  mkDerivation
, base
, haskell-src-meta
, mtl
, parsec
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "marvin-interpolate";
version = "1.1.2";
sha256 = "d640c3bc2f70e17d1fb23c914a3d19b11f72568fda5d5c52e52c1de2e940eccf";
libraryHaskellDepends = [
base
haskell-src-meta
mtl
parsec
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "http://marvin.readthedocs.io/en/latest/interpolation.html";
description = "Compile time string interpolation a la Scala and CoffeeScript";
license = stdenv.lib.licenses.bsd3;

}) {};
"massiv" = callPackage
({
  mkDerivation
, base
, data-default-class
, deepseq
, ghc-prim
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "massiv";
version = "0.1.6.1";
sha256 = "5eec071c368573e0093ba507fdcc5219aaa127b09affd403d9725cb8a8fad3c5";
libraryHaskellDepends = [
base
data-default-class
deepseq
ghc-prim
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lehins/massiv";
description = "Massiv (Массив) is an Array Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"massiv-io" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, deepseq
, directory
, filepath
, JuicyPixels
, massiv
, netpbm
, process
, stdenv
, vector
}:
mkDerivation {

pname = "massiv-io";
version = "0.1.4.0";
sha256 = "8c118ca171008d92cf4f68a3504e328d6b557afeeb4d4cff9fa9a4cace0b5079";
libraryHaskellDepends = [
base
bytestring
data-default
deepseq
directory
filepath
JuicyPixels
massiv
netpbm
process
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lehins/massiv";
description = "Import/export of Image files into massiv Arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"math-functions" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, stdenv
, vector
, vector-th-unbox
}:
mkDerivation {

pname = "math-functions";
version = "0.2.1.0";
sha256 = "f71b5598de453546396a3f5f7f6ce877fffcc996639b7569d8628cae97da65eb";
libraryHaskellDepends = [
base
deepseq
primitive
vector
vector-th-unbox
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/math-functions";
description = "Special functions and Chebyshev polynomials";
license = stdenv.lib.licenses.bsd3;

}) {};
"mathexpr" = callPackage
({
  mkDerivation
, base
, data-default-class
, stdenv
}:
mkDerivation {

pname = "mathexpr";
version = "0.3.0.0";
sha256 = "23c30ae0c962a7858d57bed320be6421baeb82fa795260e1eea0bc8fcc4871ad";
libraryHaskellDepends = [
base
data-default-class
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mdibaiee/mathexpr";
description = "Parse and evaluate math expressions with variables and functions";
license = stdenv.lib.licenses.gpl3;

}) {};
"matplotlib" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, deepseq
, filepath
, process
, split
, stdenv
, temporary
}:
mkDerivation {

pname = "matplotlib";
version = "0.6.0";
sha256 = "6ddf08827bd7737b1e66969d5f869b6c91bb0610f7e1bf3b7eda3e7cf1c2b980";
libraryHaskellDepends = [
aeson
base
bytestring
containers
deepseq
filepath
process
split
temporary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abarbu/matplotlib-haskell";
description = "Bindings to Matplotlib; a Python plotting library";
license = stdenv.lib.licenses.bsd3;

}) {};
"matrices" = callPackage
({
  mkDerivation
, base
, deepseq
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "matrices";
version = "0.4.5";
sha256 = "2d396f130d675eabaa435caba122fe2b2c1d2dfc5343471131b7392e479b7397";
libraryHaskellDepends = [
base
deepseq
primitive
vector
];
doHaddock = false;
doCheck = false;
description = "native matrix based on vector";
license = stdenv.lib.licenses.bsd3;

}) {};
"matrix" = callPackage
({
  mkDerivation
, base
, deepseq
, loop
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "matrix";
version = "0.3.5.0";
sha256 = "7a3d41c0f66212360057b29ae9f81779c8da9f71b040ad7676699af7e7ca35b5";
libraryHaskellDepends = [
base
deepseq
loop
primitive
vector
];
doHaddock = false;
doCheck = false;
description = "A native implementation of matrix operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"matrix-market-attoparsec" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, exceptions
, scientific
, stdenv
}:
mkDerivation {

pname = "matrix-market-attoparsec";
version = "0.1.0.8";
sha256 = "5e41aa81abdfd6062dc4607ea7c684b9ac09a286d2ebf76829504acf09260a77";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
exceptions
scientific
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocramz/matrix-market-attoparsec";
description = "Parsing and serialization functions for the NIST Matrix Market format";
license = stdenv.lib.licenses.bsd2;

}) {};
"maximal-cliques" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, vector
}:
mkDerivation {

pname = "maximal-cliques";
version = "0.1.1";
sha256 = "709d05c753c7d2d7466ade515da0255fc79241432d0118b3182dd3b2def475e9";
libraryHaskellDepends = [
base
containers
vector
];
doHaddock = false;
doCheck = false;
description = "Enumerate all maximal cliques of a graph";
license = stdenv.lib.licenses.bsd3;

}) {};
"mbox" = callPackage
({
  mkDerivation
, base
, safe
, stdenv
, text
, time
, time-locale-compat
}:
mkDerivation {

pname = "mbox";
version = "0.3.4";
sha256 = "dce4b538bbe03928a1d1438bf80b4d341ffb1a9d23ead1c2b16a04b0fa5371de";
revision = "1";
editedCabalFile = "11jikczq21fnhsvr6n33qbb5q6ixbhab4s0js8n39zwgmglighz5";
libraryHaskellDepends = [
base
safe
text
time
time-locale-compat
];
doHaddock = false;
doCheck = false;
description = "Read and write standard mailbox files";
license = stdenv.lib.licenses.bsd3;

}) {};
"mbox-utility" = callPackage
({
  mkDerivation
, base
, bytestring
, hsemail
, non-empty
, old-time
, parsec
, spreadsheet
, stdenv
, utility-ht
}:
mkDerivation {

pname = "mbox-utility";
version = "0.0.1";
sha256 = "e5e009f83c95b20d85c4b39d233b2f32ee15eae08d54edbaa7928848ae15e9f8";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
hsemail
non-empty
old-time
parsec
spreadsheet
utility-ht
];
doHaddock = false;
doCheck = false;
description = "List contents of an mbox file containing e-mails";
license = stdenv.lib.licenses.bsd3;

}) {};
"mbtiles" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, monad-control
, mtl
, resource-pool
, sqlite-simple
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "mbtiles";
version = "0.6.0.0";
sha256 = "b8a82f0a1c551a59961449587f031f679dd2f5f082ce45b6f7d88d81f99ad62f";
libraryHaskellDepends = [
base
bytestring
directory
monad-control
mtl
resource-pool
sqlite-simple
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/mbtiles#readme";
description = "Haskell MBTiles client";
license = stdenv.lib.licenses.bsd3;

}) {};
"mcmc-types" = callPackage
({
  mkDerivation
, base
, containers
, mwc-probability
, stdenv
, transformers
}:
mkDerivation {

pname = "mcmc-types";
version = "1.0.3";
sha256 = "3c4b25030b05567694ddc313ca808a32133ad5433b4d89837e1ed00bbfcefc6e";
libraryHaskellDepends = [
base
containers
mwc-probability
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/mcmc-types";
description = "Common types for sampling";
license = stdenv.lib.licenses.mit;

}) {};
"med-module" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, storable-endian
, transformers
, utility-ht
}:
mkDerivation {

pname = "med-module";
version = "0.1.1";
sha256 = "f78974fba8f8d17267297b268b84cf7434f51f5d2ad106a461f225f1d873eee3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
storable-endian
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
description = "Parse song module files from Amiga MED and OctaMED";
license = stdenv.lib.licenses.gpl3;

}) {};
"median-stream" = callPackage
({
  mkDerivation
, base
, heap
, stdenv
}:
mkDerivation {

pname = "median-stream";
version = "0.7.0.0";
sha256 = "e92fc44be8189dafe9190aad225462780f26d0b1fe1823376342329db6c71f3d";
libraryHaskellDepends = [
base
heap
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/median-stream#readme";
description = "Constant-time queries for the median of a stream of numeric data";
license = stdenv.lib.licenses.bsd3;

}) {};
"megaparsec" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, deepseq
, mtl
, parser-combinators
, scientific
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "megaparsec";
version = "6.4.1";
sha256 = "de40015dac65c2707a0bd65b7974da4d0cc00593d8bdebc0d58319761ee21370";
revision = "2";
editedCabalFile = "0vh4l2kl9nfxlr8l82qicldybwiv6vbksi3jdk0xjzxmkvgm0jnf";
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
deepseq
mtl
parser-combinators
scientific
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/megaparsec";
description = "Monadic parser combinators";
license = stdenv.lib.licenses.bsd2;

}) {};
"memory" = callPackage
({
  mkDerivation
, base
, basement
, bytestring
, deepseq
, foundation
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "memory";
version = "0.14.16";
sha256 = "7bb0834ab28ce1248f3be09df211d49d20d703cdcda3ed16cde99356e2d72b0f";
libraryHaskellDepends = [
base
basement
bytestring
deepseq
foundation
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-memory";
description = "memory and related abstraction stuff";
license = stdenv.lib.licenses.bsd3;

}) {};
"mercury-api" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, bytestring
, clock
, hashable
, optparse-applicative
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "mercury-api";
version = "0.1.0.1";
sha256 = "f9e398ec0256b065de94f9412de6d164bd6fc425ad64d407d513db232602bb40";
revision = "2";
editedCabalFile = "093c8afmcrnbfliz1ykpyc4w40dli2wig0qi0xcwg8445idwp2kg";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
bytestring
clock
hashable
text
unordered-containers
];
executableHaskellDepends = [
ansi-terminal
base
bytestring
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ppelleti/hs-mercury-api";
description = "Haskell binding to Mercury API for ThingMagic RFID readers";
license = stdenv.lib.licenses.mit;

}) {};
"mersenne-random-pure64" = callPackage
({
  mkDerivation
, base
, random
, stdenv
, time
}:
mkDerivation {

pname = "mersenne-random-pure64";
version = "0.2.2.0";
sha256 = "ef1400ddc1ddafb0b98d4331a58bdbe3b5209a81579e17f85f180731a96d75d1";
libraryHaskellDepends = [
base
random
time
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
license = stdenv.lib.licenses.bsd3;

}) {};
"messagepack" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "messagepack";
version = "0.5.4";
sha256 = "939590c05d5b0831b3b4796f2e1a070e290982c92b2009f2aa1ef5f4b05b5d7c";
revision = "1";
editedCabalFile = "0p13in70gvxl8d8hjl1dcxczfpcfyffy2lxbdy1d21h742ks1zjb";
libraryHaskellDepends = [
base
bytestring
cereal
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rodrigosetti/messagepack";
description = "Serialize instance for Message Pack Object";
license = stdenv.lib.licenses.mit;

}) {};
"messagepack-rpc" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, messagepack
, network-simple
, stdenv
}:
mkDerivation {

pname = "messagepack-rpc";
version = "0.5.1";
sha256 = "aa7960644668284e6add36e5c305af2c6d3ebf0a9a2c3fcd62529554a049a0bc";
revision = "1";
editedCabalFile = "05p6naaxswmsc3w7k67ydzzwyn60ymp0jbrc0f66p2sajvlnviax";
libraryHaskellDepends = [
base
bytestring
cereal
containers
messagepack
network-simple
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/rodrigosetti/messagepack-rpc";
description = "Message Pack RPC over TCP";
license = stdenv.lib.licenses.mit;

}) {};
"metrics" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, bytestring
, containers
, lens
, mwc-random
, primitive
, stdenv
, text
, time
, transformers
, transformers-base
, unix-compat
, unordered-containers
, vector
, vector-algorithms
}:
mkDerivation {

pname = "metrics";
version = "0.4.1.1";
sha256 = "d55f6e704ec6f0c6bab0da46417049b7de3e76ca69a0be4c49a790db28c75bb8";
libraryHaskellDepends = [
ansi-terminal
base
bytestring
containers
lens
mwc-random
primitive
text
time
transformers
transformers-base
unix-compat
unordered-containers
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
description = "High-performance application metric tracking";
license = stdenv.lib.licenses.mit;

}) {};
"microformats2-parser" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, aeson-qq
, attoparsec
, base
, base-compat
, blaze-html
, blaze-markup
, bytestring
, containers
, data-default
, either
, errors
, html-conduit
, lens-aeson
, network
, network-uri
, options
, pcre-heavy
, safe
, scotty
, stdenv
, tagsoup
, text
, time
, transformers
, unordered-containers
, vector
, wai-cli
, wai-extra
, xml-lens
, xss-sanitize
}:
mkDerivation {

pname = "microformats2-parser";
version = "1.0.1.7";
sha256 = "def0a462fcfaa344629ee05ced7a93593bad2749148873b4f4c63e3f0c6758f1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-qq
attoparsec
base
base-compat
blaze-markup
bytestring
containers
data-default
either
errors
html-conduit
lens-aeson
network-uri
pcre-heavy
safe
tagsoup
text
time
transformers
unordered-containers
vector
xml-lens
xss-sanitize
];
executableHaskellDepends = [
aeson
aeson-pretty
base
base-compat
blaze-html
blaze-markup
data-default
network
network-uri
options
scotty
text
wai-cli
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/microformats2-parser";
description = "A Microformats 2 parser";
license = stdenv.lib.licenses.publicDomain;

}) {};
"microlens" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "microlens";
version = "0.4.8.3";
sha256 = "53445b345d493e381173e6d7dc428116717cee9216e1fe069b96e68657151d9f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "A tiny lens library with no dependencies. If you're writing an app, you probably want microlens-platform, not this.";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-aeson" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, deepseq
, hashable
, microlens
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "microlens-aeson";
version = "2.3.0";
sha256 = "f2f28288bfc190127423a452514d35f7b66f9d5625cf6653bb34cb020aa450c5";
revision = "1";
editedCabalFile = "0nzkdmdfvamhn24lhvg9gjda2rpv8iv7jab0r6drmpk33rxs613s";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
deepseq
hashable
microlens
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fosskers/microlens-aeson/";
description = "Law-abiding lenses for Aeson, using microlens";
license = stdenv.lib.licenses.mit;

}) {};
"microlens-contra" = callPackage
({
  mkDerivation
, base
, contravariant
, microlens
, stdenv
}:
mkDerivation {

pname = "microlens-contra";
version = "0.1.0.1";
sha256 = "4983f19d37168a7cb862f76a22e8a43156df89c3c58b8206e2c84b2262c7f595";
libraryHaskellDepends = [
base
contravariant
microlens
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "True folds and getters for microlens";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-ghc" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, microlens
, stdenv
, transformers
}:
mkDerivation {

pname = "microlens-ghc";
version = "0.4.8.0";
sha256 = "dea1ea2fa61dea6ebb431e95b36ae4e2011ddb94ad3e0693173fd41f1858697a";
libraryHaskellDepends = [
array
base
bytestring
containers
microlens
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "microlens + array, bytestring, containers, transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-mtl" = callPackage
({
  mkDerivation
, base
, microlens
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "microlens-mtl";
version = "0.1.11.1";
sha256 = "d3e74f46a72aad12b71d8549a98fbc023fb364766f17d75742fb32fee70bdf50";
libraryHaskellDepends = [
base
microlens
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "microlens support for Reader/Writer/State from mtl";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-platform" = callPackage
({
  mkDerivation
, base
, hashable
, microlens
, microlens-ghc
, microlens-mtl
, microlens-th
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "microlens-platform";
version = "0.3.9.0";
sha256 = "93076f4c17e5ce65db89ccf50924b395667a730c8ff0c1a94b03b94b9a373539";
libraryHaskellDepends = [
base
hashable
microlens
microlens-ghc
microlens-mtl
microlens-th
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "Feature-complete microlens";
license = stdenv.lib.licenses.bsd3;

}) {};
"microlens-th" = callPackage
({
  mkDerivation
, base
, containers
, microlens
, stdenv
, template-haskell
}:
mkDerivation {

pname = "microlens-th";
version = "0.4.1.3";
sha256 = "8e5c3bfc477ac9fa516b1a28a02a58a8ba2daeed99ff716cb06c3dda31134195";
libraryHaskellDepends = [
base
containers
microlens
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/microlens";
description = "Automatic generation of record lenses for microlens";
license = stdenv.lib.licenses.bsd3;

}) {};
"microspec" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "microspec";
version = "0.1.0.0";
sha256 = "e1e4156574d81786e1c8d04ba22e7283001ef3eada3104a99e9c31a45656d343";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
description = "Tiny QuickCheck test library with minimal dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"microstache" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, parsec
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "microstache";
version = "1.0.1.1";
sha256 = "5de98542313eb75f84961366ff8a70ed632387ba6518215035b2dd1b32d6a120";
revision = "2";
editedCabalFile = "0rl6vgmjnf1a14kiynh4gnmy6n6kkik9hqj9k5vqw68h4f110i4b";
libraryHaskellDepends = [
aeson
base
bytestring
containers
deepseq
directory
filepath
parsec
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/microstache";
description = "Mustache templates for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"midi" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, event-list
, explicit-exception
, monoid-transformer
, non-negative
, QuickCheck
, random
, semigroups
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "midi";
version = "0.2.2.2";
sha256 = "de7cb58971a43f23e2a1ec0c4c01f690c1dd11ba55bc71264e1b9731014a693b";
libraryHaskellDepends = [
base
binary
bytestring
event-list
explicit-exception
monoid-transformer
non-negative
QuickCheck
random
semigroups
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/MIDI";
description = "Handling of MIDI messages and files";
license = "GPL";

}) {};
"mighty-metropolis" = callPackage
({
  mkDerivation
, base
, kan-extensions
, mcmc-types
, mwc-probability
, pipes
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "mighty-metropolis";
version = "1.2.0";
sha256 = "8d3c0b4b65024846291c4f547c45e5c04f587aefd0e8d041d54679bb519871c0";
libraryHaskellDepends = [
base
kan-extensions
mcmc-types
mwc-probability
pipes
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/mighty-metropolis";
description = "The Metropolis algorithm";
license = stdenv.lib.licenses.mit;

}) {};
"milena" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, digest
, lens
, lifted-base
, monad-control
, mtl
, murmur-hash
, network
, random
, resource-pool
, semigroups
, stdenv
, transformers
, zlib
}:
mkDerivation {

pname = "milena";
version = "0.5.2.2";
sha256 = "21da8cd70415a1ea46a463f715c228cd222785829caed39a3f065f9e4e164f35";
libraryHaskellDepends = [
base
bytestring
cereal
containers
digest
lens
lifted-base
monad-control
mtl
murmur-hash
network
random
resource-pool
semigroups
transformers
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/adamflott/milena.git#readme";
description = "A Kafka client for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"mime-mail" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, bytestring
, filepath
, process
, random
, stdenv
, text
}:
mkDerivation {

pname = "mime-mail";
version = "0.4.14";
sha256 = "9632c3d54c9741fece0a3ea705d965485a1299ebe5798d2aa7cca2c8e4baaa3e";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
bytestring
filepath
process
random
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/mime-mail";
description = "Compose MIME email messages";
license = stdenv.lib.licenses.mit;

}) {};
"mime-mail-ses" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, byteable
, bytestring
, conduit
, cryptohash
, http-client
, http-client-tls
, http-conduit
, http-types
, mime-mail
, old-locale
, stdenv
, text
, time
, transformers
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "mime-mail-ses";
version = "0.4.1";
sha256 = "a76f29d1e52d8fbfc7ea8119f6ede5ed87f9e5b9d5587f1e6c69295f2a23d3f0";
libraryHaskellDepends = [
base
base64-bytestring
byteable
bytestring
conduit
cryptohash
http-client
http-client-tls
http-conduit
http-types
mime-mail
old-locale
text
time
transformers
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/mime-mail";
description = "Send mime-mail messages via Amazon SES";
license = stdenv.lib.licenses.mit;

}) {};
"mime-types" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, text
}:
mkDerivation {

pname = "mime-types";
version = "0.1.0.7";
sha256 = "83164a24963a7ef37543349df095155b30116c208e602a159a5cd3722f66e9b9";
libraryHaskellDepends = [
base
bytestring
containers
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "Basic mime-type handling types and functions";
license = stdenv.lib.licenses.mit;

}) {};
"minimorph" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "minimorph";
version = "0.1.6.1";
sha256 = "94677b454b86a47d1b04ef1462873708976546bbb7a3bcc4f3ffe222d98bb844";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Mikolaj/minimorph";
description = "English spelling functions with an emphasis on simplicity";
license = stdenv.lib.licenses.bsd3;

}) {};
"minio-hs" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, case-insensitive
, conduit
, conduit-extra
, containers
, cryptonite
, cryptonite-conduit
, data-default
, filepath
, http-client
, http-conduit
, http-types
, memory
, protolude
, resourcet
, stdenv
, text
, time
, transformers
, unliftio
, unliftio-core
, xml-conduit
}:
mkDerivation {

pname = "minio-hs";
version = "1.0.1";
sha256 = "5b2f6c78803de3ce47b4193b086da8fe0e9291b695b47a49881ef6d4bf29b443";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
case-insensitive
conduit
conduit-extra
containers
cryptonite
cryptonite-conduit
data-default
filepath
http-client
http-conduit
http-types
memory
protolude
resourcet
text
time
transformers
unliftio
unliftio-core
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minio/minio-hs#readme";
description = "A Minio Haskell Library for Amazon S3 compatible cloud storage";
license = stdenv.lib.licenses.asl20;

}) {};
"miniutter" = callPackage
({
  mkDerivation
, base
, binary
, containers
, ghc-prim
, minimorph
, stdenv
, text
}:
mkDerivation {

pname = "miniutter";
version = "0.4.7.0";
sha256 = "adc9ac6a2160e87a8a4c4b88087d478ee74dded59d0cf6205a105dc0f778dc82";
libraryHaskellDepends = [
base
binary
containers
ghc-prim
minimorph
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Mikolaj/miniutter";
description = "Simple English clause creation from arbitrary words";
license = stdenv.lib.licenses.bsd3;

}) {};
"mintty" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "mintty";
version = "0.1.2";
sha256 = "7c8af77bcde4e9b54692e3761f41adf35a50664974ba77f2ba65ea2af9f950da";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/mintty";
description = "A reliable way to detect the presence of a MinTTY console on Windows";
license = stdenv.lib.licenses.bsd3;

}) {};
"misfortune" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, directory
, filepath
, knob
, monad-loops
, random-fu
, regex-base
, regex-pcre
, semigroups
, stdenv
, text
, utf8-string
, vector
}:
mkDerivation {

pname = "misfortune";
version = "0.1.1.2";
sha256 = "ae4b44215f811e7af6af756c813b9bd6e4161be555f30dd817324f8d1ffe2349";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
directory
filepath
knob
random-fu
semigroups
text
utf8-string
vector
];
executableHaskellDepends = [
monad-loops
regex-base
regex-pcre
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/misfortune";
description = "fortune-mod clone";
license = stdenv.lib.licenses.publicDomain;

}) {};
"miso" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, http-api-data
, http-types
, lucid
, network-uri
, servant
, servant-lucid
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "miso";
version = "0.14.0.0";
sha256 = "dd5668b43f85b4c4835f2f48b01e0b9cb23eac044977de6496925919190f119b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
http-api-data
http-types
lucid
network-uri
servant
servant-lucid
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dmjio/miso";
description = "A tasty Haskell front-end framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"missing-foreign" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "missing-foreign";
version = "0.1.1";
sha256 = "9e1b36cdb8626d848386c1c4d54f3b9f80b3458398aa6a4d499266b5ecbcc885";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Convenience functions for FFI work";
license = stdenv.lib.licenses.bsd3;

}) {};
"mixed-types-num" = callPackage
({
  mkDerivation
, base
, convertible
, hspec
, hspec-smallcheck
, QuickCheck
, smallcheck
, stdenv
, template-haskell
}:
mkDerivation {

pname = "mixed-types-num";
version = "0.3.1.4";
sha256 = "c4ffffea5a5eae0a1fafde3187be1bdf9cd0d166bee0bd502b1aa6cd898dc100";
libraryHaskellDepends = [
base
convertible
hspec
hspec-smallcheck
QuickCheck
smallcheck
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michalkonecny/mixed-types-num";
description = "Alternative Prelude with numeric and logic expressions typed bottom-up";
license = stdenv.lib.licenses.bsd3;

}) {};
"mltool" = callPackage
({
  mkDerivation
, ascii-progress
, base
, deepseq
, hmatrix
, hmatrix-gsl
, hmatrix-gsl-stats
, MonadRandom
, random
, stdenv
, vector
}:
mkDerivation {

pname = "mltool";
version = "0.1.0.2";
sha256 = "379ca73b496e1a589be6d8d75a4067e2eb382e6500530f10b40bfda59042f5bf";
libraryHaskellDepends = [
ascii-progress
base
deepseq
hmatrix
hmatrix-gsl
hmatrix-gsl-stats
MonadRandom
random
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alexander-ignatyev/mltool";
description = "Machine Learning Toolbox";
license = stdenv.lib.licenses.bsd3;

}) {};
"mmap" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "mmap";
version = "0.5.9";
sha256 = "58fcbb04e1cb8e7c36c05823b02dce2faaa989c53d745a7f36192de2fc98b5f8";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Memory mapped files for POSIX and Windows";
license = stdenv.lib.licenses.bsd3;

}) {};
"mmark" = callPackage
({
  mkDerivation
, aeson
, base
, case-insensitive
, containers
, data-default-class
, deepseq
, dlist
, email-validate
, foldl
, hashable
, html-entity-map
, lucid
, megaparsec
, microlens
, microlens-th
, modern-uri
, mtl
, parser-combinators
, stdenv
, text
, text-metrics
, unordered-containers
, yaml
}:
mkDerivation {

pname = "mmark";
version = "0.0.5.6";
sha256 = "fc036385fd4cea07a490df00d8fe443cc6656a6d090d537d4d5e860564ef1234";
revision = "3";
editedCabalFile = "0asb998ch5b33s84ssdps3w7mdlhksmd9c580npg7xkrw60mwjfb";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
case-insensitive
containers
data-default-class
deepseq
dlist
email-validate
foldl
hashable
html-entity-map
lucid
megaparsec
microlens
microlens-th
modern-uri
mtl
parser-combinators
text
text-metrics
unordered-containers
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mmark-md/mmark";
description = "Strict markdown processor for writers";
license = stdenv.lib.licenses.bsd3;

}) {};
"mmark-cli" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, directory
, gitrev
, lucid
, megaparsec
, mmark
, mmark-ext
, optparse-applicative
, stache
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "mmark-cli";
version = "0.0.3.0";
sha256 = "37d3e98d15ccc036db5e2ec1b8b1e84a20c303ba1821a44ec441e835c43c6159";
revision = "2";
editedCabalFile = "0i3gvfgm4bfbdyflhhaf4gdr7cbkw51i330f25rgha9k3s4v59w3";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
base
bytestring
directory
gitrev
lucid
megaparsec
mmark
mmark-ext
optparse-applicative
stache
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mmark-md/mmark-cli";
description = "Command line interface to MMark markdown processor";
license = stdenv.lib.licenses.bsd3;

}) {};
"mmark-ext" = callPackage
({
  mkDerivation
, base
, foldl
, lucid
, microlens
, mmark
, modern-uri
, skylighting
, stdenv
, text
}:
mkDerivation {

pname = "mmark-ext";
version = "0.2.1.0";
sha256 = "1a02396a80708c60b3aecb668c16a3d0cb890bbfcc4fbf722c9742b75ce23fcd";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
foldl
lucid
microlens
mmark
modern-uri
skylighting
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mmark-md/mmark-ext";
description = "Commonly useful extensions for the MMark markdown processor";
license = stdenv.lib.licenses.bsd3;

}) {};
"mmorph" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "mmorph";
version = "1.1.2";
sha256 = "c90afd7996c94be2b9a5796a7b94918d198c53b0c1d7a3eaf2982293560c5fbe";
libraryHaskellDepends = [
base
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Monad morphisms";
license = stdenv.lib.licenses.bsd3;

}) {};
"mnist-idx" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, stdenv
, vector
}:
mkDerivation {

pname = "mnist-idx";
version = "0.1.2.8";
sha256 = "42ff167e84414821ed47d783042cad20a0bd198f935648aa6cdf97bdc291b2fe";
libraryHaskellDepends = [
base
binary
bytestring
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kryoxide/mnist-idx/";
description = "Read and write IDX data that is used in e.g. the MNIST database.";
license = stdenv.lib.licenses.lgpl3;

}) {};
"mockery" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, directory
, filepath
, logging-facade
, stdenv
, temporary
}:
mkDerivation {

pname = "mockery";
version = "0.3.5";
sha256 = "b7a1edacd3d32dc7f0e28c67877209d3ca3551d1da186f6445f825f3477dd727";
libraryHaskellDepends = [
base
base-compat
bytestring
directory
filepath
logging-facade
temporary
];
doHaddock = false;
doCheck = false;
description = "Support functions for automated testing";
license = stdenv.lib.licenses.mit;

}) {};
"model" = callPackage
({
  mkDerivation
, base
, containers
, convertible
, deepseq
, either
, pretty
, stdenv
, transformers
}:
mkDerivation {

pname = "model";
version = "0.4.4";
sha256 = "44e0a604e5461b00818fbb6f2ec755dd56f7b533a5d255c1c50f328f4e0dbbd6";
libraryHaskellDepends = [
base
containers
convertible
deepseq
either
pretty
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tittoassini/model";
description = "Derive a model of a data type using Generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"modern-uri" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, contravariant
, deepseq
, exceptions
, megaparsec
, mtl
, profunctors
, QuickCheck
, reflection
, stdenv
, tagged
, template-haskell
, text
}:
mkDerivation {

pname = "modern-uri";
version = "0.2.1.0";
sha256 = "e65aca7e994b3a470584da17571878084e90120507b8deab9a9b021d529f981a";
revision = "4";
editedCabalFile = "00vr4g5cmhd3d1329hwcdq55yjq8n5jxz15sgl0sawcg5mw5ihyy";
libraryHaskellDepends = [
base
bytestring
containers
contravariant
deepseq
exceptions
megaparsec
mtl
profunctors
QuickCheck
reflection
tagged
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/modern-uri";
description = "Modern library for working with URIs";
license = stdenv.lib.licenses.bsd3;

}) {};
"modify-fasta" = callPackage
({
  mkDerivation
, base
, containers
, fasta
, mtl
, optparse-applicative
, pipes
, pipes-text
, regex-tdfa
, regex-tdfa-text
, semigroups
, split
, stdenv
, text
, text-show
, transformers
}:
mkDerivation {

pname = "modify-fasta";
version = "0.8.3.0";
sha256 = "39dd76a2261f7a3ce7e6253b8f33b8e7a62cac5848a8085012903c06582976c3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
fasta
regex-tdfa
regex-tdfa-text
split
text
text-show
];
executableHaskellDepends = [
base
containers
fasta
mtl
optparse-applicative
pipes
pipes-text
semigroups
split
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GregorySchwartz/modify-fasta";
description = "Modify fasta (and CLIP) files in several optional ways";
license = stdenv.lib.licenses.gpl3;

}) {};
"moesocks" = callPackage
({
  mkDerivation
, aeson
, async
, attoparsec
, base
, binary
, bytestring
, containers
, cryptohash
, hslogger
, HsOpenSSL
, iproute
, lens
, lens-aeson
, mtl
, network
, optparse-applicative
, random
, stdenv
, stm
, strict
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "moesocks";
version = "1.0.0.44";
sha256 = "bf35a237dffeaebc82237439fe457d0c423d235a48a69f02c9e616297540e1c8";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
async
attoparsec
base
binary
bytestring
containers
cryptohash
hslogger
HsOpenSSL
iproute
lens
lens-aeson
mtl
network
optparse-applicative
random
stm
strict
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nfjinjing/moesocks";
description = "A functional firewall killer";
license = stdenv.lib.licenses.asl20;

}) {};
"mole" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, bytestring
, containers
, cryptohash
, css-syntax
, directory
, filemanip
, filepath
, fsnotify
, kraken
, mtl
, network-uri
, optparse-applicative
, process
, snap-core
, snap-server
, stdenv
, stm
, tagsoup
, text
, time
, transformers
, unix
}:
mkDerivation {

pname = "mole";
version = "0.0.6";
sha256 = "ab7803cd42f79d5aad4492c257b06c9d7079f15f84e52d63978565c374e81a6a";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
attoparsec
base
base64-bytestring
bytestring
containers
cryptohash
css-syntax
directory
filemanip
filepath
fsnotify
kraken
mtl
network-uri
optparse-applicative
process
snap-core
snap-server
stm
tagsoup
text
time
transformers
unix
];
doHaddock = false;
doCheck = false;
description = "A glorified string replacement tool";
license = stdenv.lib.licenses.mit;

}) {};
"monad-control" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "monad-control";
version = "1.0.2.3";
sha256 = "6c1034189d237ae45368c70f0e68f714dd3beda715dd265b6c8a99fcc64022b1";
libraryHaskellDepends = [
base
stm
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/monad-control";
description = "Lift control operations, like exception catching, through monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-control-aligned" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "monad-control-aligned";
version = "0.0.1.1";
sha256 = "44e78fd32d6644e974ab0644dc79331643c8ada4837c8f3c94f4a30b5ee011f6";
libraryHaskellDepends = [
base
stm
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/monad-control#readme";
description = "Just like monad-control, except less efficient, and the monadic state terms are all * -> *";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-coroutine" = callPackage
({
  mkDerivation
, base
, monad-parallel
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monad-coroutine";
version = "0.9.0.4";
sha256 = "13e0ff12046296390ea69dda5001aa02b1b57e968447d27712a24c8c7cfe5de7";
libraryHaskellDepends = [
base
monad-parallel
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
description = "Coroutine monad transformer for suspending and resuming monadic computations";
license = "GPL";

}) {};
"monad-extras" = callPackage
({
  mkDerivation
, base
, mmorph
, monad-control
, stdenv
, stm
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-extras";
version = "0.6.0";
sha256 = "df33d7c51a97d16226b8160d9bc09686cb6f7b7bf5c54557381c6fe4a3c84f2c";
libraryHaskellDepends = [
base
mmorph
monad-control
stm
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jwiegley/monad-extras";
description = "Extra utility functions for working with monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-journal" = callPackage
({
  mkDerivation
, base
, monad-control
, mtl
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-journal";
version = "0.8.1";
sha256 = "e20ac220086081b5cf1964e9486e04113ec03b15f247512a2193898100a105ac";
libraryHaskellDepends = [
base
monad-control
mtl
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/phaazon/monad-journal";
description = "Pure logger typeclass and monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-logger" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, exceptions
, fast-logger
, lifted-base
, monad-control
, monad-loops
, mtl
, resourcet
, stdenv
, stm
, stm-chans
, template-haskell
, text
, transformers
, transformers-base
, transformers-compat
, unliftio-core
}:
mkDerivation {

pname = "monad-logger";
version = "0.3.28.5";
sha256 = "225ed7cd2d0d375c0207d5d3b9faa12b339ca7dd51ca92f96d3eaf2d360027f1";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
exceptions
fast-logger
lifted-base
monad-control
monad-loops
mtl
resourcet
stm
stm-chans
template-haskell
text
transformers
transformers-base
transformers-compat
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/monad-logger#readme";
description = "A class of monads which can log messages";
license = stdenv.lib.licenses.mit;

}) {};
"monad-logger-json" = callPackage
({
  mkDerivation
, aeson
, base
, monad-logger
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "monad-logger-json";
version = "0.1.0.0";
sha256 = "10871c4aef838c01c8fdd7586161367b4d66907a53cbd9737efb717a1041e9aa";
libraryHaskellDepends = [
aeson
base
monad-logger
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/fpco/monad-logger-json";
description = "JSON-friendly Logging APIs";
license = stdenv.lib.licenses.mit;

}) {};
"monad-logger-prefix" = callPackage
({
  mkDerivation
, base
, exceptions
, monad-control
, monad-logger
, mtl
, resourcet
, stdenv
, text
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-logger-prefix";
version = "0.1.10";
sha256 = "a3ac2d043a13d9e9296692dc729a299361b04757690894cac1b6904510a0d975";
libraryHaskellDepends = [
base
exceptions
monad-control
monad-logger
mtl
resourcet
text
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/parsonsmatt/monad-logger-prefix#readme";
description = "Add prefixes to your monad-logger output";
license = stdenv.lib.licenses.asl20;

}) {};
"monad-logger-syslog" = callPackage
({
  mkDerivation
, base
, bytestring
, fast-logger
, hsyslog
, monad-logger
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "monad-logger-syslog";
version = "0.1.4.0";
sha256 = "052c3e13e235e7fb31caecc117e3ab4629e85bbfd3b35ec03f74d732acbc9ccb";
libraryHaskellDepends = [
base
bytestring
fast-logger
hsyslog
monad-logger
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/monad-logger-syslog";
description = "syslog output for monad-logger";
license = stdenv.lib.licenses.mit;

}) {};
"monad-loops" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "monad-loops";
version = "0.4.3";
sha256 = "7eaaaf6bc43661e9e86e310ff8c56fbea16eb6bf13c31a2e28103138ac164c18";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/monad-loops";
description = "Monadic loops";
license = stdenv.lib.licenses.publicDomain;

}) {};
"monad-memo" = callPackage
({
  mkDerivation
, array
, base
, containers
, mtl
, primitive
, stdenv
, transformers
, vector
}:
mkDerivation {

pname = "monad-memo";
version = "0.4.1";
sha256 = "4c00c4aff00c85bfcce0a9a7d96a2a7d08f1efe64b3326e67e47499d5168f11d";
libraryHaskellDepends = [
array
base
containers
mtl
primitive
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/EduardSergeev/monad-memo";
description = "Memoization monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-metrics" = callPackage
({
  mkDerivation
, base
, clock
, ekg-core
, exceptions
, hashable
, microlens
, mtl
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "monad-metrics";
version = "0.2.1.1";
sha256 = "fe179a952dd85ddc1efd94f8ab7b98c02e6be818dcd4b499a60a1d437234f985";
libraryHaskellDepends = [
base
clock
ekg-core
exceptions
hashable
microlens
mtl
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sellerlabs/monad-metrics#readme";
description = "A convenient wrapper around EKG metrics";
license = stdenv.lib.licenses.mit;

}) {};
"monad-mock" = callPackage
({
  mkDerivation
, base
, constraints
, exceptions
, haskell-src-exts
, haskell-src-meta
, monad-control
, mtl
, stdenv
, template-haskell
, th-orphans
, transformers-base
}:
mkDerivation {

pname = "monad-mock";
version = "0.2.0.0";
sha256 = "7bafe50c2671d83e1bc7d4697985d1cda12ab5570b7fa4ddbf09c047b9982a7b";
libraryHaskellDepends = [
base
constraints
exceptions
haskell-src-exts
haskell-src-meta
monad-control
mtl
template-haskell
th-orphans
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cjdev/monad-mock#readme";
description = "A monad transformer for mocking mtl-style typeclasses";
license = stdenv.lib.licenses.isc;

}) {};
"monad-par" = callPackage
({
  mkDerivation
, abstract-deque
, abstract-par
, array
, base
, containers
, deepseq
, monad-par-extras
, mtl
, mwc-random
, parallel
, stdenv
}:
mkDerivation {

pname = "monad-par";
version = "0.3.4.8";
sha256 = "f84cdf51908a1c41c3f672be9520a8fdc028ea39d90a25ecfe5a3b223cfeb951";
libraryHaskellDepends = [
abstract-deque
abstract-par
array
base
containers
deepseq
monad-par-extras
mtl
mwc-random
parallel
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/monad-par";
description = "A library for parallel programming based on a monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-par-extras" = callPackage
({
  mkDerivation
, abstract-par
, base
, cereal
, deepseq
, mtl
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "monad-par-extras";
version = "0.3.3";
sha256 = "e21e33190bc248afa4ae467287ac37d24037ef3de6050c44fd85b52f4d5b842e";
libraryHaskellDepends = [
abstract-par
base
cereal
deepseq
mtl
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmar/monad-par";
description = "Combinators and extra features for Par monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-parallel" = callPackage
({
  mkDerivation
, base
, parallel
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monad-parallel";
version = "0.7.2.3";
sha256 = "128fb8c36be717f82aa3146d855303f48d04c56ba025078e6cd35d6050b45089";
libraryHaskellDepends = [
base
parallel
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
description = "Parallel execution of monadic computations";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-peel" = callPackage
({
  mkDerivation
, base
, extensible-exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "monad-peel";
version = "0.2.1.2";
sha256 = "2dd5e9090f3951dbc298e35c3cea7099818aba0485a55059475c4f346fc933f4";
libraryHaskellDepends = [
base
extensible-exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://andersk.mit.edu/haskell/monad-peel/";
description = "Lift control operations like exception catching through monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-products" = callPackage
({
  mkDerivation
, base
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "monad-products";
version = "4.0.1";
sha256 = "02bfe1db2ae1a5cff19f73736a219605b1f0649f6af44ca848d09160a7946cea";
libraryHaskellDepends = [
base
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/monad-products";
description = "Monad products";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-recorder" = callPackage
({
  mkDerivation
, base
, exceptions
, monad-control
, mtl
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-recorder";
version = "0.1.1";
sha256 = "0863eb37dae0a9dc996a73dd7743d0c9fc22b9713d4be4d7c7e49e4e073ca215";
libraryHaskellDepends = [
base
exceptions
monad-control
mtl
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/harendra-kumar/monad-recorder";
description = "Record and replay the results of monadic actions";
license = stdenv.lib.licenses.mit;

}) {};
"monad-skeleton" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "monad-skeleton";
version = "0.1.5";
sha256 = "a96840713ffdbb97d58e8dc7a47d2b725993868f005903fa9aa26bcf6f32559e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/monad-skeleton";
description = "Monads of program skeleta";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-st" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "monad-st";
version = "0.2.4.1";
sha256 = "8e1818576bc486e884b953680fe41c524ff23eef2ec382b5f28f47fa7b8abf08";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/monad-st";
description = "Provides a MonadST class";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-time" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, time
}:
mkDerivation {

pname = "monad-time";
version = "0.2";
sha256 = "a9b901ca94b4c71d5f374a472506db92d26b13af523ceafe1e3302e8bae8b05d";
revision = "1";
editedCabalFile = "1v59w75w589mh6n3ga2fcihgmjmg0vd0q7fg9l2q52yhgx5pz9m3";
libraryHaskellDepends = [
base
mtl
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scrive/monad-time";
description = "Type class for monads which carry the notion of the current time";
license = stdenv.lib.licenses.bsd3;

}) {};
"monad-unlift" = callPackage
({
  mkDerivation
, base
, constraints
, monad-control
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-unlift";
version = "0.2.0";
sha256 = "4b5e638619e4821918b4ec67aeffb581ab9df23d168fbb72164137009a15ee0f";
libraryHaskellDepends = [
base
constraints
monad-control
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/monad-unlift";
description = "Typeclasses for representing monad transformer unlifting";
license = stdenv.lib.licenses.mit;

}) {};
"monad-unlift-ref" = callPackage
({
  mkDerivation
, base
, constraints
, exceptions
, monad-control
, monad-unlift
, mtl
, mutable-containers
, resourcet
, stdenv
, stm
, transformers
, transformers-base
}:
mkDerivation {

pname = "monad-unlift-ref";
version = "0.2.1";
sha256 = "0f059539297478ad8b7e861682207b37b91eaf7e36bd8fdcc3f865a3c6971d1d";
libraryHaskellDepends = [
base
constraints
exceptions
monad-control
monad-unlift
mtl
mutable-containers
resourcet
stm
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/monad-unlift";
description = "Typeclasses for representing monad transformer unlifting";
license = stdenv.lib.licenses.mit;

}) {};
"monadic-arrays" = callPackage
({
  mkDerivation
, array
, base
, stdenv
, stm
, transformers
, transformers-compat
}:
mkDerivation {

pname = "monadic-arrays";
version = "0.2.2";
sha256 = "667714c6100272b48c4377cf2e2984b67a4445521a2a2e9c37539128c7e276a0";
libraryHaskellDepends = [
array
base
stm
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/monadic-arrays/";
description = "Boxed and unboxed arrays for monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monadloc" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "monadloc";
version = "0.7.1";
sha256 = "b25a0f6b3ebb051e58e2a58f2f5d588ff67622584cb575d40c46eaacbd1de7a8";
libraryHaskellDepends = [
base
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pepeiborra/monadloc";
description = "A class for monads which can keep a monadic call trace";
license = stdenv.lib.licenses.publicDomain;

}) {};
"monadoid" = callPackage
({
  mkDerivation
, base
, monad-control
, mtl
, stdenv
, transformers-base
}:
mkDerivation {

pname = "monadoid";
version = "0.0.2";
sha256 = "26c2e9fb0456dbec761c6d9723ad33cbb9fcd3a1318ff4197859d766e14ec877";
libraryHaskellDepends = [
base
monad-control
mtl
transformers-base
];
doHaddock = false;
doCheck = false;
description = "A monoid for monads";
license = stdenv.lib.licenses.bsd3;

}) {};
"monadplus" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "monadplus";
version = "1.4.2";
sha256 = "366ed520db1eaf2ec56d8508fee2804cc24c7a6016de4b75b9addec681186595";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Haskell98 partial maps and filters over MonadPlus";
license = stdenv.lib.licenses.bsd3;

}) {};
"monads-tf" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "monads-tf";
version = "0.1.0.3";
sha256 = "249dd2aa55c4dd6530f1e49f6b052ec91bc590ecfef2bd24c58837a3f8d4b0f1";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "Monad classes, using type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"mongoDB" = callPackage
({
  mkDerivation
, array
, base
, base16-bytestring
, base64-bytestring
, binary
, bson
, bytestring
, conduit
, conduit-extra
, containers
, cryptohash
, data-default-class
, hashtables
, lifted-base
, monad-control
, mtl
, network
, nonce
, parsec
, pureMD5
, random
, random-shuffle
, resourcet
, stdenv
, tagged
, text
, time
, tls
, transformers
, transformers-base
}:
mkDerivation {

pname = "mongoDB";
version = "2.3.0.5";
sha256 = "49260ab3b58144548a1852a1cc21ab0a786578f02fc167a1210881f93018ea8e";
revision = "2";
editedCabalFile = "0bx2vdwp53c9dgil09qg22hd1j1dilwqcg6ighp28ajmnxkyl8j0";
libraryHaskellDepends = [
array
base
base16-bytestring
base64-bytestring
binary
bson
bytestring
conduit
conduit-extra
containers
cryptohash
data-default-class
hashtables
lifted-base
monad-control
mtl
network
nonce
parsec
pureMD5
random
random-shuffle
resourcet
tagged
text
time
tls
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mongodb-haskell/mongodb";
description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
license = stdenv.lib.licenses.asl20;

}) {};
"mono-traversable" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, hashable
, split
, stdenv
, text
, transformers
, unordered-containers
, vector
, vector-algorithms
}:
mkDerivation {

pname = "mono-traversable";
version = "1.0.8.1";
sha256 = "991290797bd77ce2f2e23dd5dea32fb159c6cb9310615f64a0703ea4c6373935";
libraryHaskellDepends = [
base
bytestring
containers
hashable
split
text
transformers
unordered-containers
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "Type classes for mapping, folding, and traversing monomorphic containers";
license = stdenv.lib.licenses.mit;

}) {};
"mono-traversable-instances" = callPackage
({
  mkDerivation
, base
, comonad
, containers
, dlist
, dlist-instances
, mono-traversable
, semigroupoids
, semigroups
, stdenv
, transformers
, vector-instances
}:
mkDerivation {

pname = "mono-traversable-instances";
version = "0.1.0.0";
sha256 = "b5ff2b8bcebe31ffcc652a8dd3adde6aa7cd7f27a1cf6d058d4c658b370c087e";
libraryHaskellDepends = [
base
comonad
containers
dlist
dlist-instances
mono-traversable
semigroupoids
semigroups
transformers
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "Extra typeclass instances for mono-traversable";
license = stdenv.lib.licenses.mit;

}) {};
"monoid-extras" = callPackage
({
  mkDerivation
, base
, groups
, semigroupoids
, semigroups
, stdenv
}:
mkDerivation {

pname = "monoid-extras";
version = "0.4.4";
sha256 = "dde9adc62c3ef349a9e93561c4f28615fd25d2957f3c4ab15459fef2684468c6";
libraryHaskellDepends = [
base
groups
semigroupoids
semigroups
];
doHaddock = false;
doCheck = false;
description = "Various extra monoid-related definitions and utilities";
license = stdenv.lib.licenses.bsd3;

}) {};
"monoid-subclasses" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, primes
, stdenv
, text
, vector
}:
mkDerivation {

pname = "monoid-subclasses";
version = "0.4.6";
sha256 = "15c1aade7351bea9db03e047b063d3f68507e31bebff8e49fc9797a5d4be51e7";
libraryHaskellDepends = [
base
bytestring
containers
primes
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/blamario/monoid-subclasses/";
description = "Subclasses of Monoid";
license = stdenv.lib.licenses.bsd3;

}) {};
"monoid-transformer" = callPackage
({
  mkDerivation
, base
, semigroups
, stdenv
}:
mkDerivation {

pname = "monoid-transformer";
version = "0.0.4";
sha256 = "43abf147e4d1b57c5d306d9533e42fb52828d64e761e0e3d8797fb52cfc98388";
libraryHaskellDepends = [
base
semigroups
];
doHaddock = false;
doCheck = false;
description = "Monoid counterparts to some ubiquitous monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"monoidal-containers" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, lens
, newtype
, semigroups
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "monoidal-containers";
version = "0.3.1.0";
sha256 = "44c325aa5a46a624688eefca1a0a3cc818e932a3805ed7749d0693c2c8c5f785";
libraryHaskellDepends = [
base
containers
deepseq
hashable
lens
newtype
semigroups
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bgamari/monoidal-containers";
description = "Containers with monoidal accumulation";
license = stdenv.lib.licenses.bsd3;

}) {};
"morte" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, code-page
, containers
, deepseq
, Earley
, formatting
, http-client
, http-client-tls
, microlens
, microlens-mtl
, optparse-applicative
, pipes
, stdenv
, system-fileio
, system-filepath
, text
, transformers
}:
mkDerivation {

pname = "morte";
version = "1.6.19";
sha256 = "f036d20c8dd5f985b649934d6a5b9b1785615776ece21495847164386c9313d7";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
binary
containers
deepseq
Earley
formatting
http-client
http-client-tls
microlens
microlens-mtl
pipes
system-fileio
system-filepath
text
transformers
];
libraryToolDepends = [
alex
];
executableHaskellDepends = [
base
code-page
formatting
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
description = "A bare-bones calculus of constructions";
license = stdenv.lib.licenses.bsd3;

}) {};
"mountpoints" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "mountpoints";
version = "1.0.2";
sha256 = "67fcdf64fdb8111f58939c64b168a9dfa519d7068e0f439887d739866f18d5c2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "list mount points";
license = "LGPL";

}) {};
"mstate" = callPackage
({
  mkDerivation
, base
, monad-peel
, mtl
, stdenv
, stm
}:
mkDerivation {

pname = "mstate";
version = "0.2.7";
sha256 = "4508e3e7cc2dec5a0e75ba7dd085c73fdd4f886ac6d1a74cf071816795bb2c17";
libraryHaskellDepends = [
base
monad-peel
mtl
stm
];
doHaddock = false;
doCheck = false;
description = "MState: A consistent State monad for concurrent applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"mtl" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "mtl";
version = "2.2.2";
sha256 = "8803f48a8ed33296c3a3272f448198737a287ec31baa901af09e2118c829bef6";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/haskell/mtl";
description = "Monad classes, using functional dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"mtl-compat" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "mtl-compat";
version = "0.2.1.3";
sha256 = "6458ca53593a31ebce1d94ef8dd4f6a06d050dd7ed32335f6cc6b6e5d3456894";
revision = "4";
editedCabalFile = "1mfrx8cpx0502sjv0bmlfkl0h46c4krldg8m89k4fj6iawwg2ab5";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-compat/mtl-compat";
description = "Backported Control.Monad.Except module from mtl";
license = stdenv.lib.licenses.bsd3;

}) {};
"mtl-prelude" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "mtl-prelude";
version = "2.0.3.1";
sha256 = "c4a6dda093d63bd2161f55030c5825903dfa9b7d5e766c487fd848cb2aa01233";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/mtl-prelude";
description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
license = stdenv.lib.licenses.mit;

}) {};
"multiarg" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "multiarg";
version = "0.30.0.10";
sha256 = "c9fa623a8e06d62addc2b7ad5102ceac3a6f0db6a67afbc8e693d0d0aec417a1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/massysett/multiarg";
description = "Command lines for options that take multiple arguments";
license = stdenv.lib.licenses.bsd3;

}) {};
"multimap" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "multimap";
version = "1.2.1";
sha256 = "6332c529475177b9e08d762d5701804dc2edc0ff26dd98a2a1dcd7ed092e7434";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/scravy/multimap";
description = "A multimap";
license = stdenv.lib.licenses.mit;

}) {};
"multipart" = callPackage
({
  mkDerivation
, base
, bytestring
, parsec
, stdenv
}:
mkDerivation {

pname = "multipart";
version = "0.1.2";
sha256 = "e543fb307beb14fc366171d7767a6a18244bacf78db295d8d161c5c03d94043c";
libraryHaskellDepends = [
base
bytestring
parsec
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/silkapp/multipart";
description = "HTTP multipart split out of the cgi package";
license = stdenv.lib.licenses.bsd3;

}) {};
"multiset" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "multiset";
version = "0.3.4";
sha256 = "9779e012b308f5118564832b985d694ef82ae62a1d605403eed790a41670b54d";
libraryHaskellDepends = [
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
description = "The Data.MultiSet container type";
license = stdenv.lib.licenses.bsd3;

}) {};
"multistate" = callPackage
({
  mkDerivation
, base
, monad-control
, mtl
, stdenv
, tagged
, transformers
, transformers-base
}:
mkDerivation {

pname = "multistate";
version = "0.7.1.2";
sha256 = "9189313c54130173171077a64851244e517ec135bf0a9230d39b272aee0394d5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
monad-control
mtl
tagged
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lspitzner/multistate";
description = "like mtl's ReaderT / WriterT / StateT, but more than one contained value/type";
license = stdenv.lib.licenses.bsd3;

}) {};
"murmur-hash" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "murmur-hash";
version = "0.1.0.9";
sha256 = "89b9db94ead4cc0784dbcfb47c51b5664c1718860db00cd8ada3ef6fdd4465ad";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nominolo/murmur-hash";
description = "MurmurHash2 implementation for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"mustache" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cmdargs
, containers
, directory
, either
, filepath
, mtl
, parsec
, scientific
, stdenv
, template-haskell
, text
, th-lift
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "mustache";
version = "2.3.0";
sha256 = "018863e578e971e393edc65dd7e0ed92a0e37fc152a47bb379fd8abd59537be0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
either
filepath
mtl
parsec
scientific
template-haskell
text
th-lift
unordered-containers
vector
];
executableHaskellDepends = [
aeson
base
bytestring
cmdargs
filepath
text
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/JustusAdam/mustache";
description = "A mustache template parser library";
license = stdenv.lib.licenses.bsd3;

}) {};
"mutable-containers" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, mono-traversable
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "mutable-containers";
version = "0.3.4";
sha256 = "641966e0adee48badb8bf07037af6c879480e4e97f673d9e2b84fbf43685137e";
libraryHaskellDepends = [
base
containers
ghc-prim
mono-traversable
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/mono-traversable#readme";
description = "Abstactions and concrete implementations of mutable containers";
license = stdenv.lib.licenses.mit;

}) {};
"mwc-probability" = callPackage
({
  mkDerivation
, base
, mwc-random
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "mwc-probability";
version = "2.0.3";
sha256 = "7e999b53c367d03ddae1ba5ac175f1067c2339346fc376c2a14bfc2a57c9f6a1";
libraryHaskellDepends = [
base
mwc-random
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/mwc-probability";
description = "Sampling function-based probability distributions";
license = stdenv.lib.licenses.mit;

}) {};
"mwc-random" = callPackage
({
  mkDerivation
, base
, math-functions
, primitive
, stdenv
, time
, vector
}:
mkDerivation {

pname = "mwc-random";
version = "0.13.6.0";
sha256 = "065f334fc13c057eb03ef0b6aa3665ff193609d9bfcad8068bdd260801f44716";
libraryHaskellDepends = [
base
math-functions
primitive
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/mwc-random";
description = "Fast, high quality pseudo random number generation";
license = stdenv.lib.licenses.bsd3;

}) {};
"mwc-random-accelerate" = callPackage
({
  mkDerivation
, accelerate
, base
, mwc-random
, stdenv
}:
mkDerivation {

pname = "mwc-random-accelerate";
version = "0.1.0.0";
sha256 = "30fad33d12b130457a6dcb8bedc885700e6ac0eea9b0f25fe6e5fe34968932e3";
revision = "2";
editedCabalFile = "16llz1jvpq841a20wvv2j8kkb357y970i54w340hwk4c187hypic";
libraryHaskellDepends = [
accelerate
base
mwc-random
];
doHaddock = false;
doCheck = false;
description = "Generate Accelerate arrays filled with high quality pseudorandom numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"mysql" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, mysql
, stdenv
}:
mkDerivation {

pname = "mysql";
version = "0.1.5";
sha256 = "49b367d07f6d93fd4cbd08390f83bbf8e40c66156a1d2b0f570b68921e6f3075";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
bytestring
containers
];
librarySystemDepends = [
mysql
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/paul-rouse/mysql";
description = "A low-level MySQL client library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) mysql;};
"mysql-haskell" = callPackage
({
  mkDerivation
, base
, binary
, binary-ieee754
, binary-parsers
, blaze-textual
, bytestring
, bytestring-lexing
, cryptonite
, io-streams
, memory
, monad-loops
, network
, scientific
, stdenv
, tcp-streams
, text
, time
, tls
, vector
, wire-streams
, word24
}:
mkDerivation {

pname = "mysql-haskell";
version = "0.8.3.0";
sha256 = "e9aef28ccccc0801a1db1c936945a226961334ec11d85905ae58a09a42507aac";
revision = "1";
editedCabalFile = "1kpfmrwwdaxjqwbsc6m9imlcfi2vvkz62pin5nrvm1fk17isy69v";
libraryHaskellDepends = [
base
binary
binary-ieee754
binary-parsers
blaze-textual
bytestring
bytestring-lexing
cryptonite
io-streams
memory
monad-loops
network
scientific
tcp-streams
text
time
tls
vector
wire-streams
word24
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/mysql-haskell";
description = "pure haskell MySQL driver";
license = stdenv.lib.licenses.bsd3;

}) {};
"mysql-haskell-nem" = callPackage
({
  mkDerivation
, base
, bytestring
, io-streams
, mysql-haskell
, scientific
, stdenv
, text
, time
}:
mkDerivation {

pname = "mysql-haskell-nem";
version = "0.1.0.0";
sha256 = "7a0868b76edc96a7aff7860f96436b9040f6cb9319dd67f68bfd700948721f0d";
libraryHaskellDepends = [
base
bytestring
io-streams
mysql-haskell
scientific
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lorenzo/mysql-haskell-nem#readme";
description = "Adds a interface like mysql-simple to mysql-haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"mysql-haskell-openssl" = callPackage
({
  mkDerivation
, base
, binary
, HsOpenSSL
, mysql-haskell
, stdenv
, tcp-streams
, tcp-streams-openssl
, wire-streams
}:
mkDerivation {

pname = "mysql-haskell-openssl";
version = "0.8.3.0";
sha256 = "44345ef9b5d98b1fca5089533990b8f4ba67afde7995282c323dacfb44dba55e";
libraryHaskellDepends = [
base
binary
HsOpenSSL
mysql-haskell
tcp-streams
tcp-streams-openssl
wire-streams
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/mysql-haskell";
description = "TLS support for mysql-haskell package using openssl";
license = stdenv.lib.licenses.bsd3;

}) {};
"mysql-simple" = callPackage
({
  mkDerivation
, attoparsec
, base
, base16-bytestring
, blaze-builder
, blaze-textual
, bytestring
, containers
, mysql
, old-locale
, pcre-light
, stdenv
, text
, time
}:
mkDerivation {

pname = "mysql-simple";
version = "0.4.5";
sha256 = "b03c422ed8a62fa7f98b62634a06da8454980c6a733e275020ca7cedbb6e7cb1";
libraryHaskellDepends = [
attoparsec
base
base16-bytestring
blaze-builder
blaze-textual
bytestring
containers
mysql
old-locale
pcre-light
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/paul-rouse/mysql-simple";
description = "A mid-level MySQL client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"n-tuple" = callPackage
({
  mkDerivation
, base
, singletons
, stdenv
, vector
}:
mkDerivation {

pname = "n-tuple";
version = "0.0.2.0";
sha256 = "6af735b2ee31f6b5e344bd7e8eb0789f9b56d36141404348befaefe8d8d1023f";
libraryHaskellDepends = [
base
singletons
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/n-tuple#readme";
description = "Homogeneous tuples of arbitrary length";
license = stdenv.lib.licenses.bsd3;

}) {};
"nagios-check" = callPackage
({
  mkDerivation
, base
, bifunctors
, exceptions
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "nagios-check";
version = "0.3.2";
sha256 = "1bc9b85cb10c396943d53c44e2701c5bc2a02ecdf3e8f46da238981f8b7860b7";
libraryHaskellDepends = [
base
bifunctors
exceptions
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/olorin/haskell-nagios-check";
description = "Package for writing monitoring plugins";
license = stdenv.lib.licenses.mit;

}) {};
"names-th" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
}:
mkDerivation {

pname = "names-th";
version = "0.2.0.4";
sha256 = "58bf4d2e807115f4911d0ae43500732e85ce726de1129dd6e384b6891b1ed20e";
libraryHaskellDepends = [
base
containers
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Manipulate name strings for TH";
license = stdenv.lib.licenses.bsd3;

}) {};
"nano-erl" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "nano-erl";
version = "0.1.0.1";
sha256 = "370a60682b38ca77b793ee7326c54d5e74dd688f316f31fdd5cf999ad498ee12";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
description = "Small library for Erlang-style actor semantics";
license = stdenv.lib.licenses.mit;

}) {};
"nanospec" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "nanospec";
version = "0.2.2";
sha256 = "cf14ccc2b296c910000cdc3eb51b37389b3eb94139384b9555db79b8128595e5";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/nanospec#readme";
description = "A lightweight implementation of a subset of Hspec's API";
license = stdenv.lib.licenses.mit;

}) {};
"naqsha" = callPackage
({
  mkDerivation
, base
, bytestring
, groups
, stdenv
, vector
}:
mkDerivation {

pname = "naqsha";
version = "0.2.0.1";
sha256 = "4941224601df58a801a5cd2fb345fa8785972c6fe098d0088bd5f8f369f39c94";
libraryHaskellDepends = [
base
bytestring
groups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/naqsha/naqsha.git";
description = "A library for working with geospatial data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"nats" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "nats";
version = "1.1.2";
sha256 = "b9d2d85d8612f9b06f8c9bfd1acecd848e03ab82cfb53afe1d93f5086b6e80ec";
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/nats/";
description = "Natural numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"natural-sort" = callPackage
({
  mkDerivation
, base
, bytestring
, parsec
, stdenv
, text
}:
mkDerivation {

pname = "natural-sort";
version = "0.1.2";
sha256 = "7b72b734680827ab07df38a004d4f523540055389d62fcd587edd2fcf19a6b50";
libraryHaskellDepends = [
base
bytestring
parsec
text
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/natural-sort/";
description = "User-friendly text collation";
license = stdenv.lib.licenses.bsd3;

}) {};
"natural-transformation" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "natural-transformation";
version = "0.4";
sha256 = "aac28e2c1147ed77c1ec0f0eb607a577fa26d0fd67474293ba860ec124efc8af";
revision = "5";
editedCabalFile = "1wlmkq9k9aym4wig9rn5w6sygq2fg9kd02d18pfzgxw70icqjlq3";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ku-fpg/natural-transformation";
description = "A natural transformation package";
license = stdenv.lib.licenses.bsd3;

}) {};
"ndjson-conduit" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, conduit
, stdenv
}:
mkDerivation {

pname = "ndjson-conduit";
version = "0.1.0.5";
sha256 = "c037b8f7c47b146f1384585541ae8a4f9218bc4456f428935f973ae07da49db1";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/srijs/haskell-ndjson-conduit";
description = "Conduit-based parsing and serialization for newline delimited JSON";
license = stdenv.lib.licenses.mit;

}) {};
"neat-interpolation" = callPackage
({
  mkDerivation
, base
, base-prelude
, parsec
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "neat-interpolation";
version = "0.3.2.1";
sha256 = "5530e43ca4de09b972d173e522f9dc96265f3afe0df695a25f0141be816fa014";
libraryHaskellDepends = [
base
base-prelude
parsec
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/neat-interpolation";
description = "A quasiquoter for neat and simple multiline text interpolation";
license = stdenv.lib.licenses.mit;

}) {};
"netlib-carray" = callPackage
({
  mkDerivation
, base
, carray
, netlib-ffi
, stdenv
, transformers
}:
mkDerivation {

pname = "netlib-carray";
version = "0.0.1.1";
sha256 = "9bc702f6d09240400b99d0769aaa0fe6bf32f83b312d33a6e2dd7b75a173beef";
libraryHaskellDepends = [
base
carray
netlib-ffi
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/netlib-carray/";
description = "Helper modules for CArray wrappers to BLAS and LAPACK";
license = stdenv.lib.licenses.bsd3;

}) {};
"netlib-ffi" = callPackage
({
  mkDerivation
, base
, stdenv
, storable-complex
, transformers
}:
mkDerivation {

pname = "netlib-ffi";
version = "0.0.1";
sha256 = "dc4a3f052dd7c47589dbd9a6fc25b51bf3b4b7f275253b70025b4b13571c27ed";
libraryHaskellDepends = [
base
storable-complex
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/netlib-ffi/";
description = "Helper modules for FFI to BLAS and LAPACK";
license = stdenv.lib.licenses.bsd3;

}) {};
"netpbm" = callPackage
({
  mkDerivation
, attoparsec
, attoparsec-binary
, base
, bytestring
, stdenv
, storable-record
, unordered-containers
, vector
, vector-th-unbox
}:
mkDerivation {

pname = "netpbm";
version = "1.0.2";
sha256 = "846a04bca94be31c779888febc390c64cfba93e40f3a7a2f80ff6a6e44fcc2d7";
revision = "1";
editedCabalFile = "1vhwjv5c5gxn9l9982da54nzczbmj8rl09xn8ac7rix0zmmyvl50";
libraryHaskellDepends = [
attoparsec
attoparsec-binary
base
bytestring
storable-record
unordered-containers
vector
vector-th-unbox
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/haskell-netpbm";
description = "Loading PBM, PGM, PPM image files";
license = stdenv.lib.licenses.mit;

}) {};
"nettle" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, crypto-cipher-types
, nettle
, securemem
, stdenv
, tagged
}:
mkDerivation {

pname = "nettle";
version = "0.2.0";
sha256 = "220184713b802c53ee26783b891a3bbee6c6b2571f798bd6def2496a504e9bde";
libraryHaskellDepends = [
base
byteable
bytestring
crypto-cipher-types
securemem
tagged
];
libraryPkgconfigDepends = [
nettle
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stbuehler/haskell-nettle";
description = "safe nettle binding";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) nettle;};
"netwire" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, parallel
, profunctors
, random
, semigroups
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "netwire";
version = "5.0.3";
sha256 = "f1dde7293efe9cdb3080f53a1be702f473ef0bcc0d3e4ea2d23b847fa3ef222e";
libraryHaskellDepends = [
base
containers
deepseq
parallel
profunctors
random
semigroups
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/esoeylemez/netwire";
description = "Functional reactive programming library";
license = stdenv.lib.licenses.bsd3;

}) {};
"netwire-input" = callPackage
({
  mkDerivation
, base
, deepseq
, netwire
, stdenv
}:
mkDerivation {

pname = "netwire-input";
version = "0.0.7";
sha256 = "29c6b087c2092ca409442b28aca500642b870461ad820d8bc579097f19ed3db9";
libraryHaskellDepends = [
base
deepseq
netwire
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/Mokosha/netwire-input";
description = "Input handling abstractions for netwire";
license = stdenv.lib.licenses.mit;

}) {};
"netwire-input-glfw" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, GLFW-b
, mtl
, netwire-input
, stdenv
, stm
}:
mkDerivation {

pname = "netwire-input-glfw";
version = "0.0.10";
sha256 = "1ea458273055fa2f82451b889b9a2c54e0b5bbdf55a16c35d0ccd392793728e4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
deepseq
GLFW-b
mtl
netwire-input
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/Mokosha/netwire-input-glfw";
description = "GLFW instance of netwire-input";
license = stdenv.lib.licenses.mit;

}) {};
"network" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "network";
version = "2.6.3.5";
sha256 = "9a18f6e4c930a4c4ebb7fea7d1fd7a6046564ee007104d0b845d5f71ccbe0441";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/network";
description = "Low-level networking interface";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-anonymous-i2p" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, exceptions
, mtl
, network
, network-attoparsec
, network-simple
, stdenv
, text
, transformers
, uuid
}:
mkDerivation {

pname = "network-anonymous-i2p";
version = "0.10.0";
sha256 = "cff5796c36c1ebbb969e5433538eb3f3979acef9825a7bfb683ed002023fff2c";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
exceptions
mtl
network
network-attoparsec
network-simple
text
transformers
uuid
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
description = "Haskell API for I2P anonymous networking";
license = stdenv.lib.licenses.mit;

}) {};
"network-anonymous-tor" = callPackage
({
  mkDerivation
, attoparsec
, base
, base32string
, bytestring
, exceptions
, hexstring
, network
, network-attoparsec
, network-simple
, socks
, splice
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "network-anonymous-tor";
version = "0.11.0";
sha256 = "41aee5b34aaaec6fa47a56cca61fafec22097bda25d13d5baef6b7924e127549";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
base32string
bytestring
exceptions
hexstring
network
network-attoparsec
network-simple
socks
text
transformers
];
executableHaskellDepends = [
base
exceptions
network
network-simple
splice
];
doHaddock = false;
doCheck = false;
homepage = "http://www.leonmergen.com/opensource.html";
description = "Haskell API for Tor anonymous networking";
license = stdenv.lib.licenses.mit;

}) {};
"network-attoparsec" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, enclosed-exceptions
, exceptions
, lifted-base
, monad-control
, mtl
, network
, stdenv
, transformers
}:
mkDerivation {

pname = "network-attoparsec";
version = "0.12.2";
sha256 = "9790a9bad286ab1474dadbece3e4b2e1dd068d4ede3847cb73bcd66386bf08f0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
enclosed-exceptions
exceptions
lifted-base
monad-control
mtl
network
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/solatis/haskell-network-attoparsec";
description = "Utility functions for running a parser against a socket";
license = stdenv.lib.licenses.mit;

}) {};
"network-carbon" = callPackage
({
  mkDerivation
, base
, bytestring
, network
, stdenv
, text
, time
, vector
}:
mkDerivation {

pname = "network-carbon";
version = "1.0.12";
sha256 = "ed96b917d8dd96950f04392f69c2313401f66957fe1a42e3be57db1c66f56139";
libraryHaskellDepends = [
base
bytestring
network
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/network-carbon";
description = "A Haskell implementation of the Carbon protocol (part of the Graphite monitoring tools)";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-conduit-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, connection
, data-default-class
, network
, stdenv
, streaming-commons
, tls
, transformers
, unliftio-core
}:
mkDerivation {

pname = "network-conduit-tls";
version = "1.3.0";
sha256 = "746d245ae0719d8b8e560d1f9c2929656d3e1fbe86a040bad896317c35d24985";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
connection
data-default-class
network
streaming-commons
tls
transformers
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/conduit";
description = "Create TLS-aware network code with conduits";
license = stdenv.lib.licenses.mit;

}) {};
"network-house" = callPackage
({
  mkDerivation
, array
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "network-house";
version = "0.1.0.2";
sha256 = "071fbc22fc516175e78235d9e29ccefd8eec7c3caa2e6de74dddf62cdbffab43";
libraryHaskellDepends = [
array
base
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/network-house";
description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
license = stdenv.lib.licenses.gpl2;

}) {};
"network-info" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "network-info";
version = "0.2.0.10";
sha256 = "5680f6975d34cf4f81fa7ca0c8efd682261d6a1119e06dece0f67c7bd97fd52a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jystic/network-info";
description = "Access the local computer's basic network configuration";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-ip" = callPackage
({
  mkDerivation
, base
, data-default-class
, data-dword
, data-endian
, data-serializer
, data-textual
, hashable
, parsers
, stdenv
, text-printer
, type-hint
}:
mkDerivation {

pname = "network-ip";
version = "0.3.0.2";
sha256 = "ee259d236312aafc4bd08dfeff2ebe4b4f930b2f5879764e1a6d5675c5105efe";
libraryHaskellDepends = [
base
data-default-class
data-dword
data-endian
data-serializer
data-textual
hashable
parsers
text-printer
type-hint
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/network-ip";
description = "Internet Protocol data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-multicast" = callPackage
({
  mkDerivation
, base
, network
, stdenv
}:
mkDerivation {

pname = "network-multicast";
version = "0.2.0";
sha256 = "0f3b50abc3a401c20cc6a0ec51a49d2a48e5b467d9fbd63b7cf803165fe975f2";
libraryHaskellDepends = [
base
network
];
doHaddock = false;
doCheck = false;
description = "Simple multicast library";
license = stdenv.lib.licenses.publicDomain;

}) {};
"network-simple" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, network
, stdenv
, transformers
}:
mkDerivation {

pname = "network-simple";
version = "0.4.1";
sha256 = "72be3a16779fffeb71436f421c7de4b83a78523362c4787a807c3174d7db9b1d";
libraryHaskellDepends = [
base
bytestring
exceptions
network
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0001/network-simple";
description = "Simple network sockets usage patterns";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, fetchgit
, hashable
, stdenv
, transformers
}:
mkDerivation {

pname = "network-transport";
version = "0.5.2";
src = fetchgit {

url = "https://github.com/serokell/network-transport";
sha256 = "0lqa26l2ikpq6a4s7qm9b2favx59w82i0wngakhfyax66fpixp8q";
rev = "018a50b9042c2115c3ec9c9fd5ca5f28737dd29c";

};
libraryHaskellDepends = [
base
binary
bytestring
deepseq
hashable
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Network abstraction layer";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-composed" = callPackage
({
  mkDerivation
, base
, bytestring
, network-transport
, stdenv
}:
mkDerivation {

pname = "network-transport-composed";
version = "0.2.1";
sha256 = "a35bbfbe35a7a6c6e20e9d839f9f5b30f82f3680863968f73ce82e0e03e55944";
libraryHaskellDepends = [
base
bytestring
network-transport
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Compose network transports";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-inmemory" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-accessor
, fetchgit
, network-transport
, stdenv
, stm
}:
mkDerivation {

pname = "network-transport-inmemory";
version = "0.5.1";
src = fetchgit {

url = "https://github.com/avieth/network-transport-inmemory";
sha256 = "0ak64rks3lk3kk5wyndrrk2swmd84h9diribzix305xwz1jhjj9w";
rev = "5d8ff2b07b9df35cf61329a3d975e2c8cf95c12a";

};
libraryHaskellDepends = [
base
bytestring
containers
data-accessor
network-transport
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "In-memory instantiation of Network.Transport";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-tcp" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-accessor
, fetchgit
, network
, network-transport
, stdenv
, uuid
}:
mkDerivation {

pname = "network-transport-tcp";
version = "0.6.0";
src = fetchgit {

url = "https://github.com/serokell/network-transport-tcp";
sha256 = "1cim8867kf36kv6ax9jx5shlqd7hhs1i4jf101x4pk3wriwbxsds";
rev = "3d56652123bd296dc759cd31947eb2a17924e68a";

};
libraryHaskellDepends = [
base
bytestring
containers
data-accessor
network
network-transport
uuid
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "TCP instantiation of Network.Transport";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-transport-tests" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, bytestring
, containers
, mtl
, network-transport
, random
, stdenv
}:
mkDerivation {

pname = "network-transport-tests";
version = "0.2.4.2";
sha256 = "cb24c4bf7eed5a381eb21a3efadf8752050845e5d4426a1d2e00f128ea27cbc7";
libraryHaskellDepends = [
ansi-terminal
base
bytestring
containers
mtl
network-transport
random
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Unit tests for Network.Transport implementations";
license = stdenv.lib.licenses.bsd3;

}) {};
"network-uri" = callPackage
({
  mkDerivation
, base
, deepseq
, parsec
, stdenv
}:
mkDerivation {

pname = "network-uri";
version = "2.6.1.0";
sha256 = "423e0a2351236f3fcfd24e39cdbc38050ec2910f82245e69ca72a661f7fc47f0";
revision = "1";
editedCabalFile = "141nj7q0p9wkn5gr41ayc63cgaanr9m59yym47wpxqr3c334bk32";
libraryHaskellDepends = [
base
deepseq
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/network-uri";
description = "URI manipulation";
license = stdenv.lib.licenses.bsd3;

}) {};
"newtype" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "newtype";
version = "0.2";
sha256 = "b714033abd9a8b0903bcef0d36d0913de2a5003c852f43f97fa688717289e459";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A typeclass and set of functions for working with newtypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"newtype-generics" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "newtype-generics";
version = "0.5.3";
sha256 = "f295f001a86bdbcf759d6b91b9e7ae27cd431ccf41d9b9d34ee1c926b88efe45";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/sjakobi/bsb-http-chunked";
description = "A typeclass and set of functions for working with newtypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"next-ref" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "next-ref";
version = "0.1.0.2";
sha256 = "a586f15c17d5d53dd647411d02660dcbfd293f38a75f030d6892a76a2c24789f";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
description = "A concurrency primitive for a slow consumer";
license = stdenv.lib.licenses.bsd3;

}) {};
"nfc" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, nfc
, stdenv
}:
mkDerivation {

pname = "nfc";
version = "0.1.0";
sha256 = "63b8f1d434c9e20c1df08ab532c4e098871b0788f9d1b8a5ed84bce1abb01167";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
nfc
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/centromere/nfc#readme";
description = "libnfc bindings";
license = stdenv.lib.licenses.publicDomain;

}) {inherit (pkgs) nfc;};
"nicify-lib" = callPackage
({
  mkDerivation
, base
, parsec
, stdenv
, transformers
}:
mkDerivation {

pname = "nicify-lib";
version = "1.0.1";
sha256 = "7d26f86d792dda166805e9dda17cfbc7a2101f3654fe798f4231385d8136e732";
libraryHaskellDepends = [
base
parsec
transformers
];
doHaddock = false;
doCheck = false;
description = "Pretty print the standard output of default `Show` instances";
license = stdenv.lib.licenses.mit;

}) {};
"nix-paths" = callPackage
({
  mkDerivation
, base
, nix
, process
, stdenv
}:
mkDerivation {

pname = "nix-paths";
version = "1.0.1";
sha256 = "ab37163bc2970ea16c2eb6e091d1e99ab50b8e2ba93c23d24dac761803e509f8";
libraryHaskellDepends = [
base
process
];
libraryToolDepends = [
nix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/nix-paths";
description = "Knowledge of Nix's installation directories";
license = stdenv.lib.licenses.bsd3;

}) {};
"non-empty" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, QuickCheck
, stdenv
, utility-ht
}:
mkDerivation {

pname = "non-empty";
version = "0.3";
sha256 = "77906c1d4c94738e8b34d9aa28c6a3981edb82df7ee82f2f43aeb57b20bd5be0";
libraryHaskellDepends = [
base
containers
deepseq
QuickCheck
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/non-empty/";
description = "List-like structures with static restrictions on the number of elements";
license = stdenv.lib.licenses.bsd3;

}) {};
"non-empty-sequence" = callPackage
({
  mkDerivation
, base
, containers
, semigroups
, stdenv
}:
mkDerivation {

pname = "non-empty-sequence";
version = "0.2.0.2";
sha256 = "d9a3604c0c140197731895af56413edbf1cf6866f9c0636ece9d8314366dd1e1";
libraryHaskellDepends = [
base
containers
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/non-empty-sequence";
description = "Non-empty sequence";
license = stdenv.lib.licenses.bsd3;

}) {};
"non-negative" = callPackage
({
  mkDerivation
, base
, QuickCheck
, semigroups
, stdenv
, utility-ht
}:
mkDerivation {

pname = "non-negative";
version = "0.1.2";
sha256 = "5614acf55f3c16a21fea263e375e8993f9b859e21997b0410c74fe6642c20138";
libraryHaskellDepends = [
base
QuickCheck
semigroups
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/non-negative/";
description = "Non-negative numbers";
license = "GPL";

}) {};
"nonce" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, entropy
, stdenv
, text
, transformers
, unliftio
, unliftio-core
}:
mkDerivation {

pname = "nonce";
version = "1.0.7";
sha256 = "4b4f6232b2cb07a6de47a838b4dc35c346a745683866dbfc6ebb8682158037e1";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
entropy
text
transformers
unliftio
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/prowdsponsor/nonce";
description = "Generate cryptographic nonces";
license = stdenv.lib.licenses.bsd3;

}) {};
"nondeterminism" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "nondeterminism";
version = "1.4";
sha256 = "3037c93b0277037ab51ad8640f72a7975dcf48ba81570640be12d390d7b47dc5";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
description = "A monad and monad transformer for nondeterministic computations";
license = "LGPL";

}) {};
"normaldistribution" = callPackage
({
  mkDerivation
, base
, random
, stdenv
}:
mkDerivation {

pname = "normaldistribution";
version = "1.1.0.3";
sha256 = "6d7ba381946f76f3bd848c90e5bcc6f6ae5c418f7ae294cfc2559541fa02f7e0";
libraryHaskellDepends = [
base
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bjornbm/normaldistribution";
description = "Minimum fuss normally distributed random values";
license = stdenv.lib.licenses.bsd3;

}) {};
"normalization-insensitive" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, hashable
, stdenv
, text
, unicode-transforms
}:
mkDerivation {

pname = "normalization-insensitive";
version = "2.0.1";
sha256 = "3b54ba0c2fc0ea99321bbec7f28bedc771bf1ec0a3f9796da7e479829282cb02";
revision = "2";
editedCabalFile = "0djclsv0vzd56139ddzhykbwb3ny9mf8k2pryp8w33h9i4hv7axc";
libraryHaskellDepends = [
base
bytestring
deepseq
hashable
text
unicode-transforms
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ppelleti/normalization-insensitive";
description = "Normalization insensitive string comparison";
license = stdenv.lib.licenses.bsd3;

}) {};
"nsis" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, uniplate
}:
mkDerivation {

pname = "nsis";
version = "0.3.2";
sha256 = "b9985b8d62569c192d89b20965eed2b98186a67148b667202823c6389b8f15ca";
libraryHaskellDepends = [
base
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/nsis#readme";
description = "DSL for producing Windows Installer using NSIS";
license = stdenv.lib.licenses.bsd3;

}) {};
"numbers" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "numbers";
version = "3000.2.0.2";
sha256 = "f0cee40b90c3746bd0bc0559d3827d3cf1b1e2c43270b7ec9bf4fa458fcb5a77";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jwiegley/numbers#readme";
description = "Various number types";
license = stdenv.lib.licenses.bsd3;

}) {};
"numeric-extras" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "numeric-extras";
version = "0.1";
sha256 = "c700711021d96334be43a21fbd80a5f7146fdd6706ef8656f1d287ff000b61d6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/numeric-extras";
description = "Useful tools from the C standard library";
license = stdenv.lib.licenses.bsd3;

}) {};
"numeric-prelude" = callPackage
({
  mkDerivation
, array
, base
, containers
, deepseq
, non-negative
, parsec
, QuickCheck
, random
, semigroups
, stdenv
, storable-record
, utility-ht
}:
mkDerivation {

pname = "numeric-prelude";
version = "0.4.3";
sha256 = "b8f8f9a660e598055898c1d6c981885c629882ae028fec90f91955bade19892d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
array
base
containers
deepseq
non-negative
parsec
QuickCheck
random
semigroups
storable-record
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Numeric_Prelude";
description = "An experimental alternative hierarchy of numeric type classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"numhask" = callPackage
({
  mkDerivation
, base
, protolude
, QuickCheck
, stdenv
, tasty
, tasty-quickcheck
}:
mkDerivation {

pname = "numhask";
version = "0.1.4.0";
sha256 = "f255a7ebe3479575d771ec528105b58107dc8b4a06591007ce2d4a8d1d69448c";
libraryHaskellDepends = [
base
protolude
QuickCheck
tasty
tasty-quickcheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tonyday567/numhask#readme";
description = "A numeric prelude";
license = stdenv.lib.licenses.bsd3;

}) {};
"numhask-range" = callPackage
({
  mkDerivation
, adjunctions
, base
, distributive
, numhask
, protolude
, QuickCheck
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "numhask-range";
version = "0.1.3.0";
sha256 = "f1ca2e5d0e4e9e2a4a8af7c64a3f953a7157a5bb2740297f577bb79811b982c0";
libraryHaskellDepends = [
adjunctions
base
distributive
numhask
protolude
QuickCheck
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tonyday567/numhask-range#readme";
description = "Numbers that are range representations";
license = stdenv.lib.licenses.bsd3;

}) {};
"numtype-dk" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "numtype-dk";
version = "0.5.0.1";
sha256 = "29dbb9bf7693989f94605804de31b1a4dacf53ab566ce0346445288eae95d017";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bjornbm/numtype-dk";
description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
license = stdenv.lib.licenses.bsd3;

}) {};
"nvvm" = callPackage
({
  mkDerivation
, base
, bytestring
, c2hs
, Cabal
, cuda
, directory
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "nvvm";
version = "0.8.0.3";
sha256 = "5997f69073d2f1d14f1c1f806fdebbc84c3276a8864adb16d9b482bb027d95cf";
setupHaskellDepends = [
base
Cabal
cuda
directory
filepath
template-haskell
];
libraryHaskellDepends = [
base
bytestring
cuda
template-haskell
];
libraryToolDepends = [
c2hs
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tmcdonell/nvvm";
description = "FFI bindings to NVVM";
license = stdenv.lib.licenses.bsd3;

}) {};
"o-clock" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "o-clock";
version = "0.1.1";
sha256 = "00e486fb523c0bad188078ec22d144383247b810ea6272eceef819a413d6b3a9";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
ghc-prim
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/serokell/o-clock";
description = "Type-safe time library";
license = stdenv.lib.licenses.mit;

}) {};
"oauthenticated" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, cryptonite
, exceptions
, http-client
, http-types
, memory
, mtl
, network
, network-uri
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "oauthenticated";
version = "0.2.1.0";
sha256 = "d44cd060a4bfb26b0b958a8a203fb25dc171c146093eab82827542264f57d222";
libraryHaskellDepends = [
aeson
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
cryptonite
exceptions
http-client
http-types
memory
mtl
network
network-uri
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tel/oauthenticated.git#readme";
description = "Simple OAuth for http-client";
license = stdenv.lib.licenses.mit;

}) {};
"objective" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, free
, hashable
, monad-skeleton
, mtl
, profunctors
, stdenv
, template-haskell
, transformers
, transformers-compat
, unordered-containers
, void
, witherable
}:
mkDerivation {

pname = "objective";
version = "1.1.2";
sha256 = "2fcf283ede3f447f2e65ed9c434bb8facef873ba534aa0de29eb5ffefcc86644";
revision = "1";
editedCabalFile = "039j3xac9ish0yk4w04bmip6g9p6ndfd9ngh46ya125ms4nhmyj4";
libraryHaskellDepends = [
base
containers
exceptions
free
hashable
monad-skeleton
mtl
profunctors
template-haskell
transformers
transformers-compat
unordered-containers
void
witherable
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/objective";
description = "Composable objects";
license = stdenv.lib.licenses.bsd3;

}) {};
"ochintin-daicho" = callPackage
({
  mkDerivation
, base
, bookkeeping
, stdenv
, text
}:
mkDerivation {

pname = "ochintin-daicho";
version = "0.1.0.1";
sha256 = "d49094e19869862a4dcc24fc39b976be1b4b637c100b7d404f8c921ed10456e8";
libraryHaskellDepends = [
base
bookkeeping
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/arowM/haskell-ochintin-daicho#readme";
description = "A module to manage payroll books for Japanese companies";
license = stdenv.lib.licenses.mit;

}) {};
"oeis" = callPackage
({
  mkDerivation
, base
, HTTP
, network
, network-uri
, stdenv
}:
mkDerivation {

pname = "oeis";
version = "0.3.9";
sha256 = "8a692c0b898f5d89e607f9593697a24827981a1cfee53045c192084015061b8e";
revision = "1";
editedCabalFile = "0rb6l3qblay8aiwaznp35gj7vwmhm87y57wvf3babwrh91s88jaj";
libraryHaskellDepends = [
base
HTTP
network
network-uri
];
doHaddock = false;
doCheck = false;
description = "Interface to the Online Encyclopedia of Integer Sequences (OEIS)";
license = stdenv.lib.licenses.bsd3;

}) {};
"ofx" = callPackage
({
  mkDerivation
, base
, parsec
, pretty
, stdenv
, time
}:
mkDerivation {

pname = "ofx";
version = "0.4.2.0";
sha256 = "0e22e2269f099603832f666814235051fadf92cbdec3dfacf7d1e8231ccd95f1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
parsec
pretty
time
];
executableHaskellDepends = [
base
parsec
pretty
time
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/ofx";
description = "Parser for OFX data";
license = stdenv.lib.licenses.bsd3;

}) {};
"old-locale" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "old-locale";
version = "1.0.0.7";
sha256 = "dbaf8bf6b888fb98845705079296a23c3f40ee2f449df7312f7f7f1de18d7b50";
revision = "2";
editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "locale library";
license = stdenv.lib.licenses.bsd3;

}) {};
"old-time" = callPackage
({
  mkDerivation
, base
, old-locale
, stdenv
}:
mkDerivation {

pname = "old-time";
version = "1.1.0.3";
sha256 = "1ccb158b0f7851715d36b757c523b026ca1541e2030d02239802ba39b4112bc1";
revision = "2";
editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
libraryHaskellDepends = [
base
old-locale
];
doHaddock = false;
doCheck = false;
description = "Time library";
license = stdenv.lib.licenses.bsd3;

}) {};
"once" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, template-haskell
, unordered-containers
}:
mkDerivation {

pname = "once";
version = "0.2";
sha256 = "753ec628a1fac1f308a4b0e75adee768f962815485e1832a8052ee9af61848a8";
libraryHaskellDepends = [
base
containers
hashable
template-haskell
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://anonscm.debian.org/cgit/users/kaction-guest/haskell-once.git";
description = "memoization for IO actions and functions";
license = stdenv.lib.licenses.gpl3;

}) {};
"one-liner" = callPackage
({
  mkDerivation
, base
, bifunctors
, contravariant
, ghc-prim
, profunctors
, stdenv
, tagged
, transformers
}:
mkDerivation {

pname = "one-liner";
version = "0.9.2";
sha256 = "ab3056b1833685da9810ba40eccc381416cd3c531dd3c930f9a83fb7dcf4c7d7";
libraryHaskellDepends = [
base
bifunctors
contravariant
ghc-prim
profunctors
tagged
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sjoerdvisscher/one-liner";
description = "Constraint-based generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"one-liner-instances" = callPackage
({
  mkDerivation
, base
, one-liner
, random
, stdenv
}:
mkDerivation {

pname = "one-liner-instances";
version = "0.1.2.1";
sha256 = "9384f47a3bdd5be17fa8ac3deca8e406794a1e9e140ec3b173ccd8d22c00c9bf";
libraryHaskellDepends = [
base
one-liner
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/one-liner-instances#readme";
description = "Generics-based implementations for common typeclasses";
license = stdenv.lib.licenses.bsd3;

}) {};
"online" = callPackage
({
  mkDerivation
, base
, foldl
, formatting
, numhask
, optparse-generic
, perf
, protolude
, scientific
, stdenv
, tdigest
, text
, vector
, vector-algorithms
}:
mkDerivation {

pname = "online";
version = "0.2.1.0";
sha256 = "9d7a7db4b78f4162f2495e4f85e16fd1606125b95d6cf087fe144d291c83419b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
foldl
numhask
protolude
tdigest
vector
vector-algorithms
];
executableHaskellDepends = [
base
foldl
formatting
numhask
optparse-generic
perf
protolude
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tonyday567/online#readme";
description = "online statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"oo-prototypes" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "oo-prototypes";
version = "0.1.0.0";
sha256 = "9eaee40e3221f817b957e472917977bdb06ac0e163a0c6ef87941de29a12f576";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/oo-prototypes";
description = "Support for OO-like prototypes";
license = stdenv.lib.licenses.gpl2;

}) {};
"opaleye" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytestring
, case-insensitive
, contravariant
, postgresql-simple
, pretty
, product-profunctors
, profunctors
, scientific
, semigroups
, stdenv
, text
, time
, time-locale-compat
, transformers
, uuid
, void
}:
mkDerivation {

pname = "opaleye";
version = "0.6.7000.0";
sha256 = "b3d76dad4faf2ef1988196826e145e101878a44f201fa263b2946b77e6299287";
revision = "1";
editedCabalFile = "1g2asrmd4aaw61dcprs9mih1j065q9xipnrhkxablqwcpr8pzz21";
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytestring
case-insensitive
contravariant
postgresql-simple
pretty
product-profunctors
profunctors
scientific
semigroups
text
time
time-locale-compat
transformers
uuid
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
description = "An SQL-generating DSL targeting PostgreSQL";
license = stdenv.lib.licenses.bsd3;

}) {};
"open-browser" = callPackage
({
  mkDerivation
, base
, process
, stdenv
}:
mkDerivation {

pname = "open-browser";
version = "0.2.1.0";
sha256 = "0bed2e63800f738e78a4803ed22902accb50ac02068b96c17ce83a267244ca66";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
process
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rightfold/open-browser";
description = "Open a web browser from Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"open-witness" = callPackage
({
  mkDerivation
, base
, constraints
, hashable
, random
, stdenv
, template-haskell
, transformers
, witness
}:
mkDerivation {

pname = "open-witness";
version = "0.4.0.1";
sha256 = "0770500d6eeb301fc92d30bec2ccef55b05beb0200125fcbddb6b50836034111";
libraryHaskellDepends = [
base
constraints
hashable
random
template-haskell
transformers
witness
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AshleyYakeley/open-witness";
description = "open witnesses";
license = stdenv.lib.licenses.bsd3;

}) {};
"openexr-write" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, data-binary-ieee754
, deepseq
, split
, stdenv
, vector
, vector-split
, zlib
}:
mkDerivation {

pname = "openexr-write";
version = "0.1.0.1";
sha256 = "6de3f2d859f72ad3654dbe24ef89aa98967a55a3fd98e0c090b93a04e4938538";
libraryHaskellDepends = [
base
binary
bytestring
data-binary-ieee754
deepseq
split
vector
vector-split
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pavolzetor/openexr-write#readme";
description = "Library for writing images in OpenEXR HDR file format";
license = stdenv.lib.licenses.gpl3;

}) {};
"openpgp-asciiarmor" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, binary
, bytestring
, stdenv
}:
mkDerivation {

pname = "openpgp-asciiarmor";
version = "0.1.1";
sha256 = "b92f3f5316f18c9e30a95cd59888658384ddd20b628e4cd5fbb647177f52f607";
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
binary
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://floss.scru.org/openpgp-asciiarmor";
description = "OpenPGP (RFC4880) ASCII Armor codec";
license = stdenv.lib.licenses.isc;

}) {};
"opensource" = callPackage
({
  mkDerivation
, aeson
, base
, http-client
, http-client-tls
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "opensource";
version = "0.1.0.0";
sha256 = "3459b6ce70fb8fc8bdf9d9f6ed0476724cb8a11b673fc60422edac2376620127";
revision = "1";
editedCabalFile = "02zb9m7d6fsjbqgwbjnkrpgqc93zm34bvzgasw903hhdkskshrp6";
libraryHaskellDepends = [
aeson
base
http-client
http-client-tls
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://api.opensource.org/";
description = "Haskell API Wrapper for the Open Source License API";
license = stdenv.lib.licenses.mit;

}) {};
"openssl-streams" = callPackage
({
  mkDerivation
, base
, bytestring
, HsOpenSSL
, io-streams
, network
, stdenv
}:
mkDerivation {

pname = "openssl-streams";
version = "1.2.1.3";
sha256 = "dc7170e835cf71a132903e2a6ccc976bd2984f9241ea2e4e99a9ece74f868f5f";
libraryHaskellDepends = [
base
bytestring
HsOpenSSL
io-streams
network
];
doHaddock = false;
doCheck = false;
description = "OpenSSL network support for io-streams";
license = stdenv.lib.licenses.bsd3;

}) {};
"operational" = callPackage
({
  mkDerivation
, base
, mtl
, random
, stdenv
}:
mkDerivation {

pname = "operational";
version = "0.2.3.5";
sha256 = "91d479063ae7ed3d0a6ae911bdee550fbf31cf341910f9778046b484c55b4af4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
mtl
];
executableHaskellDepends = [
base
mtl
random
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.haskell.org/Operational";
description = "Implementation of difficult monads made easy with operational semantics";
license = stdenv.lib.licenses.bsd3;

}) {};
"operational-class" = callPackage
({
  mkDerivation
, base
, operational
, stdenv
, transformers
}:
mkDerivation {

pname = "operational-class";
version = "0.3.0.0";
sha256 = "8b28b9cb86a2dd520196f6a563538dc2c9e8730f0a0f5e5f3bca19559631e70b";
libraryHaskellDepends = [
base
operational
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/srijs/haskell-operational-class";
description = "MonadProgram typeclass for the operational package";
license = stdenv.lib.licenses.mit;

}) {};
"opml-conduit" = callPackage
({
  mkDerivation
, base
, case-insensitive
, conduit
, conduit-combinators
, containers
, lens-simple
, mono-traversable
, monoid-subclasses
, safe-exceptions
, semigroups
, stdenv
, text
, time
, timerep
, uri-bytestring
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "opml-conduit";
version = "0.6.0.4";
sha256 = "480b557690aab79e3761ad7f1ba1d44873c3d395d2b27f2d133372a01c535d1d";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
case-insensitive
conduit
conduit-combinators
containers
lens-simple
mono-traversable
monoid-subclasses
safe-exceptions
semigroups
text
time
timerep
uri-bytestring
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0ral/opml-conduit";
description = "Streaming parser/renderer for the OPML 2.0 format.";
license = stdenv.lib.licenses.publicDomain;

}) {};
"optional-args" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "optional-args";
version = "1.0.2";
sha256 = "2e3454ad77cba80b15c02dbe1915889fafa81a22deb7fe5e7e01b0dd8d85b0e4";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Optional function arguments";
license = stdenv.lib.licenses.bsd3;

}) {};
"options" = callPackage
({
  mkDerivation
, base
, containers
, monads-tf
, stdenv
, transformers
}:
mkDerivation {

pname = "options";
version = "1.2.1.1";
sha256 = "283eea9ae2c539830c6c65f5c03fb00626cfd1274da0526c285c146fc3065a62";
libraryHaskellDepends = [
base
containers
monads-tf
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/haskell-options/";
description = "A powerful and easy-to-use command-line option parser";
license = stdenv.lib.licenses.mit;

}) {};
"optparse-applicative" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, process
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "optparse-applicative";
version = "0.14.2.0";
sha256 = "e1341e9831c7b10332d1b29cfa966a80d46b476bb52d99d50bdb53eb770d7f30";
libraryHaskellDepends = [
ansi-wl-pprint
base
process
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pcapriotti/optparse-applicative";
description = "Utilities and combinators for parsing command line options";
license = stdenv.lib.licenses.bsd3;

}) {};
"optparse-generic" = callPackage
({
  mkDerivation
, base
, bytestring
, Only
, optparse-applicative
, semigroups
, stdenv
, system-filepath
, text
, time
, transformers
, void
}:
mkDerivation {

pname = "optparse-generic";
version = "1.3.0";
sha256 = "80929958606e4a73672b570ba1a23493fbf46268666d14ab5af53623301c398f";
libraryHaskellDepends = [
base
bytestring
Only
optparse-applicative
semigroups
system-filepath
text
time
transformers
void
];
doHaddock = false;
doCheck = false;
description = "Auto-generate a command-line parser for your datatype";
license = stdenv.lib.licenses.bsd3;

}) {};
"optparse-simple" = callPackage
({
  mkDerivation
, base
, gitrev
, optparse-applicative
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "optparse-simple";
version = "0.1.0";
sha256 = "838d795faa3de3b426b83df11834bead33d02d7fe89df30300ca05c72e714cbc";
libraryHaskellDepends = [
base
gitrev
optparse-applicative
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/optparse-simple#readme";
description = "Simple interface to optparse-applicative";
license = stdenv.lib.licenses.bsd3;

}) {};
"optparse-text" = callPackage
({
  mkDerivation
, base
, optparse-applicative
, stdenv
, text
}:
mkDerivation {

pname = "optparse-text";
version = "0.1.1.0";
sha256 = "f6c081ecec880ae4124f25c1d91ba3a1a3caed9d2fde9e977bceab7d300884ef";
libraryHaskellDepends = [
base
optparse-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/passy/optparse-text#readme";
description = "Data.Text helpers for optparse-applicative";
license = stdenv.lib.licenses.bsd3;

}) {};
"overhang" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "overhang";
version = "1.0.0";
sha256 = "1d68f59354930cdb4372adb86386ca9cbd699d90d2d8c8a1042314f296772a1e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jship/overhang#readme";
description = "Hang loose with your lambdas!";
license = stdenv.lib.licenses.mit;

}) {};
"package-description-remote" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, lens
, lens-aeson
, stdenv
, wreq
}:
mkDerivation {

pname = "package-description-remote";
version = "0.2.0.0";
sha256 = "4a936d2346265d4d960875b12272e9f15aedf6aa6aa5f177f7ce30c7e4f68744";
libraryHaskellDepends = [
base
bytestring
Cabal
lens
lens-aeson
wreq
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yamadapc/stack-run-auto/package-description-remote";
description = "Fetches a 'GenericPackageDescription' from Hackage";
license = stdenv.lib.licenses.mit;

}) {};
"packdeps" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, containers
, directory
, filepath
, optparse-applicative
, process
, semigroups
, split
, stdenv
, tar
, text
, time
}:
mkDerivation {

pname = "packdeps";
version = "0.4.4";
sha256 = "54a8d40b3a5cb6c7df349884dc7f0f37b6bac21f5064fc12f52ee0d4e2628b7e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
Cabal
containers
directory
filepath
split
tar
text
time
];
executableHaskellDepends = [
base
Cabal
containers
optparse-applicative
process
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://packdeps.haskellers.com/";
description = "Check your cabal packages for lagging dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"pager" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-extra
, directory
, process
, resourcet
, safe
, stdenv
, terminfo
, text
, transformers
, unix
}:
mkDerivation {

pname = "pager";
version = "0.1.1.0";
sha256 = "3e1e4f2ca17be6dd68d2d480f29e7a770c0f7ca3109aa1980da677d96cd4eef3";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
conduit
conduit-extra
directory
process
resourcet
safe
terminfo
text
transformers
unix
];
executableHaskellDepends = [
base
bytestring
conduit-extra
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pharpend/pager";
description = "Open up a pager, like 'less' or 'more'";
license = stdenv.lib.licenses.bsd2;

}) {};
"pagerduty" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, bytestring
, bytestring-conversion
, conduit
, data-default-class
, exceptions
, generics-sop
, http-client
, http-types
, lens
, lens-aeson
, mmorph
, monad-control
, mtl
, stdenv
, template-haskell
, text
, time
, time-locale-compat
, transformers
, transformers-base
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "pagerduty";
version = "0.0.8";
sha256 = "2f8f9ef70a672dd9160beb1e87d9b88d8cbd6f137637f4aed98df756ea270463";
libraryHaskellDepends = [
aeson
base
bifunctors
bytestring
bytestring-conversion
conduit
data-default-class
exceptions
generics-sop
http-client
http-types
lens
lens-aeson
mmorph
monad-control
mtl
template-haskell
text
time
time-locale-compat
transformers
transformers-base
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/brendanhay/pagerduty";
description = "Client library for PagerDuty Integration and REST APIs";
license = "unknown";

}) {};
"pagination" = callPackage
({
  mkDerivation
, base
, deepseq
, exceptions
, stdenv
}:
mkDerivation {

pname = "pagination";
version = "0.2.1";
sha256 = "88dcbae69e830adac0943f24f8ae6915f9e4ba684531a76bce936767cbeb203d";
revision = "2";
editedCabalFile = "0wvwi3hymp2vhhpzpycdc65zbsqmi2h0c6r0nf8p5nkgsk4pm1k2";
libraryHaskellDepends = [
base
deepseq
exceptions
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/pagination";
description = "Framework-agnostic pagination boilerplate";
license = stdenv.lib.licenses.bsd3;

}) {};
"palette" = callPackage
({
  mkDerivation
, array
, base
, colour
, containers
, stdenv
}:
mkDerivation {

pname = "palette";
version = "0.1.0.5";
sha256 = "7434530139793650b5a2dc8b8b32348ab8021c4eeaad774a1fd709c040ab9812";
revision = "1";
editedCabalFile = "1a5qsbd43wmw1f3dj6vnmzd9imh9gsnz29jc47ivbgj4x6mdmsq1";
libraryHaskellDepends = [
array
base
colour
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/diagrams";
description = "Utilities for choosing and creating color schemes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pandoc" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, base64-bytestring
, binary
, blaze-html
, blaze-markup
, bytestring
, Cabal
, case-insensitive
, cmark-gfm
, containers
, data-default
, deepseq
, directory
, doctemplates
, exceptions
, filepath
, Glob
, haddock-library
, hslua
, hslua-module-text
, HTTP
, http-client
, http-client-tls
, http-types
, JuicyPixels
, mtl
, network
, network-uri
, pandoc-types
, parsec
, process
, random
, safe
, scientific
, SHA
, skylighting
, split
, stdenv
, syb
, tagsoup
, temporary
, texmath
, text
, time
, unix
, unordered-containers
, vector
, xml
, yaml
, zip-archive
, zlib
}:
mkDerivation {

pname = "pandoc";
version = "2.1.2";
sha256 = "dc0b26eff61c6eed2e00927fa2c6b966ca758dea1596f3049cc70ae8b650eb65";
revision = "2";
editedCabalFile = "0s7hhycdkjqw4sd6qj4n7lrf76aa4yaw4kaq35ivpjin7hrf011j";
configureFlags = [
"-fhttps"
"-f-trypandoc"
];
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
aeson
aeson-pretty
base
base64-bytestring
binary
blaze-html
blaze-markup
bytestring
case-insensitive
cmark-gfm
containers
data-default
deepseq
directory
doctemplates
exceptions
filepath
Glob
haddock-library
hslua
hslua-module-text
HTTP
http-client
http-client-tls
http-types
JuicyPixels
mtl
network
network-uri
pandoc-types
parsec
process
random
safe
scientific
SHA
skylighting
split
syb
tagsoup
temporary
texmath
text
time
unix
unordered-containers
vector
xml
yaml
zip-archive
zlib
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://pandoc.org";
description = "Conversion between markup formats";
license = "GPL";

}) {};
"pandoc-citeproc" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, attoparsec
, base
, base-compat
, bytestring
, Cabal
, containers
, data-default
, directory
, filepath
, hs-bibutils
, mtl
, old-locale
, pandoc
, pandoc-types
, parsec
, rfc5051
, setenv
, split
, stdenv
, syb
, tagsoup
, text
, time
, unordered-containers
, vector
, xml-conduit
, yaml
}:
mkDerivation {

pname = "pandoc-citeproc";
version = "0.14.3.1";
sha256 = "42c0b2c8365441bf884daa6202e6ed01b42181cf255406c88b3b31cd27cb467a";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
containers
data-default
directory
filepath
hs-bibutils
mtl
old-locale
pandoc
pandoc-types
parsec
rfc5051
setenv
split
syb
tagsoup
text
time
unordered-containers
vector
xml-conduit
yaml
];
executableHaskellDepends = [
aeson
aeson-pretty
attoparsec
base
base-compat
bytestring
filepath
pandoc
pandoc-types
syb
text
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/pandoc-citeproc";
description = "Supports using pandoc with citeproc";
license = stdenv.lib.licenses.bsd3;

}) {};
"pandoc-types" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, deepseq
, ghc-prim
, QuickCheck
, stdenv
, syb
, transformers
}:
mkDerivation {

pname = "pandoc-types";
version = "1.17.3.1";
sha256 = "4b1674f7d000da4f86e775f6178e1939fe506e2e4b45c8842dc0182ad92a1736";
libraryHaskellDepends = [
aeson
base
bytestring
containers
deepseq
ghc-prim
QuickCheck
syb
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://johnmacfarlane.net/pandoc";
description = "Types for representing a structured document";
license = stdenv.lib.licenses.bsd3;

}) {};
"pango" = callPackage
({
  mkDerivation
, array
, base
, Cabal
, cairo
, containers
, directory
, filepath
, glib
, gtk2hs-buildtools
, mtl
, pango
, pretty
, process
, stdenv
, text
}:
mkDerivation {

pname = "pango";
version = "0.13.5.0";
sha256 = "bf59b9273134e5d1c9c648a253e5a766cd1ef51afc2216175bce21a15b6d49e8";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
filepath
gtk2hs-buildtools
];
libraryHaskellDepends = [
array
base
cairo
containers
directory
glib
mtl
pretty
process
text
];
libraryPkgconfigDepends = [
pango
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/gtk2hs/";
description = "Binding to the Pango text rendering engine";
license = stdenv.lib.licenses.lgpl21;

}) {inherit (pkgs) pango;};
"papillon" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, filepath
, monads-tf
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "papillon";
version = "0.1.0.5";
sha256 = "f384ff05d5cb0fed420bc700dabdb3e8beef191921f9759b12bf3dfe60ad82b0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
monads-tf
template-haskell
transformers
];
executableHaskellDepends = [
base
directory
filepath
monads-tf
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://skami.iocikun.jp/haskell/packages/papillon";
description = "packrat parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"parallel" = callPackage
({
  mkDerivation
, array
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "parallel";
version = "3.2.1.1";
sha256 = "323bb9bc9e36fb9bfb08e68a772411302b1599bfffbc6de20fa3437ce1473c17";
revision = "1";
editedCabalFile = "12sgigg7r4nmyhbfn1p09ajf4s576yca31b7daj5zpp1mxgb5x7i";
libraryHaskellDepends = [
array
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
description = "Parallel programming library";
license = stdenv.lib.licenses.bsd3;

}) {};
"parallel-io" = callPackage
({
  mkDerivation
, base
, containers
, extensible-exceptions
, random
, stdenv
}:
mkDerivation {

pname = "parallel-io";
version = "0.3.3";
sha256 = "3a14c02b9b8b7c72577eb90a8dd72de75d99192def87d7aa79545ee4d6e80645";
revision = "1";
editedCabalFile = "1vlb2x1ghih4l64031rmh7h643c3knh5r5mwilf7g8izb58ypvkm";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
extensible-exceptions
random
];
doHaddock = false;
doCheck = false;
homepage = "http://batterseapower.github.com/parallel-io";
description = "Combinators for executing IO actions in parallel on a thread pool";
license = stdenv.lib.licenses.bsd3;

}) {};
"parseargs" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "parseargs";
version = "0.2.0.8";
sha256 = "7b789204c15d0c478db3d133f349a6970b5509fc6af655faedc03c7426dcf7d6";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/BartMassey/parseargs";
description = "Full-featured command-line argument parsing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"parsec" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "parsec";
version = "3.1.13.0";
sha256 = "7861ae437a6177ee7c08899432fd8c062e7c110361da48a9f9e88263fd4d80f1";
revision = "1";
editedCabalFile = "1dpr1wfpykkl6kayp4wnyn0n1zv7pvqksax2i54dhdgjijj8qynd";
libraryHaskellDepends = [
base
bytestring
mtl
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/parsec";
description = "Monadic parser combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"parsec-numeric" = callPackage
({
  mkDerivation
, base
, parsec
, stdenv
}:
mkDerivation {

pname = "parsec-numeric";
version = "0.1.0.0";
sha256 = "7bdd9ae4aa63695e3072c73d99b85ef1572ffe9f5a07621edaa9515393a6e52f";
libraryHaskellDepends = [
base
parsec
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrewRademacher/parsec-numeric";
description = "Parsec combinators for parsing Haskell numeric types";
license = "unknown";

}) {};
"parser-combinators" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "parser-combinators";
version = "0.4.0";
sha256 = "b124e9411de085972e4d9ae8254299e8e773e964b2798eb400d5cf6814f8f3ab";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/parser-combinators";
description = "Lightweight package providing commonly useful parser combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"parsers" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-orphans
, charset
, containers
, mtl
, parsec
, scientific
, semigroups
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "parsers";
version = "0.12.8";
sha256 = "5aba0afdd53f3bd39b145ca858b696ba0a36d099c694742fb6a5d38900806bc8";
libraryHaskellDepends = [
attoparsec
base
base-orphans
charset
containers
mtl
parsec
scientific
semigroups
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/parsers/";
description = "Parsing combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"partial-handler" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "partial-handler";
version = "1.0.3";
sha256 = "94c72af024417ec04e3d94b5b57c7bfeb8b48acb8444e7c0fe0764ff1139c131";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/partial-handler";
description = "A composable exception handler";
license = stdenv.lib.licenses.mit;

}) {};
"partial-isomorphisms" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "partial-isomorphisms";
version = "0.2.2.1";
sha256 = "4c551fa69119e87de1ba0ec7b854f6ed13fb2fe2768db4afff2f8468f0f4a164";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
description = "Partial isomorphisms";
license = stdenv.lib.licenses.bsd3;

}) {};
"partial-order" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "partial-order";
version = "0.1.2.1";
sha256 = "e37dc77f4b8852b1c96fe9b8b06db41aa00d06c5ce7f0c1c5bea15ea462ac397";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mtesseract/haskell-partial-order";
description = "Provides typeclass suitable for types admitting a partial order";
license = stdenv.lib.licenses.bsd3;

}) {};
"partial-semigroup" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "partial-semigroup";
version = "0.3.0.3";
sha256 = "3d273d24524ddfab2999a047e43f2f25ee89b0ea083f24a527de8a7da74056ef";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chris-martin/partial-semigroup";
description = "A partial binary associative operator";
license = stdenv.lib.licenses.asl20;

}) {};
"path" = callPackage
({
  mkDerivation
, aeson
, base
, deepseq
, exceptions
, filepath
, hashable
, stdenv
, template-haskell
}:
mkDerivation {

pname = "path";
version = "0.6.1";
sha256 = "4b8bd85a13395b4240c639b9cf804371854d5dac69158f661068bd3089a25e59";
revision = "1";
editedCabalFile = "05b1zwx2a893h4h5wvgpc5g5pyx71hfmx409rqisd8s1bq1hn463";
libraryHaskellDepends = [
aeson
base
deepseq
exceptions
filepath
hashable
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Support for well-typed paths";
license = stdenv.lib.licenses.bsd3;

}) {};
"path-extra" = callPackage
({
  mkDerivation
, base
, exceptions
, path
, stdenv
}:
mkDerivation {

pname = "path-extra";
version = "0.0.6";
sha256 = "883aa371560b3b0d41df1954ed44c6dd6e5d77cb3bd4ebf0fd4b9d72df0a6935";
libraryHaskellDepends = [
base
exceptions
path
];
doHaddock = false;
doCheck = false;
description = "Chris Done's path library, enriched with URL-related goodies";
license = stdenv.lib.licenses.bsd3;

}) {};
"path-io" = callPackage
({
  mkDerivation
, base
, containers
, directory
, dlist
, exceptions
, filepath
, path
, stdenv
, temporary
, time
, transformers
, unix-compat
}:
mkDerivation {

pname = "path-io";
version = "1.3.3";
sha256 = "2aec05914a7569f221cf73e25070fea5fad8125a9a93845e8d614a1c291e35bd";
revision = "3";
editedCabalFile = "1h9hsibbflkxpjl2fqamqiv3x3gasf51apnmklrs9l9x8r32hzcc";
libraryHaskellDepends = [
base
containers
directory
dlist
exceptions
filepath
path
temporary
time
transformers
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/path-io";
description = "Interface to ‘directory’ package for users of ‘path’";
license = stdenv.lib.licenses.bsd3;

}) {};
"path-pieces" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, time
}:
mkDerivation {

pname = "path-pieces";
version = "0.2.1";
sha256 = "080bd49f53e20597ca3e5962e0c279a3422345f5b088840a30a751cd76d4a36f";
revision = "1";
editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
libraryHaskellDepends = [
base
text
time
];
doHaddock = false;
doCheck = false;
description = "Components of paths";
license = stdenv.lib.licenses.bsd3;

}) {};
"path-text-utf8" = callPackage
({
  mkDerivation
, base
, bytestring
, path
, safe-exceptions
, stdenv
, text
}:
mkDerivation {

pname = "path-text-utf8";
version = "0.0.1.0";
sha256 = "8f110e6ef0f50566ff0ee03e4551d5c6913ad3c1d5da9ee91229a44b2437f37c";
revision = "1";
editedCabalFile = "1m04dyqqamh9lkkmcbf2dg7ivd5kb2dxqh9b844lr7mk5qganar6";
libraryHaskellDepends = [
base
bytestring
path
safe-exceptions
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chris-martin/path-text-utf8";
description = "Read and write UTF-8 text files";
license = stdenv.lib.licenses.asl20;

}) {};
"pathtype" = callPackage
({
  mkDerivation
, base
, deepseq
, directory
, old-time
, QuickCheck
, semigroups
, stdenv
, tagged
, time
, transformers
, utility-ht
}:
mkDerivation {

pname = "pathtype";
version = "0.8.1";
sha256 = "d5e6dc557dcf53e97cc2f7f6d6ee30992920e3ea074042b6ac11f74f2792340f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
deepseq
directory
old-time
QuickCheck
semigroups
tagged
time
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/pathtype/";
description = "Type-safe replacement for System.FilePath etc";
license = stdenv.lib.licenses.bsd3;

}) {};
"pathwalk" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
, transformers
}:
mkDerivation {

pname = "pathwalk";
version = "0.3.1.2";
sha256 = "76e0d0646a3133a062dbae4e9d37d59e71d6328706bb178552a93800e4550e91";
libraryHaskellDepends = [
base
directory
filepath
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Xe/pathwalk";
description = "Path walking utilities for Haskell programs";
license = stdenv.lib.licenses.mit;

}) {};
"patience" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "patience";
version = "0.1.1";
sha256 = "35c7c334d344b3cbdc61cc88c559bedb300ace860a80e3990aeb268f1f10db63";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "Patience diff and longest increasing subsequence";
license = stdenv.lib.licenses.bsd3;

}) {};
"pattern-arrows" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "pattern-arrows";
version = "0.0.2";
sha256 = "6fc2d972e72785d727d2b68e1f82ef94a2c93cedbc00e6a4cdc03498825c078f";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
description = "Arrows for Pretty Printing";
license = stdenv.lib.licenses.mit;

}) {};
"pcf-font" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, stdenv
, vector
, zlib
}:
mkDerivation {

pname = "pcf-font";
version = "0.2.2.0";
sha256 = "8a67d04240a7668e669414d1b4f531d290c79a63198e0ecf02cb0339bff098ef";
libraryHaskellDepends = [
base
binary
bytestring
containers
vector
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michael-swan/pcf-font";
description = "PCF font parsing and rendering library";
license = stdenv.lib.licenses.bsd3;

}) {};
"pcf-font-embed" = callPackage
({
  mkDerivation
, base
, bytestring
, pcf-font
, stdenv
, template-haskell
, vector
}:
mkDerivation {

pname = "pcf-font-embed";
version = "0.1.2.0";
sha256 = "c55d51ee6f959c9c05bb9d9adac3aad1cd87b2bba3cca7d3667d67f1a230fd51";
libraryHaskellDepends = [
base
bytestring
pcf-font
template-haskell
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michael-swan/pcf-font-embed";
description = "Template Haskell for embedding text rendered using PCF fonts";
license = stdenv.lib.licenses.bsd3;

}) {};
"pcre-heavy" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, pcre-light
, semigroups
, stdenv
, string-conversions
, template-haskell
}:
mkDerivation {

pname = "pcre-heavy";
version = "1.0.0.2";
sha256 = "8a5cf697b7683127812450cef57d0d74ac5c1117ec80618d10509642f793cbd1";
libraryHaskellDepends = [
base
base-compat
bytestring
pcre-light
semigroups
string-conversions
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/pcre-heavy";
description = "A regexp library on top of pcre-light you can actually use";
license = stdenv.lib.licenses.publicDomain;

}) {};
"pcre-light" = callPackage
({
  mkDerivation
, base
, bytestring
, pcre
, stdenv
}:
mkDerivation {

pname = "pcre-light";
version = "0.4.0.4";
sha256 = "02c97e39263d18fd26aa63d52c88c4bfbb5c3f66ab40564552e7f11d5d889e75";
libraryHaskellDepends = [
base
bytestring
];
libraryPkgconfigDepends = [
pcre
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/pcre-light";
description = "Portable regex library for Perl 5 compatible regular expressions";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) pcre;};
"pcre-utils" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, bytestring
, mtl
, regex-pcre-builtin
, stdenv
, vector
}:
mkDerivation {

pname = "pcre-utils";
version = "0.1.8.1.1";
sha256 = "1f2a80ca63308e182542534866a844efaf880deac4145213bf1c83a560586df4";
libraryHaskellDepends = [
array
attoparsec
base
bytestring
mtl
regex-pcre-builtin
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bartavelle/pcre-utils";
description = "Perl-like substitute and split for PCRE regexps";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdf-toolbox-content" = callPackage
({
  mkDerivation
, attoparsec
, base
, base16-bytestring
, bytestring
, containers
, io-streams
, pdf-toolbox-core
, stdenv
, text
}:
mkDerivation {

pname = "pdf-toolbox-content";
version = "0.0.5.1";
sha256 = "1c104e232e178603ff9dd8c6eaaf0ccbda918c70b40ed63f08fa1922a3c88488";
libraryHaskellDepends = [
attoparsec
base
base16-bytestring
bytestring
containers
io-streams
pdf-toolbox-core
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/pdf-toolbox";
description = "A collection of tools for processing PDF files";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdf-toolbox-core" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, errors
, io-streams
, scientific
, stdenv
, transformers
, zlib-bindings
}:
mkDerivation {

pname = "pdf-toolbox-core";
version = "0.0.4.1";
sha256 = "cce3949ef5596b5d61032ce1547160dc5f52e3d5c556dcdb9aabf1582173a981";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
errors
io-streams
scientific
transformers
zlib-bindings
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/pdf-toolbox";
description = "A collection of tools for processing PDF files";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdf-toolbox-document" = callPackage
({
  mkDerivation
, base
, bytestring
, cipher-aes
, cipher-rc4
, containers
, crypto-api
, cryptohash
, io-streams
, pdf-toolbox-content
, pdf-toolbox-core
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "pdf-toolbox-document";
version = "0.0.7.1";
sha256 = "3f7d379baa85c1cf9998e3f84177ad24b5cc8632fb211af7a09603e59596f0e1";
libraryHaskellDepends = [
base
bytestring
cipher-aes
cipher-rc4
containers
crypto-api
cryptohash
io-streams
pdf-toolbox-content
pdf-toolbox-core
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/pdf-toolbox";
description = "A collection of tools for processing PDF files";
license = stdenv.lib.licenses.bsd3;

}) {};
"pdfinfo" = callPackage
({
  mkDerivation
, base
, mtl
, old-locale
, process-extras
, stdenv
, text
, time
, time-locale-compat
}:
mkDerivation {

pname = "pdfinfo";
version = "1.5.4";
sha256 = "9a6a1f7d8ab0a5e8f7f8276da070ccddec140d6b2549b084042159b639230911";
libraryHaskellDepends = [
base
mtl
old-locale
process-extras
text
time
time-locale-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/pdfinfo";
description = "Wrapper around the pdfinfo command";
license = stdenv.lib.licenses.bsd3;

}) {};
"pell" = callPackage
({
  mkDerivation
, arithmoi
, base
, containers
, stdenv
}:
mkDerivation {

pname = "pell";
version = "0.1.1.0";
sha256 = "5e2002920c97bddbe3047dbc2eba3ddadd3823c4ca137c4a1d3314cb12dc4ad4";
libraryHaskellDepends = [
arithmoi
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brunjlar/pell";
description = "Package to solve the Generalized Pell Equation";
license = stdenv.lib.licenses.mit;

}) {};
"pem" = callPackage
({
  mkDerivation
, base
, basement
, bytestring
, memory
, stdenv
}:
mkDerivation {

pname = "pem";
version = "0.2.4";
sha256 = "770c4c1b9cd24b3db7f511f8a48404a0d098999e28573c3743a8a296bb96f8d4";
libraryHaskellDepends = [
base
basement
bytestring
memory
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-pem";
description = "Privacy Enhanced Mail (PEM) format reader and writer";
license = stdenv.lib.licenses.bsd3;

}) {};
"perf" = callPackage
({
  mkDerivation
, base
, containers
, foldl
, formatting
, numhask
, optparse-generic
, protolude
, rdtsc
, scientific
, stdenv
, tdigest
, text
, time
, vector
}:
mkDerivation {

pname = "perf";
version = "0.3.1.1";
sha256 = "180835afeb2677fa8df65d07ee37a95bad21df20bd824f7e3f56768d42339b7f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
foldl
numhask
protolude
rdtsc
tdigest
time
];
executableHaskellDepends = [
base
formatting
numhask
optparse-generic
protolude
scientific
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tonyday567/perf#readme";
description = "low-level performance statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"perfect-hash-generator" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-ordlist
, directory
, filepath
, hashable
, optparse-applicative
, random
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "perfect-hash-generator";
version = "0.2.0.6";
sha256 = "df727611ca45994fc40e3e37ebae783a892f3b46db95897ba2df876e65f7b110";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
data-ordlist
directory
filepath
hashable
text
unordered-containers
vector
];
executableHaskellDepends = [
base
binary
bytestring
containers
hashable
optparse-applicative
random
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kostmo/perfect-hash-generator#readme";
description = "Perfect minimal hashing implementation in native Haskell";
license = stdenv.lib.licenses.asl20;

}) {};
"persistable-record" = callPackage
({
  mkDerivation
, array
, base
, containers
, dlist
, names-th
, product-isomorphic
, stdenv
, template-haskell
, th-data-compat
, transformers
}:
mkDerivation {

pname = "persistable-record";
version = "0.6.0.3";
sha256 = "c690daea6de51d738d500245643c9d7578111949e37608bcafca8555d2905989";
libraryHaskellDepends = [
array
base
containers
dlist
names-th
product-isomorphic
template-haskell
th-data-compat
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Binding between SQL database values and haskell records";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistable-types-HDBC-pg" = callPackage
({
  mkDerivation
, base
, bytestring
, convertible
, dlist
, HDBC
, persistable-record
, relational-query
, relational-query-HDBC
, stdenv
, text-postgresql
}:
mkDerivation {

pname = "persistable-types-HDBC-pg";
version = "0.0.3.2";
sha256 = "59408a7355ccf079d3a08f37818f79db297151f4e9e2b763df65d89802abbf35";
libraryHaskellDepends = [
base
bytestring
convertible
dlist
HDBC
persistable-record
relational-query
relational-query-HDBC
text-postgresql
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "HDBC and Relational-Record instances of PostgreSQL extended types";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistent" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, blaze-html
, blaze-markup
, bytestring
, conduit
, containers
, fast-logger
, haskell-src-meta
, http-api-data
, monad-logger
, mtl
, old-locale
, path-pieces
, resource-pool
, resourcet
, scientific
, silently
, stdenv
, tagged
, template-haskell
, text
, time
, transformers
, unliftio-core
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "persistent";
version = "2.8.2";
sha256 = "696bb279259e307778dc7fbd49565c48a66429f14e793a41a13cfae0968c1ec0";
revision = "1";
editedCabalFile = "18a6dfpjakcmyl9qnflgi63rss09zj3xg0py6bliary4y2cqw4fz";
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
blaze-html
blaze-markup
bytestring
conduit
containers
fast-logger
haskell-src-meta
http-api-data
monad-logger
mtl
old-locale
path-pieces
resource-pool
resourcet
scientific
silently
tagged
template-haskell
text
time
transformers
unliftio-core
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Type-safe, multi-backend data serialization";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-mongoDB" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bson
, bytestring
, cereal
, conduit
, containers
, http-api-data
, mongoDB
, network
, path-pieces
, persistent
, resource-pool
, resourcet
, stdenv
, text
, time
, transformers
, unliftio-core
}:
mkDerivation {

pname = "persistent-mongoDB";
version = "2.8.0";
sha256 = "f410a1427881d8d58f4d0dfcc875d84867d8afdcdd340573c9e298df303b178a";
libraryHaskellDepends = [
aeson
attoparsec
base
bson
bytestring
cereal
conduit
containers
http-api-data
mongoDB
network
path-pieces
persistent
resource-pool
resourcet
text
time
transformers
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Backend for the persistent library using mongoDB";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-mysql" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, conduit
, containers
, monad-logger
, mysql
, mysql-simple
, persistent
, resource-pool
, resourcet
, stdenv
, text
, transformers
, unliftio-core
}:
mkDerivation {

pname = "persistent-mysql";
version = "2.8.1";
sha256 = "80cc29f8fa90503a13c348e14f10dd0883f17837ca72a5cd5b2884fdb286e654";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
conduit
containers
monad-logger
mysql
mysql-simple
persistent
resource-pool
resourcet
text
transformers
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Backend for the persistent library using MySQL database server";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-mysql-haskell" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, containers
, io-streams
, monad-logger
, mysql-haskell
, network
, persistent
, persistent-template
, resource-pool
, resourcet
, stdenv
, text
, time
, tls
, transformers
, unliftio-core
}:
mkDerivation {

pname = "persistent-mysql-haskell";
version = "0.4.0";
sha256 = "0d2cd8b20b4f78ee7c35cbe489f901dde2a5f06c9fa153b1a9c475f0fc769bbd";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
conduit
containers
io-streams
monad-logger
mysql-haskell
network
persistent
resource-pool
resourcet
text
time
tls
transformers
unliftio-core
];
executableHaskellDepends = [
base
monad-logger
persistent
persistent-template
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "A pure haskell backend for the persistent library using MySQL database server";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-postgresql" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, conduit
, containers
, monad-logger
, persistent
, postgresql-libpq
, postgresql-simple
, resource-pool
, resourcet
, stdenv
, text
, time
, transformers
, unliftio-core
}:
mkDerivation {

pname = "persistent-postgresql";
version = "2.8.2.0";
sha256 = "f2f3c80b9f1d5ae494492204f3170e33ff3a5792b9675748839de6309d082f49";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
conduit
containers
monad-logger
persistent
postgresql-libpq
postgresql-simple
resource-pool
resourcet
text
time
transformers
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Backend for the persistent library using postgresql";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-redis" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, binary
, bytestring
, hedis
, http-api-data
, monad-control
, mtl
, path-pieces
, persistent
, scientific
, stdenv
, text
, time
, transformers
, utf8-string
}:
mkDerivation {

pname = "persistent-redis";
version = "2.5.2.2";
sha256 = "34c4b00f5c92ce8ae4bcbeb90bb3568eb0ebbaf3fc7f83dcc71fc034f4606dd6";
libraryHaskellDepends = [
aeson
attoparsec
base
binary
bytestring
hedis
http-api-data
monad-control
mtl
path-pieces
persistent
scientific
text
time
transformers
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Backend for persistent library using Redis";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistent-refs" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, ref-fd
, stdenv
, transformers
}:
mkDerivation {

pname = "persistent-refs";
version = "0.4";
sha256 = "46b310e034e23993e7da740d388e06e410483ada05cbcc8c0a4953ee19f8d0d3";
libraryHaskellDepends = [
base
containers
mtl
ref-fd
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acfoltzer/persistent-refs";
description = "Haskell references backed by an IntMap for persistence and reversibility";
license = stdenv.lib.licenses.bsd3;

}) {};
"persistent-sqlite" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, containers
, microlens-th
, monad-logger
, old-locale
, persistent
, resource-pool
, resourcet
, stdenv
, text
, time
, transformers
, unliftio-core
, unordered-containers
}:
mkDerivation {

pname = "persistent-sqlite";
version = "2.8.1.2";
sha256 = "2f7157f3830370f60c7c36490ea49b7c52caf0f2a7349f86cf47970189f9ad0c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
conduit
containers
microlens-th
monad-logger
old-locale
persistent
resource-pool
resourcet
text
time
transformers
unliftio-core
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Backend for the persistent library using sqlite3";
license = stdenv.lib.licenses.mit;

}) {};
"persistent-template" = callPackage
({
  mkDerivation
, aeson
, aeson-compat
, base
, bytestring
, containers
, ghc-prim
, http-api-data
, monad-control
, monad-logger
, path-pieces
, persistent
, stdenv
, tagged
, template-haskell
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "persistent-template";
version = "2.5.4";
sha256 = "4cae740ce92f98cb3ae9e092e740753394d5687b887399ee5f87af7f3c730a01";
revision = "2";
editedCabalFile = "03qgwk32krldph3blw5agiqcpccr3649hajyn8wm9k71zz82dpn6";
libraryHaskellDepends = [
aeson
aeson-compat
base
bytestring
containers
ghc-prim
http-api-data
monad-control
monad-logger
path-pieces
persistent
tagged
template-haskell
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/persistent";
description = "Type-safe, non-relational, multi-backend persistence";
license = stdenv.lib.licenses.mit;

}) {};
"pg-transact" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, monad-control
, postgresql-simple
, stdenv
, transformers
}:
mkDerivation {

pname = "pg-transact";
version = "0.1.0.1";
sha256 = "598236369ee1228a3a76b4f0d5830d652a90ddbc0f98fdde064ad979a1abc97d";
libraryHaskellDepends = [
base
bytestring
exceptions
monad-control
postgresql-simple
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jfischoff/pg-transact#readme";
description = "Another postgresql-simple transaction monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"pgp-wordlist" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, text
, vector
}:
mkDerivation {

pname = "pgp-wordlist";
version = "0.1.0.2";
sha256 = "e28b6fe85222adf1247d5870ab47c68c3d25df3f9ceda104bfb64e1414a92466";
libraryHaskellDepends = [
base
bytestring
containers
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/quchen/pgp-wordlist";
description = "Translate between binary data and a human-readable collection of words";
license = stdenv.lib.licenses.bsd3;

}) {};
"phantom-state" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "phantom-state";
version = "0.2.1.2";
sha256 = "f978ef98e810e9a9e53f1479340ba7a28f80a64aba431322959cbf8c620c3811";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
description = "Phantom State Transformer. Like State Monad, but without values.";
license = stdenv.lib.licenses.bsd3;

}) {};
"picedit" = callPackage
({
  mkDerivation
, base
, cli
, hmatrix
, JuicyPixels
, stdenv
, vector
}:
mkDerivation {

pname = "picedit";
version = "0.2.3.0";
sha256 = "e8525d8ca1d4ab0995293948a05dda3eb57f2456603ba5467fef982d0296c12d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
hmatrix
JuicyPixels
vector
];
executableHaskellDepends = [
base
cli
hmatrix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mdibaiee/picedit#readme";
description = "simple image manipulation functions";
license = stdenv.lib.licenses.gpl3;

}) {};
"picoparsec" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, monoid-subclasses
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "picoparsec";
version = "0.1.2.3";
sha256 = "8ec7ed678efaf62de15b7c2f1d21f1ddf8b92f5fa233eed9534c12e8812e9150";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
monoid-subclasses
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/blamario/picoparsec";
description = "Fast combinator parsing for bytestrings and text";
license = stdenv.lib.licenses.bsd3;

}) {};
"picosat" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "picosat";
version = "0.1.4";
sha256 = "5a6d9fae04a77a95a8c92ec6dd76302010b726d8c934dc8d8bbabc82851e9039";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdiehl/haskell-picosat";
description = "Bindings to the PicoSAT solver";
license = stdenv.lib.licenses.mit;

}) {};
"pid1" = callPackage
({
  mkDerivation
, base
, directory
, process
, stdenv
, unix
}:
mkDerivation {

pname = "pid1";
version = "0.1.2.0";
sha256 = "9e97bf9b4b6ffd6a9b706cc6d5fadd8089cd37d2b8763111bd743104db267f76";
revision = "1";
editedCabalFile = "11yg5pjci1d6p5ml0ic4vqn70vjx8vvhqs20rahgfqhh8palkyw9";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
process
unix
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/pid1#readme";
description = "Do signal handling and orphan reaping for Unix PID1 init processes";
license = stdenv.lib.licenses.mit;

}) {};
"pinboard" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, http-client
, http-client-tls
, http-types
, monad-logger
, mtl
, network
, profunctors
, random
, safe-exceptions
, stdenv
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "pinboard";
version = "0.9.12.10";
sha256 = "bac98d28d29f47d39ca15f0b406f438fb2797841a21edfd1cdf8d54bdb64b049";
libraryHaskellDepends = [
aeson
base
bytestring
containers
http-client
http-client-tls
http-types
monad-logger
mtl
network
profunctors
random
safe-exceptions
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jonschoning/pinboard";
description = "Access to the Pinboard API";
license = stdenv.lib.licenses.mit;

}) {};
"pinch" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, ghc-prim
, hashable
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "pinch";
version = "0.3.2.0";
sha256 = "a1920f6cf2347ff3eeea8cfe3f59987a771efc5e2044370244cf55fa61eb1764";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
ghc-prim
hashable
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abhinav/pinch#readme";
description = "An alternative implementation of Thrift for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes" = callPackage
({
  mkDerivation
, base
, exceptions
, mmorph
, mtl
, semigroups
, stdenv
, transformers
, void
}:
mkDerivation {

pname = "pipes";
version = "4.3.9";
sha256 = "5c4cda351f9cf59376832baaeb857db25bd4990fd78c4b061aca0bde47271acb";
libraryHaskellDepends = [
base
exceptions
mmorph
mtl
semigroups
transformers
void
];
doHaddock = false;
doCheck = false;
description = "Compositional pipelines";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-aeson" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, pipes
, pipes-attoparsec
, pipes-bytestring
, pipes-parse
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-aeson";
version = "0.4.1.8";
sha256 = "350411f492fefa8d5a2554e7521d22b7ee88bacbea9d27c0d22468f6355ebe75";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
pipes
pipes-attoparsec
pipes-bytestring
pipes-parse
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0001/pipes-aeson";
description = "Encode and decode JSON streams using Aeson and Pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-attoparsec" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, pipes
, pipes-parse
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "pipes-attoparsec";
version = "0.5.1.5";
sha256 = "fe9eb446289dbc4c4acdde39620877b885417990d9774f622fa9d1daa591cafd";
libraryHaskellDepends = [
attoparsec
base
bytestring
pipes
pipes-parse
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0001/pipes-attoparsec";
description = "Attoparsec and Pipes integration";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, pipes
, pipes-group
, pipes-parse
, stdenv
, stringsearch
, transformers
}:
mkDerivation {

pname = "pipes-bytestring";
version = "2.1.6";
sha256 = "b1dc370680f3671759010caace183bce683d0481bd2c0e3f4906b78ac8623c18";
libraryHaskellDepends = [
base
bytestring
pipes
pipes-group
pipes-parse
stringsearch
transformers
];
doHaddock = false;
doCheck = false;
description = "ByteString support for pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-category" = callPackage
({
  mkDerivation
, base
, lens
, mtl
, pipes
, pipes-extras
, stdenv
}:
mkDerivation {

pname = "pipes-category";
version = "0.3.0.0";
sha256 = "4711d889ed2bf7244bbbc292af5746e0378d72a09929aa1e668056e7f0180701";
libraryHaskellDepends = [
base
lens
mtl
pipes
pipes-extras
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/pipes-category#readme";
description = "Allows instances for Category, Arrow and ArrowChoice for Pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-concurrency" = callPackage
({
  mkDerivation
, async
, base
, contravariant
, pipes
, semigroups
, stdenv
, stm
, void
}:
mkDerivation {

pname = "pipes-concurrency";
version = "2.0.10";
sha256 = "4675721dbff765ac69dd570d90dc816b4b625e39997d4c2640567a544fe636e3";
libraryHaskellDepends = [
async
base
contravariant
pipes
semigroups
stm
void
];
doHaddock = false;
doCheck = false;
description = "Concurrency for the pipes ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-csv" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, cassava
, pipes
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "pipes-csv";
version = "1.4.3";
sha256 = "9485f5ddd56ec9bb10d26cdf2b5b67754726e36b167652b11cb0a42acbda68b3";
libraryHaskellDepends = [
base
blaze-builder
bytestring
cassava
pipes
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
description = "Fast, streaming csv parser";
license = stdenv.lib.licenses.mit;

}) {};
"pipes-extras" = callPackage
({
  mkDerivation
, base
, foldl
, lens
, pipes
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-extras";
version = "1.0.14";
sha256 = "fd1d8984872d10ac77d6ff85255951bb1d1f6378db0805a6cf9e1c708d54c89d";
libraryHaskellDepends = [
base
foldl
lens
pipes
transformers
];
doHaddock = false;
doCheck = false;
description = "Extra utilities for pipes";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-fastx" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, pipes
, pipes-attoparsec
, pipes-bytestring
, stdenv
}:
mkDerivation {

pname = "pipes-fastx";
version = "0.3.0.0";
sha256 = "31264ba760bae1df3170a7d8da32f3e3fcb289545a33f369a94732e55e08ba75";
libraryHaskellDepends = [
attoparsec
base
bytestring
pipes
pipes-attoparsec
pipes-bytestring
];
doHaddock = false;
doCheck = false;
description = "Streaming parsers for Fasta and Fastq";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-fluid" = callPackage
({
  mkDerivation
, base
, constraints
, lens
, lifted-async
, monad-control
, pipes
, semigroups
, stdenv
, stm
, these
, transformers
, transformers-base
}:
mkDerivation {

pname = "pipes-fluid";
version = "0.6.0.0";
sha256 = "8a4097620bbfaf6f7662acbf792defc92434aaadd8dc71f71b7f26e58fb87585";
libraryHaskellDepends = [
base
constraints
lens
lifted-async
monad-control
pipes
semigroups
stm
these
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/pipes-fluid#readme";
description = "Reactively combines Producers so that a value is yielded as soon as possible";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-group" = callPackage
({
  mkDerivation
, base
, free
, pipes
, pipes-parse
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-group";
version = "1.0.10";
sha256 = "28d32a7be4ddacbba2cb9ccf38338fce20b7e72c17328a849875d21381d467c8";
libraryHaskellDepends = [
base
free
pipes
pipes-parse
transformers
];
doHaddock = false;
doCheck = false;
description = "Group streams into substreams";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-interleave" = callPackage
({
  mkDerivation
, base
, containers
, heaps
, pipes
, stdenv
}:
mkDerivation {

pname = "pipes-interleave";
version = "1.1.2";
sha256 = "8d68bc447d0f4b612bf2cfef655e2318d14aee530c4fc5e408e87cf08d69d22a";
libraryHaskellDepends = [
base
containers
heaps
pipes
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bgamari/pipes-interleave";
description = "Interleave and merge streams of elements";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-misc" = callPackage
({
  mkDerivation
, base
, clock
, Decimal
, lens
, mmorph
, mtl
, pipes
, pipes-category
, pipes-concurrency
, semigroups
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "pipes-misc";
version = "0.4.0.1";
sha256 = "b901c84c1a3a61b1a9c8944d16494a256a5690d3e06bf75e66860e28d626f667";
libraryHaskellDepends = [
base
clock
Decimal
lens
mmorph
mtl
pipes
pipes-category
pipes-concurrency
semigroups
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/pipes-misc#readme";
description = "Miscellaneous utilities for pipes, required by glazier-tutorial";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-mongodb" = callPackage
({
  mkDerivation
, base
, monad-control
, mongoDB
, pipes
, stdenv
}:
mkDerivation {

pname = "pipes-mongodb";
version = "0.1.0.0";
sha256 = "0821194bdf7f377beeb20fc8f697ed5388a221b6e8e42c513eea67a91c198340";
libraryHaskellDepends = [
base
monad-control
mongoDB
pipes
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jb55/pipes-mongodb";
description = "Stream results from MongoDB";
license = stdenv.lib.licenses.mit;

}) {};
"pipes-network" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, network
, network-simple
, pipes
, pipes-safe
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-network";
version = "0.6.5";
sha256 = "74a461153a2f650e9e15037002b6d9177b132f409e3204824655ffbb939dc795";
libraryHaskellDepends = [
base
bytestring
exceptions
network
network-simple
pipes
pipes-safe
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k0001/pipes-network";
description = "Use network sockets together with the pipes library";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-parse" = callPackage
({
  mkDerivation
, base
, pipes
, stdenv
, transformers
}:
mkDerivation {

pname = "pipes-parse";
version = "3.0.8";
sha256 = "d28f831b2c8229cca567ee95570787d2dd3f5cfcff3b3c44ee308360a8c107a9";
libraryHaskellDepends = [
base
pipes
transformers
];
doHaddock = false;
doCheck = false;
description = "Parsing infrastructure for the pipes ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-random" = callPackage
({
  mkDerivation
, base
, mwc-random
, pipes
, stdenv
, vector
}:
mkDerivation {

pname = "pipes-random";
version = "1.0.0.4";
sha256 = "542a07e7d7aafa87201c1f00c4e98ac8f59707f776ea03b1f6f117273608659e";
revision = "1";
editedCabalFile = "0m32wz3rwxx9gdcl1chk64yspyd1ls13z03zcgjcn865mpbhz97h";
libraryHaskellDepends = [
base
mwc-random
pipes
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fosskers/pipes-random";
description = "Producers for handling randomness";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-safe" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, monad-control
, mtl
, pipes
, primitive
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "pipes-safe";
version = "2.2.9";
sha256 = "17f16403794a2517eb283dd8b34a17c3485143b7fb66870d0a305294815a1898";
libraryHaskellDepends = [
base
containers
exceptions
monad-control
mtl
pipes
primitive
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
description = "Safety for the pipes ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-text" = callPackage
({
  mkDerivation
, base
, bytestring
, pipes
, pipes-bytestring
, pipes-group
, pipes-parse
, pipes-safe
, stdenv
, streaming-commons
, text
, transformers
}:
mkDerivation {

pname = "pipes-text";
version = "0.0.2.5";
sha256 = "4489ee02a8ebfd87049fc4dd1380b21e6f33984eb0101c836ab8e054759c0f2a";
libraryHaskellDepends = [
base
bytestring
pipes
pipes-bytestring
pipes-group
pipes-parse
pipes-safe
streaming-commons
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/michaelt/text-pipes";
description = "properly streaming text";
license = stdenv.lib.licenses.bsd3;

}) {};
"pipes-wai" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, http-types
, pipes
, stdenv
, transformers
, wai
}:
mkDerivation {

pname = "pipes-wai";
version = "3.2.0";
sha256 = "04a670df140c12b64f6f0d04b3c5571527f144ee429e7030bb62ec8785056d2a";
libraryHaskellDepends = [
base
blaze-builder
bytestring
http-types
pipes
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/iand675/pipes-wai";
description = "A port of wai-conduit for the pipes ecosystem";
license = stdenv.lib.licenses.mit;

}) {};
"pixelated-avatar-generator" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, cli
, JuicyPixels
, pureMD5
, random
, split
, stdenv
}:
mkDerivation {

pname = "pixelated-avatar-generator";
version = "0.1.3";
sha256 = "4d7d87404121f5481faa7d6af087575a9541aaad96b196ec230d1883a563a078";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
JuicyPixels
pureMD5
split
];
executableHaskellDepends = [
async
base
cli
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ExcaliburZero/pixelated-avatar-generator";
description = "A library and application for generating pixelated avatars";
license = stdenv.lib.licenses.mit;

}) {};
"pkcs10" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-parse
, asn1-types
, base
, bytestring
, cryptonite
, pem
, stdenv
, x509
}:
mkDerivation {

pname = "pkcs10";
version = "0.2.0.0";
sha256 = "896e923f67bac4c7f0e48c9afca60f9ef5178e00fca9f179e8fdae3c12476294";
libraryHaskellDepends = [
asn1-encoding
asn1-parse
asn1-types
base
bytestring
cryptonite
pem
x509
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fcomb/pkcs10-hs#readme";
description = "PKCS#10 library";
license = stdenv.lib.licenses.asl20;

}) {};
"placeholders" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "placeholders";
version = "0.1";
sha256 = "652a78553dcaf6e11b4cd8f0e60010b32da299fbe57721df4bf9157e852d0346";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ahammar/placeholders";
description = "Placeholders for use while developing Haskell code";
license = stdenv.lib.licenses.bsd3;

}) {};
"plot" = callPackage
({
  mkDerivation
, array
, base
, cairo
, colour
, hmatrix
, mtl
, pango
, stdenv
, transformers
}:
mkDerivation {

pname = "plot";
version = "0.2.3.9";
sha256 = "c6146c647010bc46500ab1043abd63d6793b654686c15728cd8003ebed27cfb3";
libraryHaskellDepends = [
array
base
cairo
colour
hmatrix
mtl
pango
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/amcphail/plot";
description = "A plotting library, exportable as eps/pdf/svg/png or renderable with gtk";
license = stdenv.lib.licenses.bsd3;

}) {};
"plot-light" = callPackage
({
  mkDerivation
, attoparsec
, attoparsec-time
, base
, blaze-svg
, colour
, containers
, data-default
, hspec
, mtl
, palette
, QuickCheck
, scientific
, stdenv
, text
, time
}:
mkDerivation {

pname = "plot-light";
version = "0.2.9";
sha256 = "b56053625bd7de3ffd15bc202c5a7e1b5d1f4f1febed725ad2c76483914ae66b";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
blaze-svg
colour
containers
data-default
hspec
mtl
palette
QuickCheck
scientific
text
time
];
executableHaskellDepends = [
attoparsec
attoparsec-time
base
blaze-svg
colour
palette
scientific
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocramz/plot-light";
description = "A lightweight plotting library, exporting to SVG";
license = stdenv.lib.licenses.bsd3;

}) {};
"plutus-prototype" = callPackage
({
  mkDerivation
, base
, bifunctors
, binary
, bytestring
, cardano-crypto
, cryptonite
, ed25519
, either
, fetchgit
, filepath
, lens
, memory
, mtl
, operational
, parsec
, stdenv
, transformers
}:
mkDerivation {

pname = "plutus-prototype";
version = "0.1.0.0";
src = fetchgit {

url = "https://github.com/avieth/plutus-prototype";
sha256 = "1s932rghn4zn441waansp408b5bwk20rc1wsa5693a2nwnp4dijw";
rev = "d094be301195fcd8ab864d793f114970426a4478";

};
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bifunctors
binary
bytestring
cardano-crypto
cryptonite
ed25519
either
filepath
lens
memory
mtl
operational
parsec
transformers
];
doHaddock = false;
doCheck = false;
homepage = "iohk.io";
description = "Prototype of the Plutus language";
license = stdenv.lib.licenses.mit;

}) {};
"pointed" = callPackage
({
  mkDerivation
, base
, comonad
, containers
, data-default-class
, hashable
, kan-extensions
, semigroupoids
, semigroups
, stdenv
, stm
, tagged
, transformers
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "pointed";
version = "5.0.1";
sha256 = "b94635a5c8779238501a9156015422ce2fb4d5efd45d68999e8cbe2ecc5121dd";
libraryHaskellDepends = [
base
comonad
containers
data-default-class
hashable
kan-extensions
semigroupoids
semigroups
stm
tagged
transformers
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/pointed/";
description = "Pointed and copointed data";
license = stdenv.lib.licenses.bsd3;

}) {};
"pointedlist" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "pointedlist";
version = "0.6.1";
sha256 = "743cb0f89cbb128f8aa24c4519b262b561bf2cd607f83e94f9241e8af1cfba9b";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
description = "A zipper-like comonad which works as a list, tracking a position";
license = stdenv.lib.licenses.bsd3;

}) {};
"pointless-fun" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "pointless-fun";
version = "1.1.0.6";
sha256 = "d05c59dac408a81766d676da2fb98025e75e0c3d0a07bdb458759d5c41e3b054";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Some common point-free combinators";
license = stdenv.lib.licenses.bsd3;

}) {};
"poll" = callPackage
({
  mkDerivation
, base
, enumset
, stdenv
, utility-ht
}:
mkDerivation {

pname = "poll";
version = "0.0.0.1";
sha256 = "b9fe87fe1b4d3ecb2ad3c1c290e231b0c93d498f0d318f67018a1dde97a0ed29";
libraryHaskellDepends = [
base
enumset
utility-ht
];
doHaddock = false;
doCheck = false;
description = "Bindings to poll.h";
license = stdenv.lib.licenses.bsd3;

}) {};
"poly-arity" = callPackage
({
  mkDerivation
, base
, constraints
, stdenv
}:
mkDerivation {

pname = "poly-arity";
version = "0.1.0";
sha256 = "cb10a644fe04de8e703942f4bd0d97c4df0f9e3915d33a494994e85830cfdd29";
libraryHaskellDepends = [
base
constraints
];
doHaddock = false;
doCheck = false;
description = "Tools for working with functions of undetermined arity";
license = stdenv.lib.licenses.bsd3;

}) {};
"polynomials-bernstein" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "polynomials-bernstein";
version = "1.1.2";
sha256 = "6950f2e791533a40e7e41ff98679f680f27c7b66258b57871027bf0e5adc7062";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
description = "A solver for systems of polynomial equations in bernstein form";
license = "GPL";

}) {};
"polyparse" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "polyparse";
version = "1.12";
sha256 = "f54c63584ace968381de4a06bd7328b6adc3e1a74fd336e18449e0dd7650be15";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~malcolm/polyparse/";
description = "A variety of alternative parser combinator libraries";
license = "LGPL";

}) {};
"pomaps" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, ghc-prim
, lattices
, stdenv
}:
mkDerivation {

pname = "pomaps";
version = "0.0.0.4";
sha256 = "767590971fa7325d79c8ea637cbb54e1159ea93f3edbbde319c32c2485fc4e56";
libraryHaskellDepends = [
base
containers
deepseq
ghc-prim
lattices
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sgraf812/pomaps#readme";
description = "Maps and sets of partial orders";
license = stdenv.lib.licenses.mit;

}) {};
"pooled-io" = callPackage
({
  mkDerivation
, base
, concurrent-split
, containers
, deepseq
, stdenv
, transformers
, unsafe
, utility-ht
}:
mkDerivation {

pname = "pooled-io";
version = "0.0.2.1";
sha256 = "7d405a8876d55a9c077a304dd378854bc9e6e20f643c357c82bd3f38297ff9d0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
concurrent-split
containers
deepseq
transformers
unsafe
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/pooled-io/";
description = "Run jobs on a limited number of threads and support data dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"posix-paths" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "posix-paths";
version = "0.2.1.5";
sha256 = "5a85296775eb689862d205f2342339bcbc3aaee7aac4e088617764f15f11d1df";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
description = "POSIX filepath/directory functionality";
license = stdenv.lib.licenses.bsd3;

}) {};
"post-mess-age" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "post-mess-age";
version = "0.2.1.0";
sha256 = "d0f69ab1cb130a9f8bb54cd1f3b0167184af885fedba89ff32fec8e54e95d64c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Send messages to a handle concurrently without getting them mixed";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-binary" = callPackage
({
  mkDerivation
, aeson
, base
, base-prelude
, binary-parser
, bytestring
, bytestring-strict-builder
, containers
, loch-th
, network-ip
, placeholders
, scientific
, stdenv
, text
, time
, transformers
, unordered-containers
, uuid
, vector
}:
mkDerivation {

pname = "postgresql-binary";
version = "0.12.1.1";
sha256 = "fb00b37b213e00369ae17145ed8487ac0bfe295f35b3ef24afaba76f9dbf36a0";
libraryHaskellDepends = [
aeson
base
base-prelude
binary-parser
bytestring
bytestring-strict-builder
containers
loch-th
network-ip
placeholders
scientific
text
time
transformers
unordered-containers
uuid
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/postgresql-binary";
description = "Encoders and decoders for the PostgreSQL's binary format";
license = stdenv.lib.licenses.mit;

}) {};
"postgresql-libpq" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, postgresql
, stdenv
, unix
}:
mkDerivation {

pname = "postgresql-libpq";
version = "0.9.4.1";
sha256 = "0d9fa338b67c54786ea123cb9f75f3362aad01057aaa4857687610a39908566b";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
bytestring
unix
];
librarySystemDepends = [
postgresql
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lpsmith/postgresql-libpq";
description = "low-level binding to libpq";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) postgresql;};
"postgresql-schema" = callPackage
({
  mkDerivation
, base
, basic-prelude
, optparse-applicative
, postgresql-simple
, shelly
, stdenv
, text
, time
}:
mkDerivation {

pname = "postgresql-schema";
version = "0.1.14";
sha256 = "73decc70c9fc349d0162c253eb0e92a1add5964c28ef89abfe30e97f1184d572";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
basic-prelude
postgresql-simple
shelly
text
];
executableHaskellDepends = [
base
basic-prelude
optparse-applicative
shelly
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mfine/postgresql-schema";
description = "PostgreSQL Schema Management";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-simple" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, bytestring-builder
, case-insensitive
, containers
, hashable
, postgresql-libpq
, scientific
, stdenv
, template-haskell
, text
, time
, transformers
, uuid-types
, vector
}:
mkDerivation {

pname = "postgresql-simple";
version = "0.5.4.0";
sha256 = "f5d11ae7907307a1a32d62add9ed88cccf4dc7a25c0c1f3f36e0975d44f73a77";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
bytestring-builder
case-insensitive
containers
hashable
postgresql-libpq
scientific
template-haskell
text
time
transformers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
description = "Mid-Level PostgreSQL client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-simple-migration" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, cryptohash
, directory
, postgresql-simple
, stdenv
, text
, time
}:
mkDerivation {

pname = "postgresql-simple-migration";
version = "0.1.12.0";
sha256 = "98f8b2eab06474e63c76b2d048d6a08d818d086b66e84caa27f3f0a368445da3";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base64-bytestring
bytestring
cryptohash
directory
postgresql-simple
time
];
executableHaskellDepends = [
base
base64-bytestring
bytestring
cryptohash
directory
postgresql-simple
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ameingast/postgresql-simple-migration";
description = "PostgreSQL Schema Migrations";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-simple-queue" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, exceptions
, monad-control
, pg-transact
, postgresql-simple
, random
, stdenv
, stm
, text
, time
, transformers
}:
mkDerivation {

pname = "postgresql-simple-queue";
version = "1.0.1";
sha256 = "330b69c54e075104171758117e714b7da6c740dff8ca09fbe33bd3ab854e5a3f";
libraryHaskellDepends = [
aeson
base
bytestring
exceptions
monad-control
pg-transact
postgresql-simple
random
stm
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jfischoff/postgresql-queue#readme";
description = "A PostgreSQL backed queue";
license = stdenv.lib.licenses.bsd3;

}) {};
"postgresql-simple-url" = callPackage
({
  mkDerivation
, base
, network-uri
, postgresql-simple
, split
, stdenv
}:
mkDerivation {

pname = "postgresql-simple-url";
version = "0.2.1.0";
sha256 = "1307f57cde2bd7f6d795a860deab53d3d64043f51af31e3114dee516ef7ee9c9";
libraryHaskellDepends = [
base
network-uri
postgresql-simple
split
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/futurice/postgresql-simple-url";
description = "Parse postgres:// url into ConnectInfo";
license = stdenv.lib.licenses.mit;

}) {};
"postgresql-transactional" = callPackage
({
  mkDerivation
, base
, monad-control
, mtl
, postgresql-simple
, stdenv
}:
mkDerivation {

pname = "postgresql-transactional";
version = "1.1.1";
sha256 = "f9302a1e134b31f2e9bd243c4fe36a25b3a9a9d6984288be1bc9c29882545ed3";
libraryHaskellDepends = [
base
monad-control
mtl
postgresql-simple
];
doHaddock = false;
doCheck = false;
description = "a transactional monad on top of postgresql-simple";
license = stdenv.lib.licenses.mit;

}) {};
"postgresql-typed" = callPackage
({
  mkDerivation
, aeson
, array
, attoparsec
, base
, binary
, bytestring
, containers
, cryptonite
, haskell-src-meta
, HDBC
, memory
, network
, old-locale
, postgresql-binary
, scientific
, stdenv
, template-haskell
, text
, time
, utf8-string
, uuid
}:
mkDerivation {

pname = "postgresql-typed";
version = "0.5.3.0";
sha256 = "b3c01c0821e96a83163f919aff86aba603f13d10ff5245680f4c4e488531f82a";
libraryHaskellDepends = [
aeson
array
attoparsec
base
binary
bytestring
containers
cryptonite
haskell-src-meta
HDBC
memory
network
old-locale
postgresql-binary
scientific
template-haskell
text
time
utf8-string
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dylex/postgresql-typed";
description = "PostgreSQL interface with compile-time SQL type checking, optional HDBC backend";
license = stdenv.lib.licenses.bsd3;

}) {};
"pptable" = callPackage
({
  mkDerivation
, base
, boxes
, containers
, generic-deriving
, pretty
, stdenv
, syb
, vector
}:
mkDerivation {

pname = "pptable";
version = "0.2.0.0";
sha256 = "c78c74f345cee1afd1021df509421cb151d484c4891e9335427182339547fb2d";
libraryHaskellDepends = [
base
boxes
containers
generic-deriving
pretty
syb
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/gdevanla/pptable#readme";
description = "Pretty Print containers in a tabular format";
license = stdenv.lib.licenses.mit;

}) {};
"pqueue" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "pqueue";
version = "1.4.1.1";
sha256 = "3ddc53ea30111047efeacfe0b85d721979b51e9479051d40b00563cc7ea87cff";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
description = "Reliable, persistent, fast priority queues";
license = stdenv.lib.licenses.bsd3;

}) {};
"pred-set" = callPackage
({
  mkDerivation
, base
, hashable
, hashtables
, HSet
, stdenv
}:
mkDerivation {

pname = "pred-set";
version = "0.0.1";
sha256 = "cb22ec50f94cf76b6bc55fd66b91badfef657cbe1a6b6a59b691e48004c37726";
libraryHaskellDepends = [
base
hashable
hashtables
HSet
];
doHaddock = false;
doCheck = false;
description = "Simple cached predicates";
license = stdenv.lib.licenses.bsd3;

}) {};
"pred-trie" = callPackage
({
  mkDerivation
, base
, composition-extra
, containers
, hashable
, hashtables
, mtl
, poly-arity
, pred-set
, QuickCheck
, semigroups
, stdenv
, tries
, unordered-containers
}:
mkDerivation {

pname = "pred-trie";
version = "0.5.1.2";
sha256 = "437b4f2578444adad0eeb519d23c339d4f5cb3532b12745bc1e94144135a0a34";
libraryHaskellDepends = [
base
composition-extra
containers
hashable
hashtables
mtl
poly-arity
pred-set
QuickCheck
semigroups
tries
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Predicative tries";
license = stdenv.lib.licenses.bsd3;

}) {};
"prefix-units" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "prefix-units";
version = "0.2.0";
sha256 = "050abdf827a5bd014a2628b195fbd59bb226020612c99e86a082ac1c8274e384";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iustin/prefix-units";
description = "A basic library for SI/binary prefix units";
license = stdenv.lib.licenses.bsd3;

}) {};
"prelude-compat" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "prelude-compat";
version = "0.0.0.1";
sha256 = "7bdc875d5b7265a87f06866dc00da69edcd4ae36ea9687c8c6e643833ffb40d4";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Provide Prelude and Data.List with fixed content across GHC versions";
license = stdenv.lib.licenses.bsd3;

}) {};
"prelude-extras" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "prelude-extras";
version = "0.4.0.3";
sha256 = "09bb087f0870a353ec1e7e1a08017b9a766d430d956afb88ca000a6a876bf877";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/prelude-extras";
description = "Higher order versions of Prelude classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"prelude-safeenum" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "prelude-safeenum";
version = "0.1.1.2";
sha256 = "d4f9f195d31198fa1a5e1edfb50684971cc5dc2695bf38c1e7e2dabdce329727";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "A redefinition of the Prelude's Enum class in order to render it safe";
license = stdenv.lib.licenses.bsd3;

}) {};
"preprocessor-tools" = callPackage
({
  mkDerivation
, base
, mtl
, parsec
, stdenv
, syb
}:
mkDerivation {

pname = "preprocessor-tools";
version = "1.0.1";
sha256 = "c946c99fe8c9effba27946cd2c26173d2346340528d800a228796d68f8aeee59";
libraryHaskellDepends = [
base
mtl
parsec
syb
];
doHaddock = false;
doCheck = false;
homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
description = "A framework for extending Haskell's syntax via quick-and-dirty preprocessors";
license = stdenv.lib.licenses.bsd3;

}) {};
"present" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "present";
version = "4.1.0";
sha256 = "bae8b334817a31572cc0e771f40e89b976e72b2b55d0955e4e198502dd8a427b";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/chrisdone/present";
description = "Make presentations for data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-class" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "pretty-class";
version = "1.0.1.1";
sha256 = "558d1b506ff58afb0a5fb9d85ea93a94687cc1aabcc5a112a6ee4375a7b8aee1";
libraryHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ddssff/pretty-class";
description = "Pretty printing class similar to Show";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-hex" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "pretty-hex";
version = "1.0";
sha256 = "ff9a5f2023d6a4454f06cc395726b4cac3f9d0ea03759b14ccf7d62df79e9c7a";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "A library for hex dumps of ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-show" = callPackage
({
  mkDerivation
, array
, base
, filepath
, ghc-prim
, happy
, haskell-lexer
, pretty
, stdenv
}:
mkDerivation {

pname = "pretty-show";
version = "1.6.16";
sha256 = "dbee8476bf12ce5bd991d0a52c1340802e07bb706c68c1a7911a38db16ac0350";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
base
filepath
ghc-prim
haskell-lexer
pretty
];
libraryToolDepends = [
happy
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.github.com/yav/pretty-show";
description = "Tools for working with derived `Show` instances and generic inspection of values";
license = stdenv.lib.licenses.mit;

}) {};
"pretty-simple" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, containers
, mtl
, parsec
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "pretty-simple";
version = "2.1.0.0";
sha256 = "c82ce285ea5f04781bdf3f41bdfedfa3f3fd9b23c8c56afcf7633efa054d38ca";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
containers
mtl
parsec
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/pretty-simple";
description = "pretty printer for data types with a 'Show' instance";
license = stdenv.lib.licenses.bsd3;

}) {};
"pretty-types" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, tagged
}:
mkDerivation {

pname = "pretty-types";
version = "0.2.3.1";
sha256 = "e56c49d1099aaeafe0b982ef9e60cb7194fd987c4b659a8d7bcde380d3b8784f";
libraryHaskellDepends = [
base
mtl
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sheyll/pretty-types#readme";
description = "A small pretty printing DSL for complex types";
license = stdenv.lib.licenses.bsd3;

}) {};
"prettyclass" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "prettyclass";
version = "1.0.0.0";
sha256 = "e537446e7a346e5e0872ed8281db2bb0220c737f10757848c901da1399548986";
libraryHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
description = "Pretty printing class similar to Show";
license = stdenv.lib.licenses.bsd3;

}) {};
"prettyprinter" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "prettyprinter";
version = "1.2.0.1";
sha256 = "11397b182138efc8f7b09a70873093fb565d070e4c8f92cdde9e601bcd5a0566";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/quchen/prettyprinter";
description = "A modern, easy to use, well-documented, extensible prettyprinter";
license = stdenv.lib.licenses.bsd2;

}) {};
"prettyprinter-ansi-terminal" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, prettyprinter
, stdenv
, text
}:
mkDerivation {

pname = "prettyprinter-ansi-terminal";
version = "1.1.1.2";
sha256 = "d3e0b420df2904ae1ef23daf9bbb6de2c1fbbee056b779fc2cebe303cedf4641";
libraryHaskellDepends = [
ansi-terminal
base
prettyprinter
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/quchen/prettyprinter";
description = "ANSI terminal backend for the »prettyprinter« package";
license = stdenv.lib.licenses.bsd2;

}) {};
"prettyprinter-compat-annotated-wl-pprint" = callPackage
({
  mkDerivation
, base
, prettyprinter
, stdenv
, text
}:
mkDerivation {

pname = "prettyprinter-compat-annotated-wl-pprint";
version = "1";
sha256 = "2c259bac999d75b071a077f218a433c070783e9f40b67796e31a776fefbaf57e";
revision = "3";
editedCabalFile = "0vzi7id60pfj35xp61akzvfx9x6py45r5b8343i48ljpir91rvgw";
libraryHaskellDepends = [
base
prettyprinter
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/quchen/prettyprinter";
description = "Prettyprinter compatibility module for previous users of the annotated-wl-pprint package";
license = stdenv.lib.licenses.bsd2;

}) {};
"prettyprinter-compat-ansi-wl-pprint" = callPackage
({
  mkDerivation
, base
, prettyprinter
, prettyprinter-ansi-terminal
, stdenv
, text
}:
mkDerivation {

pname = "prettyprinter-compat-ansi-wl-pprint";
version = "1.0.1";
sha256 = "012d6bb711da25cc38260f4d00d26c24e52547a0ca53b0f6459fd06e5b93f73f";
revision = "1";
editedCabalFile = "0rzvap56ygygzs95091ipmcdc7n76sczc2dk88g4nr7zskb2nf1k";
libraryHaskellDepends = [
base
prettyprinter
prettyprinter-ansi-terminal
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/quchen/prettyprinter";
description = "Drop-in compatibility package to migrate from »ansi-wl-pprint« to »prettyprinter«";
license = stdenv.lib.licenses.bsd2;

}) {};
"prettyprinter-compat-wl-pprint" = callPackage
({
  mkDerivation
, base
, prettyprinter
, stdenv
, text
}:
mkDerivation {

pname = "prettyprinter-compat-wl-pprint";
version = "1.0.0.1";
sha256 = "75221f5064e69eead5807a62894e8b5aa768f979c7f8fb75d0e1b2a15345529e";
revision = "3";
editedCabalFile = "0cb1i1hmr6wl8lacy3w822h273lapqhp537snxgbmhf9xvfckbpr";
libraryHaskellDepends = [
base
prettyprinter
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/quchen/prettyprinter";
description = "Prettyprinter compatibility module for previous users of the wl-pprint package";
license = stdenv.lib.licenses.bsd2;

}) {};
"prim-uniq" = callPackage
({
  mkDerivation
, base
, dependent-sum
, primitive
, stdenv
}:
mkDerivation {

pname = "prim-uniq";
version = "0.1.0.1";
sha256 = "fb059785133fe5ecaa57c6c840192f252c4c5a1a598160d5704ac2a83e895aff";
libraryHaskellDepends = [
base
dependent-sum
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/prim-uniq";
description = "Opaque unique identifiers in primitive state monads";
license = stdenv.lib.licenses.publicDomain;

}) {};
"primes" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "primes";
version = "0.2.1.0";
sha256 = "74d66558fb638ea4d31eae2fe1a294cb5a9d64491314305d74a11d93f277c65b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/sebfisch/primes";
description = "Efficient, purely functional generation of prime numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"primitive" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, transformers
}:
mkDerivation {

pname = "primitive";
version = "0.6.4.0";
sha256 = "4cbeaf7924dd79221f327ea101a29bf35c4976dc3319df157ff46ea68e6a0c64";
libraryHaskellDepends = [
base
ghc-prim
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/primitive";
description = "Primitive memory-related operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"probability" = callPackage
({
  mkDerivation
, base
, containers
, random
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "probability";
version = "0.2.5.1";
sha256 = "d3e67c8b32dda838c455ddd532a668bc464cfe1d49dc74f4502175614af7ed2d";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
random
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Probabilistic_Functional_Programming";
description = "Probabilistic Functional Programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"process" = callPackage
({
  mkDerivation
, base
, deepseq
, directory
, filepath
, stdenv
, unix
}:
mkDerivation {

pname = "process";
version = "1.6.1.0";
sha256 = "245fa25e49e9f616d2788c45e70263dc069db78656dd83ebfba807e870528a53";
libraryHaskellDepends = [
base
deepseq
directory
filepath
unix
];
doHaddock = false;
doCheck = false;
description = "Process libraries";
license = stdenv.lib.licenses.bsd3;

}) {};
"process-extras" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default
, deepseq
, generic-deriving
, ListLike
, mtl
, process
, stdenv
, text
}:
mkDerivation {

pname = "process-extras";
version = "0.7.4";
sha256 = "293e75f849254ce0ce0d7fa659681917e07a557c602505a2f9e20777467e984e";
libraryHaskellDepends = [
base
bytestring
data-default
deepseq
generic-deriving
ListLike
mtl
process
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/seereason/process-extras";
description = "Process extras";
license = stdenv.lib.licenses.mit;

}) {};
"product-isomorphic" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, th-data-compat
}:
mkDerivation {

pname = "product-isomorphic";
version = "0.0.3.2";
sha256 = "b4cba495f0779c619f466cdcc7914a4c2a209543dabebb6a32f003dc567317fb";
libraryHaskellDepends = [
base
template-haskell
th-data-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/khibino/haskell-product-isomorphic";
description = "Weaken applicative functor on products";
license = stdenv.lib.licenses.bsd3;

}) {};
"product-profunctors" = callPackage
({
  mkDerivation
, base
, bifunctors
, contravariant
, profunctors
, stdenv
, tagged
, template-haskell
}:
mkDerivation {

pname = "product-profunctors";
version = "0.9.0.0";
sha256 = "569e53c67936f8bc9747c0ed6b557c903a3fd764178d3a2e8c107a0c576feacf";
libraryHaskellDepends = [
base
bifunctors
contravariant
profunctors
tagged
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tomjaguarpaw/product-profunctors";
description = "product-profunctors";
license = stdenv.lib.licenses.bsd3;

}) {};
"profiterole" = callPackage
({
  mkDerivation
, base
, containers
, directory
, extra
, filepath
, ghc-prof
, hashable
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "profiterole";
version = "0.1";
sha256 = "c688d8c4f04e7a674832b39add365cee8eb99ae83643a849529e2ec56a46d2f1";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
containers
directory
extra
filepath
ghc-prof
hashable
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/profiterole#readme";
description = "Restructure GHC profile reports";
license = stdenv.lib.licenses.bsd3;

}) {};
"profunctors" = callPackage
({
  mkDerivation
, base
, base-orphans
, bifunctors
, comonad
, contravariant
, distributive
, semigroups
, stdenv
, tagged
, transformers
}:
mkDerivation {

pname = "profunctors";
version = "5.2.2";
sha256 = "e981e6a33ac99d38a947a749179bbea3c294ecf6bfde41660fe6d8d5a2e43768";
revision = "1";
editedCabalFile = "1g6fvxq2npnyi8wv9mvwy35an68lrm5bf7xmx9x61mbwdxb6d0cg";
libraryHaskellDepends = [
base
base-orphans
bifunctors
comonad
contravariant
distributive
semigroups
tagged
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/profunctors/";
description = "Profunctors";
license = stdenv.lib.licenses.bsd3;

}) {};
"project-template" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, conduit
, conduit-extra
, containers
, directory
, filepath
, mtl
, resourcet
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "project-template";
version = "0.2.0.1";
sha256 = "eb52496fa7448f5fed445525c05327b31a45282fc1d0a772c7022a9809e7c9dc";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
conduit
conduit-extra
containers
directory
filepath
mtl
resourcet
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/haskell-ide";
description = "Specify Haskell project templates and generate files";
license = stdenv.lib.licenses.bsd3;

}) {};
"projectroot" = callPackage
({
  mkDerivation
, base
, directory
, stdenv
}:
mkDerivation {

pname = "projectroot";
version = "0.2.0.1";
sha256 = "53753086543ed199cf6f0d76852660f5d74c0874bfdee21c0f4e0d845b7e1ab8";
libraryHaskellDepends = [
base
directory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-projectroot";
description = "Bindings to the projectroot C logic";
license = stdenv.lib.licenses.mit;

}) {};
"prometheus-client" = callPackage
({
  mkDerivation
, atomic-primops
, base
, bytestring
, clock
, containers
, mtl
, stdenv
, stm
, transformers
, utf8-string
}:
mkDerivation {

pname = "prometheus-client";
version = "0.3.0";
sha256 = "5f28c40b864d4773d019725e9f0dd7c06610c676250c8f1126e511d72348d05b";
libraryHaskellDepends = [
atomic-primops
base
bytestring
clock
containers
mtl
stm
transformers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/prometheus-haskell";
description = "Haskell client library for http://prometheus.io.";
license = stdenv.lib.licenses.asl20;

}) {};
"prometheus-metrics-ghc" = callPackage
({
  mkDerivation
, base
, prometheus-client
, stdenv
, utf8-string
}:
mkDerivation {

pname = "prometheus-metrics-ghc";
version = "0.3.0";
sha256 = "dd26541686f69db972ee4e9d6d6d2d71a8525ce44af20e41842e0d77da7fec31";
libraryHaskellDepends = [
base
prometheus-client
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/prometheus-haskell";
description = "Metrics exposing GHC runtime information for use with prometheus-client";
license = stdenv.lib.licenses.asl20;

}) {};
"promises" = callPackage
({
  mkDerivation
, base
, primitive
, stdenv
}:
mkDerivation {

pname = "promises";
version = "0.3";
sha256 = "bf7c901915c122e7ab270f4c90cf02e83a703bf78f246948dc2452dcd294f260";
libraryHaskellDepends = [
base
primitive
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/promises/";
description = "Lazy demand-driven promises";
license = stdenv.lib.licenses.bsd3;

}) {};
"prompt" = callPackage
({
  mkDerivation
, base
, base-compat
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "prompt";
version = "0.1.1.2";
sha256 = "67b5711ef4c650747645b6d9de16a8bb04e04d1c2e4d39e3a8d4099873a151f2";
libraryHaskellDepends = [
base
base-compat
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/prompt";
description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
license = stdenv.lib.licenses.mit;

}) {};
"proto-lens" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, data-default-class
, lens-family
, parsec
, pretty
, stdenv
, text
, transformers
, void
}:
mkDerivation {

pname = "proto-lens";
version = "0.2.2.0";
sha256 = "92057ebfb5b2be5dc925b53ce96cf40abe5280bfdac833c0c567087e07fa7a9c";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
data-default-class
lens-family
parsec
pretty
text
transformers
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/google/proto-lens";
description = "A lens-based implementation of protocol buffers in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"proto-lens-arbitrary" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, lens-family
, proto-lens
, QuickCheck
, stdenv
, text
}:
mkDerivation {

pname = "proto-lens-arbitrary";
version = "0.1.1.1";
sha256 = "95c28f6bc9be5b1057215e1ab99b06f69fddc28c24068cb576b1d5cdbb12b7c9";
libraryHaskellDepends = [
base
bytestring
containers
lens-family
proto-lens
QuickCheck
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/google/proto-lens";
description = "Arbitrary instances for proto-lens";
license = stdenv.lib.licenses.bsd3;

}) {};
"proto-lens-descriptors" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default-class
, lens-family
, lens-labels
, proto-lens
, stdenv
, text
}:
mkDerivation {

pname = "proto-lens-descriptors";
version = "0.2.2.0";
sha256 = "0b3f4eb9ddc081baef1f45831c17ab4b960ebac630af1f29bbd5521f46ca5bee";
libraryHaskellDepends = [
base
bytestring
containers
data-default-class
lens-family
lens-labels
proto-lens
text
];
doHaddock = false;
doCheck = false;
description = "Protocol buffers for describing the definitions of messages";
license = stdenv.lib.licenses.bsd3;

}) {};
"proto-lens-optparse" = callPackage
({
  mkDerivation
, base
, optparse-applicative
, proto-lens
, stdenv
, text
}:
mkDerivation {

pname = "proto-lens-optparse";
version = "0.1.1.1";
sha256 = "1c8706f789809bda1ad9db8b18b2a9c309e6040ded6ce1d85a2b0da7cc9e26fe";
libraryHaskellDepends = [
base
optparse-applicative
proto-lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/google/proto-lens#readme";
description = "Adapting proto-lens to optparse-applicative ReadMs";
license = stdenv.lib.licenses.bsd3;

}) {};
"protobuf" = callPackage
({
  mkDerivation
, base
, base-orphans
, bytestring
, cereal
, data-binary-ieee754
, deepseq
, mtl
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "protobuf";
version = "0.2.1.2";
sha256 = "b3c871918a665f0543fde247ab8af61c4fc451103140d34bf652c0d5fc4d17de";
libraryHaskellDepends = [
base
base-orphans
bytestring
cereal
data-binary-ieee754
deepseq
mtl
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alphaHeavy/protobuf";
description = "Google Protocol Buffers via GHC.Generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"protobuf-simple" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-binary-ieee754
, directory
, filepath
, mtl
, parsec
, split
, stdenv
, text
}:
mkDerivation {

pname = "protobuf-simple";
version = "0.1.0.5";
sha256 = "6b46b427f14eacb814dfce0a678e7cb7742d1583d14f9540ca00fb0bc0e916f1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
data-binary-ieee754
mtl
text
];
executableHaskellDepends = [
base
containers
directory
filepath
mtl
parsec
split
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sru-systems/protobuf-simple";
description = "Simple Protocol Buffers library (proto2)";
license = stdenv.lib.licenses.mit;

}) {};
"protocol-buffers" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, containers
, directory
, filepath
, mtl
, parsec
, stdenv
, syb
, utf8-string
}:
mkDerivation {

pname = "protocol-buffers";
version = "2.4.10";
sha256 = "734fc15adecbf8231a8d83d446623526600b6ec8f2d82f264c29d01714f52767";
libraryHaskellDepends = [
array
base
binary
bytestring
containers
directory
filepath
mtl
parsec
syb
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k-bx/protocol-buffers";
description = "Parse Google Protocol Buffer specifications";
license = stdenv.lib.licenses.bsd3;

}) {};
"protocol-buffers-descriptor" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, protocol-buffers
, stdenv
}:
mkDerivation {

pname = "protocol-buffers-descriptor";
version = "2.4.10";
sha256 = "a095e8cee40d64b986162eeac3e87c163264c4544876107dd10bf6e2b00796f0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
protocol-buffers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/k-bx/protocol-buffers";
description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
license = stdenv.lib.licenses.bsd3;

}) {};
"protocol-radius" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, cryptonite
, dlist
, memory
, stdenv
, template-haskell
, text
, transformers
}:
mkDerivation {

pname = "protocol-radius";
version = "0.0.1.0";
sha256 = "ae0c5ec142edb37df6bb51421b29e0a6c25013057e45e22159afb66cda3cf6f9";
libraryHaskellDepends = [
base
bytestring
cereal
containers
cryptonite
dlist
memory
template-haskell
text
transformers
];
doHaddock = false;
doCheck = false;
description = "parser and printer for radius protocol packet";
license = stdenv.lib.licenses.bsd3;

}) {};
"protocol-radius-test" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, protocol-radius
, QuickCheck
, quickcheck-simple
, stdenv
, transformers
}:
mkDerivation {

pname = "protocol-radius-test";
version = "0.0.1.0";
sha256 = "b5cc9a15e7910ecb449d3bbb142b809fa34bee2079e772ca63d4bb975a41ada0";
libraryHaskellDepends = [
base
bytestring
cereal
containers
protocol-radius
QuickCheck
quickcheck-simple
transformers
];
doHaddock = false;
doCheck = false;
description = "testsuit of protocol-radius haskell package";
license = stdenv.lib.licenses.bsd3;

}) {};
"protolude" = callPackage
({
  mkDerivation
, array
, async
, base
, bytestring
, containers
, deepseq
, ghc-prim
, hashable
, mtl
, mtl-compat
, stdenv
, stm
, text
, transformers
, transformers-compat
}:
mkDerivation {

pname = "protolude";
version = "0.2.2";
sha256 = "685d0cf34b63482be84b785561009b8229327233ae311550d20d66b47b0f457c";
libraryHaskellDepends = [
array
async
base
bytestring
containers
deepseq
ghc-prim
hashable
mtl
mtl-compat
stm
text
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdiehl/protolude";
description = "A small prelude";
license = stdenv.lib.licenses.mit;

}) {};
"proxied" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "proxied";
version = "0.3";
sha256 = "534d4d425f2834b39689e2af301bd5ff81d1619e65664a5efd797a0c88dbeb26";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/proxied";
description = "Make functions consume Proxy instead of undefined";
license = stdenv.lib.licenses.bsd3;

}) {};
"psql-helpers" = callPackage
({
  mkDerivation
, base
, postgresql-simple
, stdenv
}:
mkDerivation {

pname = "psql-helpers";
version = "0.1.0.0";
sha256 = "f13ca642072477d3ab0246c514e3fc78e0c5cb419345240fbad994ed2a3219f4";
libraryHaskellDepends = [
base
postgresql-simple
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/psql-helpers#readme";
description = "A small collection of helper functions to generate postgresql queries";
license = stdenv.lib.licenses.mit;

}) {};
"psqueues" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, hashable
, stdenv
}:
mkDerivation {

pname = "psqueues";
version = "0.2.7.0";
sha256 = "4cf3628884015b091471e4425f5414207fd547cf71d9546e9b7318d857624fea";
libraryHaskellDepends = [
base
deepseq
ghc-prim
hashable
];
doHaddock = false;
doCheck = false;
description = "Pure priority search queues";
license = stdenv.lib.licenses.bsd3;

}) {};
"pthread" = callPackage
({
  mkDerivation
, base
, generic-deriving
, stdenv
}:
mkDerivation {

pname = "pthread";
version = "0.2.0";
sha256 = "b6ee8d48c2eccf84acef31c6065a74ae5844e2fc68e4f55a05b44eddae032388";
libraryHaskellDepends = [
base
generic-deriving
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/pthread";
description = "Bindings for the pthread library";
license = stdenv.lib.licenses.bsd3;

}) {};
"publicsuffix" = callPackage
({
  mkDerivation
, base
, filepath
, stdenv
, template-haskell
}:
mkDerivation {

pname = "publicsuffix";
version = "0.20171229";
sha256 = "400bc582221d400fa9169be56adce8609fd0d43c6e71f173218be41114681b0f";
libraryHaskellDepends = [
base
filepath
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/wereHamster/publicsuffix-haskell/";
description = "The publicsuffix list exposed as proper Haskell types";
license = stdenv.lib.licenses.mit;

}) {};
"pure-io" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, safe
, stdenv
}:
mkDerivation {

pname = "pure-io";
version = "0.2.1";
sha256 = "a9ef0f324ce29fecdcdb11f2ce0088bcf282951727d983824e05f12e519bfb5f";
libraryHaskellDepends = [
base
containers
mtl
safe
];
doHaddock = false;
doCheck = false;
description = "Pure IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"pureMD5" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cereal
, crypto-api
, stdenv
, tagged
}:
mkDerivation {

pname = "pureMD5";
version = "2.1.3";
sha256 = "bef3358a5e3a45b649860a5792f052e2f927c0492a7056cf64425116c8a7b17d";
libraryHaskellDepends = [
base
binary
bytestring
cereal
crypto-api
tagged
];
doHaddock = false;
doCheck = false;
description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"purescript-bridge" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, generic-deriving
, lens
, mtl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "purescript-bridge";
version = "0.11.1.2";
sha256 = "9c00caff498652addaf123d4d719f7488ece06a9279a348b6a182825482f15c6";
libraryHaskellDepends = [
base
containers
directory
filepath
generic-deriving
lens
mtl
text
transformers
];
doHaddock = false;
doCheck = false;
description = "Generate PureScript data types from Haskell data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"pushbullet-types" = callPackage
({
  mkDerivation
, aeson
, base
, http-api-data
, microlens
, microlens-th
, scientific
, stdenv
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "pushbullet-types";
version = "0.4.1.0";
sha256 = "6461a2cf5ff0b74f7caaf295ca7601922e9527f5bc9f37e3fbc6325026b5c85b";
libraryHaskellDepends = [
aeson
base
http-api-data
microlens
microlens-th
scientific
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Datatypes used by the Pushbullet APIs";
license = stdenv.lib.licenses.mit;

}) {};
"pusher-http-haskell" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytestring
, cryptonite
, hashable
, http-client
, http-types
, memory
, stdenv
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "pusher-http-haskell";
version = "1.5.1.4";
sha256 = "8accc4f031c2272f66c355945857dba033c28b0d6d91813496762d9f20a0cdc0";
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytestring
cryptonite
hashable
http-client
http-types
memory
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pusher-community/pusher-http-haskell";
description = "Haskell client library for the Pusher HTTP API";
license = stdenv.lib.licenses.mit;

}) {};
"pvss" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cryptonite
, cryptonite-openssl
, deepseq
, foundation
, hourglass
, integer-gmp
, memory
, stdenv
, vector
}:
mkDerivation {

pname = "pvss";
version = "0.2.0";
sha256 = "e440145003cac581a43941e82b213011cb0730c524948e9aaec9d3376622028c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
cryptonite
cryptonite-openssl
deepseq
foundation
integer-gmp
memory
];
executableHaskellDepends = [
base
cryptonite
deepseq
hourglass
memory
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/input-output-hk/pvss-haskell#readme";
description = "Public Verifiable Secret Sharing";
license = stdenv.lib.licenses.mit;

}) {};
"pwstore-fast" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, binary
, byteable
, bytestring
, cryptohash
, random
, stdenv
}:
mkDerivation {

pname = "pwstore-fast";
version = "2.4.4";
sha256 = "7219af66b6f762d9dd5376b3b25393d4d6626e390e9d9c9f87f6e3f13ea7fbb2";
libraryHaskellDepends = [
base
base64-bytestring
binary
byteable
bytestring
cryptohash
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/PeterScott/pwstore";
description = "Secure password storage";
license = stdenv.lib.licenses.bsd3;

}) {};
"qchas" = callPackage
({
  mkDerivation
, base
, hmatrix
, linear
, random
, stdenv
}:
mkDerivation {

pname = "qchas";
version = "1.1.0.0";
sha256 = "0e15a874bf1f9b09b520dd82f20867a2748bd2c98e38e3700f229cf6ee3d31e0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
hmatrix
linear
random
];
executableHaskellDepends = [
base
hmatrix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ardeleanasm/qchas#readme";
description = "A library for implementing Quantum Algorithms";
license = stdenv.lib.licenses.bsd3;

}) {};
"qm-interpolated-string" = callPackage
({
  mkDerivation
, base
, bytestring
, haskell-src-meta
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "qm-interpolated-string";
version = "0.3.0.0";
sha256 = "e86b337d1531e75d448f7ab9101f8703b19fa5bc3a94c7ea5c26accd31d12baf";
libraryHaskellDepends = [
base
bytestring
haskell-src-meta
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/unclechu/haskell-qm-interpolated-string";
description = "Implementation of interpolated multiline strings";
license = stdenv.lib.licenses.publicDomain;

}) {};
"quickbench" = callPackage
({
  mkDerivation
, base
, containers
, directory
, docopt
, pretty-show
, process
, safe
, split
, stdenv
, tabular
, time
}:
mkDerivation {

pname = "quickbench";
version = "1.0";
sha256 = "8bfe252e50a683346e753db312e9542f8d43256947ab215fcfd24af03787b926";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
docopt
pretty-show
process
safe
split
tabular
time
];
executableHaskellDepends = [
base
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmichael/quickbench#readme";
description = "quick & easy benchmarking of command-line programs";
license = "GPL";

}) {};
"quickcheck-arbitrary-adt" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-arbitrary-adt";
version = "0.3.1.0";
sha256 = "5c4a2e20366def76ba851211ac554e9a0f60535efcd0940606e4d410c27a45b9";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/plow-technologies/quickcheck-arbitrary-adt#readme";
description = "Generic typeclasses for generating arbitrary ADTs";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-assertions" = callPackage
({
  mkDerivation
, base
, ieee754
, pretty-show
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-assertions";
version = "0.3.0";
sha256 = "9b0328a788dcac0824a7d7496ab403eef04170551255c9e58fb6e2e319a9cacf";
libraryHaskellDepends = [
base
ieee754
pretty-show
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
description = "HUnit like assertions for QuickCheck";
license = stdenv.lib.licenses.lgpl3;

}) {};
"quickcheck-combinators" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
, unfoldable-restricted
}:
mkDerivation {

pname = "quickcheck-combinators";
version = "0.0.2";
sha256 = "7fcd7b320a3d6d66b1db3cc8e63c21bc2b2b84329ffc490113ea7df61a711b65";
libraryHaskellDepends = [
base
QuickCheck
unfoldable-restricted
];
doHaddock = false;
doCheck = false;
description = "Simple type-level combinators for augmenting QuickCheck instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-instances" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, bytestring
, case-insensitive
, containers
, hashable
, old-time
, QuickCheck
, scientific
, stdenv
, tagged
, text
, time
, transformers
, transformers-compat
, unordered-containers
, uuid-types
, vector
}:
mkDerivation {

pname = "quickcheck-instances";
version = "0.3.18";
sha256 = "a570437eb4e5a5244c38ad161bab00ba4aeb8cb21de7c8dadf983557febf01ae";
revision = "1";
editedCabalFile = "1sngfq3v71bvgjsl8cj5kh65m3fziwy8dkvwjzs0kxfrzr87faly";
libraryHaskellDepends = [
array
base
base-compat
bytestring
case-insensitive
containers
hashable
old-time
QuickCheck
scientific
tagged
text
time
transformers
transformers-compat
unordered-containers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/qc-instances";
description = "Common quickcheck instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-io" = callPackage
({
  mkDerivation
, base
, HUnit
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-io";
version = "0.2.0";
sha256 = "fb779119d79fe08ff4d502fb6869a70c9a8d5fd8ae0959f605c3c937efd96422";
libraryHaskellDepends = [
base
HUnit
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/quickcheck-io#readme";
description = "Use HUnit assertions as QuickCheck properties";
license = stdenv.lib.licenses.mit;

}) {};
"quickcheck-properties" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "quickcheck-properties";
version = "0.1";
sha256 = "3c89ed3fb03199853455806aac3852da8fe2973ae1c78320b901aacb030f2643";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "QuickCheck properties for standard type classes";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-simple" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-simple";
version = "0.1.0.4";
sha256 = "808eb5966a97bd38a3992b280428a0b289ccb46c38397ea8e34661d1e1ec4414";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
description = "Test properties and default-mains for QuickCheck";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-special" = callPackage
({
  mkDerivation
, base
, QuickCheck
, special-values
, stdenv
}:
mkDerivation {

pname = "quickcheck-special";
version = "0.1.0.6";
sha256 = "9573898509bd30613bdf59338a5754251081420c59fb658727973e2e837f1cb6";
revision = "1";
editedCabalFile = "1whwmij115vw0qwkzlkc4z4yhj7iwwqjhf5aaxn5np0gh2gzihb3";
libraryHaskellDepends = [
base
QuickCheck
special-values
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/quickcheck-special#readme";
description = "Edge cases and special values for QuickCheck Arbitrary instances";
license = stdenv.lib.licenses.mit;

}) {};
"quickcheck-state-machine" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, async
, base
, containers
, lifted-async
, lifted-base
, monad-control
, mtl
, QuickCheck
, quickcheck-with-counterexamples
, random
, stdenv
, stm
, template-haskell
, th-abstraction
}:
mkDerivation {

pname = "quickcheck-state-machine";
version = "0.3.1";
sha256 = "44cad255e3b633bf5662494d86e261f8f98bd7be5382b1850503dd632ad03990";
libraryHaskellDepends = [
ansi-wl-pprint
async
base
containers
lifted-async
lifted-base
monad-control
mtl
QuickCheck
quickcheck-with-counterexamples
random
stm
template-haskell
th-abstraction
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/advancedtelematic/quickcheck-state-machine#readme";
description = "Test monadic programs using state machine based models";
license = stdenv.lib.licenses.bsd3;

}) {};
"quickcheck-text" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, QuickCheck
, stdenv
, text
}:
mkDerivation {

pname = "quickcheck-text";
version = "0.1.2.1";
sha256 = "4442fdb8ae6cd469c04957d34fee46039c9dc0ddce23ce6050babe6826d0ab09";
libraryHaskellDepends = [
base
binary
bytestring
QuickCheck
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/olorin/quickcheck-text";
description = "Alternative arbitrary instance for Text";
license = stdenv.lib.licenses.mit;

}) {};
"quickcheck-unicode" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
}:
mkDerivation {

pname = "quickcheck-unicode";
version = "1.0.1.0";
sha256 = "132005ea7edff35e95139c36232a70698cd0f4f4d79dfaa4e66fbcf557d08368";
libraryHaskellDepends = [
base
QuickCheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/quickcheck-unicode";
description = "Generator and shrink functions for testing Unicode-related software";
license = stdenv.lib.licenses.bsd2;

}) {};
"quickcheck-with-counterexamples" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
, template-haskell
}:
mkDerivation {

pname = "quickcheck-with-counterexamples";
version = "1.0";
sha256 = "0775755444042169f949474f8931bbf2a88b5cba475d190aacad9af0213fde5e";
revision = "3";
editedCabalFile = "0wz7iwpgxx977y46xis4imrhds1i341fv6mpwydr1mzhzazifvz8";
libraryHaskellDepends = [
base
QuickCheck
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/nick8325/quickcheck-with-counterexamples";
description = "Get counterexamples from QuickCheck as Haskell values";
license = stdenv.lib.licenses.bsd3;

}) {};
"raaz" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, optparse-applicative
, stdenv
, vector
}:
mkDerivation {

pname = "raaz";
version = "0.2.0";
sha256 = "9ef0560e7c6b47edd54b5999c3bdacd05d65ac3046b508baaca141c03db98120";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
deepseq
vector
];
executableHaskellDepends = [
base
optparse-applicative
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/raaz-crypto/raaz";
description = "The raaz cryptographic library";
license = stdenv.lib.licenses.bsd3;

}) {};
"rainbow" = callPackage
({
  mkDerivation
, base
, bytestring
, lens-simple
, process
, stdenv
, text
}:
mkDerivation {

pname = "rainbow";
version = "0.28.0.4";
sha256 = "829296f88be520a9a6c6de715ffa2bb926cecc0135b23f602cc4377bac4e8831";
libraryHaskellDepends = [
base
bytestring
lens-simple
process
text
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/massysett/rainbow";
description = "Print text to terminal with colors and effects";
license = stdenv.lib.licenses.bsd3;

}) {};
"rainbox" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, lens-simple
, rainbow
, stdenv
, text
}:
mkDerivation {

pname = "rainbox";
version = "0.18.0.10";
sha256 = "d692e95565b4ce4454536493ae4d6ba256eecf5e88e0495d156008ea76ba1b05";
libraryHaskellDepends = [
base
bytestring
containers
lens-simple
rainbow
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/rainbox";
description = "Two-dimensional box pretty printing, with colors";
license = stdenv.lib.licenses.bsd3;

}) {};
"rakuten" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, connection
, constraints
, data-default-class
, extensible
, http-api-data
, http-client
, http-client-tls
, http-types
, lens
, req
, stdenv
, text
}:
mkDerivation {

pname = "rakuten";
version = "0.1.1.3";
sha256 = "b06318137feec51914ff59213f7900ed2843c557d9819598111dad2c6b46a7b0";
libraryHaskellDepends = [
aeson
base
bytestring
connection
constraints
data-default-class
extensible
http-api-data
http-client
http-client-tls
http-types
lens
req
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/matsubara0507/rakuten#readme";
description = "The Rakuten API in Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"ramus" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ramus";
version = "0.1.2";
sha256 = "dcddddc416e79c401604565b7297a945f814edeed056fb3b897eda5f4f0b794e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NickSeagull/ramus#readme";
description = "Elm signal system for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"random" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "random";
version = "1.1";
sha256 = "b718a41057e25a3a71df693ab0fe2263d492e759679b3c2fea6ea33b171d3a5a";
revision = "1";
editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
description = "random number library";
license = stdenv.lib.licenses.bsd3;

}) {};
"random-fu" = callPackage
({
  mkDerivation
, base
, erf
, log-domain
, math-functions
, monad-loops
, mtl
, random-shuffle
, random-source
, rvar
, stdenv
, syb
, template-haskell
, transformers
, vector
}:
mkDerivation {

pname = "random-fu";
version = "0.2.7.0";
sha256 = "b6b3a4b3ede34991d26e0447f90b14fa66af61f376fa0aed2e0899fdc879b0c4";
libraryHaskellDepends = [
base
erf
log-domain
math-functions
monad-loops
mtl
random-shuffle
random-source
rvar
syb
template-haskell
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/random-fu";
description = "Random number generation";
license = stdenv.lib.licenses.publicDomain;

}) {};
"random-shuffle" = callPackage
({
  mkDerivation
, base
, MonadRandom
, random
, stdenv
}:
mkDerivation {

pname = "random-shuffle";
version = "0.0.4";
sha256 = "52704411f040fd0bf2361dad162e35dc13caa6535b2e4908d3513c00a95d0615";
libraryHaskellDepends = [
base
MonadRandom
random
];
doHaddock = false;
doCheck = false;
description = "Random shuffle implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"random-source" = callPackage
({
  mkDerivation
, base
, flexible-defaults
, mersenne-random-pure64
, mtl
, mwc-random
, random
, stateref
, stdenv
, syb
, template-haskell
, th-extras
}:
mkDerivation {

pname = "random-source";
version = "0.3.0.6";
sha256 = "f3dfec3aef0614ff856abbba018f3bc3446295157895ea09a015737d67205b73";
libraryHaskellDepends = [
base
flexible-defaults
mersenne-random-pure64
mtl
mwc-random
random
stateref
syb
template-haskell
th-extras
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/random-fu";
description = "Generic basis for random number generators";
license = stdenv.lib.licenses.publicDomain;

}) {};
"random-tree" = callPackage
({
  mkDerivation
, base
, containers
, lens
, MonadRandom
, mtl
, random
, random-shuffle
, stdenv
, transformers
, tree-fun
}:
mkDerivation {

pname = "random-tree";
version = "0.6.0.5";
sha256 = "2b604e7ce184e2c877fac63dbac1df3060cdc023427b8eb5844106a826591cc2";
libraryHaskellDepends = [
base
containers
lens
MonadRandom
mtl
random
random-shuffle
transformers
tree-fun
];
doHaddock = false;
doCheck = false;
description = "Create random trees";
license = stdenv.lib.licenses.gpl3;

}) {};
"range-set-list" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, stdenv
}:
mkDerivation {

pname = "range-set-list";
version = "0.1.3";
sha256 = "e51b393d2c09e3c2b0c21523389a48ce8e6090413abdfff1c623815c76cc96df";
libraryHaskellDepends = [
base
containers
deepseq
hashable
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/range-set-list#readme";
description = "Memory efficient sets with ranges of elements";
license = stdenv.lib.licenses.mit;

}) {};
"rank-product" = callPackage
({
  mkDerivation
, base
, random-fu
, stdenv
}:
mkDerivation {

pname = "rank-product";
version = "0.2.0.1";
sha256 = "79ffdf09bd6eb37109ff80e965c94def0031bd8c0d8b1cdb9918d903e91fc0b6";
libraryHaskellDepends = [
base
random-fu
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/GregorySchwartz/rank-product#readme";
description = "Find the rank product of a data set";
license = stdenv.lib.licenses.gpl3;

}) {};
"rank1dynamic" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
}:
mkDerivation {

pname = "rank1dynamic";
version = "0.4.0";
sha256 = "3c424bfe52b7d4766fd66ea34c204cf920b146455711d8d10d580ca6c175ab1d";
libraryHaskellDepends = [
base
binary
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-distributed.github.com";
description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
license = stdenv.lib.licenses.bsd3;

}) {};
"rank2classes" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "rank2classes";
version = "1.0.2";
sha256 = "82dc14121e896aee67321e49ec484067fba83a0bf1903ecbce1f70a195b473e2";
libraryHaskellDepends = [
base
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/blamario/grampa/tree/master/rank2classes";
description = "standard type constructor class hierarchy, only with methods of rank 2 types";
license = stdenv.lib.licenses.bsd3;

}) {};
"rasterific-svg" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, directory
, filepath
, FontyFruity
, JuicyPixels
, lens
, linear
, mtl
, optparse-applicative
, primitive
, Rasterific
, scientific
, stdenv
, svg-tree
, text
, transformers
, vector
}:
mkDerivation {

pname = "rasterific-svg";
version = "0.3.3.1";
sha256 = "d6b5ea1318b6cca165fee1fae91116878ef72918eca6e7a118624bf56add1184";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
binary
bytestring
containers
directory
filepath
FontyFruity
JuicyPixels
lens
linear
mtl
primitive
Rasterific
scientific
svg-tree
text
transformers
vector
];
executableHaskellDepends = [
base
bytestring
directory
filepath
FontyFruity
JuicyPixels
optparse-applicative
Rasterific
svg-tree
];
doHaddock = false;
doCheck = false;
description = "SVG renderer based on Rasterific";
license = stdenv.lib.licenses.bsd3;

}) {};
"ratel" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, case-insensitive
, containers
, http-client
, http-client-tls
, http-types
, stdenv
, text
, uuid
}:
mkDerivation {

pname = "ratel";
version = "1.0.3";
sha256 = "90480f7a476e2f23b8edd760fa490f3414383a7bf2364330524957bf67b689b8";
libraryHaskellDepends = [
aeson
base
bytestring
case-insensitive
containers
http-client
http-client-tls
http-types
text
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/ratel#readme";
description = "Notify Honeybadger about exceptions";
license = stdenv.lib.licenses.mit;

}) {};
"ratel-wai" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, http-client
, ratel
, stdenv
, wai
}:
mkDerivation {

pname = "ratel-wai";
version = "1.0.2";
sha256 = "5a57a2aad96fc1d810fef437650badbd7cdd8bad425d971845b91c3676d5171e";
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
http-client
ratel
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/ratel-wai#readme";
description = "Notify Honeybadger about exceptions via a WAI middleware";
license = stdenv.lib.licenses.mit;

}) {};
"ratio-int" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "ratio-int";
version = "0.1.2";
sha256 = "efe86052c5979261d9aa6861c6297205ee0b60e1b36de191d20485e823c9781a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RaphaelJ/ratio-int";
description = "Fast specialisation of Data.Ratio for Int.";
license = stdenv.lib.licenses.bsd3;

}) {};
"raw-strings-qq" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "raw-strings-qq";
version = "1.1";
sha256 = "2e011ec26aeaa53ab43c30b7d9b5b0f661f24b4ebef8884c12c571353c0fbed3";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/23Skidoo/raw-strings-qq";
description = "Raw string literals for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"rawfilepath" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, unix
}:
mkDerivation {

pname = "rawfilepath";
version = "0.2.4";
sha256 = "cbb01b49f7ff0271a8c6e4124f93515e6cdabf9581278594e19dd916b6bd5bd3";
libraryHaskellDepends = [
base
bytestring
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/xtendo-org/rawfilepath#readme";
description = "Use RawFilePath instead of FilePath";
license = stdenv.lib.licenses.asl20;

}) {};
"rawstring-qm" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "rawstring-qm";
version = "0.2.3.0";
sha256 = "11a177bb7d685fb6a98390630196bd544e877b7460648e61a2905c21a71268fe";
libraryHaskellDepends = [
base
bytestring
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tolysz/rawstring-qm";
description = "Simple raw string quotation and dictionary interpolation";
license = stdenv.lib.licenses.bsd3;

}) {};
"rcu" = callPackage
({
  mkDerivation
, atomic-primops
, base
, Cabal
, cabal-doctest
, ghc-prim
, parallel
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "rcu";
version = "0.2.2";
sha256 = "93264621dc372c6180aa12324435deeac36946cdca7f77270ef0a3e162474852";
revision = "2";
editedCabalFile = "0s9rd1ys6y770xwfgljmrkyw968jqwsa39xpa3x88wzb93qzypmr";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
atomic-primops
base
ghc-prim
parallel
primitive
transformers
];
executableHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/rcu/";
description = "Read-Copy-Update for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"rdf" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, deepseq
, dlist
, fgl
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "rdf";
version = "0.1.0.2";
sha256 = "889d93b6f54c791e62cd93ec404bb171d7e3bdbba0a085a4c7f4e4d2f3b51f6f";
libraryHaskellDepends = [
attoparsec
base
bytestring
deepseq
dlist
fgl
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/traviswhitaker/rdf";
description = "Representation and Incremental Processing of RDF Data";
license = stdenv.lib.licenses.mit;

}) {};
"rdtsc" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "rdtsc";
version = "1.3.0.1";
sha256 = "54c9a925f68d6c60b405e92f9d3bd9ebfc25cce0c72d2313a6c7e1b7cc2ed950";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mgrabmueller/rdtsc";
description = "Binding for the rdtsc machine instruction";
license = stdenv.lib.licenses.bsd3;

}) {};
"re2" = callPackage
({
  mkDerivation
, base
, bytestring
, re2
, stdenv
, vector
}:
mkDerivation {

pname = "re2";
version = "0.2";
sha256 = "6906d80ed6834162f74ceb056230f7b1d1cd3423f05f67c65107b1493c8fd561";
libraryHaskellDepends = [
base
bytestring
vector
];
librarySystemDepends = [
re2
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rblaze/haskell-re2#readme";
description = "Bindings to the re2 regular expression library";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) re2;};
"read-editor" = callPackage
({
  mkDerivation
, base
, directory
, process
, stdenv
}:
mkDerivation {

pname = "read-editor";
version = "0.1.0.2";
sha256 = "ed8aeca86823fbaf11a0a543fd106c9c3abe65216ea974ed56050cbebf777085";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yamadapc/haskell-read-editor";
description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
license = stdenv.lib.licenses.mit;

}) {};
"read-env-var" = callPackage
({
  mkDerivation
, base
, exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "read-env-var";
version = "1.0.0.0";
sha256 = "03f3c8176fc08ce838ae772f13991258e2b496712cc71edb1a00336e7ce0b75c";
libraryHaskellDepends = [
base
exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/read-env-var#readme";
description = "Functions for safely reading environment variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"readable" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "readable";
version = "0.3.1";
sha256 = "703037ad2cca4d6d42ba23e2758d1911cd82e3e922c4078076c273231e4b43c9";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mightybyte/readable";
description = "Reading from Text and ByteString";
license = stdenv.lib.licenses.bsd3;

}) {};
"recursion-schemes" = callPackage
({
  mkDerivation
, base
, base-orphans
, bifunctors
, comonad
, free
, semigroups
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "recursion-schemes";
version = "5.0.2";
sha256 = "3a4965bbcc10eb1d1d8dfd51771d7f20c164a1de5711333b1d5cd268a7f6aad2";
revision = "2";
editedCabalFile = "13l08kal330r1nln13q6qn60mcs0iwcz0hx23na743xllha76nnl";
libraryHaskellDepends = [
base
base-orphans
bifunctors
comonad
free
semigroups
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/recursion-schemes/";
description = "Generalized bananas, lenses and barbed wire";
license = stdenv.lib.licenses.bsd3;

}) {};
"redis-io" = callPackage
({
  mkDerivation
, attoparsec
, auto-update
, base
, bytestring
, containers
, exceptions
, iproute
, monad-control
, mtl
, network
, operational
, redis-resp
, resource-pool
, semigroups
, stdenv
, stm
, time
, tinylog
, transformers
, transformers-base
}:
mkDerivation {

pname = "redis-io";
version = "0.7.0";
sha256 = "1f68cb184f29fd4dc27b7034ee6dd2c53a952fbda1084ba25afd83952518e619";
libraryHaskellDepends = [
attoparsec
auto-update
base
bytestring
containers
exceptions
iproute
monad-control
mtl
network
operational
redis-resp
resource-pool
semigroups
stm
time
tinylog
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/redis-io/";
description = "Yet another redis client";
license = stdenv.lib.licenses.mpl20;

}) {};
"redis-resp" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, containers
, dlist
, double-conversion
, operational
, semigroups
, split
, stdenv
, transformers
}:
mkDerivation {

pname = "redis-resp";
version = "0.4.0";
sha256 = "8bc0d592843e05c37a3fda22255daca74f1c17c4e4a7951531accd45cd2a9232";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
containers
dlist
double-conversion
operational
semigroups
split
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/redis-resp/";
description = "REdis Serialization Protocol (RESP) implementation";
license = stdenv.lib.licenses.mpl20;

}) {};
"reducers" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, fingertree
, hashable
, semigroupoids
, semigroups
, stdenv
, text
, transformers
, unordered-containers
}:
mkDerivation {

pname = "reducers";
version = "3.12.2";
sha256 = "c5d03608b7217e8690a884014dfe03dc4c882ac1a481c5e85c76af4f7a516abd";
libraryHaskellDepends = [
array
base
bytestring
containers
fingertree
hashable
semigroupoids
semigroups
text
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/reducers/";
description = "Semigroups, specialized containers and a general map/reduce framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"ref-fd" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "ref-fd";
version = "0.4.0.1";
sha256 = "e416f1afba149e3af9cbe1011381d0b89609c240d812127bd03b8a922a5f6037";
libraryHaskellDepends = [
base
stm
transformers
];
doHaddock = false;
doCheck = false;
description = "A type class for monads with references using functional dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"refact" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "refact";
version = "0.3.0.2";
sha256 = "0ad029727797c8ca5d179c7abf1bfc135d86a7d72cf93785ee12ad243aeb1f6c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Specify refactorings to perform with apply-refact";
license = stdenv.lib.licenses.bsd3;

}) {};
"references" = callPackage
({
  mkDerivation
, array
, base
, containers
, directory
, either
, filepath
, instance-control
, mtl
, stdenv
, template-haskell
, text
, transformers
, uniplate
}:
mkDerivation {

pname = "references";
version = "0.3.3.1";
sha256 = "bc07606d36639148374e7a29a67ac489c7a0ed02655311b5d633a144a746c10e";
libraryHaskellDepends = [
array
base
containers
directory
either
filepath
instance-control
mtl
template-haskell
text
transformers
uniplate
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lazac/references";
description = "Selectors for reading and updating data";
license = stdenv.lib.licenses.bsd3;

}) {};
"refined" = callPackage
({
  mkDerivation
, base
, base-prelude
, stdenv
, template-haskell
}:
mkDerivation {

pname = "refined";
version = "0.1.2.1";
sha256 = "156e08b286b3c433d40ca39160b7f1ecec6072c138ca48f6d90d3d0cb808e777";
libraryHaskellDepends = [
base
base-prelude
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/refined";
description = "Refinement types with static and runtime checking";
license = stdenv.lib.licenses.mit;

}) {};
"reflection" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "reflection";
version = "2.1.3";
sha256 = "88f81923abd7211e51de7071cd5800b30784e374c193de8cdd7b1c201f8de405";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/reflection";
description = "Reifies arbitrary terms into types that can be reflected back into terms";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "reform";
version = "0.2.7.2";
sha256 = "fb3359512a5260072f1300ad6b41e80da8f8891be095d95dc3393b7e212b5a91";
libraryHaskellDepends = [
base
containers
mtl
semigroups
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "reform is a type-safe HTML form generation and validation library";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform-blaze" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, reform
, stdenv
, text
}:
mkDerivation {

pname = "reform-blaze";
version = "0.2.4.3";
sha256 = "11bcf127356bf5840a0947ea1058cbf1e08096ab0fc872aa5c1ec7d88e40b2e4";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
reform
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Add support for using blaze-html with Reform";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform-hamlet" = callPackage
({
  mkDerivation
, base
, blaze-markup
, reform
, shakespeare
, stdenv
, text
}:
mkDerivation {

pname = "reform-hamlet";
version = "0.0.5.3";
sha256 = "512729389fc3eec118a8079486eb2319e1e8eaecdeecafdd6b36205373ce3466";
libraryHaskellDepends = [
base
blaze-markup
reform
shakespeare
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Add support for using Hamlet with Reform";
license = stdenv.lib.licenses.bsd3;

}) {};
"reform-happstack" = callPackage
({
  mkDerivation
, base
, bytestring
, happstack-server
, mtl
, random
, reform
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "reform-happstack";
version = "0.2.5.2";
sha256 = "260f00d9a71a9081b33aac883249d721db993134216cca55acf01de20128dc34";
libraryHaskellDepends = [
base
bytestring
happstack-server
mtl
random
reform
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/";
description = "Happstack support for reform";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-applicative" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "regex-applicative";
version = "0.3.3";
sha256 = "6659a2cc1c8137d77ef57f75027723b075d473354d935233d98b1ae1b03c3be6";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/regex-applicative";
description = "Regex-based parsing with applicative interface";
license = stdenv.lib.licenses.mit;

}) {};
"regex-applicative-text" = callPackage
({
  mkDerivation
, base
, regex-applicative
, stdenv
, text
}:
mkDerivation {

pname = "regex-applicative-text";
version = "0.1.0.1";
sha256 = "b093051f80865d257da2ded8ad1b566927b01b3d2f86d41da2ffee4a26c4e2d9";
revision = "2";
editedCabalFile = "19sdafr0i252xyy017yxmz76ipl5bdg3hiv3ka8sjbwryj16gdwi";
libraryHaskellDepends = [
base
regex-applicative
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/regex-applicative-text#readme";
description = "regex-applicative on text";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-base" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "regex-base";
version = "0.93.2";
sha256 = "20dc5713a16f3d5e2e6d056b4beb9cfdc4368cd09fd56f47414c847705243278";
libraryHaskellDepends = [
array
base
bytestring
containers
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://sourceforge.net/projects/lazy-regex";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-compat" = callPackage
({
  mkDerivation
, array
, base
, regex-base
, regex-posix
, stdenv
}:
mkDerivation {

pname = "regex-compat";
version = "0.95.1";
sha256 = "d57cb1a5a4d66753b18eaa37a1621246f660472243b001894f970037548d953b";
libraryHaskellDepends = [
array
base
regex-base
regex-posix
];
doHaddock = false;
doCheck = false;
homepage = "http://sourceforge.net/projects/lazy-regex";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-compat-tdfa" = callPackage
({
  mkDerivation
, array
, base
, regex-base
, regex-tdfa
, stdenv
}:
mkDerivation {

pname = "regex-compat-tdfa";
version = "0.95.1.4";
sha256 = "4fa38ed24ae390eeffe6eef04bbe632d7ecd02b9123729e976e7420f927520dd";
libraryHaskellDepends = [
array
base
regex-base
regex-tdfa
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
description = "Unicode Support version of Text.Regex, using regex-tdfa";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-pcre" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, pcre
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-pcre";
version = "0.94.4";
sha256 = "8eaa7d4ac6c0a4ba35aa59fc3f6b8f8e252bb25a47e136791446a74752e226c0";
libraryHaskellDepends = [
array
base
bytestring
containers
regex-base
];
librarySystemDepends = [
pcre
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/regex-pcre";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) pcre;};
"regex-pcre-builtin" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-pcre-builtin";
version = "0.94.4.8.8.35";
sha256 = "0bd1b695de953ba4b6e6e0de007021c346cb2a6c8e09356fbcd34f8a79d2ea78";
libraryHaskellDepends = [
array
base
bytestring
containers
regex-base
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/regex-pcre";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-pcre-text" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, regex-base
, regex-pcre-builtin
, regex-tdfa-text
, stdenv
, text
}:
mkDerivation {

pname = "regex-pcre-text";
version = "0.94.0.1";
sha256 = "17991ed7b00da5cfb2efa0cefac16f9e0452fc794fe538d26d5cc802f0d8e9bd";
libraryHaskellDepends = [
array
base
bytestring
regex-base
regex-pcre-builtin
regex-tdfa-text
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdornan/regex-pcre-text";
description = "Text-based PCRE API for regex-base";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-posix" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-posix";
version = "0.95.2";
sha256 = "56019921cd4a4c9682b81ec614236fea816ba8ed8785a1640cd66d8b24fc703e";
libraryHaskellDepends = [
array
base
bytestring
containers
regex-base
];
doHaddock = false;
doCheck = false;
homepage = "http://sourceforge.net/projects/lazy-regex";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-tdfa" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, ghc-prim
, mtl
, parsec
, regex-base
, stdenv
}:
mkDerivation {

pname = "regex-tdfa";
version = "1.2.3";
sha256 = "89b17ebb812d4597c0007fbbc21c78dfef70a133aa41b208217a9c99bed600d9";
libraryHaskellDepends = [
array
base
bytestring
containers
ghc-prim
mtl
parsec
regex-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ChrisKuklewicz/regex-tdfa";
description = "Replaces/Enhances Text.Regex";
license = stdenv.lib.licenses.bsd3;

}) {};
"regex-tdfa-text" = callPackage
({
  mkDerivation
, array
, base
, regex-base
, regex-tdfa
, stdenv
, text
}:
mkDerivation {

pname = "regex-tdfa-text";
version = "1.0.0.3";
sha256 = "38d77a0d225c306c52c6d4eed12d11d05a4bc4194d547cb9a7a9b6f5a8792001";
libraryHaskellDepends = [
array
base
regex-base
regex-tdfa
text
];
doHaddock = false;
doCheck = false;
description = "Text interface for regex-tdfa";
license = stdenv.lib.licenses.bsd3;

}) {};
"reinterpret-cast" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "reinterpret-cast";
version = "0.1.0";
sha256 = "5654622c904b42c62f2473c64624715dbd458ea00209ed9ab39396eabc1353e4";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nh2/reinterpret-cast";
description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
license = stdenv.lib.licenses.mit;

}) {};
"relational-query" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, dlist
, names-th
, persistable-record
, product-isomorphic
, sql-words
, stdenv
, template-haskell
, text
, th-reify-compat
, time
, time-locale-compat
, transformers
}:
mkDerivation {

pname = "relational-query";
version = "0.11.1.0";
sha256 = "b862e083da55671c3d1d506caec4fa4ac92d4a53aef56dd566ea47dde4c1cdc7";
libraryHaskellDepends = [
array
base
bytestring
containers
dlist
names-th
persistable-record
product-isomorphic
sql-words
template-haskell
text
th-reify-compat
time
time-locale-compat
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Typeful, Modular, Relational, algebraic query engine";
license = stdenv.lib.licenses.bsd3;

}) {};
"relational-query-HDBC" = callPackage
({
  mkDerivation
, base
, containers
, convertible
, dlist
, HDBC
, HDBC-session
, names-th
, persistable-record
, product-isomorphic
, relational-query
, relational-schemas
, sql-words
, stdenv
, template-haskell
, th-data-compat
, transformers
}:
mkDerivation {

pname = "relational-query-HDBC";
version = "0.6.7.0";
sha256 = "8c9c0731168dc2e6f6f6b7f39fc8f15cdd7e09267f571d075534537380f920bc";
libraryHaskellDepends = [
base
containers
convertible
dlist
HDBC
HDBC-session
names-th
persistable-record
product-isomorphic
relational-query
relational-schemas
sql-words
template-haskell
th-data-compat
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "HDBC instance of relational-query and typed query interface for HDBC";
license = stdenv.lib.licenses.bsd3;

}) {};
"relational-record" = callPackage
({
  mkDerivation
, base
, persistable-record
, persistable-types-HDBC-pg
, product-isomorphic
, relational-query
, relational-query-HDBC
, stdenv
}:
mkDerivation {

pname = "relational-record";
version = "0.2.1.2";
sha256 = "5ead1f9de164cbf674ec268fdd613dcfbbc87f5069e53007837ea5db93320d19";
libraryHaskellDepends = [
base
persistable-record
persistable-types-HDBC-pg
product-isomorphic
relational-query
relational-query-HDBC
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Meta package of Relational Record";
license = stdenv.lib.licenses.bsd3;

}) {};
"relational-schemas" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, relational-query
, stdenv
, template-haskell
, time
}:
mkDerivation {

pname = "relational-schemas";
version = "0.1.6.1";
sha256 = "01ed4c898224e163d88b59ab66ebf50c710d6a4b968f8f3d6da2b6eca05278d2";
libraryHaskellDepends = [
base
bytestring
containers
relational-query
template-haskell
time
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "RDBMSs' schema templates for relational-query";
license = stdenv.lib.licenses.bsd3;

}) {};
"rematch" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "rematch";
version = "0.2.0.0";
sha256 = "f996de29c0e7a47484a16113129166f7df12567d3ca3ea24c5c97e98a8225c51";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A simple api for matchers";
license = stdenv.lib.licenses.mit;

}) {};
"renderable" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, transformers
}:
mkDerivation {

pname = "renderable";
version = "0.2.0.1";
sha256 = "d1ea5a8d2da8913700c326c3e757c8c4c8a87f1353125bbc9ea372729e04b6c5";
libraryHaskellDepends = [
base
containers
hashable
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/schell/renderable";
description = "An API for managing renderable resources";
license = stdenv.lib.licenses.mit;

}) {};
"repa" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, QuickCheck
, stdenv
, template-haskell
, vector
}:
mkDerivation {

pname = "repa";
version = "3.4.1.3";
sha256 = "3e32d7b2964994d6edd3eabcce38f0c08ff474b3d4acb0d9b3f3b75c76e67a70";
revision = "2";
editedCabalFile = "0kmypfnpzjszdzhpd1lskp0plja8zyr8r2y9xyscx4g5md9hh0zp";
libraryHaskellDepends = [
base
bytestring
ghc-prim
QuickCheck
template-haskell
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://repa.ouroborus.net";
description = "High performance, regular, shape polymorphic parallel arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"repa-algorithms" = callPackage
({
  mkDerivation
, base
, repa
, stdenv
, vector
}:
mkDerivation {

pname = "repa-algorithms";
version = "3.4.1.2";
sha256 = "07b597e071759e3708bbd8487ce0111949ed3e74b5187f486be19e4764c19886";
revision = "1";
editedCabalFile = "1dj9gq4v9y8818d5vx2zlsdl4fspwi4aywfbminr7dvlljhf415k";
libraryHaskellDepends = [
base
repa
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://repa.ouroborus.net";
description = "Algorithms using the Repa array library";
license = stdenv.lib.licenses.bsd3;

}) {};
"repa-io" = callPackage
({
  mkDerivation
, base
, binary
, bmp
, bytestring
, old-time
, repa
, stdenv
, vector
}:
mkDerivation {

pname = "repa-io";
version = "3.4.1.1";
sha256 = "b5dbca96a988fb8bd918288ea1cfcf215fe46062e45001b209603b63a39ba9da";
revision = "2";
editedCabalFile = "0zslqm87abzrsbrw2dlnsmm8jnpvg7ldi2d83d7p5sih78ksfmmm";
libraryHaskellDepends = [
base
binary
bmp
bytestring
old-time
repa
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://repa.ouroborus.net";
description = "Read and write Repa arrays in various formats";
license = stdenv.lib.licenses.bsd3;

}) {};
"repline" = callPackage
({
  mkDerivation
, base
, containers
, haskeline
, mtl
, process
, stdenv
}:
mkDerivation {

pname = "repline";
version = "0.1.7.0";
sha256 = "503a035d8a380ac21c532e48c0f47006ff1c20ed9683f4906fdb304b4b9e55de";
libraryHaskellDepends = [
base
containers
haskeline
mtl
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sdiehl/repline";
description = "Haskeline wrapper for GHCi-like REPL interfaces";
license = stdenv.lib.licenses.mit;

}) {};
"req" = callPackage
({
  mkDerivation
, aeson
, authenticate-oauth
, base
, blaze-builder
, bytestring
, case-insensitive
, connection
, data-default-class
, http-api-data
, http-client
, http-client-tls
, http-types
, monad-control
, mtl
, retry
, stdenv
, text
, time
, transformers
, transformers-base
}:
mkDerivation {

pname = "req";
version = "1.0.0";
sha256 = "0701964278654bc8d2c96f550da1a11de78d42e4f85ce53ba5260c7e83695ee8";
revision = "2";
editedCabalFile = "08yr09gfpml94ny6jmps2hn13bsb7r37rdn92gr2kmbryb188d1l";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
authenticate-oauth
base
blaze-builder
bytestring
case-insensitive
connection
data-default-class
http-api-data
http-client
http-client-tls
http-types
monad-control
mtl
retry
text
time
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/req";
description = "Easy-to-use, type-safe, expandable, high-level HTTP library";
license = stdenv.lib.licenses.bsd3;

}) {};
"req-url-extra" = callPackage
({
  mkDerivation
, aeson
, base
, data-default-class
, modern-uri
, req
, stdenv
, text
}:
mkDerivation {

pname = "req-url-extra";
version = "0.1.0.0";
sha256 = "b3de266ad49fb3c03ff26d589d89f81ddea7f319900b07e59843e57986d37d84";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
modern-uri
req
];
executableHaskellDepends = [
aeson
base
data-default-class
modern-uri
req
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rcook/req-url-extra#readme";
description = "Provides URI/URL helper functions for use with Req";
license = stdenv.lib.licenses.mit;

}) {};
"reroute" = callPackage
({
  mkDerivation
, base
, deepseq
, hashable
, http-api-data
, hvect
, mtl
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "reroute";
version = "0.4.1.0";
sha256 = "34a83f0d0240610b3e6867f02859d77a8255783e2225389bf025865d5d4c2508";
libraryHaskellDepends = [
base
deepseq
hashable
http-api-data
hvect
mtl
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/agrafix/Spock";
description = "abstract implementation of typed and untyped web routing";
license = stdenv.lib.licenses.mit;

}) {};
"resource-pool" = callPackage
({
  mkDerivation
, base
, hashable
, monad-control
, stdenv
, stm
, time
, transformers
, transformers-base
, vector
}:
mkDerivation {

pname = "resource-pool";
version = "0.2.3.2";
sha256 = "8627eea2bea8824af2723646e74e2af0c73f583dd0c496c9fd242cd9d242bc12";
libraryHaskellDepends = [
base
hashable
monad-control
stm
time
transformers
transformers-base
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bos/pool";
description = "A high-performance striped resource pooling implementation";
license = stdenv.lib.licenses.bsd3;

}) {};
"resourcet" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, mtl
, primitive
, stdenv
, transformers
, unliftio-core
}:
mkDerivation {

pname = "resourcet";
version = "1.2.1";
sha256 = "e765c12a6ec0f70efc3c938750060bc17569b99578aa635fd4da0c4d06fcf267";
libraryHaskellDepends = [
base
containers
exceptions
mtl
primitive
transformers
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/conduit";
description = "Deterministic allocation and freeing of scarce resources";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-core" = callPackage
({
  mkDerivation
, aeson
, aeson-utils
, base
, base-compat
, bytestring
, case-insensitive
, errors
, fclabels
, hxt
, hxt-pickle-utils
, json-schema
, mtl
, mtl-compat
, multipart
, random
, rest-stringmap
, rest-types
, safe
, split
, stdenv
, text
, transformers
, transformers-compat
, unordered-containers
, uri-encode
, utf8-string
, uuid
}:
mkDerivation {

pname = "rest-core";
version = "0.39";
sha256 = "d760d0547fc1a99cd949dde08b7945fb93af24f4e55d45ecf410c352d5005404";
revision = "8";
editedCabalFile = "12ia5ic2cas82h3dksdy4hzmcw42f13wqwqw0ilbn50q85j2k4pf";
libraryHaskellDepends = [
aeson
aeson-utils
base
base-compat
bytestring
case-insensitive
errors
fclabels
hxt
hxt-pickle-utils
json-schema
mtl
mtl-compat
multipart
random
rest-stringmap
rest-types
safe
split
text
transformers
transformers-compat
unordered-containers
uri-encode
utf8-string
uuid
];
doHaddock = false;
doCheck = false;
description = "Rest API library";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-snap" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, case-insensitive
, rest-core
, safe
, snap-core
, stdenv
, unordered-containers
, uri-encode
, utf8-string
}:
mkDerivation {

pname = "rest-snap";
version = "0.3.0.0";
sha256 = "ce4584bc1e9473e524782c6adf8771af1ddc1d2f6e865f7b06c883f46aee68e8";
libraryHaskellDepends = [
base
base-compat
bytestring
case-insensitive
rest-core
safe
snap-core
unordered-containers
uri-encode
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Rest driver for Snap";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-stringmap" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, hashable
, hxt
, json-schema
, stdenv
, tostring
, unordered-containers
}:
mkDerivation {

pname = "rest-stringmap";
version = "0.2.0.7";
sha256 = "62d4644f5f7e4ad85688feafaea48b577907a382729f11e1c1fde21a98215450";
libraryHaskellDepends = [
aeson
base
containers
hashable
hxt
json-schema
tostring
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Maps with stringy keys that can be transcoded to JSON and XML";
license = stdenv.lib.licenses.bsd3;

}) {};
"rest-types" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, case-insensitive
, generic-aeson
, generic-xmlpickler
, hxt
, json-schema
, rest-stringmap
, stdenv
, text
, uuid
}:
mkDerivation {

pname = "rest-types";
version = "1.14.1.2";
sha256 = "beee87fd687c1a32d262bd10ad760d75f21310c29cc0e49f53f1c8fdc9b25d32";
libraryHaskellDepends = [
aeson
base
base-compat
case-insensitive
generic-aeson
generic-xmlpickler
hxt
json-schema
rest-stringmap
text
uuid
];
doHaddock = false;
doCheck = false;
description = "Silk Rest Framework Types";
license = stdenv.lib.licenses.bsd3;

}) {};
"result" = callPackage
({
  mkDerivation
, base
, bifunctors
, keys
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "result";
version = "0.2.6.0";
sha256 = "f526d97cdab851f24e215e346f6d54d3a504a6ac5d9264f580c4f72d606178c5";
libraryHaskellDepends = [
base
bifunctors
keys
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/srijs/haskell-result";
description = "Encode success or at least one error";
license = stdenv.lib.licenses.mit;

}) {};
"rethinkdb-client-driver" = callPackage
({
  mkDerivation
, aeson
, base
, binary
, bytestring
, containers
, hashable
, mtl
, network
, old-locale
, scientific
, stdenv
, stm
, template-haskell
, text
, time
, unordered-containers
, vector
}:
mkDerivation {

pname = "rethinkdb-client-driver";
version = "0.0.25";
sha256 = "0f9dc156cd61b866b847b1b1a60a2345b4b5556b8b75a9e8499b0514e7f98996";
revision = "1";
editedCabalFile = "1hblwarlxjxq2lp52bjlqwdjsqlwm8ffqi2pj1n8zpidjv6m8330";
libraryHaskellDepends = [
aeson
base
binary
bytestring
containers
hashable
mtl
network
old-locale
scientific
stm
template-haskell
text
time
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
description = "Client driver for RethinkDB";
license = stdenv.lib.licenses.mit;

}) {};
"retry" = callPackage
({
  mkDerivation
, base
, data-default-class
, exceptions
, ghc-prim
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "retry";
version = "0.7.6.2";
sha256 = "4d99f0598762de530200477efdba80a51cde2316a698a64f8683b86ba0b8b92e";
libraryHaskellDepends = [
base
data-default-class
exceptions
ghc-prim
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/Soostone/retry";
description = "Retry combinators for monadic actions that may fail";
license = stdenv.lib.licenses.bsd3;

}) {};
"rev-state" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
}:
mkDerivation {

pname = "rev-state";
version = "0.1.2";
sha256 = "ee070e39d7f7d673593e2f356ab317bc2fdd0d8a283f8316c0e5b5adbdf0f919";
revision = "2";
editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
libraryHaskellDepends = [
base
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/rev-state#readme";
description = "Reverse State monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"rfc5051" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
}:
mkDerivation {

pname = "rfc5051";
version = "0.1.0.3";
sha256 = "e38dab28a5625774be60545c8c99e647b79bbc0ac0bc9c65fe6b2ebef160642b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
];
doHaddock = false;
doCheck = false;
description = "Simple unicode collation as per RFC5051";
license = stdenv.lib.licenses.bsd3;

}) {};
"riak" = callPackage
({
  mkDerivation
, aeson
, async
, attoparsec
, base
, bifunctors
, binary
, blaze-builder
, bytestring
, containers
, data-default-class
, deepseq
, enclosed-exceptions
, exceptions
, hashable
, mersenne-random-pure64
, monad-control
, network
, protocol-buffers
, pureMD5
, random
, resource-pool
, riak-protobuf
, semigroups
, stdenv
, stm
, text
, time
, transformers
, transformers-base
, unordered-containers
, vector
}:
mkDerivation {

pname = "riak";
version = "1.1.2.4";
sha256 = "54c5fe2b2d6a2deaec764610c55547b34d7548629a6392c4f0df702b93b8c7c8";
libraryHaskellDepends = [
aeson
async
attoparsec
base
bifunctors
binary
blaze-builder
bytestring
containers
data-default-class
deepseq
enclosed-exceptions
exceptions
hashable
mersenne-random-pure64
monad-control
network
protocol-buffers
pureMD5
random
resource-pool
riak-protobuf
semigroups
stm
text
time
transformers
transformers-base
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/riak-haskell-client/riak-haskell-client";
description = "A Haskell client for the Riak decentralized data store";
license = "unknown";

}) {};
"riak-protobuf" = callPackage
({
  mkDerivation
, array
, base
, parsec
, protocol-buffers
, protocol-buffers-descriptor
, stdenv
}:
mkDerivation {

pname = "riak-protobuf";
version = "0.23.0.0";
sha256 = "5dcbd06bdb66a1e43881a62a44d92e47d3f16f9ea1b4d53e4a92622faecdca33";
libraryHaskellDepends = [
array
base
parsec
protocol-buffers
protocol-buffers-descriptor
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/riak-haskell-client/riak-haskell-client";
description = "Haskell types for the Riak protocol buffer API";
license = "unknown";

}) {};
"rio" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, directory
, exceptions
, filepath
, hashable
, microlens
, mtl
, primitive
, process
, stdenv
, text
, time
, typed-process
, unix
, unliftio
, unordered-containers
, vector
}:
mkDerivation {

pname = "rio";
version = "0.1.2.0";
sha256 = "98333b9376ce9cdc77ebe84b35a5fbb41ef846cc00efc12970bca1c19f948910";
libraryHaskellDepends = [
base
bytestring
containers
deepseq
directory
exceptions
filepath
hashable
microlens
mtl
primitive
process
text
time
typed-process
unix
unliftio
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/commercialhaskell/rio#readme";
description = "A standard library for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"rng-utils" = callPackage
({
  mkDerivation
, base
, bytestring
, random
, stdenv
}:
mkDerivation {

pname = "rng-utils";
version = "0.3.0";
sha256 = "0886acb1e0ae6c6ad5f594a9d4d57ea5af69c566ccc5763d0b7c690963e946ba";
libraryHaskellDepends = [
base
bytestring
random
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/soostone/rng-utils";
description = "RNG within an IORef for convenient concurrent use";
license = stdenv.lib.licenses.bsd3;

}) {};
"rocksdb-haskell-ng" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, fetchgit
, rocksdb
, stdenv
}:
mkDerivation {

pname = "rocksdb-haskell-ng";
version = "0.0.0";
src = fetchgit {

url = "https://github.com/input-output-hk/rocksdb-haskell-ng.git";
sha256 = "02jvri8ik8jgrxwa6qmh3xcwqvm4s27iv3sxpjpny79nlhlxvfzp";
rev = "49f501a082d745f3b880677220a29cafaa181452";

};
libraryHaskellDepends = [
base
bytestring
directory
];
librarySystemDepends = [
rocksdb
];
doHaddock = false;
doCheck = false;
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) rocksdb;};
"roles" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "roles";
version = "0.2.0.0";
sha256 = "e29d2f31b21b2d8ce3507e17211e70a61d2e434a8e19f80b2e4898bdabac34a0";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/matt-noonan/roles/";
description = "Composable class-based roles";
license = stdenv.lib.licenses.bsd3;

}) {};
"rollbar-hs" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, case-insensitive
, hostname
, http-client
, http-conduit
, http-types
, network
, stdenv
, text
, time
, unordered-containers
, uuid
}:
mkDerivation {

pname = "rollbar-hs";
version = "0.2.0.0";
sha256 = "85d799e95ac2e42b819241454cedfce4159952819f64c54802ebfb0de8028a70";
libraryHaskellDepends = [
aeson
base
bytestring
case-insensitive
hostname
http-client
http-conduit
http-types
network
text
time
unordered-containers
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joneshf/rollbar-hs#readme";
description = "Core Rollbar data types and APIs";
license = stdenv.lib.licenses.bsd3;

}) {};
"rose-trees" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, hashable
, mtl
, QuickCheck
, quickcheck-instances
, semigroupoids
, semigroups
, sets
, stdenv
, unordered-containers
, witherable
}:
mkDerivation {

pname = "rose-trees";
version = "0.0.4.4";
sha256 = "2313133d29286e1e4f1f0b1d6ec0fba852bc5537d5b062c1b8fe0a6aa79b72cd";
libraryHaskellDepends = [
base
containers
deepseq
hashable
mtl
QuickCheck
quickcheck-instances
semigroupoids
semigroups
sets
unordered-containers
witherable
];
doHaddock = false;
doCheck = false;
description = "A collection of rose tree structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"rot13" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "rot13";
version = "0.2.0.1";
sha256 = "e026d418cc6a1ce83ba11e811387e62ad49ffb1cbd6ae7f58b72fd179fccd4dc";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kvanberendonck/codec-rot13";
description = "Fast ROT13 cipher for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"rss-conduit" = callPackage
({
  mkDerivation
, atom-conduit
, base
, conduit
, conduit-combinators
, containers
, dublincore-xml-conduit
, lens-simple
, safe
, safe-exceptions
, singletons
, stdenv
, text
, time
, timerep
, uri-bytestring
, vinyl
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "rss-conduit";
version = "0.4.2.1";
sha256 = "b8f52cc3e899477c6f2642ea6d4abc6fa9c74fc6c08a8f990d50a79aff605712";
libraryHaskellDepends = [
atom-conduit
base
conduit
conduit-combinators
containers
dublincore-xml-conduit
lens-simple
safe
safe-exceptions
singletons
text
time
timerep
uri-bytestring
vinyl
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
description = "Streaming parser/renderer for the RSS standard";
license = stdenv.lib.licenses.publicDomain;

}) {};
"runmemo" = callPackage
({
  mkDerivation
, stdenv
}:
mkDerivation {

pname = "runmemo";
version = "1.0.0.1";
sha256 = "ba5ef3177f8fe5f443808e44f62d03b23ac19bbef7f708e40532031a3505d689";
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/runmemo";
description = "A simple memoization helper library";
license = stdenv.lib.licenses.bsd3;

}) {};
"rvar" = callPackage
({
  mkDerivation
, base
, MonadPrompt
, mtl
, random-source
, stdenv
, transformers
}:
mkDerivation {

pname = "rvar";
version = "0.2.0.3";
sha256 = "d78aaf2ffdba182dda95d1692fec7abc5d77fa371120618a397b5675438c6bc0";
libraryHaskellDepends = [
base
MonadPrompt
mtl
random-source
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/random-fu";
description = "Random Variables";
license = stdenv.lib.licenses.publicDomain;

}) {};
"s3-signer" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, cryptohash
, http-types
, stdenv
, time
, utf8-string
}:
mkDerivation {

pname = "s3-signer";
version = "0.3.0.0";
sha256 = "89e957f81211a417c425214d3d7eafb0f15f695ffe0002f4198f2e34b43bc494";
libraryHaskellDepends = [
base
base64-bytestring
cryptohash
http-types
time
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmjio/s3-signer";
description = "Pre-signed Amazon S3 URLs";
license = stdenv.lib.licenses.bsd3;

}) {};
"safe" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "safe";
version = "0.3.17";
sha256 = "79c5c41e7151906969133ea21af9f7e8d25c18315886e23d0bdf6faa8b537e5c";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/safe#readme";
description = "Library of safe (exception free) functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"safe-exceptions" = callPackage
({
  mkDerivation
, base
, deepseq
, exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "safe-exceptions";
version = "0.1.7.0";
sha256 = "18cddc587b52b6faa0287fb6ad6c964d1562571ea2c8ff57a194dd54b5fba069";
revision = "3";
editedCabalFile = "0y1b9pw5wriyiffcmvk9g53imh6lm5fgfbjsgpn2w96qspaagdb5";
libraryHaskellDepends = [
base
deepseq
exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/safe-exceptions#readme";
description = "Safe, consistent, and easy exception handling";
license = stdenv.lib.licenses.mit;

}) {};
"safe-exceptions-checked" = callPackage
({
  mkDerivation
, base
, deepseq
, safe-exceptions
, stdenv
, transformers
}:
mkDerivation {

pname = "safe-exceptions-checked";
version = "0.1.0";
sha256 = "d807552b828de308d80805f65ee41f3e25571506b10e6b28b0b81de4aec0ca3f";
revision = "3";
editedCabalFile = "004id0k46j545zvkldfcv5qjgxzl35brm9h6fq72y43b9hl2y55f";
libraryHaskellDepends = [
base
deepseq
safe-exceptions
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mitchellwrosen/safe-exceptions-checked#readme";
description = "Safe, checked exceptions";
license = stdenv.lib.licenses.bsd3;

}) {};
"safecopy" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, cereal
, containers
, old-time
, stdenv
, template-haskell
, text
, time
, vector
}:
mkDerivation {

pname = "safecopy";
version = "0.9.4.1";
sha256 = "1476c8c135baaca93ba232495b8d2a86047954e7f4439eafa28ee0763a500e84";
libraryHaskellDepends = [
array
base
bytestring
cereal
containers
old-time
template-haskell
text
time
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acid-state/safecopy";
description = "Binary serialization with version control";
license = stdenv.lib.licenses.publicDomain;

}) {};
"safeio" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-combinators
, directory
, exceptions
, filepath
, resourcet
, stdenv
, unix
}:
mkDerivation {

pname = "safeio";
version = "0.0.5.0";
sha256 = "d5799b6a6cd36e8f5442d991ed3a2076b10e0e3131269a2090b8c9c5c001e311";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-combinators
directory
exceptions
filepath
resourcet
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/luispedro/safeio#readme";
description = "Write output to disk atomically";
license = stdenv.lib.licenses.mit;

}) {};
"sample-frame" = callPackage
({
  mkDerivation
, base
, QuickCheck
, stdenv
, storable-record
}:
mkDerivation {

pname = "sample-frame";
version = "0.0.3";
sha256 = "5baf301a4f7b2d52e6b9b9c06b10afd3938de0be6d09736d0188616cd9027247";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
QuickCheck
storable-record
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
description = "Handling of samples in an (audio) signal";
license = stdenv.lib.licenses.bsd3;

}) {};
"sample-frame-np" = callPackage
({
  mkDerivation
, base
, numeric-prelude
, sample-frame
, stdenv
}:
mkDerivation {

pname = "sample-frame-np";
version = "0.0.4.1";
sha256 = "b1db7621b07503f5fe49390bf1e1b4257c49f4760d617121a23d845278f93624";
libraryHaskellDepends = [
base
numeric-prelude
sample-frame
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
description = "Orphan instances for types from sample-frame and numericprelude";
license = stdenv.lib.licenses.bsd3;

}) {};
"sampling" = callPackage
({
  mkDerivation
, base
, containers
, foldl
, mwc-random
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "sampling";
version = "0.3.3";
sha256 = "c8bedc93d61e6b1939f6802d7e21003e9e36abdd6f21a9651179d4d82aa00e0d";
libraryHaskellDepends = [
base
containers
foldl
mwc-random
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtobin/sampling";
description = "Sample values from collections";
license = stdenv.lib.licenses.mit;

}) {};
"sandman" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, directory
, filepath
, optparse-applicative
, process
, stdenv
, text
, unix-compat
}:
mkDerivation {

pname = "sandman";
version = "0.2.0.1";
sha256 = "407d283e1fc4a2a369615bac569683bf399ac14ddbce1331850bfe1d7837ce64";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
Cabal
containers
directory
filepath
optparse-applicative
process
text
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/abhinav/sandman#readme";
description = "Manages Cabal sandboxes to avoid rebuilding packages";
license = stdenv.lib.licenses.mit;

}) {};
"say" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "say";
version = "0.1.0.0";
sha256 = "f26fdb94ed81a2ae503beca0dcea74da7ee37408ba2e41ab3fdcaa9a7622fc40";
libraryHaskellDepends = [
base
bytestring
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/say#readme";
description = "Initial project template from stack";
license = stdenv.lib.licenses.mit;

}) {};
"sbp" = callPackage
({
  mkDerivation
, aeson
, array
, base
, base64-bytestring
, basic-prelude
, binary
, binary-conduit
, bytestring
, conduit
, conduit-extra
, data-binary-ieee754
, lens
, lens-aeson
, monad-loops
, resourcet
, stdenv
, template-haskell
, text
, time
, yaml
}:
mkDerivation {

pname = "sbp";
version = "2.3.16";
sha256 = "e3b9aec3bd3caeece563cce902862ceac9f50f55131a7ccb7591fe75882d1155";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
array
base
base64-bytestring
basic-prelude
binary
bytestring
data-binary-ieee754
lens
lens-aeson
monad-loops
template-haskell
text
];
executableHaskellDepends = [
aeson
base
basic-prelude
binary-conduit
bytestring
conduit
conduit-extra
resourcet
time
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/swift-nav/libsbp";
description = "SwiftNav's SBP Library";
license = stdenv.lib.licenses.lgpl3;

}) {};
"sbv" = callPackage
({
  mkDerivation
, array
, async
, base
, containers
, crackNum
, data-binary-ieee754
, deepseq
, directory
, filepath
, generic-deriving
, ghc
, mtl
, pretty
, process
, QuickCheck
, random
, stdenv
, syb
, template-haskell
, time
}:
mkDerivation {

pname = "sbv";
version = "7.5";
sha256 = "3312a65c3bffef57d9ab3903f7e78f09c81f549e3f890936298d62f0f1caadb0";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
array
async
base
containers
crackNum
data-binary-ieee754
deepseq
directory
filepath
generic-deriving
ghc
mtl
pretty
process
QuickCheck
random
syb
template-haskell
time
];
doHaddock = false;
doCheck = false;
homepage = "http://leventerkok.github.com/sbv/";
description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
license = stdenv.lib.licenses.bsd3;

}) {};
"scalendar" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, text
, time
}:
mkDerivation {

pname = "scalendar";
version = "1.2.0";
sha256 = "f5c85e8da39e7eb22068032c4c5c32751ebbed61d0ee9679cadac904dde163ac";
libraryHaskellDepends = [
base
containers
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/scalendar";
description = "A library for handling calendars and resource availability over time";
license = stdenv.lib.licenses.mit;

}) {};
"scalpel" = callPackage
({
  mkDerivation
, base
, bytestring
, curl
, data-default
, scalpel-core
, stdenv
, tagsoup
, text
}:
mkDerivation {

pname = "scalpel";
version = "0.5.1";
sha256 = "20df66433570a2ca754f14058a47fb00519d9a75bb822fc3fd1769a83c608b0d";
libraryHaskellDepends = [
base
bytestring
curl
data-default
scalpel-core
tagsoup
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/scalpel";
description = "A high level web scraping library for Haskell";
license = stdenv.lib.licenses.asl20;

}) {};
"scalpel-core" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default
, fail
, regex-base
, regex-tdfa
, stdenv
, tagsoup
, text
, vector
}:
mkDerivation {

pname = "scalpel-core";
version = "0.5.1";
sha256 = "8c05b86853b737fbed4144dc9c7bbb7743525c305f9529f59776df97bfe229a9";
libraryHaskellDepends = [
base
bytestring
containers
data-default
fail
regex-base
regex-tdfa
tagsoup
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/scalpel";
description = "A high level web scraping library for Haskell";
license = stdenv.lib.licenses.asl20;

}) {};
"scanner" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "scanner";
version = "0.2";
sha256 = "3a020d68a0372a5211c72e55eeb299738ea608d17184bc68f74d31ebe667a5e9";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Yuras/scanner";
description = "Fast non-backtracking incremental combinator parsing for bytestrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"schematic" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, hjsonschema
, mtl
, profunctors
, regex-tdfa
, regex-tdfa-text
, scientific
, singletons
, smallcheck
, stdenv
, tagged
, template-haskell
, text
, union
, unordered-containers
, validationt
, vector
, vinyl
}:
mkDerivation {

pname = "schematic";
version = "0.4.2.0";
sha256 = "c48af3110e8d1f67011230a910abbc9ab445043fb6e8218c9de8c68ab6bdc34c";
libraryHaskellDepends = [
aeson
base
bytestring
containers
hjsonschema
mtl
profunctors
regex-tdfa
regex-tdfa-text
scientific
singletons
smallcheck
tagged
template-haskell
text
union
unordered-containers
validationt
vector
vinyl
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/typeable/schematic";
description = "JSON-biased spec and validation tool";
license = stdenv.lib.licenses.bsd3;

}) {};
"scientific" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, deepseq
, hashable
, integer-gmp
, integer-logarithms
, primitive
, stdenv
, text
}:
mkDerivation {

pname = "scientific";
version = "0.3.6.2";
sha256 = "278d0afc87450254f8a76eab21b5583af63954efc9b74844a17a21a68013140f";
libraryHaskellDepends = [
base
binary
bytestring
containers
deepseq
hashable
integer-gmp
integer-logarithms
primitive
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/scientific";
description = "Numbers represented using scientific notation";
license = stdenv.lib.licenses.bsd3;

}) {};
"scotty" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-builder
, bytestring
, case-insensitive
, data-default-class
, exceptions
, fail
, http-types
, monad-control
, mtl
, nats
, network
, regex-compat
, stdenv
, text
, transformers
, transformers-base
, transformers-compat
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "scotty";
version = "0.11.1";
sha256 = "1cd2452c5bca3ae602525a9f60f38d64542d3638cb56298150e2863d48778df5";
revision = "2";
editedCabalFile = "10h2h1pxndxlfp6hal5p22159cpybdvnhxq13xn2k8q859imylx1";
libraryHaskellDepends = [
aeson
base
blaze-builder
bytestring
case-insensitive
data-default-class
exceptions
fail
http-types
monad-control
mtl
nats
network
regex-compat
text
transformers
transformers-base
transformers-compat
wai
wai-extra
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scotty-web/scotty";
description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
license = stdenv.lib.licenses.bsd3;

}) {};
"scrypt" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, bytestring
, entropy
, stdenv
}:
mkDerivation {

pname = "scrypt";
version = "0.5.0";
sha256 = "3ec0a622393e2a4dbbce4c899602c848d924f8516688491b1162331b7093d9b2";
libraryHaskellDepends = [
base
base64-bytestring
bytestring
entropy
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/informatikr/scrypt";
description = "Stronger password hashing via sequential memory-hard functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"sdl2" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, linear
, SDL2
, StateVar
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "sdl2";
version = "2.4.0.1";
sha256 = "9a898d0acd6d7a4f341b3127d2c44e64b577e1128bc0b4d93a17ac510cb5644d";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
exceptions
linear
StateVar
text
transformers
vector
];
librarySystemDepends = [
SDL2
];
libraryPkgconfigDepends = [
SDL2
];
doHaddock = false;
doCheck = false;
description = "Both high- and low-level bindings to the SDL library (version 2.0.4+).";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) SDL2;};
"sdl2-gfx" = callPackage
({
  mkDerivation
, base
, bytestring
, lifted-base
, linear
, monad-control
, SDL2
, sdl2
, SDL2_gfx
, stdenv
, template-haskell
, text
, transformers
, vector
}:
mkDerivation {

pname = "sdl2-gfx";
version = "0.2";
sha256 = "8c1e10b7a675d782cd650820c75c4ef9225718ad6aaa3f8db02e869b7720c50d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
lifted-base
linear
monad-control
sdl2
template-haskell
text
transformers
vector
];
libraryPkgconfigDepends = [
SDL2
SDL2_gfx
];
executableHaskellDepends = [
base
linear
sdl2
vector
];
doHaddock = false;
doCheck = false;
description = "Bindings to SDL2_gfx";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_gfx;};
"sdl2-image" = callPackage
({
  mkDerivation
, base
, bytestring
, SDL2
, sdl2
, SDL2_image
, stdenv
, template-haskell
, text
, transformers
}:
mkDerivation {

pname = "sdl2-image";
version = "2.0.0";
sha256 = "399742b2b7e64fe4e58c9d8a44ad29b2c355589233535238f8c9b371de6c26df";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
sdl2
template-haskell
text
transformers
];
libraryPkgconfigDepends = [
SDL2
SDL2_image
];
executableHaskellDepends = [
base
sdl2
text
];
doHaddock = false;
doCheck = false;
description = "Bindings to SDL2_image";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_image;};
"sdl2-mixer" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, lifted-base
, monad-control
, sdl2
, SDL2_mixer
, stdenv
, template-haskell
, vector
}:
mkDerivation {

pname = "sdl2-mixer";
version = "1.1.0";
sha256 = "0f4c15a1bda7b265923278641d686756292fc2a8f1c5ced7f98916cc98df0acd";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
data-default-class
lifted-base
monad-control
sdl2
template-haskell
vector
];
librarySystemDepends = [
SDL2_mixer
];
libraryPkgconfigDepends = [
SDL2_mixer
];
doHaddock = false;
doCheck = false;
description = "Bindings to SDL2_mixer";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) SDL2_mixer;};
"sdl2-ttf" = callPackage
({
  mkDerivation
, base
, bytestring
, SDL2
, sdl2
, SDL2_ttf
, stdenv
, template-haskell
, text
, transformers
}:
mkDerivation {

pname = "sdl2-ttf";
version = "2.0.2";
sha256 = "0dc6ca8459c463a06e8a59a4cb2039a9a08bd62a04b59efc035a31554b950ae4";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
sdl2
template-haskell
text
transformers
];
libraryPkgconfigDepends = [
SDL2
SDL2_ttf
];
doHaddock = false;
doCheck = false;
description = "Bindings to SDL2_ttf";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_ttf;};
"search-algorithms" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "search-algorithms";
version = "0.3.0";
sha256 = "4a9d03c97abfd83fae582e4c3425a105b8649b8e69a2c1e170dbbabd8820db10";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/devonhollowood/search-algorithms#readme";
description = "Common graph search algorithms";
license = stdenv.lib.licenses.bsd3;

}) {};
"securemem" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, ghc-prim
, memory
, stdenv
}:
mkDerivation {

pname = "securemem";
version = "0.1.10";
sha256 = "32895a4748508da58207b4867266601af6259b7109af80bbf5d2e9e598e016a6";
libraryHaskellDepends = [
base
byteable
bytestring
ghc-prim
memory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-securemem";
description = "abstraction to an auto scrubbing and const time eq, memory chunk";
license = stdenv.lib.licenses.bsd3;

}) {};
"selda" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, hashable
, mtl
, psqueues
, stdenv
, text
, time
, unordered-containers
}:
mkDerivation {

pname = "selda";
version = "0.1.12.1";
sha256 = "496176292b1ac0f16a033e5a0e431f0e241ff23f5b5644f926c7e213a67500c7";
libraryHaskellDepends = [
base
bytestring
exceptions
hashable
mtl
psqueues
text
time
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://selda.link";
description = "Multi-backend, high-level EDSL for interacting with SQL databases";
license = stdenv.lib.licenses.mit;

}) {};
"selda-postgresql" = callPackage
({
  mkDerivation
, base
, bytestring
, exceptions
, postgresql-libpq
, selda
, stdenv
, text
}:
mkDerivation {

pname = "selda-postgresql";
version = "0.1.7.2";
sha256 = "ff781255b5faa9e9197fd3d298e8e11f81c13a0f01d072c72028003563fee51b";
revision = "1";
editedCabalFile = "08f2xdfpmbwhrwkjaqfmd9k25c3xn3p477d7a1mnnn7kf7328782";
libraryHaskellDepends = [
base
bytestring
exceptions
postgresql-libpq
selda
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/valderman/selda";
description = "PostgreSQL backend for the Selda database EDSL";
license = stdenv.lib.licenses.mit;

}) {};
"selda-sqlite" = callPackage
({
  mkDerivation
, base
, direct-sqlite
, directory
, exceptions
, selda
, stdenv
, text
}:
mkDerivation {

pname = "selda-sqlite";
version = "0.1.6.0";
sha256 = "c67ba89114a82ece42b7e478bcf480ae0241cefb41e2e9b340a268f9f08be390";
revision = "2";
editedCabalFile = "198pg9i0lfx3fwf7b7cw0x5kial6vbf0dqwh18jnh7na3pyn1jr6";
libraryHaskellDepends = [
base
direct-sqlite
directory
exceptions
selda
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/valderman/selda";
description = "SQLite backend for the Selda database EDSL";
license = stdenv.lib.licenses.mit;

}) {};
"semigroupoid-extras" = callPackage
({
  mkDerivation
, base
, profunctors
, semigroupoids
, stdenv
}:
mkDerivation {

pname = "semigroupoid-extras";
version = "5";
sha256 = "102e33b55cc3b15a1b714825a3703f3fc2bb09d8038404af442d35c0ac0c3832";
libraryHaskellDepends = [
base
profunctors
semigroupoids
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/semigroupoid-extras";
description = "Semigroupoids that depend on PolyKinds";
license = stdenv.lib.licenses.bsd3;

}) {};
"semigroupoids" = callPackage
({
  mkDerivation
, base
, base-orphans
, bifunctors
, Cabal
, cabal-doctest
, comonad
, containers
, contravariant
, distributive
, hashable
, semigroups
, stdenv
, tagged
, template-haskell
, transformers
, transformers-compat
, unordered-containers
}:
mkDerivation {

pname = "semigroupoids";
version = "5.2.2";
sha256 = "e4def54834cda65ac1e74e6f12a435410e19c1348e820434a30c491c8937299e";
revision = "3";
editedCabalFile = "1k7iq54rkiqrx5kdcc6mc11agqqcnp1hgrw6c6rl3yjybz1vc5y4";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
base-orphans
bifunctors
comonad
containers
contravariant
distributive
hashable
semigroups
tagged
template-haskell
transformers
transformers-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/semigroupoids";
description = "Semigroupoids: Category sans id";
license = stdenv.lib.licenses.bsd3;

}) {};
"semigroups" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "semigroups";
version = "0.18.4";
sha256 = "589e3042329a6bcffb5c0e85834143586db22eb7a2aae094d492cd004f685d27";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/semigroups/";
description = "Anything that associates";
license = stdenv.lib.licenses.bsd3;

}) {};
"semiring-simple" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "semiring-simple";
version = "1.0.0.1";
sha256 = "c08d1b533f4559fc55119f563a6cf3d74ad7c6f5916c2efe00b50d2a5169fd28";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A module for dealing with semirings";
license = stdenv.lib.licenses.bsd3;

}) {};
"semver" = callPackage
({
  mkDerivation
, attoparsec
, base
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "semver";
version = "0.3.3.1";
sha256 = "36d3369706836d60f3bc517f30c6860734481866363723904b8768823b6bc8b1";
libraryHaskellDepends = [
attoparsec
base
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/semver";
description = "Representation, manipulation, and de/serialisation of Semantic Versions";
license = "unknown";

}) {};
"sendfile" = callPackage
({
  mkDerivation
, base
, bytestring
, network
, stdenv
}:
mkDerivation {

pname = "sendfile";
version = "0.7.9";
sha256 = "102fdf6db8c00f5a5981c6eed5acba1368a2d79b2970ce5b22ceb180aa0fdc42";
libraryHaskellDepends = [
base
bytestring
network
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/stepcut/sendfile";
description = "A portable sendfile library";
license = stdenv.lib.licenses.bsd3;

}) {};
"sensu-run" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, filepath
, http-client
, http-types
, lens
, network
, optparse-applicative
, process
, stdenv
, temporary
, text
, time
, unix
, unix-compat
, vector
, wreq
}:
mkDerivation {

pname = "sensu-run";
version = "0.4.0.5";
sha256 = "c701a52d6a69cdc59931ed32c90dec2b2d97a75c533f47c2099ffd4d5877b756";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
aeson
base
bytestring
filepath
http-client
http-types
lens
network
optparse-applicative
process
temporary
text
time
unix
unix-compat
vector
wreq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/maoe/sensu-run#readme";
description = "A tool to send command execution results to Sensu";
license = stdenv.lib.licenses.bsd3;

}) {};
"seqalign" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, vector
}:
mkDerivation {

pname = "seqalign";
version = "0.2.0.4";
sha256 = "4ea194658d865890157d3df882ed21b0c089cdff7f80ea613ae25c5f3d744305";
libraryHaskellDepends = [
base
bytestring
vector
];
doHaddock = false;
doCheck = false;
description = "Sequence Alignment";
license = stdenv.lib.licenses.bsd3;

}) {};
"seqloc" = callPackage
({
  mkDerivation
, attoparsec
, base
, biocore
, bytestring
, hashable
, stdenv
, unordered-containers
, vector
}:
mkDerivation {

pname = "seqloc";
version = "0.6.1.1";
sha256 = "4435e76ba86417612b6bd6a173dc99444d5fe9184a9822b1edf13c808d4f55c3";
libraryHaskellDepends = [
attoparsec
base
biocore
bytestring
hashable
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
description = "Handle sequence locations for bioinformatics";
license = stdenv.lib.licenses.mit;

}) {};
"sequence" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "sequence";
version = "0.9.8";
sha256 = "50cb62a24e07849f5dbba389ef76f57c656a36a58029e9ef0409aab928f0dd2b";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/atzeus/sequence";
description = "A type class for sequences and various sequence data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"serf" = callPackage
({
  mkDerivation
, attoparsec
, base
, conduit
, conduit-extra
, mtl
, operational
, process
, resourcet
, stdenv
, text
}:
mkDerivation {

pname = "serf";
version = "0.1.1.0";
sha256 = "d6c9c6ddf99a2119c6686732caf9f04ef8e9c4df5519a8bbd4ac7f5531d4c067";
libraryHaskellDepends = [
attoparsec
base
conduit
conduit-extra
mtl
operational
process
resourcet
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/sanetracker/serf";
description = "Interact with Serf via Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"serokell-util" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, base
, base16-bytestring
, base64-bytestring
, bytestring
, clock
, deepseq
, exceptions
, fetchgit
, fmt
, formatting
, hashable
, microlens
, microlens-mtl
, mtl
, o-clock
, parsec
, process
, QuickCheck
, quickcheck-instances
, scientific
, stdenv
, template-haskell
, text
, th-lift-instances
, transformers
, universum
, unordered-containers
, vector
}:
mkDerivation {

pname = "serokell-util";
version = "0.9.0";
src = fetchgit {

url = "https://github.com/input-output-hk/serokell-util.git";
sha256 = "0h4wcvp126w021bc2kglsbfywyvc9z3yf1sh1k4yy1an4ckh51jd";
rev = "4ead9809e119483e7832da5f8224b0c4d4a2d5d6";

};
libraryHaskellDepends = [
aeson
ansi-terminal
base
base16-bytestring
base64-bytestring
bytestring
clock
deepseq
exceptions
fmt
formatting
hashable
microlens
microlens-mtl
mtl
o-clock
parsec
process
QuickCheck
quickcheck-instances
scientific
template-haskell
text
th-lift-instances
transformers
universum
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/serokell/serokell-util";
description = "General-purpose functions by Serokell";
license = stdenv.lib.licenses.mit;

}) {};
"servant" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, bytestring
, Cabal
, cabal-doctest
, case-insensitive
, http-api-data
, http-media
, http-types
, mmorph
, mtl
, natural-transformation
, network-uri
, singleton-bool
, stdenv
, string-conversions
, tagged
, text
, vault
}:
mkDerivation {

pname = "servant";
version = "0.13.0.1";
sha256 = "a74b9448a4f994466e5636e702eca65386a415f581441b8d9cd8870f5bbfde6d";
revision = "1";
editedCabalFile = "0c5j8y6x9andar2zlqr2z4b8j1m3ss5qd4shias4z86mssmfgxp6";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
bytestring
case-insensitive
http-api-data
http-media
http-types
mmorph
mtl
natural-transformation
network-uri
singleton-bool
string-conversions
tagged
text
vault
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "A family of combinators for defining webservices APIs";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-JuicyPixels" = callPackage
({
  mkDerivation
, base
, bytestring
, http-media
, JuicyPixels
, servant
, servant-server
, stdenv
, wai
, warp
}:
mkDerivation {

pname = "servant-JuicyPixels";
version = "0.3.0.3";
sha256 = "60f9c098c1f446338000dad50fb82ff914664d955c1964c09e940da0e81c654d";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
http-media
JuicyPixels
servant
];
executableHaskellDepends = [
base
JuicyPixels
servant
servant-server
wai
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tvh/servant-JuicyPixels";
description = "Servant support for JuicyPixels";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-blaze" = callPackage
({
  mkDerivation
, base
, blaze-html
, http-media
, servant
, stdenv
}:
mkDerivation {

pname = "servant-blaze";
version = "0.8";
sha256 = "46ea88550123d765b2d09073370d0530a51878e7fdf2cf20b070be1f2f10ae94";
revision = "1";
editedCabalFile = "1sw72b1x6diyk13mwxfmv50nix0n2lf7cv55p4n2d4bs7r5388q3";
libraryHaskellDepends = [
base
blaze-html
http-media
servant
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Blaze-html support for servant";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-cassava" = callPackage
({
  mkDerivation
, base
, base-compat
, bytestring
, cassava
, http-media
, servant
, stdenv
, vector
}:
mkDerivation {

pname = "servant-cassava";
version = "0.10";
sha256 = "9b2c5d906f3a4bb2767b2ce91f12a74e24adceadd296220b5d7216c5e1f3560e";
revision = "3";
editedCabalFile = "1asq4w9dbl0ccwqdpvkhbh5fkvwd73iqd09a776ynf0vq3k05kh6";
libraryHaskellDepends = [
base
base-compat
bytestring
cassava
http-media
servant
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Servant CSV content-type for cassava";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-client" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, bytestring
, containers
, exceptions
, http-client
, http-client-tls
, http-media
, http-types
, monad-control
, mtl
, semigroupoids
, servant-client-core
, stdenv
, stm
, text
, time
, transformers
, transformers-base
, transformers-compat
}:
mkDerivation {

pname = "servant-client";
version = "0.13.0.1";
sha256 = "089f36ff31c1093d7a20b807dc4e2855c3ec25fee6a71b02f28b665546d01888";
revision = "2";
editedCabalFile = "1pi7nvgylx4qvzswc31slyr2zj09hgajkac7f6lw66ba3h9rhmd5";
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
bytestring
containers
exceptions
http-client
http-client-tls
http-media
http-types
monad-control
mtl
semigroupoids
servant-client-core
stm
text
time
transformers
transformers-base
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "automatical derivation of querying functions for servant webservices";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-client-core" = callPackage
({
  mkDerivation
, base
, base-compat
, base64-bytestring
, bytestring
, containers
, exceptions
, generics-sop
, http-api-data
, http-media
, http-types
, mtl
, network-uri
, safe
, servant
, stdenv
, text
}:
mkDerivation {

pname = "servant-client-core";
version = "0.13.0.1";
sha256 = "e0e8b6acbb37eed0a5ee1e289e32ef58c60098f77dd49cbc92df0295cba2253b";
libraryHaskellDepends = [
base
base-compat
base64-bytestring
bytestring
containers
exceptions
generics-sop
http-api-data
http-media
http-types
mtl
network-uri
safe
servant
text
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Core functionality and class for client function generation for servant APIs";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-docs" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, base-compat
, bytestring
, case-insensitive
, control-monad-omega
, hashable
, http-media
, http-types
, lens
, servant
, stdenv
, string-conversions
, text
, unordered-containers
}:
mkDerivation {

pname = "servant-docs";
version = "0.11.2";
sha256 = "6b280a8d97d295933f5b4a5442b0c54567299bcc8dd62b7c2890864af7ddd4f4";
revision = "4";
editedCabalFile = "0fflpj4miwpq5w6xm26678jvhibxzjri53680v8kwm9y92l6h9ga";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-pretty
base
base-compat
bytestring
case-insensitive
control-monad-omega
hashable
http-media
http-types
lens
servant
string-conversions
text
unordered-containers
];
executableHaskellDepends = [
aeson
base
lens
servant
string-conversions
text
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "generate API docs for your servant webservice";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-elm" = callPackage
({
  mkDerivation
, base
, elm-export
, lens
, servant
, servant-foreign
, stdenv
, text
, wl-pprint-text
}:
mkDerivation {

pname = "servant-elm";
version = "0.4.0.1";
sha256 = "69b3a5dcbb680fc1e923d76afa8255987d4613e0d4387eb493de071c9842ffc5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
elm-export
lens
servant
servant-foreign
text
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mattjbray/servant-elm#readme";
description = "Automatically derive Elm functions to query servant webservices";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-exceptions" = callPackage
({
  mkDerivation
, aeson
, base
, exceptions
, http-media
, http-types
, mtl
, servant
, servant-server
, stdenv
, text
, wai
, warp
}:
mkDerivation {

pname = "servant-exceptions";
version = "0.1.1";
sha256 = "652b9fdc463200ebb8c2b2e0757f9d90662408bf45a657b3f719d0a36d34abe1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
exceptions
http-media
http-types
mtl
servant
servant-server
text
wai
];
executableHaskellDepends = [
aeson
base
exceptions
http-types
servant-server
text
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ch1bo/servant-exceptions#readme";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-foreign" = callPackage
({
  mkDerivation
, base
, base-compat
, http-types
, lens
, servant
, stdenv
, text
}:
mkDerivation {

pname = "servant-foreign";
version = "0.11.1";
sha256 = "659cb1033b022869bb5b725cfbb82c02ab0424ca9130e4aeb2fb6bb2d0489805";
revision = "2";
editedCabalFile = "19g405wqhhadyb70sgkm5ddprp9qb84pphszp3fzq2r4h5n2pc2i";
libraryHaskellDepends = [
base
base-compat
http-types
lens
servant
text
];
doHaddock = false;
doCheck = false;
description = "Helpers for generating clients for servant APIs in any programming language";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-generic" = callPackage
({
  mkDerivation
, base
, servant
, servant-server
, stdenv
}:
mkDerivation {

pname = "servant-generic";
version = "0.1.0.1";
sha256 = "2ef213c2f72eb5d1c3da06f5b8e7537128ea96fe54bb086d5ade91ce872cfcfd";
libraryHaskellDepends = [
base
servant
servant-server
];
doHaddock = false;
doCheck = false;
description = "Specify Servant APIs with records";
license = stdenv.lib.licenses.mit;

}) {};
"servant-github-webhook" = callPackage
({
  mkDerivation
, aeson
, base
, base16-bytestring
, bytestring
, cryptonite
, github
, github-webhooks
, http-types
, memory
, servant
, servant-server
, stdenv
, string-conversions
, text
, transformers
, unordered-containers
, wai
}:
mkDerivation {

pname = "servant-github-webhook";
version = "0.4.1.0";
sha256 = "8bbe9bfe7b7f256fd3e40bcbf36ab9a11ba68aadacac85f5e8a850c8f569cf6c";
libraryHaskellDepends = [
aeson
base
base16-bytestring
bytestring
cryptonite
github
github-webhooks
http-types
memory
servant
servant-server
string-conversions
text
transformers
unordered-containers
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tsani/servant-github-webhook";
description = "Servant combinators to facilitate writing GitHub webhooks";
license = stdenv.lib.licenses.mit;

}) {};
"servant-js" = callPackage
({
  mkDerivation
, base
, base-compat
, charset
, lens
, servant
, servant-foreign
, stdenv
, text
}:
mkDerivation {

pname = "servant-js";
version = "0.9.3.2";
sha256 = "02e0ec27a44a1e5794aacfbf745a815a68854d077e7d056d3e2f17d4812867dc";
revision = "2";
editedCabalFile = "1mz21yf77nzfb30hlqncyx3jwr50ab7qh0m0cv8pds6s76s6k9sj";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
charset
lens
servant
servant-foreign
text
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Automatically derive javascript functions to query servant webservices";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-kotlin" = callPackage
({
  mkDerivation
, base
, containers
, directory
, formatting
, lens
, servant
, servant-foreign
, stdenv
, text
, time
, wl-pprint-text
}:
mkDerivation {

pname = "servant-kotlin";
version = "0.1.1.1";
sha256 = "3e0f85859dc1da4bbeb81974984beecb744fa1c76d355fd7a3b45832e135edea";
libraryHaskellDepends = [
base
containers
directory
formatting
lens
servant
servant-foreign
text
time
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/matsubara0507/servant-kotlin#readme";
description = "Automatically derive Kotlin class to query servant webservices";
license = stdenv.lib.licenses.mit;

}) {};
"servant-lucid" = callPackage
({
  mkDerivation
, base
, http-media
, lucid
, servant
, stdenv
}:
mkDerivation {

pname = "servant-lucid";
version = "0.8";
sha256 = "25bae7330fd3e089553e12a006930c65e46f5b6b9d98b6d9a0e29850ac81706e";
libraryHaskellDepends = [
base
http-media
lucid
servant
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Servant support for lucid";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-mock" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, bytestring
, http-types
, QuickCheck
, servant
, servant-server
, stdenv
, transformers
, wai
, warp
}:
mkDerivation {

pname = "servant-mock";
version = "0.8.4";
sha256 = "d9d6392461f57324208e3a227c88e81da35686a38d5d1f783afc673a0c77059c";
revision = "2";
editedCabalFile = "0brnvssfcg105kkkj646wih8apnhd5gvy25c576i93x0nxb0n39j";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
base-compat
bytestring
http-types
QuickCheck
servant
servant-server
transformers
wai
];
executableHaskellDepends = [
aeson
base
QuickCheck
servant-server
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "Derive a mock server for free from your servant API types";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-multipart" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, http-client
, http-media
, lens
, network
, resourcet
, servant
, servant-docs
, servant-server
, stdenv
, text
, transformers
, wai
, wai-extra
, warp
}:
mkDerivation {

pname = "servant-multipart";
version = "0.11.2";
sha256 = "dd16ed21afbac839d0057efaa2fd43e24b07a3d9ef0a1bebf97a5041967aa870";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
directory
http-media
lens
resourcet
servant
servant-docs
servant-server
text
transformers
wai
wai-extra
];
executableHaskellDepends = [
base
bytestring
http-client
network
servant
servant-server
text
transformers
wai
warp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-servant/servant-multipart#readme";
description = "multipart/form-data (e.g file upload) support for servant";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-pandoc" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, http-media
, lens
, pandoc-types
, servant-docs
, stdenv
, string-conversions
, text
, unordered-containers
}:
mkDerivation {

pname = "servant-pandoc";
version = "0.5.0.0";
sha256 = "12d709fced47bb3e017b83dcc5dafb1186720e5318c1b5ebeb886d4439540463";
libraryHaskellDepends = [
base
bytestring
case-insensitive
http-media
lens
pandoc-types
servant-docs
string-conversions
text
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Use Pandoc to render servant API documentation";
license = stdenv.lib.licenses.mit;

}) {};
"servant-purescript" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, filepath
, http-types
, lens
, mainland-pretty
, purescript-bridge
, servant
, servant-foreign
, servant-server
, servant-subscriber
, stdenv
, text
}:
mkDerivation {

pname = "servant-purescript";
version = "0.9.0.2";
sha256 = "f72839cd6b956b6b2ac2adfd2da237ffee63180c43281e3b109e59925526b2ab";
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
filepath
http-types
lens
mainland-pretty
purescript-bridge
servant
servant-foreign
servant-server
servant-subscriber
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/eskimor/servant-purescript#readme";
description = "Generate PureScript accessor functions for you servant API";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-quickcheck" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, bytestring
, case-insensitive
, clock
, data-default-class
, fetchgit
, hspec
, http-client
, http-media
, http-types
, mtl
, pretty
, process
, QuickCheck
, servant
, servant-client
, servant-server
, split
, stdenv
, string-conversions
, temporary
, text
, time
, warp
}:
mkDerivation {

pname = "servant-quickcheck";
version = "0.0.7.0";
src = fetchgit {

url = "https://github.com/avieth/servant-quickcheck.git";
sha256 = "1rq493iz8asavjwxfi7vnkrvbxwsnxy1j8w5b3slcg8l7g8ikz6z";
rev = "e4e879abca99d0d56015765859fb37af59a81dbb";

};
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
case-insensitive
clock
data-default-class
hspec
http-client
http-media
http-types
mtl
pretty
process
QuickCheck
servant
servant-client
servant-server
split
string-conversions
temporary
text
time
warp
];
doHaddock = false;
doCheck = false;
description = "QuickCheck entire APIs";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-ruby" = callPackage
({
  mkDerivation
, base
, casing
, lens
, servant-foreign
, stdenv
, text
}:
mkDerivation {

pname = "servant-ruby";
version = "0.7.0.0";
sha256 = "a95a15974fa91850ac938f65f7497927037b54307f2f34daf38b6a5c758f6964";
libraryHaskellDepends = [
base
casing
lens
servant-foreign
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joneshf/servant-ruby#readme";
description = "Generate a Ruby client from a Servant API with Net::HTTP";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-server" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base-compat
, base64-bytestring
, bytestring
, Cabal
, cabal-doctest
, containers
, exceptions
, filepath
, http-api-data
, http-media
, http-types
, monad-control
, mtl
, network
, network-uri
, resourcet
, safe
, servant
, split
, stdenv
, string-conversions
, system-filepath
, tagged
, text
, transformers
, transformers-base
, transformers-compat
, wai
, wai-app-static
, warp
, word8
}:
mkDerivation {

pname = "servant-server";
version = "0.13.0.1";
sha256 = "352b724274cbdfee8d8e7b340920eecf9197d5f6c454bb5137099b263e6eef39";
revision = "2";
editedCabalFile = "16bllcaqpcj6i53vl1sas1f6m85i6ah7qcn5mh8x515qmfzngisp";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
aeson
attoparsec
base
base-compat
base64-bytestring
bytestring
containers
exceptions
filepath
http-api-data
http-media
http-types
monad-control
mtl
network
network-uri
resourcet
safe
servant
split
string-conversions
system-filepath
tagged
text
transformers
transformers-base
transformers-compat
wai
wai-app-static
warp
word8
];
executableHaskellDepends = [
aeson
base
servant
text
wai
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell-servant.readthedocs.org/";
description = "A family of combinators for defining webservices APIs and serving them";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-static-th" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, containers
, directory
, filepath
, http-media
, semigroups
, servant
, servant-blaze
, servant-server
, stdenv
, template-haskell
, text
}:
mkDerivation {

pname = "servant-static-th";
version = "0.2.0.1";
sha256 = "748c654130ac32124303bd111d80d5bf88873b9bb46a53da1c86462611d4e3da";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-html
bytestring
containers
directory
filepath
http-media
semigroups
servant
servant-blaze
servant-server
template-haskell
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/servant-static-th";
description = "Embed a directory of static files in your Servant server";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-subscriber" = callPackage
({
  mkDerivation
, aeson
, async
, attoparsec
, base
, blaze-builder
, bytestring
, case-insensitive
, containers
, directory
, filepath
, http-types
, lens
, lifted-base
, monad-control
, monad-logger
, network-uri
, purescript-bridge
, servant
, servant-foreign
, servant-server
, stdenv
, stm
, text
, time
, transformers
, wai
, wai-websockets
, warp
, websockets
}:
mkDerivation {

pname = "servant-subscriber";
version = "0.6.0.1";
sha256 = "3da1856b47c03ffa1d1c107267e7f18ef5207e6bb2d104788f60b14f01ac7839";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
attoparsec
base
blaze-builder
bytestring
case-insensitive
containers
directory
filepath
http-types
lens
lifted-base
monad-control
monad-logger
network-uri
servant
servant-foreign
servant-server
stm
text
time
transformers
wai
wai-websockets
warp
websockets
];
executableHaskellDepends = [
base
purescript-bridge
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/eskimor/servant-subscriber#readme";
description = "When REST is not enough ...";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-swagger" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, Cabal
, cabal-doctest
, hspec
, http-media
, insert-ordered-containers
, lens
, QuickCheck
, servant
, singleton-bool
, stdenv
, swagger2
, text
, unordered-containers
}:
mkDerivation {

pname = "servant-swagger";
version = "1.1.5";
sha256 = "4f7a442bccf2df8a9980129d83bbcd3e73cfec374919ecb8389709c5df0ca50a";
revision = "3";
editedCabalFile = "0bjsaqrf3pjiv247mvrybwrsaklh23npwrycvmm8f2y1hraadv8d";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
aeson
base
bytestring
hspec
http-media
insert-ordered-containers
lens
QuickCheck
servant
singleton-bool
swagger2
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-servant/servant-swagger";
description = "Generate Swagger specification for your servant API";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-swagger-ui" = callPackage
({
  mkDerivation
, base
, blaze-markup
, bytestring
, directory
, file-embed
, filepath
, http-media
, servant
, servant-blaze
, servant-server
, servant-swagger
, stdenv
, swagger2
, template-haskell
, text
, transformers
, transformers-compat
, wai-app-static
}:
mkDerivation {

pname = "servant-swagger-ui";
version = "0.2.5.3.9.1";
sha256 = "35017aa0efaa90240fac68d147c35069905eb821567da53bb4b627f829b47fb9";
revision = "1";
editedCabalFile = "16lixcz9vkkgvcfwdfj3p6pmf458hymyywklzwnbhk7z16wjjhnv";
libraryHaskellDepends = [
base
blaze-markup
bytestring
directory
file-embed
filepath
http-media
servant
servant-blaze
servant-server
servant-swagger
swagger2
template-haskell
text
transformers
transformers-compat
wai-app-static
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/servant-swagger-ui#readme";
description = "Servant swagger ui";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-websockets" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, conduit
, exceptions
, resourcet
, servant-server
, stdenv
, text
, wai
, wai-websockets
, warp
, websockets
}:
mkDerivation {

pname = "servant-websockets";
version = "1.1.0";
sha256 = "63384c89db83bd03e00f2f6796c391fc133ffb3c2bc72976778d476ed82f0a51";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
base
bytestring
conduit
exceptions
resourcet
servant-server
text
wai
wai-websockets
warp
websockets
];
executableHaskellDepends = [
aeson
base
conduit
servant-server
text
wai
warp
websockets
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/moesenle/servant-websockets#readme";
description = "Small library providing WebSocket endpoints for servant";
license = stdenv.lib.licenses.bsd3;

}) {};
"servant-yaml" = callPackage
({
  mkDerivation
, base
, bytestring
, http-media
, servant
, stdenv
, yaml
}:
mkDerivation {

pname = "servant-yaml";
version = "0.1.0.0";
sha256 = "c917d9b046b06a9c4386f743a78142c27cf7f0ec1ad8562770ab9828f2ee3204";
revision = "20";
editedCabalFile = "0g13cchj5wnjpypsj9fgwk4ypy8xzzwrpry2f9zlsyp0lvkqjqrw";
libraryHaskellDepends = [
base
bytestring
http-media
servant
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/servant-yaml#readme";
description = "Servant support for yaml";
license = stdenv.lib.licenses.bsd3;

}) {};
"serversession" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, data-default
, hashable
, nonce
, path-pieces
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "serversession";
version = "1.0.1";
sha256 = "3ffbefd87017e8d46fbbe380f59e24672aa9c06b999da5f9ae0b052094d94822";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
data-default
hashable
nonce
path-pieces
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "Secure, modular server-side sessions";
license = stdenv.lib.licenses.mit;

}) {};
"serversession-backend-persistent" = callPackage
({
  mkDerivation
, aeson
, base
, base64-bytestring
, bytestring
, cereal
, path-pieces
, persistent
, serversession
, stdenv
, tagged
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "serversession-backend-persistent";
version = "1.0.4";
sha256 = "c7f2d6fe08d13269ed4834ccf186926dc6c3815011bc456e77ce481fb6eb971c";
libraryHaskellDepends = [
aeson
base
base64-bytestring
bytestring
cereal
path-pieces
persistent
serversession
tagged
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "Storage backend for serversession using persistent and an RDBMS";
license = stdenv.lib.licenses.mit;

}) {};
"serversession-backend-redis" = callPackage
({
  mkDerivation
, base
, bytestring
, hedis
, path-pieces
, serversession
, stdenv
, tagged
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "serversession-backend-redis";
version = "1.0.3";
sha256 = "ce4b0a3741da3842fe4b5008b51894251ac59b3530babd5ce58b915ec2543615";
libraryHaskellDepends = [
base
bytestring
hedis
path-pieces
serversession
tagged
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "Storage backend for serversession using Redis";
license = stdenv.lib.licenses.mit;

}) {};
"serversession-frontend-wai" = callPackage
({
  mkDerivation
, base
, bytestring
, cookie
, data-default
, path-pieces
, serversession
, stdenv
, text
, time
, transformers
, unordered-containers
, vault
, wai
, wai-session
}:
mkDerivation {

pname = "serversession-frontend-wai";
version = "1.0";
sha256 = "0b48130e3d3915dc46ec2392984e7862d066f6ddd454127a98b0c21c2574b167";
libraryHaskellDepends = [
base
bytestring
cookie
data-default
path-pieces
serversession
text
time
transformers
unordered-containers
vault
wai
wai-session
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/serversession";
description = "wai-session bindings for serversession";
license = stdenv.lib.licenses.mit;

}) {};
"servius" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-html
, bytestring
, http-types
, markdown
, shakespeare
, stdenv
, text
, wai
, wai-app-static
}:
mkDerivation {

pname = "servius";
version = "1.2.0.3";
sha256 = "47621f01e55cf4e69aeea80104a8a99e87c3a9ad13a5f144da7acd38370563f0";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
blaze-builder
blaze-html
bytestring
http-types
markdown
shakespeare
text
wai
wai-app-static
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/servius#readme";
description = "Warp web server with template rendering";
license = stdenv.lib.licenses.mit;

}) {};
"ses-html" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-html
, byteable
, bytestring
, cryptohash
, HsOpenSSL
, http-streams
, stdenv
, tagsoup
, time
}:
mkDerivation {

pname = "ses-html";
version = "0.4.0.0";
sha256 = "cff76ee03b538e69a3d107cd63d577210cf0f9879d470bf55519e887e2a8a08f";
libraryHaskellDepends = [
base
base64-bytestring
blaze-html
byteable
bytestring
cryptohash
HsOpenSSL
http-streams
tagsoup
time
];
doHaddock = false;
doCheck = false;
description = "Send HTML formatted emails using Amazon's SES REST API with blaze";
license = stdenv.lib.licenses.bsd3;

}) {};
"set-cover" = callPackage
({
  mkDerivation
, base
, containers
, enummapset
, psqueues
, semigroups
, stdenv
, utility-ht
}:
mkDerivation {

pname = "set-cover";
version = "0.0.9";
sha256 = "afebfd20c00ff68cd99c7e457d15542003228a56d98af63565549a77852f73e1";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
enummapset
psqueues
semigroups
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/set-cover/";
description = "Solve exact set cover problems like Sudoku, 8 Queens, Soma Cube, Tetris Cube";
license = stdenv.lib.licenses.bsd3;

}) {};
"set-monad" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "set-monad";
version = "0.2.0.0";
sha256 = "eb2b4312c4a71024ea1c85683065c1052b0065b7d96df68cd1c4390c1ab2afdb";
libraryHaskellDepends = [
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
description = "Set monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"setenv" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "setenv";
version = "0.1.1.3";
sha256 = "e358df39afc03d5a39e2ec650652d845c85c80cc98fe331654deafb4767ecb32";
revision = "1";
editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
description = "A cross-platform library for setting environment variables";
license = stdenv.lib.licenses.mit;

}) {};
"setlocale" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "setlocale";
version = "1.0.0.6";
sha256 = "587af63153c1f3642de2c2f526b3a3c82c46ece3bd09ffd96a0eedbfd1c288e6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/IchUndNichtDu/haskell-setlocale";
description = "Haskell bindings to setlocale";
license = stdenv.lib.licenses.bsd3;

}) {};
"sets" = callPackage
({
  mkDerivation
, base
, commutative
, composition
, containers
, contravariant
, hashable
, keys
, mtl
, QuickCheck
, semigroupoids
, semigroups
, stdenv
, transformers
, transformers-base
, unordered-containers
, witherable
}:
mkDerivation {

pname = "sets";
version = "0.0.5.2";
sha256 = "be20d5b7b4a5770b7089879f3ef7226c485f4d5bb17e87f979f3bb6475e48713";
libraryHaskellDepends = [
base
commutative
composition
containers
contravariant
hashable
keys
mtl
QuickCheck
semigroupoids
semigroups
transformers
transformers-base
unordered-containers
witherable
];
doHaddock = false;
doCheck = false;
description = "Ducktyped set interface for Haskell containers";
license = stdenv.lib.licenses.mit;

}) {};
"shake" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, directory
, extra
, filepath
, hashable
, js-flot
, js-jquery
, primitive
, process
, random
, stdenv
, time
, transformers
, unix
, unordered-containers
, utf8-string
}:
mkDerivation {

pname = "shake";
version = "0.16.4";
sha256 = "b732a3a46ceb3b4545a78c3733e0a7904763e7cd3ee8bf4fe2e1e91f2c9b1436";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
binary
bytestring
deepseq
directory
extra
filepath
hashable
js-flot
js-jquery
primitive
process
random
time
transformers
unix
unordered-containers
utf8-string
];
executableHaskellDepends = [
base
binary
bytestring
deepseq
directory
extra
filepath
hashable
js-flot
js-jquery
primitive
process
random
time
transformers
unix
unordered-containers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://shakebuild.com";
description = "Build system library, like Make, but more accurate dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"shake-language-c" = callPackage
({
  mkDerivation
, base
, data-default-class
, fclabels
, process
, shake
, split
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "shake-language-c";
version = "0.11.0";
sha256 = "2174ad269b5fc3bb09054b0289697ce052b1cd3fc3393f6ad00181f1870f931d";
libraryHaskellDepends = [
base
data-default-class
fclabels
process
shake
split
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/samplecount/shake-language-c";
description = "Utilities for cross-compiling with Shake";
license = stdenv.lib.licenses.asl20;

}) {};
"shakespeare" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, blaze-markup
, bytestring
, containers
, directory
, exceptions
, ghc-prim
, parsec
, process
, scientific
, stdenv
, template-haskell
, text
, time
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "shakespeare";
version = "2.0.15";
sha256 = "4354c6eebbfa89103c8090aae3bc7be5fceae6a0e327acf8adc4f3fd535864ee";
libraryHaskellDepends = [
aeson
base
blaze-html
blaze-markup
bytestring
containers
directory
exceptions
ghc-prim
parsec
process
scientific
template-haskell
text
time
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/shakespearean-templates";
description = "A toolkit for making compile-time interpolated templates";
license = stdenv.lib.licenses.mit;

}) {};
"shelltestrunner" = callPackage
({
  mkDerivation
, base
, cmdargs
, Diff
, directory
, filemanip
, filepath
, HUnit
, parsec
, pretty-show
, process
, regex-tdfa
, safe
, stdenv
, test-framework
, test-framework-hunit
, utf8-string
}:
mkDerivation {

pname = "shelltestrunner";
version = "1.9";
sha256 = "cbc4358d447e32babe4572cda0d530c648cc4c67805f9f88002999c717feb3a8";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
cmdargs
Diff
directory
filemanip
filepath
HUnit
parsec
pretty-show
process
regex-tdfa
safe
test-framework
test-framework-hunit
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/simonmichael/shelltestrunner";
description = "Easy, repeatable testing of CLI programs/commands";
license = "GPL";

}) {};
"shelly" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, containers
, directory
, enclosed-exceptions
, exceptions
, lifted-async
, lifted-base
, monad-control
, mtl
, process
, stdenv
, system-fileio
, system-filepath
, text
, time
, transformers
, transformers-base
, unix-compat
}:
mkDerivation {

pname = "shelly";
version = "1.7.2";
sha256 = "7662c746888a71f785fe00dde6940aeacdec6af700aec567493a99d8e31ef111";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
bytestring
containers
directory
enclosed-exceptions
exceptions
lifted-async
lifted-base
monad-control
mtl
process
system-fileio
system-filepath
text
time
transformers
transformers-base
unix-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/Shelly.hs";
description = "shell-like (systems) programming in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"shikensu" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, directory
, filepath
, flow
, Glob
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "shikensu";
version = "0.3.8";
sha256 = "9043593a661b738752686e5d8c1e39db22104832b647ea67d212a91a380d516a";
libraryHaskellDepends = [
aeson
base
bytestring
directory
filepath
flow
Glob
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/icidasset/shikensu#readme";
description = "Run a sequence of functions on in-memory representations of files";
license = stdenv.lib.licenses.mit;

}) {};
"shortcut-links" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "shortcut-links";
version = "0.4.2.0";
sha256 = "1e6b75c5e94fddf9e2e665821ac70f5083e5d40d1fd55813e94943ce02335027";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/aelve/shortcut-links";
description = "Link shortcuts for use in text markup";
license = stdenv.lib.licenses.bsd3;

}) {};
"should-not-typecheck" = callPackage
({
  mkDerivation
, base
, deepseq
, HUnit
, stdenv
}:
mkDerivation {

pname = "should-not-typecheck";
version = "2.1.0";
sha256 = "f538ac70ce07679bc2e6c1651db82a86866664ab995665fdc78e6cb12bd8d591";
libraryHaskellDepends = [
base
deepseq
HUnit
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/CRogers/should-not-typecheck";
description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
license = stdenv.lib.licenses.bsd3;

}) {};
"show-combinators" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "show-combinators";
version = "0.1.0.0";
sha256 = "22c45747c79055b5310c1da2af717bffded65ea39479c61783f8c1a22e953086";
revision = "1";
editedCabalFile = "09zd78jap17ralla3833gwv6bwmh93bpjgdshkyf7j06xg2c1mq8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Lysxia/show-combinators#readme";
description = "Combinators to write Show instances";
license = stdenv.lib.licenses.mit;

}) {};
"show-prettyprint" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, prettyprinter
, stdenv
, trifecta
}:
mkDerivation {

pname = "show-prettyprint";
version = "0.2.0.2";
sha256 = "6f0623aeab81e6c369400ac19d9b7afc0a3fd8e390148d4db53920603154d3ea";
libraryHaskellDepends = [
ansi-wl-pprint
base
prettyprinter
trifecta
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/quchen/show-prettyprint#readme";
description = "Robust prettyprinter for output of auto-generated Show instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"signal" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "signal";
version = "0.1.0.4";
sha256 = "c4bfdd92b75347e02759c1a7d75963fbc7052e948ec96e25299ca5262e5d76e5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
unix
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pmlodawski/signal";
description = "Multiplatform signal support for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"silently" = callPackage
({
  mkDerivation
, base
, deepseq
, directory
, stdenv
}:
mkDerivation {

pname = "silently";
version = "1.2.5";
sha256 = "cef625635053a46032ca53b43d311921875a437910b6568ded17027fdca83839";
libraryHaskellDepends = [
base
deepseq
directory
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hspec/silently";
description = "Prevent or capture writing to stdout and other handles";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, cmdargs
, directory
, filepath
, http-types
, mime-types
, monad-control
, mtl
, process
, setenv
, simple-templates
, stdenv
, text
, transformers
, transformers-base
, unordered-containers
, vector
, wai
, wai-extra
}:
mkDerivation {

pname = "simple";
version = "0.11.2";
sha256 = "ef53672eded47626cd125dc0759628fcfead2f2e271a0cae1092d4ff244e0614";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
base64-bytestring
blaze-builder
bytestring
directory
filepath
http-types
mime-types
monad-control
mtl
simple-templates
text
transformers
transformers-base
unordered-containers
vector
wai
wai-extra
];
executableHaskellDepends = [
aeson
attoparsec
base
bytestring
cmdargs
directory
filepath
process
setenv
simple-templates
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://simple.cx";
description = "A minimalist web framework for the WAI server interface";
license = stdenv.lib.licenses.lgpl3;

}) {};
"simple-log" = callPackage
({
  mkDerivation
, async
, base
, base-unicode-symbols
, containers
, data-default
, deepseq
, directory
, exceptions
, filepath
, hformat
, microlens
, microlens-platform
, mmorph
, mtl
, SafeSemaphore
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "simple-log";
version = "0.9.5";
sha256 = "669c6b79f2e09bf5bdf609263052f3b9c82ac6995fdb9988d3adbb2a98b65510";
libraryHaskellDepends = [
async
base
base-unicode-symbols
containers
data-default
deepseq
directory
exceptions
filepath
hformat
microlens
microlens-platform
mmorph
mtl
SafeSemaphore
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mvoidex/simple-log";
description = "Simple log for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-reflect" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "simple-reflect";
version = "0.3.3";
sha256 = "07825ea04c135298008cf080133e3bfc8e04cbacd24719c46ac6a2ca4acfdb2b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
description = "Simple reflection of expressions containing variables";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-sendfile" = callPackage
({
  mkDerivation
, base
, bytestring
, network
, stdenv
, unix
}:
mkDerivation {

pname = "simple-sendfile";
version = "0.2.27";
sha256 = "f68572592099a2db3f7212ac7d133447ae5bbb2605285d3de1a29a52d9c79caf";
libraryHaskellDepends = [
base
bytestring
network
unix
];
doHaddock = false;
doCheck = false;
description = "Cross platform library for the sendfile system call";
license = stdenv.lib.licenses.bsd3;

}) {};
"simple-session" = callPackage
({
  mkDerivation
, base
, base64-bytestring
, blaze-builder
, byteable
, bytestring
, containers
, cookie
, cryptohash
, http-types
, simple
, stdenv
, transformers
, wai
, wai-extra
}:
mkDerivation {

pname = "simple-session";
version = "0.10.1.1";
sha256 = "8a9c9cb7a80080b6440a80549919d3cee3409af6c516b3d10d1392708b48e7c1";
libraryHaskellDepends = [
base
base64-bytestring
blaze-builder
byteable
bytestring
containers
cookie
cryptohash
http-types
simple
transformers
wai
wai-extra
];
doHaddock = false;
doCheck = false;
homepage = "http://simple.cx";
description = "Cookie-based session management for the Simple web framework";
license = stdenv.lib.licenses.lgpl3;

}) {};
"simple-templates" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, scientific
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "simple-templates";
version = "0.8.0.1";
sha256 = "28e10f916320bb5097d9ed323a1726d88d17a51b0ac0290a91806d97840bca8e";
libraryHaskellDepends = [
aeson
attoparsec
base
scientific
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://simple.cx";
description = "A basic template language for the Simple web framework";
license = stdenv.lib.licenses.lgpl3;

}) {};
"singleton-bool" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "singleton-bool";
version = "0.1.4";
sha256 = "0195c6e2be1e149e5b687ec3be84fd5089b377345fddd333a9d681eacdfafb2a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/singleton-bool#readme";
description = "Type level booleans";
license = stdenv.lib.licenses.bsd3;

}) {};
"singleton-nats" = callPackage
({
  mkDerivation
, base
, singletons
, stdenv
}:
mkDerivation {

pname = "singleton-nats";
version = "0.4.1";
sha256 = "5a5328dd7b33bebbb90d19ef5db273798603da7194ddfc790ee397011f3e68b9";
libraryHaskellDepends = [
base
singletons
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AndrasKovacs/singleton-nats";
description = "Unary natural numbers relying on the singletons infrastructure";
license = stdenv.lib.licenses.bsd3;

}) {};
"singletons" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, syb
, template-haskell
, text
, th-desugar
}:
mkDerivation {

pname = "singletons";
version = "2.3.1";
sha256 = "ca8de4df85d50e9363b3f1715a23c9456d2a57e5e145343693714cecc4afaec4";
libraryHaskellDepends = [
base
containers
mtl
syb
template-haskell
text
th-desugar
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/goldfirere/singletons";
description = "A framework for generating singleton types";
license = stdenv.lib.licenses.bsd3;

}) {};
"siphash" = callPackage
({
  mkDerivation
, base
, bytestring
, cpu
, stdenv
}:
mkDerivation {

pname = "siphash";
version = "1.0.3";
sha256 = "cf81ce41c6ca40c4fec9add5dcebc161cb2d31f522f9ad727df23d30ac6a05f3";
revision = "1";
editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cpu
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-siphash";
description = "siphash: a fast short input PRF";
license = stdenv.lib.licenses.bsd3;

}) {};
"skein" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, crypto-api
, stdenv
, tagged
}:
mkDerivation {

pname = "skein";
version = "1.0.9.4";
sha256 = "f882ca0cc5ed336ef898fb3c89579e392900259296b2320edf968b9fc16cb8c9";
libraryHaskellDepends = [
base
bytestring
cereal
crypto-api
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/meteficha/skein";
description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
license = stdenv.lib.licenses.bsd3;

}) {};
"skeletons" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, containers
, directory
, filepath
, stdenv
, text
, tinytemplate
, transformers
, transformers-compat
}:
mkDerivation {

pname = "skeletons";
version = "0.4.0";
sha256 = "3dd5045d09131434a794b9452980b4a54da4312d2e1116ac455bbc9bdf6fbcc6";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
ansi-wl-pprint
base
containers
directory
filepath
text
tinytemplate
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jb55/skeletons";
description = "Manage project skeletons";
license = stdenv.lib.licenses.mit;

}) {};
"skylighting" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, attoparsec
, base
, base64-bytestring
, binary
, blaze-html
, bytestring
, case-insensitive
, colour
, containers
, directory
, filepath
, hxt
, mtl
, regex-pcre-builtin
, safe
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "skylighting";
version = "0.6";
sha256 = "ce00f1ae48af402442e4cd8c689c5ec8299491d865161d4de5b6e26f24cb4780";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-terminal
attoparsec
base
base64-bytestring
binary
blaze-html
bytestring
case-insensitive
colour
containers
directory
filepath
hxt
mtl
regex-pcre-builtin
safe
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jgm/skylighting";
description = "syntax highlighting library";
license = stdenv.lib.licenses.gpl2;

}) {};
"slack-web" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, errors
, http-api-data
, http-client
, http-client-tls
, megaparsec
, mtl
, servant
, servant-client
, servant-client-core
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "slack-web";
version = "0.2.0.4";
sha256 = "5005546ff149b47d7fff2cced57b26ae3fafa8e657ccc3eb8e69540cb5f978f1";
libraryHaskellDepends = [
aeson
base
containers
errors
http-api-data
http-client
http-client-tls
megaparsec
mtl
servant
servant-client
servant-client-core
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jpvillaisaza/slack-web";
description = "Bindings for the Slack web API";
license = stdenv.lib.licenses.mit;

}) {};
"slave-thread" = callPackage
({
  mkDerivation
, base
, base-prelude
, list-t
, mmorph
, partial-handler
, stdenv
, stm-containers
, transformers
}:
mkDerivation {

pname = "slave-thread";
version = "1.0.2";
sha256 = "e47120598dd65ebee33253911a31518021323a5ccfa52588e13c44fd5f5b4b13";
libraryHaskellDepends = [
base
base-prelude
list-t
mmorph
partial-handler
stm-containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/slave-thread";
description = "A principal solution to ghost threads and silent exceptions";
license = stdenv.lib.licenses.mit;

}) {};
"slug" = callPackage
({
  mkDerivation
, aeson
, base
, exceptions
, http-api-data
, path-pieces
, persistent
, QuickCheck
, stdenv
, text
}:
mkDerivation {

pname = "slug";
version = "0.1.7";
sha256 = "d76f8243fd8b45d02c0731962ceddcd96154473d6f7c5cbf36ab921bc5627dde";
revision = "4";
editedCabalFile = "18h2wl2a3bb9094yq9dp6sjschb75ki4zlp1vrfzkpsrwb4v3ndr";
libraryHaskellDepends = [
aeson
base
exceptions
http-api-data
path-pieces
persistent
QuickCheck
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/slug";
description = "Type-safe slugs for Yesod ecosystem";
license = stdenv.lib.licenses.bsd3;

}) {};
"smallcheck" = callPackage
({
  mkDerivation
, base
, ghc-prim
, logict
, mtl
, pretty
, stdenv
}:
mkDerivation {

pname = "smallcheck";
version = "1.1.4";
sha256 = "de04b220ca156162b9e7e45f963f71bb26fd1a2e35ec8375651b82ae5d4e5774";
libraryHaskellDepends = [
base
ghc-prim
logict
mtl
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/smallcheck";
description = "A property-based testing library";
license = stdenv.lib.licenses.bsd3;

}) {};
"smoothie" = callPackage
({
  mkDerivation
, aeson
, base
, linear
, stdenv
, text
, vector
}:
mkDerivation {

pname = "smoothie";
version = "0.4.2.8";
sha256 = "5a548155da88816b73ea92b32ee9eaee2ed7c3a755d5fe98fbe364f19ecfc03b";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
linear
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/smoothie";
description = "Smooth curves via several interpolation modes";
license = stdenv.lib.licenses.bsd3;

}) {};
"smtp-mail" = callPackage
({
  mkDerivation
, array
, base
, base16-bytestring
, base64-bytestring
, bytestring
, cryptohash
, filepath
, mime-mail
, network
, stdenv
, text
}:
mkDerivation {

pname = "smtp-mail";
version = "0.1.4.6";
sha256 = "86dacbef87a2519222a1165b49401a437887a249f5bfd63a99702198dad214bc";
libraryHaskellDepends = [
array
base
base16-bytestring
base64-bytestring
bytestring
cryptohash
filepath
mime-mail
network
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jhickner/smtp-mail";
description = "Simple email sending via SMTP";
license = stdenv.lib.licenses.bsd3;

}) {};
"snap" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, cereal
, clientsession
, configurator
, containers
, directory
, directory-tree
, dlist
, filepath
, hashable
, heist
, lens
, lifted-base
, map-syntax
, monad-control
, mtl
, mwc-random
, pwstore-fast
, snap-core
, snap-server
, stdenv
, stm
, text
, time
, transformers
, transformers-base
, unordered-containers
, xmlhtml
}:
mkDerivation {

pname = "snap";
version = "1.1.0.0";
sha256 = "882d999b65f2f44abe0e4fe15d8522b41539b4cb54585c2b1080b446d8a5d198";
revision = "3";
editedCabalFile = "0jkxlbbx4whwqqxb1c04xp1zanzmda4b4bwz8swk2pcixmmzx2xa";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
cereal
clientsession
configurator
containers
directory
directory-tree
dlist
filepath
hashable
heist
lens
lifted-base
map-syntax
monad-control
mtl
mwc-random
pwstore-fast
snap-core
snap-server
stm
text
time
transformers
transformers-base
unordered-containers
xmlhtml
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "Top-level package for the Snap Web Framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"snap-blaze" = callPackage
({
  mkDerivation
, base
, blaze-html
, snap-core
, stdenv
}:
mkDerivation {

pname = "snap-blaze";
version = "0.2.1.5";
sha256 = "b36e35bd4ba3087b3de92702e488ba6570675719243b5dbdf4eae0b819988841";
libraryHaskellDepends = [
base
blaze-html
snap-core
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jaspervdj/snap-blaze";
description = "blaze-html integration for Snap";
license = stdenv.lib.licenses.bsd3;

}) {};
"snap-core" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-builder
, case-insensitive
, containers
, directory
, filepath
, hashable
, HUnit
, io-streams
, lifted-base
, monad-control
, mtl
, network
, network-uri
, old-locale
, random
, readable
, regex-posix
, stdenv
, text
, time
, transformers
, transformers-base
, unix-compat
, unordered-containers
, vector
}:
mkDerivation {

pname = "snap-core";
version = "1.0.3.2";
sha256 = "4c4398476fe882122ce8adc03f69509588d071fc011f50162cd69706093dd88c";
revision = "1";
editedCabalFile = "08ll71h3rv9bppr7xrflg4y627vnmxgfhby1kli9cj0a7ryspam1";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-builder
case-insensitive
containers
directory
filepath
hashable
HUnit
io-streams
lifted-base
monad-control
mtl
network
network-uri
old-locale
random
readable
regex-posix
text
time
transformers
transformers-base
unix-compat
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "Snap: A Haskell Web Framework (core interfaces and types)";
license = stdenv.lib.licenses.bsd3;

}) {};
"snap-server" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, bytestring-builder
, case-insensitive
, clock
, containers
, filepath
, HsOpenSSL
, io-streams
, io-streams-haproxy
, lifted-base
, mtl
, network
, old-locale
, openssl-streams
, snap-core
, stdenv
, text
, time
, unix
, unix-compat
, vector
}:
mkDerivation {

pname = "snap-server";
version = "1.0.3.3";
sha256 = "745adbc5f8966deff4e84c873f86ad1d19ca306dfd6ddd2a39892640d9bb4eee";
revision = "3";
editedCabalFile = "0y0rd2skx59knkxm53zg6m4mi0p4rj9jw32vsj9mbl8sy2vw9hlj";
configureFlags = [
"-fopenssl"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
bytestring-builder
case-insensitive
clock
containers
filepath
HsOpenSSL
io-streams
io-streams-haproxy
lifted-base
mtl
network
old-locale
openssl-streams
snap-core
text
time
unix
unix-compat
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://snapframework.com/";
description = "A web server for the Snap Framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"snowflake" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "snowflake";
version = "0.1.1.1";
sha256 = "f156ca321ae17033fe1cbe7e676fea403136198e1c3a132924a080cd3145cddd";
revision = "1";
editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
license = stdenv.lib.licenses.asl20;

}) {};
"soap" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, configurator
, data-default
, exceptions
, http-client
, http-types
, iconv
, mtl
, resourcet
, stdenv
, text
, unordered-containers
, xml-conduit
, xml-conduit-writer
, xml-types
}:
mkDerivation {

pname = "soap";
version = "0.2.3.6";
sha256 = "cdfc8ee01d3adb0334521a954e32e64f52a3e404fb469679e39904d4ed52b176";
libraryHaskellDepends = [
base
bytestring
conduit
configurator
data-default
exceptions
http-client
http-types
iconv
mtl
resourcet
text
unordered-containers
xml-conduit
xml-conduit-writer
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/haskell-soap";
description = "SOAP client tools";
license = stdenv.lib.licenses.mit;

}) {};
"soap-openssl" = callPackage
({
  mkDerivation
, base
, configurator
, data-default
, HsOpenSSL
, http-client
, http-client-openssl
, soap
, stdenv
, text
}:
mkDerivation {

pname = "soap-openssl";
version = "0.1.0.2";
sha256 = "2008547f4fd22063479ce1cd1c483db926f5f08a2ff6fb0c60fb2f0f7d42830f";
revision = "1";
editedCabalFile = "1b3aivn9jfaax00id7x4cqvpmd6lgynslchlry0qsmq1lj466cdf";
libraryHaskellDepends = [
base
configurator
data-default
HsOpenSSL
http-client
http-client-openssl
soap
text
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/haskell-soap";
description = "TLS-enabled SOAP transport (using openssl bindings)";
license = stdenv.lib.licenses.mit;

}) {};
"soap-tls" = callPackage
({
  mkDerivation
, base
, configurator
, connection
, data-default
, http-client
, http-client-tls
, soap
, stdenv
, text
, tls
, x509
, x509-store
, x509-validation
}:
mkDerivation {

pname = "soap-tls";
version = "0.1.1.4";
sha256 = "ce8b33cd4bb2cc60093df4de231967edd789fd9da44a261a539a221116853a14";
libraryHaskellDepends = [
base
configurator
connection
data-default
http-client
http-client-tls
soap
text
tls
x509
x509-store
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/haskell-soap";
description = "TLS-enabled SOAP transport (using tls package)";
license = stdenv.lib.licenses.mit;

}) {};
"socket" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "socket";
version = "0.8.0.1";
sha256 = "745f6d1ef2299e321ad646918b9b733c82b4ded51b3b6aab6755c85182ab09a2";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lpeterse/haskell-socket";
description = "An extensible socket library";
license = stdenv.lib.licenses.mit;

}) {};
"socket-activation" = callPackage
({
  mkDerivation
, base
, network
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "socket-activation";
version = "0.1.0.2";
sha256 = "b99e7b4f296cd462aac84e5bb61fb02953e2080d1351e9e10a63d35dc34eb43b";
libraryHaskellDepends = [
base
network
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ddfisher/haskell-socket-activation";
description = "systemd socket activation library";
license = stdenv.lib.licenses.bsd3;

}) {};
"socket-io" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, engine-io
, fetchgit
, mtl
, stdenv
, stm
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "socket-io";
version = "1.3.9";
src = fetchgit {

url = "https://github.com/input-output-hk/engine.io.git";
sha256 = "139c0yfnj57cpwg4k0am2rp35sh959394nvlb98011rjy68200qc";
rev = "d3c55f51bb81cee7d0d551de930ce65fe7d76756";

};
postUnpack = "sourceRoot+=/socket-io; echo source root reset to $sourceRoot";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
engine-io
mtl
stm
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/engine.io";
license = stdenv.lib.licenses.bsd3;

}) {};
"socks" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, network
, stdenv
}:
mkDerivation {

pname = "socks";
version = "0.5.6";
sha256 = "fa63cd838025e18864c59755750c0cfc4ea76e140a542f07a5c682488ec78438";
libraryHaskellDepends = [
base
bytestring
cereal
network
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-socks";
description = "Socks proxy (ver 5)";
license = stdenv.lib.licenses.bsd3;

}) {};
"sort" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "sort";
version = "1.0.0.0";
sha256 = "cee3894879cb4b2150331eca96d5d27f51a6114bcb082d1d8dded55881f5770d";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdornan/sort";
description = "A Haskell sorting toolkit";
license = stdenv.lib.licenses.bsd3;

}) {};
"sorted-list" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "sorted-list";
version = "0.2.0.0";
sha256 = "cc52c787b056f4d3a9ecc59f06701695602558a4233042ff8f613cdd4985d138";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
description = "Type-enforced sorted lists and related functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"sourcemap" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, process
, stdenv
, text
, unordered-containers
, utf8-string
}:
mkDerivation {

pname = "sourcemap";
version = "0.1.6";
sha256 = "b9a04cccb4fe7eea8b37a2eaf2bc776eae5640038ab76fb948c5a3ea09a9ce7a";
revision = "1";
editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
process
text
unordered-containers
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Implementation of source maps as proposed by Google and Mozilla";
license = stdenv.lib.licenses.bsd3;

}) {};
"sox" = callPackage
({
  mkDerivation
, base
, containers
, explicit-exception
, extensible-exceptions
, process
, sample-frame
, semigroups
, stdenv
, transformers
, unix
, utility-ht
}:
mkDerivation {

pname = "sox";
version = "0.2.3";
sha256 = "6075a191c7715cc27be60a21d5fcdfcbcfb54eb659b5d86ce6a8c89d24abad90";
libraryHaskellDepends = [
base
containers
explicit-exception
extensible-exceptions
process
sample-frame
semigroups
transformers
unix
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Sox";
description = "Play, write, read, convert audio signals using Sox";
license = "GPL";

}) {};
"soxlib" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, explicit-exception
, extensible-exceptions
, sample-frame
, sox
, stdenv
, storablevector
, transformers
, utility-ht
}:
mkDerivation {

pname = "soxlib";
version = "0.0.3";
sha256 = "18b555beb0eaafce25550feea23575ec68477728654bd2fbaad67d448f5dcd8b";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
containers
explicit-exception
extensible-exceptions
sample-frame
storablevector
transformers
utility-ht
];
libraryPkgconfigDepends = [
sox
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Sox";
description = "Write, read, convert audio signals using libsox";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) sox;};
"sparkle" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, Cabal
, choice
, constraints
, distributed-closure
, filepath
, inline-java
, jni
, jvm
, jvm-streaming
, process
, regex-tdfa
, singletons
, stdenv
, streaming
, temporary
, text
, unix
, vector
, zip-archive
}:
mkDerivation {

pname = "sparkle";
version = "0.7.4";
sha256 = "7858c1b4627f01dc144b984d6b841d29365f8d73ef436d07ce83c8e782d0999c";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
inline-java
jvm-streaming
];
libraryHaskellDepends = [
base
binary
bytestring
choice
constraints
distributed-closure
inline-java
jni
jvm
jvm-streaming
singletons
streaming
text
vector
];
executableHaskellDepends = [
base
bytestring
filepath
process
regex-tdfa
temporary
text
unix
zip-archive
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/tweag/sparkle#readme";
description = "Distributed Apache Spark applications in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"sparse-linear-algebra" = callPackage
({
  mkDerivation
, base
, containers
, exceptions
, hspec
, mtl
, primitive
, QuickCheck
, stdenv
, transformers
, vector
, vector-algorithms
}:
mkDerivation {

pname = "sparse-linear-algebra";
version = "0.2.9.9";
sha256 = "c14109a01fc9053ad91dfc4f374dbe90a7d2f40960fdd0c32b14ec226bee6cd8";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
exceptions
hspec
mtl
primitive
QuickCheck
transformers
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocramz/sparse-linear-algebra";
description = "Numerical computing in native Haskell";
license = stdenv.lib.licenses.gpl3;

}) {};
"spdx" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "spdx";
version = "0.2.2.0";
sha256 = "17ab832cf40cd9df7c1d290e3726c457eb3336c61027e35b245d7e48fb8ebdcb";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/spdx";
description = "SPDX license expression language";
license = stdenv.lib.licenses.bsd3;

}) {};
"special-values" = callPackage
({
  mkDerivation
, base
, bytestring
, ieee754
, scientific
, stdenv
, text
}:
mkDerivation {

pname = "special-values";
version = "0.1.0.0";
sha256 = "3c14dd1304dacc8e54c2dcf95ebb3bb74b172b5409b9b45352108a4698e06dce";
libraryHaskellDepends = [
base
bytestring
ieee754
scientific
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/special-values#readme";
description = "Typeclass providing special values";
license = stdenv.lib.licenses.mit;

}) {};
"speculate" = callPackage
({
  mkDerivation
, base
, cmdargs
, containers
, leancheck
, stdenv
}:
mkDerivation {

pname = "speculate";
version = "0.3.2";
sha256 = "d34d66e5487698e1a80b5fbd7d8439a1102cee0a51383ab30cd257078308c831";
libraryHaskellDepends = [
base
cmdargs
containers
leancheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rudymatela/speculate#readme";
description = "discovery of properties about Haskell functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"speculation" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "speculation";
version = "1.5.0.3";
sha256 = "73bf641a87e0d28a2ba233922db936e0776c3dc24ed421f6f963f015e2eb4d3f";
libraryHaskellDepends = [
base
ghc-prim
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/speculation";
description = "A framework for safe, programmable, speculative parallelism";
license = stdenv.lib.licenses.bsd3;

}) {};
"speedy-slice" = callPackage
({
  mkDerivation
, base
, kan-extensions
, lens
, mcmc-types
, mwc-probability
, pipes
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "speedy-slice";
version = "0.3.0";
sha256 = "efbf8a10b681b940078f70fb9aca43fec8ba436c82f3faf719bbe495ba152899";
libraryHaskellDepends = [
base
kan-extensions
lens
mcmc-types
mwc-probability
pipes
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jtobin/speedy-slice";
description = "Speedy slice sampling";
license = stdenv.lib.licenses.mit;

}) {};
"sphinx" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, data-binary-ieee754
, network
, stdenv
, text
, text-icu
, xml
}:
mkDerivation {

pname = "sphinx";
version = "0.6.0.2";
sha256 = "76a977c6ce6e71c220bd5fed7acd0be500c2a1b5c8d081a29564a8e37ba7a6df";
libraryHaskellDepends = [
base
binary
bytestring
data-binary-ieee754
network
text
text-icu
xml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/gregwebs/haskell-sphinx-client";
description = "Haskell bindings to the Sphinx full-text searching daemon";
license = stdenv.lib.licenses.bsd3;

}) {};
"splice" = callPackage
({
  mkDerivation
, base
, network
, stdenv
}:
mkDerivation {

pname = "splice";
version = "0.6.1.1";
sha256 = "81fabe6652571f0dbf6b8904bd782daaeccc9d89d40f77b15dff46b7499d4e53";
libraryHaskellDepends = [
base
network
];
doHaddock = false;
doCheck = false;
homepage = "http://corsis.github.com/splice/";
description = "Cross-platform Socket to Socket Data Splicing";
license = stdenv.lib.licenses.bsd3;

}) {};
"split" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "split";
version = "0.2.3.3";
sha256 = "1dcd674f7c5f276f33300f5fd59e49d1ac6fc92ae949fd06a0f6d3e9d9ac1413";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Combinator library for splitting lists";
license = stdenv.lib.licenses.bsd3;

}) {};
"splitmix" = callPackage
({
  mkDerivation
, base
, random
, stdenv
, time
}:
mkDerivation {

pname = "splitmix";
version = "0";
sha256 = "f13aa0689625b1d02cf47c748ea8858898bbdb24324f1419de68074e5d344861";
revision = "2";
editedCabalFile = "0fl7z9lxkyvqk0d14d778j3lk8zi8jgncwq41gqi4z78a20xb2pg";
libraryHaskellDepends = [
base
random
time
];
doHaddock = false;
doCheck = false;
description = "Fast Splittable PRNG";
license = stdenv.lib.licenses.bsd3;

}) {};
"spoon" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "spoon";
version = "0.3.1";
sha256 = "b9b350b6730e34c246bbf7e228a86b3d4925b52c95542f7676d719ef2a9881d4";
revision = "1";
editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
description = "Catch errors thrown from pure computations";
license = stdenv.lib.licenses.bsd3;

}) {};
"spreadsheet" = callPackage
({
  mkDerivation
, base
, explicit-exception
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "spreadsheet";
version = "0.1.3.7";
sha256 = "840a66ccbfa0f08851e292e0b6a3f1de652f62d66d9b17e83b69153597d81ba0";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
explicit-exception
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Spreadsheet";
description = "Read and write spreadsheets from and to CSV files in a lazy way";
license = stdenv.lib.licenses.bsd3;

}) {};
"sql-words" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "sql-words";
version = "0.1.6.1";
sha256 = "638bbe0024e84b8d48d53f2debfd117382dc629fc79cac414d86d0cd16c1f91e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "SQL keywords data constructors into OverloadedString";
license = stdenv.lib.licenses.bsd3;

}) {};
"sqlite-simple" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, blaze-textual
, bytestring
, containers
, direct-sqlite
, Only
, semigroups
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "sqlite-simple";
version = "0.4.15.0";
sha256 = "c071ed0c6d440f1ccb97db83de950b4c5c66172482829ba8df4a7a87f36f69e2";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
blaze-textual
bytestring
containers
direct-sqlite
Only
semigroups
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nurpax/sqlite-simple";
description = "Mid-Level SQLite client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"sqlite-simple-errors" = callPackage
({
  mkDerivation
, base
, parsec
, sqlite-simple
, stdenv
, text
}:
mkDerivation {

pname = "sqlite-simple-errors";
version = "0.6.1.0";
sha256 = "5101f84a6d74d658398cc4ef557ad3c6158d53e9c948301cc47ed0cc3eaa716f";
libraryHaskellDepends = [
base
parsec
sqlite-simple
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/sqlite-simple-errors";
description = "Wrapper around errors from sqlite-simple";
license = stdenv.lib.licenses.bsd3;

}) {};
"squeal-postgresql" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, deepseq
, generics-sop
, lifted-base
, monad-control
, mtl
, network-ip
, postgresql-binary
, postgresql-libpq
, scientific
, stdenv
, text
, time
, transformers
, transformers-base
, uuid
}:
mkDerivation {

pname = "squeal-postgresql";
version = "0.1.1.4";
sha256 = "50ac7094068d8318c495d29becd514c4387ff0442f2f7f864ab1af6f28a10d68";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
deepseq
generics-sop
lifted-base
monad-control
mtl
network-ip
postgresql-binary
postgresql-libpq
scientific
text
time
transformers
transformers-base
uuid
];
executableHaskellDepends = [
base
bytestring
generics-sop
mtl
text
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/morphismtech/squeal";
description = "Squeal PostgreSQL Library";
license = stdenv.lib.licenses.bsd3;

}) {};
"srcloc" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "srcloc";
version = "0.5.1.2";
sha256 = "069edbce6bb72e0771cece3aa5a6b67b9e0b0bd0148e9404842fa43035fec06e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mainland/srcloc";
description = "Data types for managing source code locations";
license = stdenv.lib.licenses.bsd3;

}) {};
"stache" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, megaparsec
, mtl
, stdenv
, template-haskell
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "stache";
version = "1.2.1";
sha256 = "6bfbdd2755c606f7b146243db1eefc2f49c720264ba9072a9d170a1bbdbc113b";
revision = "5";
editedCabalFile = "0d0zq3k6dnxk0jwmy3vg6j3cd8aarpc1rya0jv25qjzm8kgvcsvq";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
deepseq
directory
filepath
megaparsec
mtl
template-haskell
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/stackbuilders/stache";
description = "Mustache templates for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"stack-type" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "stack-type";
version = "0.1.0.0";
sha256 = "f310965736f096cdf099e0a61c5fad39b066692d72643da989b64e61ae196c8e";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aiya000/hs-stack-type";
description = "The basic stack type";
license = stdenv.lib.licenses.mit;

}) {};
"starter" = callPackage
({
  mkDerivation
, base
, fsnotify
, stdenv
}:
mkDerivation {

pname = "starter";
version = "0.2.1";
sha256 = "60fe0204eae18276a6652a2e5ffaf35c52d6660857c7b63c510425f6bccdf0d1";
libraryHaskellDepends = [
base
fsnotify
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rkaippully/starter#readme";
description = "Develop applications without restarts";
license = stdenv.lib.licenses.mpl20;

}) {};
"state-codes" = callPackage
({
  mkDerivation
, aeson
, base
, shakespeare
, stdenv
, text
}:
mkDerivation {

pname = "state-codes";
version = "0.1.3";
sha256 = "1667dc977607fc89a0ca736294b2f0a19608fbe861f03f404c3f8ee91fd0f4a1";
libraryHaskellDepends = [
aeson
base
shakespeare
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/acamino/state-codes#README";
description = "ISO 3166-2:US state codes and i18n names";
license = stdenv.lib.licenses.mit;

}) {};
"stateWriter" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "stateWriter";
version = "0.2.10";
sha256 = "68093c0f3ccecf2708831cdf5e42a77ec2a198cfb2c6852b4f7e4215ec3f393c";
revision = "1";
editedCabalFile = "19zp7wy2k6f5dqw0wfj9wzarjgfr20nvw5rmqiv79h66qssjl9i6";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "A faster variant of the RWS monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"stateref" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, stm
}:
mkDerivation {

pname = "stateref";
version = "0.3";
sha256 = "7dd390aab346ca877cde1217d5b62145cdfa6f9390e3b7a53c9296229ee1b741";
libraryHaskellDepends = [
base
mtl
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~mokus/stateref/";
description = "Abstraction for things that work like IORef";
license = stdenv.lib.licenses.publicDomain;

}) {};
"statestack" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "statestack";
version = "0.2.0.5";
sha256 = "f4eadcf9b08c14cb084436f81e16edf78d6eeda77a3f93e38ba5d7e263ea5f66";
revision = "2";
editedCabalFile = "0c10cv107ls0wm7gs3gvknd8a1gqvrkk97frn8lp1ch697mz44rp";
libraryHaskellDepends = [
base
mtl
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
description = "Simple State-like monad transformer with saveable and restorable state";
license = stdenv.lib.licenses.bsd3;

}) {};
"static-text" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, template-haskell
, text
, vector
}:
mkDerivation {

pname = "static-text";
version = "0.2.0.1";
sha256 = "ed5d12d1bc9d6c91241007278746be07fcdcf30babc4d0705a2253b646499229";
libraryHaskellDepends = [
base
bytestring
template-haskell
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dzhus/static-text#readme";
description = "Lists, Texts, ByteStrings and Vectors of statically known length";
license = stdenv.lib.licenses.bsd3;

}) {};
"statistics" = callPackage
({
  mkDerivation
, aeson
, base
, base-orphans
, binary
, deepseq
, erf
, math-functions
, monad-par
, mwc-random
, primitive
, stdenv
, vector
, vector-algorithms
, vector-binary-instances
, vector-th-unbox
}:
mkDerivation {

pname = "statistics";
version = "0.14.0.2";
sha256 = "3495df2da42c9fcc5b594b97f16c02353bfd6616d6e134ac031dac389d7a4778";
revision = "1";
editedCabalFile = "0gg7hq8qvbnhp7lnrykh401ggr51izffylgdmy6nip2a81q9dxi0";
libraryHaskellDepends = [
aeson
base
base-orphans
binary
deepseq
erf
math-functions
monad-par
mwc-random
primitive
vector
vector-algorithms
vector-binary-instances
vector-th-unbox
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/statistics";
description = "A library of statistical types, data, and functions";
license = stdenv.lib.licenses.bsd2;

}) {};
"stb-image-redux" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "stb-image-redux";
version = "0.2.1.2";
sha256 = "3bf41af8950ecf0ac5645634fdd233f941a904c6c56222ff4efb03f5d17043e8";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/typedrat/stb-image-redux#readme";
description = "Image loading and writing microlibrary";
license = stdenv.lib.licenses.bsd3;

}) {};
"stitch" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "stitch";
version = "0.5.0.0";
sha256 = "091271c8f392a81aab6ec737350827f1467a3839a329869ed3fc379a55826936";
libraryHaskellDepends = [
base
containers
text
transformers
];
doHaddock = false;
doCheck = false;
description = "lightweight CSS DSL";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "stm";
version = "2.4.5.0";
sha256 = "31d7db183f13beed5c71409d12747a7f4cf3e145630553dc86336208540859a7";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "https://wiki.haskell.org/Software_transactional_memory";
description = "Software Transactional Memory";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-chans" = callPackage
({
  mkDerivation
, base
, Cabal
, stdenv
, stm
}:
mkDerivation {

pname = "stm-chans";
version = "3.0.0.4";
sha256 = "2344fc5bfa33d565bad7b009fc0e2c5a7a595060ba149c661f44419fc0d54738";
revision = "1";
editedCabalFile = "0v9axxcfszqdmf3dhjxy34ybh22x3r5c48mdnbvjh5i5lp7g7vp2";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Additional types of channels for STM";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-conduit" = callPackage
({
  mkDerivation
, async
, base
, cereal
, cereal-conduit
, conduit
, conduit-extra
, directory
, exceptions
, monad-loops
, resourcet
, stdenv
, stm
, stm-chans
, transformers
, unliftio
}:
mkDerivation {

pname = "stm-conduit";
version = "4.0.0";
sha256 = "ffe46c8848f002b016c86f76155b4523b2af35b2c027847afe0edb6325bd4a5d";
libraryHaskellDepends = [
async
base
cereal
cereal-conduit
conduit
conduit-extra
directory
exceptions
monad-loops
resourcet
stm
stm-chans
transformers
unliftio
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cgaebel/stm-conduit";
description = "Introduces conduits to channels, and promotes using conduits concurrently";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-containers" = callPackage
({
  mkDerivation
, base
, base-prelude
, focus
, hashable
, list-t
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "stm-containers";
version = "0.2.16";
sha256 = "69042f06647cdc69e1ecf83863d88d67acd377f631d8a15966df67245152502f";
libraryHaskellDepends = [
base
base-prelude
focus
hashable
list-t
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/stm-containers";
description = "Containers for STM";
license = stdenv.lib.licenses.mit;

}) {};
"stm-delay" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "stm-delay";
version = "0.1.1.1";
sha256 = "b132581aac47e6cba6a1691a485e1700fbb047c02b7e1e43ae9bbd8476108a32";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joeyadams/haskell-stm-delay";
description = "Updatable one-shot timer polled with STM";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-extras" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "stm-extras";
version = "0.1.0.3";
sha256 = "88210a157d5a5a2c3bd10b3b9f0ead9bef91f47ecfe6fd56deca058c7270b75e";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/stm-extras#readme";
description = "Extra STM functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-split" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
}:
mkDerivation {

pname = "stm-split";
version = "0.0.2";
sha256 = "3c06a43889acc02425b7a5299f71de86ebba6245a92a507db976dc7256713807";
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
description = "TMVars, TVars and TChans with distinguished input and output side";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-stats" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, stm
, template-haskell
, time
}:
mkDerivation {

pname = "stm-stats";
version = "0.2.0.0";
sha256 = "0a4f39b1e9fffe50d6dfaa9c0b04977e510fae8b6bd3d7abb7076e8aa8f01345";
libraryHaskellDepends = [
base
containers
stm
template-haskell
time
];
doHaddock = false;
doCheck = false;
description = "retry statistics for STM transactions";
license = stdenv.lib.licenses.bsd3;

}) {};
"stm-supply" = callPackage
({
  mkDerivation
, base
, concurrent-supply
, stdenv
}:
mkDerivation {

pname = "stm-supply";
version = "0.2.0.0";
sha256 = "f839ada6e5ac9549731086ed13fcf4c9f03a6ff93d64c0a857148820864f388c";
libraryHaskellDepends = [
base
concurrent-supply
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/stm-supply#readme";
description = "STM wrapper around Control.Concurrent.Supply.";
license = stdenv.lib.licenses.bsd3;

}) {};
"stopwatch" = callPackage
({
  mkDerivation
, base
, clock
, stdenv
, transformers
}:
mkDerivation {

pname = "stopwatch";
version = "0.1.0.5";
sha256 = "461ed69edf8d68cdadd8d0c6159e9c2fef71d1a440c6feded0b07c77d9113461";
libraryHaskellDepends = [
base
clock
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/stopwatch";
description = "A simple stopwatch utility";
license = stdenv.lib.licenses.bsd3;

}) {};
"storable-complex" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "storable-complex";
version = "0.2.2";
sha256 = "ab076f15c47a2a324a2119c8feee0a78e1d2af488d0d24b7113b4bb7eee47c06";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cartazio/storable-complex";
description = "Storable instance for Complex";
license = stdenv.lib.licenses.bsd3;

}) {};
"storable-endian" = callPackage
({
  mkDerivation
, base
, byteorder
, stdenv
}:
mkDerivation {

pname = "storable-endian";
version = "0.2.6";
sha256 = "3743ac8f084ed3187b83f17b4fac280e77c5df01f7910f42b6a1bf09d5a65489";
revision = "1";
editedCabalFile = "12f8sscsvsarlwz3p6kk9vbvqsbyhs8lhafgn9h7c0z6pz1amrya";
libraryHaskellDepends = [
base
byteorder
];
doHaddock = false;
doCheck = false;
description = "Storable instances with endianness";
license = stdenv.lib.licenses.bsd3;

}) {};
"storable-record" = callPackage
({
  mkDerivation
, base
, semigroups
, stdenv
, transformers
, utility-ht
}:
mkDerivation {

pname = "storable-record";
version = "0.0.4";
sha256 = "ceffb2f08d8abc37e338ad924b264c230d5e54ecccaf1c22802c3107ea0c5a42";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
semigroups
transformers
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/storable-record/";
description = "Elegant definition of Storable instances for records";
license = stdenv.lib.licenses.bsd3;

}) {};
"storable-tuple" = callPackage
({
  mkDerivation
, base
, base-orphans
, stdenv
, storable-record
, utility-ht
}:
mkDerivation {

pname = "storable-tuple";
version = "0.0.3.3";
sha256 = "dcfac049527a45c386c80a7c40ec211455b83d74311af88fa686063b5f87df35";
libraryHaskellDepends = [
base
base-orphans
storable-record
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/storable-tuple/";
description = "Storable instance for pairs and triples";
license = stdenv.lib.licenses.bsd3;

}) {};
"storablevector" = callPackage
({
  mkDerivation
, base
, deepseq
, non-negative
, QuickCheck
, semigroups
, stdenv
, syb
, transformers
, unsafe
, utility-ht
}:
mkDerivation {

pname = "storablevector";
version = "0.2.13";
sha256 = "f83742d572aca9431f8ee6325d29169bc630beb2d8ab1957f7165abed138b9fe";
libraryHaskellDepends = [
base
deepseq
non-negative
QuickCheck
semigroups
syb
transformers
unsafe
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Storable_Vector";
description = "Fast, packed, strict storable arrays with a list interface like ByteString";
license = stdenv.lib.licenses.bsd3;

}) {};
"store" = callPackage
({
  mkDerivation
, array
, async
, base
, base-orphans
, base64-bytestring
, bytestring
, conduit
, containers
, contravariant
, cryptohash
, deepseq
, directory
, filepath
, free
, ghc-prim
, hashable
, hspec
, hspec-smallcheck
, integer-gmp
, lifted-base
, monad-control
, mono-traversable
, network
, primitive
, resourcet
, safe
, semigroups
, smallcheck
, stdenv
, store-core
, streaming-commons
, syb
, template-haskell
, text
, th-lift
, th-lift-instances
, th-orphans
, th-reify-many
, th-utilities
, time
, transformers
, unordered-containers
, vector
, void
}:
mkDerivation {

pname = "store";
version = "0.4.3.2";
sha256 = "eca47c14b14ce5a6369a4b09a048b5a7fe7574d3f1b1099bc03449416c80308e";
libraryHaskellDepends = [
array
async
base
base-orphans
base64-bytestring
bytestring
conduit
containers
contravariant
cryptohash
deepseq
directory
filepath
free
ghc-prim
hashable
hspec
hspec-smallcheck
integer-gmp
lifted-base
monad-control
mono-traversable
network
primitive
resourcet
safe
semigroups
smallcheck
store-core
streaming-commons
syb
template-haskell
text
th-lift
th-lift-instances
th-orphans
th-reify-many
th-utilities
time
transformers
unordered-containers
vector
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/store#readme";
description = "Fast binary serialization";
license = stdenv.lib.licenses.mit;

}) {};
"store-core" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, primitive
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "store-core";
version = "0.4.3";
sha256 = "ee8d5c3719949fb4438e6e58a47ec1d49e0696357e7d8ca689379d8a21f5a43b";
libraryHaskellDepends = [
base
bytestring
ghc-prim
primitive
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/store#readme";
description = "Fast and lightweight binary serialization";
license = stdenv.lib.licenses.mit;

}) {};
"stratosphere" = callPackage
({
  mkDerivation
, aeson
, aeson-pretty
, base
, bytestring
, containers
, hashable
, lens
, stdenv
, template-haskell
, text
, unordered-containers
}:
mkDerivation {

pname = "stratosphere";
version = "0.19.1";
sha256 = "29724490a8551faf00f544d2778bb8170af055a8618399eedeb884bce0c2d771";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
aeson-pretty
base
bytestring
containers
hashable
lens
template-haskell
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/frontrowed/stratosphere#readme";
description = "EDSL for AWS CloudFormation";
license = stdenv.lib.licenses.mit;

}) {};
"streaming" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, mmorph
, mtl
, semigroups
, stdenv
, transformers
, transformers-base
}:
mkDerivation {

pname = "streaming";
version = "0.2.1.0";
sha256 = "e11d5e38c4c350cc95180cb0cf80efc0a6051ee8dd17c54961b837112c135075";
libraryHaskellDepends = [
base
containers
ghc-prim
mmorph
mtl
semigroups
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-streaming/streaming";
description = "an elementary streaming prelude and general stream type";
license = stdenv.lib.licenses.bsd3;

}) {};
"streaming-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, exceptions
, mmorph
, mtl
, resourcet
, stdenv
, streaming
, transformers
, transformers-base
}:
mkDerivation {

pname = "streaming-bytestring";
version = "0.1.6";
sha256 = "c1d723fc9676b85f62f9fc937d756af61d81f69c9c6591e5d38c9b09b7a253d3";
libraryHaskellDepends = [
base
bytestring
deepseq
exceptions
mmorph
mtl
resourcet
streaming
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-streaming/streaming-bytestring";
description = "effectful byte steams, or: bytestring io done right";
license = stdenv.lib.licenses.bsd3;

}) {};
"streaming-commons" = callPackage
({
  mkDerivation
, array
, async
, base
, blaze-builder
, bytestring
, directory
, network
, process
, random
, stdenv
, stm
, text
, transformers
, unix
, zlib
}:
mkDerivation {

pname = "streaming-commons";
version = "0.1.19";
sha256 = "43fcae90df5548d9968b31371f13ec7271df86ac34a484c094616867ed4217a7";
libraryHaskellDepends = [
array
async
base
blaze-builder
bytestring
directory
network
process
random
stm
text
transformers
unix
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/streaming-commons";
description = "Common lower-level functions needed by various streaming data libraries";
license = stdenv.lib.licenses.mit;

}) {};
"streamly" = callPackage
({
  mkDerivation
, atomic-primops
, base
, containers
, exceptions
, lifted-base
, lockfree-queue
, monad-control
, mtl
, stdenv
, stm
, transformers
, transformers-base
}:
mkDerivation {

pname = "streamly";
version = "0.1.2";
sha256 = "f76725f76e13ce27d951566fe64823cd5d326f2b677718123e6889f80f53b8ab";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
atomic-primops
base
containers
exceptions
lifted-base
lockfree-queue
monad-control
mtl
stm
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/composewell/streamly";
description = "Beautiful Streaming, Concurrent and Reactive Composition";
license = stdenv.lib.licenses.bsd3;

}) {};
"streamproc" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "streamproc";
version = "1.6.2";
sha256 = "e76effaaff83e6a066df949415db109b405bda0aaeb95f0710906c65892584f2";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/peti/streamproc";
description = "Stream Processer Arrow";
license = stdenv.lib.licenses.bsd3;

}) {};
"streams" = callPackage
({
  mkDerivation
, adjunctions
, base
, comonad
, distributive
, semigroupoids
, semigroups
, stdenv
}:
mkDerivation {

pname = "streams";
version = "3.3";
sha256 = "2933f80d6a83fed326af5588b0cce93985b07233359c311bd69c5bac19954e40";
libraryHaskellDepends = [
adjunctions
base
comonad
distributive
semigroupoids
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/streams/issues";
description = "Various Haskell 2010 stream comonads";
license = stdenv.lib.licenses.bsd3;

}) {};
"strict" = callPackage
({
  mkDerivation
, array
, base
, stdenv
}:
mkDerivation {

pname = "strict";
version = "0.3.2";
sha256 = "2cd35a67938db635a87617d9576d5df0158b581e8e5694f07487c0f4b1549221";
libraryHaskellDepends = [
array
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
description = "Strict data types and String IO";
license = stdenv.lib.licenses.bsd3;

}) {};
"strict-base-types" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, binary
, deepseq
, ghc-prim
, hashable
, lens
, QuickCheck
, stdenv
, strict
}:
mkDerivation {

pname = "strict-base-types";
version = "0.6.1";
sha256 = "f8866a3acc7d61f1fbffc2823c24d35b4f63f90612bf0c63292f3d25a3dc307a";
libraryHaskellDepends = [
aeson
base
bifunctors
binary
deepseq
ghc-prim
hashable
lens
QuickCheck
strict
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/meiersi/strict-base-types";
description = "Strict variants of the types provided in base";
license = stdenv.lib.licenses.bsd3;

}) {};
"strict-concurrency" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "strict-concurrency";
version = "0.2.4.2";
sha256 = "bf5ad5d14134b57908966322d6b4a07925569b1f351ffe47644233ac4183f86f";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ygale/strict-concurrency";
description = "Strict concurrency abstractions";
license = stdenv.lib.licenses.bsd3;

}) {};
"strict-types" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, hashable
, stdenv
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "strict-types";
version = "0.1.2";
sha256 = "9106620f42690a5877b7d5ee6d58c4c3b0677ea8695e56f793afd2a4a2ae5779";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
hashable
text
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pepeiborra/strict-types";
description = "A type level predicate ranging over strict types";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-class" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, tagged
, text
}:
mkDerivation {

pname = "string-class";
version = "0.1.7.0";
sha256 = "8e5b00563ec2a62120036ab5e06cade5eb7ff8c9caa86f42213c66be39900be8";
libraryHaskellDepends = [
base
bytestring
tagged
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/string-class/string-class";
description = "String class library";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-combinators" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "string-combinators";
version = "0.6.0.5";
sha256 = "94914abfbd7d17051edab4bc9927c191fd05a652d9ef3cf259b5d0e0ca177e1e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/string-combinators";
description = "Polymorphic functions to build and combine stringlike values";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-conv" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "string-conv";
version = "0.1.2";
sha256 = "f259a03e6f296af19a71c07ab9a98a38661dfe40679f360f8e371334ea226039";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Soostone/string-conv";
description = "Standardized conversion between string types";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-conversions" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "string-conversions";
version = "0.4.0.1";
sha256 = "46bcce6d9ce62c558b7658a75d9c6a62f7259d6b0473d011d8078234ad6a1994";
libraryHaskellDepends = [
base
bytestring
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/soenkehahn/string-conversions#readme";
description = "Simplifies dealing with different types for strings";
license = stdenv.lib.licenses.bsd3;

}) {};
"string-qq" = callPackage
({
  mkDerivation
, base
, Cabal
, process
, stdenv
, template-haskell
}:
mkDerivation {

pname = "string-qq";
version = "0.0.2";
sha256 = "9757cad387856a313729caffe0639215a10be7d72b09c44bcab9e55ee2a8c218";
revision = "1";
editedCabalFile = "1flc6mr1nnv8mx69cy1ilwk5gxsidcns82vjdg8dcs8z5axg95kp";
enableSeparateDataOutput = true;
setupHaskellDepends = [
base
Cabal
process
];
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
license = stdenv.lib.licenses.publicDomain;

}) {};
"string-transform" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "string-transform";
version = "1.0.0";
sha256 = "8d78d52ec516cf8ac3c0260dfda1fc720ea597194bb169ef38894a03365da614";
libraryHaskellDepends = [
base
bytestring
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ncaq/string-transform#readme";
description = "simple and easy haskell string transform wrapper";
license = stdenv.lib.licenses.mit;

}) {};
"stringable" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, system-filepath
, text
}:
mkDerivation {

pname = "stringable";
version = "0.1.3";
sha256 = "e7af961e1eb52c89330aeb5434d7cfdebd3b712dd39812f68dcbd685e3da5a82";
libraryHaskellDepends = [
base
bytestring
system-filepath
text
];
doHaddock = false;
doCheck = false;
description = "A Stringable type class, in the spirit of Foldable and Traversable";
license = stdenv.lib.licenses.mit;

}) {};
"stringbuilder" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "stringbuilder";
version = "0.5.1";
sha256 = "d878bdc4da806dbce5ab684ef13d2634c17c15b991d0ed3bb25a331eba6603ba";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "A writer monad for multi-line string literals";
license = stdenv.lib.licenses.mit;

}) {};
"stringsearch" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, stdenv
}:
mkDerivation {

pname = "stringsearch";
version = "0.3.6.6";
sha256 = "295f1971920bc52263d8275d7054ad223a7e1aefe75533f9887735c9644ffe4a";
libraryHaskellDepends = [
array
base
bytestring
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dafis/stringsearch";
description = "Fast searching, splitting and replacing of ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"stripe-core" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, mtl
, stdenv
, text
, time
, transformers
, unordered-containers
}:
mkDerivation {

pname = "stripe-core";
version = "2.3.0";
sha256 = "d54d205141064effe58ef5cb15b1e1fe101a213fda477eef9b468ca40733c520";
libraryHaskellDepends = [
aeson
base
bytestring
mtl
text
time
transformers
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmjio/stripe-haskell";
description = "Stripe API for Haskell - Pure Core";
license = stdenv.lib.licenses.mit;

}) {};
"strive" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, data-default
, gpolyline
, http-client
, http-client-tls
, http-types
, stdenv
, template-haskell
, text
, time
, transformers
}:
mkDerivation {

pname = "strive";
version = "5.0.4";
sha256 = "8f4e98fe50aedc567c3de6ef7ff643a1d0a637dd39162f468fd6a8403d7643d2";
libraryHaskellDepends = [
aeson
base
bytestring
data-default
gpolyline
http-client
http-client-tls
http-types
template-haskell
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/strive#readme";
description = "A client for the Strava V3 API";
license = stdenv.lib.licenses.mit;

}) {};
"structs" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, deepseq
, ghc-prim
, primitive
, stdenv
, template-haskell
}:
mkDerivation {

pname = "structs";
version = "0.1.1";
sha256 = "df60ac419775ad96959338c7f14e93a3d47b82728234df206b0145d33694aa41";
revision = "1";
editedCabalFile = "16ws2j3bhwawf6z1ipraiz73yvg65dg5l7hvj1lgbrqvn5lqizj3";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
deepseq
ghc-prim
primitive
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/structs/";
description = "Strict GC'd imperative object-oriented programming with cheap pointers";
license = stdenv.lib.licenses.bsd3;

}) {};
"stylish-haskell" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, directory
, fetchgit
, file-embed
, filepath
, haskell-src-exts
, mtl
, optparse-applicative
, semigroups
, stdenv
, strict
, syb
, yaml
}:
mkDerivation {

pname = "stylish-haskell";
version = "0.9.2.0";
src = fetchgit {

url = "https://github.com/input-output-hk/stylish-haskell.git";
sha256 = "0d6ylb07gxv050fpzc6siwxj8c7j1pkcry5zyzimv0xwn1wf6rfy";
rev = "ecfd3b307d8d13a6d12aff03055f25a39a17e182";

};
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
directory
file-embed
filepath
haskell-src-exts
mtl
semigroups
syb
yaml
];
executableHaskellDepends = [
aeson
base
bytestring
containers
directory
file-embed
filepath
haskell-src-exts
mtl
optparse-applicative
strict
syb
yaml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jaspervdj/stylish-haskell";
description = "Haskell code prettifier";
license = stdenv.lib.licenses.bsd3;

}) {};
"sum-type-boilerplate" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "sum-type-boilerplate";
version = "0.1.1";
sha256 = "3169da14c604e19afdcbf721ef1749b9486618ba23bbec14e86ae9862bf0ab9f";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jdreaver/sum-type-boilerplate#readme";
description = "Library for reducing the boilerplate involved with sum types";
license = stdenv.lib.licenses.mit;

}) {};
"sundown" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "sundown";
version = "0.6";
sha256 = "cb9b7e98138311375148ffe0fa4c4b04eb7a9f8ec2ae13a674d465e5d71db027";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bitonic/sundown";
description = "Bindings to the sundown markdown library";
license = stdenv.lib.licenses.publicDomain;

}) {};
"superbuffer" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "superbuffer";
version = "0.3.1.1";
sha256 = "d7a5fb5478731deab80f89233e4f85511949c04b96ad6284f99f16c5c4166c78";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/superbuffer#readme";
description = "Efficiently build a bytestring from smaller chunks";
license = stdenv.lib.licenses.bsd3;

}) {};
"svg-builder" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, hashable
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "svg-builder";
version = "0.1.1";
sha256 = "4fd0e3f2cbc5601fc69e7eab41588cbfa1150dc508d9d86bf5f3d393880382cc";
libraryHaskellDepends = [
base
blaze-builder
bytestring
hashable
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/diagrams/svg-builder.git";
description = "DSL for building SVG";
license = stdenv.lib.licenses.bsd3;

}) {};
"svg-tree" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, JuicyPixels
, lens
, linear
, mtl
, scientific
, stdenv
, text
, transformers
, vector
, xml
}:
mkDerivation {

pname = "svg-tree";
version = "0.6.2.2";
sha256 = "3a6840993765dc235322c51c9de6adfe3b06e1fa6140ba9f57547c73d62e6ac7";
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
JuicyPixels
lens
linear
mtl
scientific
text
transformers
vector
xml
];
doHaddock = false;
doCheck = false;
description = "SVG file loader and serializer";
license = stdenv.lib.licenses.bsd3;

}) {};
"swagger" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "swagger";
version = "0.3.0";
sha256 = "c7144fb22a0d223eb2463a896200936eab665dc01f39affc103d2ee6a38f54d0";
libraryHaskellDepends = [
aeson
base
bytestring
text
time
transformers
];
doHaddock = false;
doCheck = false;
description = "Implementation of swagger data model";
license = "unknown";

}) {};
"swagger2" = callPackage
({
  mkDerivation
, aeson
, base
, base-compat
, bytestring
, Cabal
, cabal-doctest
, containers
, generics-sop
, hashable
, http-media
, insert-ordered-containers
, lens
, mtl
, network
, scientific
, stdenv
, template-haskell
, text
, time
, transformers
, transformers-compat
, unordered-containers
, uuid-types
, vector
}:
mkDerivation {

pname = "swagger2";
version = "2.2.1";
sha256 = "1f97a5be1b8b5f23f22b7efc387f8a32e60bcfc787839bbebc882ff2c4f32086";
revision = "1";
editedCabalFile = "00snyp95rjh3h7yqfwg3x4y9gjhypm6zfv45i2sag4w5cydvkzb5";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
aeson
base
base-compat
bytestring
containers
generics-sop
hashable
http-media
insert-ordered-containers
lens
mtl
network
scientific
template-haskell
text
time
transformers
transformers-compat
unordered-containers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/GetShopTV/swagger2";
description = "Swagger 2.0 data model";
license = stdenv.lib.licenses.bsd3;

}) {};
"swish" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, hashable
, intern
, mtl
, network-uri
, old-locale
, polyparse
, semigroups
, stdenv
, text
, time
}:
mkDerivation {

pname = "swish";
version = "0.9.2.1";
sha256 = "ef43bedf12c4f9c9b379a8aa00f339d9487769e4388a57ff108f16cb1f8c3f7f";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
directory
filepath
hashable
intern
mtl
network-uri
old-locale
polyparse
semigroups
text
time
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/doug_burke/swish/wiki/Home";
description = "A semantic web toolkit";
license = stdenv.lib.licenses.lgpl21;

}) {};
"syb" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "syb";
version = "0.7";
sha256 = "b8757dce5ab4045c49a0ae90407d575b87ee5523a7dd5dfa5c9d54fcceff42b5";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
description = "Scrap Your Boilerplate";
license = stdenv.lib.licenses.bsd3;

}) {};
"syb-with-class" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, stdenv
, template-haskell
}:
mkDerivation {

pname = "syb-with-class";
version = "0.6.1.9";
sha256 = "06a96de923d9e67e4399fab5ddcc792cefcc7e87d5c6b72a648ba6c0fedffbaa";
libraryHaskellDepends = [
array
base
bytestring
containers
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Scrap Your Boilerplate With Class";
license = stdenv.lib.licenses.bsd3;

}) {};
"symbol" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
}:
mkDerivation {

pname = "symbol";
version = "0.2.4";
sha256 = "d074a7741f6ce0f2a604e4467c1c46e1acc2b707db107b3458395e646a9b8831";
revision = "1";
editedCabalFile = "01ab7600ja88wfvg9x8zmxksw44j9klmm71y9zmig7qxs1qslb25";
libraryHaskellDepends = [
base
containers
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "http://www.cs.drexel.edu/~mainland/";
description = "A 'Symbol' type for fast symbol comparison";
license = stdenv.lib.licenses.bsd3;

}) {};
"symengine" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "symengine";
version = "0.1.2.0";
sha256 = "0a59f76a924686ae84b1873c8783eb80f6e4092c90f3c971340053c1e6ca82f4";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/symengine/symengine.hs#readme";
description = "SymEngine symbolic mathematics engine for Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"sysinfo" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "sysinfo";
version = "0.1.1";
sha256 = "46db40f2d186956547cca98f5583b28828a2b50255fbd404272c381db64dca29";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/sysinfo#readme";
description = "Haskell Interface for getting overall system statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"system-argv0" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, system-filepath
, text
}:
mkDerivation {

pname = "system-argv0";
version = "0.1.1";
sha256 = "6d51da9d2157be14a83f8dca3e9d4196d420e667cd685effb8d7b39185cf4ec6";
libraryHaskellDepends = [
base
bytestring
system-filepath
text
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/haskell-filesystem/";
description = "Get argv[0] as a FilePath";
license = stdenv.lib.licenses.mit;

}) {};
"system-fileio" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, system-filepath
, text
, time
, unix
}:
mkDerivation {

pname = "system-fileio";
version = "0.3.16.3";
sha256 = "3175707cb322c65760fa2eb2ab17327f251c8294ad688efc6258e82328830491";
libraryHaskellDepends = [
base
bytestring
system-filepath
text
time
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/haskell-filesystem";
description = "Consistent filesystem interaction across GHC versions (deprecated)";
license = stdenv.lib.licenses.mit;

}) {};
"system-filepath" = callPackage
({
  mkDerivation
, base
, bytestring
, Cabal
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "system-filepath";
version = "0.4.14";
sha256 = "1656ce3c0d585650784ceb3f794748286e19fb635f557e7b29b0897f8956d993";
revision = "1";
editedCabalFile = "18llfvisghrn9w9yfgacqn51gs50a0lngah3bmg852h0swj7vkp8";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
bytestring
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/haskell-filesystem";
description = "High-level, byte-based file and directory path manipulations (deprecated)";
license = stdenv.lib.licenses.mit;

}) {};
"systemd" = callPackage
({
  mkDerivation
, base
, bytestring
, network
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "systemd";
version = "1.1.2";
sha256 = "59461920b66b4b63b055b08af464a6fd9ff529f64527dfb573f9396dadd39287";
libraryHaskellDepends = [
base
bytestring
network
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/erebe/systemd";
description = "Systemd facilities (Socket activation, Notify)";
license = stdenv.lib.licenses.bsd3;

}) {};
"tabl" = callPackage
({
  mkDerivation
, base
, safe
, stdenv
, text
}:
mkDerivation {

pname = "tabl";
version = "1.0.3";
sha256 = "4ed4b152c4c2ec8eebc8ec1e4dae6d7dd99b1b15148ea5b43be32ed9c333b0df";
libraryHaskellDepends = [
base
safe
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lovasko/tabl";
description = "Table layout";
license = "unknown";

}) {};
"tabular" = callPackage
({
  mkDerivation
, base
, csv
, html
, mtl
, stdenv
}:
mkDerivation {

pname = "tabular";
version = "0.2.2.7";
sha256 = "13f8da12108dafcf3194eb6bf25febf0081c7e4734f66d2d4aeee899f3c14ffb";
libraryHaskellDepends = [
base
csv
html
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/kowey/tabular";
description = "Two-dimensional data tables with rendering functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagchup" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-accessor
, explicit-exception
, non-empty
, stdenv
, transformers
, utility-ht
, xml-basic
}:
mkDerivation {

pname = "tagchup";
version = "0.4.1";
sha256 = "122c975d73a6bcbe98b3352144ec249494fcd30b6ed23eff19acc562d7ee24c0";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
data-accessor
explicit-exception
non-empty
transformers
utility-ht
xml-basic
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/tagchup/";
description = "alternative package for processing of tag soups";
license = "GPL";

}) {};
"tagged" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "tagged";
version = "0.8.5";
sha256 = "e47c51c955ed77b0fa36897f652df990aa0a8c4eb278efaddcd604be00fc8d99";
revision = "2";
editedCabalFile = "0r2knfcq0b4s652vlvlnfwxlc2mkc2ra9kl8bp4zdn1awmfy0ia5";
libraryHaskellDepends = [
base
deepseq
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/tagged";
description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagged-binary" = callPackage
({
  mkDerivation
, base
, base-compat
, binary
, bytestring
, pureMD5
, stdenv
}:
mkDerivation {

pname = "tagged-binary";
version = "0.2.0.1";
sha256 = "72cfaa0995838dfb7f0cda897175c469d6b7aef6fd396fc56abc70194b0f645b";
libraryHaskellDepends = [
base
base-compat
binary
bytestring
pureMD5
];
doHaddock = false;
doCheck = false;
description = "Provides tools for serializing data tagged with type information";
license = stdenv.lib.licenses.mit;

}) {};
"tagged-identity" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "tagged-identity";
version = "0.1.2";
sha256 = "916dd7fdd15452f3d760c345e023ce99496806b813ab01b03ff1b240bbd50210";
libraryHaskellDepends = [
base
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/tagged-identity";
description = "Trivial monad transformer that allows identical monad stacks have different types";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagshare" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "tagshare";
version = "0.0";
sha256 = "d2314bae2e6820700f2a61db9c9f7976e1b53547a49cdd3352bdf29ac3856ce0";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
description = "TagShare - explicit sharing with tags";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagsoup" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, text
}:
mkDerivation {

pname = "tagsoup";
version = "0.14.6";
sha256 = "4b4ed4db1428e859389d628dd5755074f659a424ec49934ec53e44b0fc6a63fb";
libraryHaskellDepends = [
base
bytestring
containers
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/tagsoup#readme";
description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"tagstream-conduit" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, case-insensitive
, conduit
, conduit-extra
, data-default
, resourcet
, stdenv
, text
, transformers
, xml-conduit
}:
mkDerivation {

pname = "tagstream-conduit";
version = "0.5.5.3";
sha256 = "b296e8f0ba18ae951b5bb3fc2d9d964954666df61ea9363d667f251af17134ab";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
case-insensitive
conduit
conduit-extra
data-default
resourcet
text
transformers
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yihuang/tagstream-conduit";
description = "streamlined html tag parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"tar" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, stdenv
, time
}:
mkDerivation {

pname = "tar";
version = "0.5.1.0";
sha256 = "c89d697b6472b739db50e61201251fcaf8a8f5b595b1d9a488d395d7d5ce4b68";
libraryHaskellDepends = [
array
base
bytestring
containers
deepseq
directory
filepath
time
];
doHaddock = false;
doCheck = false;
description = "Reading, writing and manipulating \".tar\" archive files.";
license = stdenv.lib.licenses.bsd3;

}) {};
"tar-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, conduit-combinators
, directory
, filepath
, safe-exceptions
, stdenv
, text
, unix
}:
mkDerivation {

pname = "tar-conduit";
version = "0.2.3";
sha256 = "579e7b4f452266d86f9385c6f388e3b96115140e56d426d6eb397f614cc142c7";
libraryHaskellDepends = [
base
bytestring
conduit
conduit-combinators
directory
filepath
safe-exceptions
text
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/tar-conduit#readme";
description = "Extract and create tar files using conduit for streaming";
license = stdenv.lib.licenses.mit;

}) {};
"tardis" = callPackage
({
  mkDerivation
, base
, mmorph
, mtl
, stdenv
}:
mkDerivation {

pname = "tardis";
version = "0.4.1.0";
sha256 = "e672abadd75055c2372d722c98058f7f3403fcca18258565d1cdd8e0dc25a5d9";
revision = "1";
editedCabalFile = "1wp6vp90g19hv8r2l83ava7qxf0933gb7ni2zgyfa66vlvxvhibv";
libraryHaskellDepends = [
base
mmorph
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/tardis";
description = "Bidirectional state monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, clock
, containers
, mtl
, optparse-applicative
, stdenv
, stm
, tagged
, unbounded-delays
, unix
}:
mkDerivation {

pname = "tasty";
version = "1.0.1.1";
sha256 = "1a920d41a58402ee93a4b060c3f2792a9b9a444a049ecc58a72d2d3eeadbeeb3";
libraryHaskellDepends = [
ansi-terminal
async
base
clock
containers
mtl
optparse-applicative
stm
tagged
unbounded-delays
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/tasty";
description = "Modern and extensible testing framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-ant-xml" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, generic-deriving
, ghc-prim
, mtl
, stdenv
, stm
, tagged
, tasty
, transformers
, xml
}:
mkDerivation {

pname = "tasty-ant-xml";
version = "1.1.4";
sha256 = "a88aee8127f424155d8cb0237b9c378cfba935579fb2d51fe5d0c009d2d20f6c";
libraryHaskellDepends = [
base
containers
directory
filepath
generic-deriving
ghc-prim
mtl
stm
tagged
tasty
transformers
xml
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/tasty-ant-xml";
description = "Render tasty output to XML for Jenkins";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-auto" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "tasty-auto";
version = "0.2.0.0";
sha256 = "b24e6f45aca98bc83316261d21ac5d9094aede0c5c7179c16ef2f69dfa3cf65a";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
filepath
];
executableHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/tasty-auto#readme";
description = "Auto discovery for Tasty with support for ingredients and test tree generation";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-dejafu" = callPackage
({
  mkDerivation
, base
, dejafu
, random
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-dejafu";
version = "1.1.0.2";
sha256 = "10b831112f458113448f1fa007f4471d450a41c55441b48d8aff03f5ead25b59";
libraryHaskellDepends = [
base
dejafu
random
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barrucadu/dejafu";
description = "Deja Fu support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-discover" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, Glob
, stdenv
}:
mkDerivation {

pname = "tasty-discover";
version = "4.2.1";
sha256 = "be6c5b384614a592fb056e2e4f7806416aa37f114db77d0f8986938ba7cc1d3e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
directory
filepath
Glob
];
executableHaskellDepends = [
base
containers
directory
filepath
Glob
];
doHaddock = false;
doCheck = false;
homepage = "http://git.coop/lwm/tasty-discover";
description = "Test discovery for the tasty framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-expected-failure" = callPackage
({
  mkDerivation
, base
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-expected-failure";
version = "0.11.1.1";
sha256 = "519a5c0d2ef9dd60355479f11ca47423133364f20ad3151f3c8b105313405ac4";
libraryHaskellDepends = [
base
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nomeata/tasty-expected-failure";
description = "Mark tasty tests as failure expected";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-golden" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, mtl
, optparse-applicative
, process
, stdenv
, tagged
, tasty
, temporary
}:
mkDerivation {

pname = "tasty-golden";
version = "2.3.1.3";
sha256 = "3718b9e6288653f022602afd3f380fe52b053ade2242f2fbecff0921ed4231f7";
libraryHaskellDepends = [
async
base
bytestring
containers
deepseq
directory
filepath
mtl
optparse-applicative
process
tagged
tasty
temporary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/tasty-golden";
description = "Golden tests support for tasty";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-hedgehog" = callPackage
({
  mkDerivation
, base
, hedgehog
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-hedgehog";
version = "0.2.0.0";
sha256 = "5a107fc3094efc50663e4634331a296281318b38c9902969c2d2d215d754a182";
revision = "4";
editedCabalFile = "04d7lhn0dlqna0pqz7wxmz2y6vq7qar2m2g432z38cvm5na9w4y0";
libraryHaskellDepends = [
base
hedgehog
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/qfpl/tasty-hedgehog";
description = "Integration for tasty and hedgehog";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-hspec" = callPackage
({
  mkDerivation
, base
, hspec
, hspec-core
, QuickCheck
, stdenv
, tasty
, tasty-quickcheck
, tasty-smallcheck
}:
mkDerivation {

pname = "tasty-hspec";
version = "1.1.4";
sha256 = "e3ce0f18870a117e799c04709ace8c95455b2a87ec100083b3de62a01ecbc49d";
revision = "2";
editedCabalFile = "1ijz75l5jhyxjk6hjrhbsw4470dxfdnwdwn9q3akxbmk095hpzjl";
libraryHaskellDepends = [
base
hspec
hspec-core
QuickCheck
tasty
tasty-quickcheck
tasty-smallcheck
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mitchellwrosen/tasty-hspec";
description = "Hspec support for the Tasty test framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-html" = callPackage
({
  mkDerivation
, base
, blaze-html
, bytestring
, containers
, filepath
, generic-deriving
, mtl
, stdenv
, stm
, tagged
, tasty
, text
, transformers
}:
mkDerivation {

pname = "tasty-html";
version = "0.4.1.1";
sha256 = "0eea1c9fcf1ef3aeb94b811086e11d87ce59f90bb91afa8765152b943c591f1a";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
blaze-html
bytestring
containers
filepath
generic-deriving
mtl
stm
tagged
tasty
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/feuerbach/tasty-html";
description = "Render tasty output to HTML";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-hunit" = callPackage
({
  mkDerivation
, base
, call-stack
, stdenv
, tasty
}:
mkDerivation {

pname = "tasty-hunit";
version = "0.10.0.1";
sha256 = "8f903bef276ef503e4ef8b66a1e201c224588e426bc76f7581480f66d47b7048";
libraryHaskellDepends = [
base
call-stack
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/tasty";
description = "HUnit support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-kat" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, tasty
}:
mkDerivation {

pname = "tasty-kat";
version = "0.0.3";
sha256 = "a72501f0f77db372648566bbba1dd1d6d0d0c975b42238875d663313e9a5db93";
libraryHaskellDepends = [
base
bytestring
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/tasty-kat";
description = "Known Answer Tests (KAT) framework for tasty";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-program" = callPackage
({
  mkDerivation
, base
, deepseq
, directory
, filepath
, process
, stdenv
, tasty
}:
mkDerivation {

pname = "tasty-program";
version = "1.0.5";
sha256 = "4cb255ad5f037029cc6ae244fffdfb0ed7c65a4b0575d98ec61c067d6f5829c4";
libraryHaskellDepends = [
base
deepseq
directory
filepath
process
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jstolarek/tasty-program";
description = "Use tasty framework to test whether a program executes correctly";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-quickcheck" = callPackage
({
  mkDerivation
, base
, QuickCheck
, random
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-quickcheck";
version = "0.9.2";
sha256 = "c5920adeab6e283d5e3ab45f3c80a1b011bedfbe4a3246a52606da2e1da95873";
libraryHaskellDepends = [
base
QuickCheck
random
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/tasty";
description = "QuickCheck support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-rerun" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, optparse-applicative
, reducers
, split
, stdenv
, stm
, tagged
, tasty
, transformers
}:
mkDerivation {

pname = "tasty-rerun";
version = "1.1.12";
sha256 = "a8ed0dbacacde31d9d467a50d77692c25844d0201a1a6cb509a9716afc279716";
libraryHaskellDepends = [
base
containers
mtl
optparse-applicative
reducers
split
stm
tagged
tasty
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ocharles/tasty-rerun";
description = "Run tests by filtering the test tree depending on the result of previous test runs";
license = stdenv.lib.licenses.bsd3;

}) {};
"tasty-silver" = callPackage
({
  mkDerivation
, ansi-terminal
, async
, base
, bytestring
, containers
, deepseq
, directory
, filepath
, mtl
, optparse-applicative
, process
, process-extras
, regex-tdfa
, semigroups
, stdenv
, stm
, tagged
, tasty
, temporary
, text
}:
mkDerivation {

pname = "tasty-silver";
version = "3.1.11";
sha256 = "5f2170cee1f3104d1e8d6937bb032b57ca712704500286aae5e7e8608cf073e7";
libraryHaskellDepends = [
ansi-terminal
async
base
bytestring
containers
deepseq
directory
filepath
mtl
optparse-applicative
process
process-extras
regex-tdfa
semigroups
stm
tagged
tasty
temporary
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phile314/tasty-silver";
description = "A fancy test runner, including support for golden tests";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-smallcheck" = callPackage
({
  mkDerivation
, async
, base
, smallcheck
, stdenv
, tagged
, tasty
}:
mkDerivation {

pname = "tasty-smallcheck";
version = "0.8.1";
sha256 = "314ba7acdb7793730e7677f553a72dd6a4a8f9a45ff3e931cd7d384affb3c6d8";
libraryHaskellDepends = [
async
base
smallcheck
tagged
tasty
];
doHaddock = false;
doCheck = false;
homepage = "http://documentup.com/feuerbach/tasty";
description = "SmallCheck support for the Tasty test framework";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-stats" = callPackage
({
  mkDerivation
, base
, containers
, directory
, process
, stdenv
, stm
, tagged
, tasty
, time
}:
mkDerivation {

pname = "tasty-stats";
version = "0.2.0.4";
sha256 = "a64d018056c746efde87e830ff2e7bcd0b65b6582de96d493ca706ea0325447c";
libraryHaskellDepends = [
base
containers
directory
process
stm
tagged
tasty
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/tasty-stats#readme";
description = "Collect statistics of your Tasty testsuite";
license = stdenv.lib.licenses.mit;

}) {};
"tasty-th" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, stdenv
, tasty
, template-haskell
}:
mkDerivation {

pname = "tasty-th";
version = "0.1.7";
sha256 = "435aac8f317e2f8cb1aa96fb3f7c9003c1ac28e6d3ca4c3c23f5142178de512c";
libraryHaskellDepends = [
base
haskell-src-exts
tasty
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bennofs/tasty-th";
description = "Automatic tasty test case discovery using TH";
license = stdenv.lib.licenses.bsd3;

}) {};
"tce-conf" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "tce-conf";
version = "1.3";
sha256 = "b051843bb941ed137242edfcfb28b1c15083951272fe292e82c140c9e1ad26a2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
];
executableHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/dino/tce-conf";
description = "Very simple config file reading";
license = stdenv.lib.licenses.bsd3;

}) {};
"tcp-streams" = callPackage
({
  mkDerivation
, base
, bytestring
, data-default-class
, io-streams
, network
, pem
, stdenv
, tls
, x509
, x509-store
, x509-system
}:
mkDerivation {

pname = "tcp-streams";
version = "1.0.1.0";
sha256 = "77d812e5db567875ca26c2682ceddf4bcf825d90dd10dcb171279bd7e96e4861";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
data-default-class
io-streams
network
pem
tls
x509
x509-store
x509-system
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/didi-FP/tcp-streams";
description = "One stop solution for tcp client and server with tls support";
license = stdenv.lib.licenses.bsd3;

}) {};
"tcp-streams-openssl" = callPackage
({
  mkDerivation
, base
, bytestring
, HsOpenSSL
, HsOpenSSL-x509-system
, io-streams
, network
, stdenv
, tcp-streams
}:
mkDerivation {

pname = "tcp-streams-openssl";
version = "1.0.1.0";
sha256 = "c3e7588ba7348fac87a9dcc531909f90bb3b4a1c01da9eb871a918d02b146afe";
libraryHaskellDepends = [
base
bytestring
HsOpenSSL
HsOpenSSL-x509-system
io-streams
network
tcp-streams
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/didi-FP/tcp-streams";
description = "Tcp streams using openssl for tls support";
license = stdenv.lib.licenses.bsd3;

}) {};
"tdigest" = callPackage
({
  mkDerivation
, base
, base-compat
, binary
, Cabal
, cabal-doctest
, deepseq
, reducers
, semigroupoids
, semigroups
, stdenv
, vector
, vector-algorithms
}:
mkDerivation {

pname = "tdigest";
version = "0.1";
sha256 = "0036b3aebe6556ced3a108579846346c9123d65c9dcd09c1d44435a64e3dc54b";
revision = "2";
editedCabalFile = "0g54mzya141wllmsv977san1qz08lz2z36znkv6cqxh8z4vyfwdk";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
base-compat
binary
deepseq
reducers
semigroupoids
semigroups
vector
vector-algorithms
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/futurice/haskell-tdigest#readme";
description = "On-line accumulation of rank-based statistics";
license = stdenv.lib.licenses.bsd3;

}) {};
"teardown" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, deepseq
, exceptions
, protolude
, safe-exceptions
, stdenv
, text
, time
}:
mkDerivation {

pname = "teardown";
version = "0.3.0.0";
sha256 = "82354f49f7a32d86cd53cf999abe95324fc3ddd904f306f05cd694568741876c";
libraryHaskellDepends = [
ansi-wl-pprint
base
deepseq
exceptions
protolude
safe-exceptions
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/roman/Haskell-teardown#readme";
description = "Build composable components for your application with clear teardown semantics";
license = stdenv.lib.licenses.mit;

}) {};
"template" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "template";
version = "0.2.0.10";
sha256 = "8fd5a321b1c62f8ca5ed68c098e676917a5dac4d65809fceaed4b52c22b4ac82";
libraryHaskellDepends = [
base
mtl
text
];
doHaddock = false;
doCheck = false;
description = "Simple string substitution";
license = stdenv.lib.licenses.bsd3;

}) {};
"temporary" = callPackage
({
  mkDerivation
, base
, directory
, exceptions
, filepath
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "temporary";
version = "1.2.1.1";
sha256 = "55772471e59529f4bde9555f6abb21d19a611c7d70b13befe114dc1a0ecb00f3";
libraryHaskellDepends = [
base
directory
exceptions
filepath
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/temporary";
description = "Portable temporary file and directory support";
license = stdenv.lib.licenses.bsd3;

}) {};
"temporary-rc" = callPackage
({
  mkDerivation
, base
, directory
, exceptions
, filepath
, stdenv
, transformers
, unix
}:
mkDerivation {

pname = "temporary-rc";
version = "1.2.0.3";
sha256 = "1a4f8dd65f7db92316a68ef64c3518873799115babce92ef9869103d318011db";
libraryHaskellDepends = [
base
directory
exceptions
filepath
transformers
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/feuerbach/temporary";
description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
license = stdenv.lib.licenses.bsd3;

}) {};
"tensorflow-test" = callPackage
({
  mkDerivation
, base
, HUnit
, stdenv
, vector
}:
mkDerivation {

pname = "tensorflow-test";
version = "0.1.0.0";
sha256 = "378217dde895daf6599a8d3fb07ed59de5e2d8024958277558faca190bb44afc";
libraryHaskellDepends = [
base
HUnit
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tensorflow/haskell#readme";
description = "Some common functions for test suites";
license = stdenv.lib.licenses.asl20;

}) {};
"termcolor" = callPackage
({
  mkDerivation
, base
, cli
, stdenv
}:
mkDerivation {

pname = "termcolor";
version = "0.2.0.0";
sha256 = "b09d399a733d867cb05dc51de4ee31d5db73cd453099e342973da91c30f21a90";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
executableHaskellDepends = [
base
cli
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mdibaiee/termcolor#readme";
description = "Composable terminal colors";
license = stdenv.lib.licenses.gpl3;

}) {};
"terminal-progress-bar" = callPackage
({
  mkDerivation
, async
, base
, stdenv
, stm
, stm-chans
, terminal-size
}:
mkDerivation {

pname = "terminal-progress-bar";
version = "0.2";
sha256 = "d6b134fb6f7b1cbe67004153608a77701f45532bad9618ead6dac1dae9f84a14";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
stm
stm-chans
terminal-size
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/roelvandijk/terminal-progress-bar";
description = "A simple progress bar in the terminal";
license = stdenv.lib.licenses.bsd3;

}) {};
"terminal-size" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "terminal-size";
version = "0.3.2.1";
sha256 = "b5c23e964756bc13914649a67d63233f59ad0a813abe7cadeb2fc9d586dc9658";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Get terminal window height and width";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-fixture" = callPackage
({
  mkDerivation
, base
, data-default-class
, exceptions
, haskell-src-exts
, haskell-src-meta
, mtl
, stdenv
, template-haskell
, th-orphans
}:
mkDerivation {

pname = "test-fixture";
version = "0.5.1.0";
sha256 = "9b1bd8e6984146679f8a86f8d83069fd7a9461107417b657d4fb1d2eba3d5ed6";
libraryHaskellDepends = [
base
data-default-class
exceptions
haskell-src-exts
haskell-src-meta
mtl
template-haskell
th-orphans
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/cjdev/test-fixture#readme";
description = "Test monadic side-effects";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework" = callPackage
({
  mkDerivation
, ansi-terminal
, ansi-wl-pprint
, base
, containers
, hostname
, old-locale
, random
, regex-posix
, stdenv
, time
, xml
}:
mkDerivation {

pname = "test-framework";
version = "0.8.2.0";
sha256 = "f5aec7a15dbcb39e951bcf6502606fd99d751197b5510f41706899aa7e660ac2";
libraryHaskellDepends = [
ansi-terminal
ansi-wl-pprint
base
containers
hostname
old-locale
random
regex-posix
time
xml
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.github.io/test-framework/";
description = "Framework for running and organising tests, with HUnit and QuickCheck support";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-hunit" = callPackage
({
  mkDerivation
, base
, extensible-exceptions
, HUnit
, stdenv
, test-framework
}:
mkDerivation {

pname = "test-framework-hunit";
version = "0.3.0.2";
sha256 = "95cb8ee02a850b164bfdabdf4dbc839d621361f3ac770ad21ea43a8bde360bf8";
revision = "3";
editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
libraryHaskellDepends = [
base
extensible-exceptions
HUnit
test-framework
];
doHaddock = false;
doCheck = false;
homepage = "https://batterseapower.github.io/test-framework/";
description = "HUnit support for the test-framework package";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-quickcheck2" = callPackage
({
  mkDerivation
, base
, extensible-exceptions
, QuickCheck
, random
, stdenv
, test-framework
}:
mkDerivation {

pname = "test-framework-quickcheck2";
version = "0.3.0.4";
sha256 = "d763afb99fa14cffaccbfad259534a656be129329ba12246fed2e4330619486e";
revision = "1";
editedCabalFile = "147ngmfdkskyg7mwsp5w73a4dbx3rp5s38bci3z03kn1m093lxff";
libraryHaskellDepends = [
base
extensible-exceptions
QuickCheck
random
test-framework
];
doHaddock = false;
doCheck = false;
homepage = "http://haskell.github.io/test-framework/";
description = "QuickCheck-2 support for the test-framework package";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-smallcheck" = callPackage
({
  mkDerivation
, base
, smallcheck
, stdenv
, test-framework
, transformers
}:
mkDerivation {

pname = "test-framework-smallcheck";
version = "0.2";
sha256 = "6081c4f35967b0d0cb92ac09a915fa9e2da01c401266b20ce18793fbc2bceff6";
libraryHaskellDepends = [
base
smallcheck
test-framework
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/smallcheck";
description = "Support for SmallCheck tests in test-framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"test-framework-th" = callPackage
({
  mkDerivation
, base
, haskell-src-exts
, language-haskell-extract
, regex-posix
, stdenv
, template-haskell
, test-framework
}:
mkDerivation {

pname = "test-framework-th";
version = "0.2.4";
sha256 = "8b780d9e3edd8d91e24f72d9fa1f80420e52959428ad7c22d0694901a43f9c8a";
libraryHaskellDepends = [
base
haskell-src-exts
language-haskell-extract
regex-posix
template-haskell
test-framework
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/finnsson/test-generator";
description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"testing-feat" = callPackage
({
  mkDerivation
, base
, mtl
, QuickCheck
, stdenv
, tagshare
, template-haskell
}:
mkDerivation {

pname = "testing-feat";
version = "0.4.0.3";
sha256 = "34ca9c7849c4054b951cb359dc55ec1d24f5c2f7cf31d6211959778ad35407ce";
revision = "1";
editedCabalFile = "05j5i1sfg1k94prhwmg6z50w0flb9k181nhabwr3m9gkrrqzb4b4";
libraryHaskellDepends = [
base
mtl
QuickCheck
tagshare
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Functional Enumeration of Algebraic Types";
license = stdenv.lib.licenses.bsd3;

}) {};
"texmath" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, pandoc-types
, parsec
, stdenv
, syb
, xml
}:
mkDerivation {

pname = "texmath";
version = "0.10.1.2";
sha256 = "fda230b0ce48efb1f45f14c47d3db255466b973f42699507d53f8a7ca8a5d821";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
mtl
pandoc-types
parsec
syb
xml
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/texmath";
description = "Conversion between formats used to represent mathematics";
license = stdenv.lib.licenses.gpl2;

}) {};
"text" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, deepseq
, ghc-prim
, integer-gmp
, stdenv
}:
mkDerivation {

pname = "text";
version = "1.2.3.0";
sha256 = "20e0b1627f613b32cc7f2d2e8dcc48a4a61938b24f3d14fb77cee694f0c9311a";
libraryHaskellDepends = [
array
base
binary
bytestring
deepseq
ghc-prim
integer-gmp
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/text";
description = "An efficient packed Unicode text type";
license = stdenv.lib.licenses.bsd2;

}) {};
"text-binary" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
, text
}:
mkDerivation {

pname = "text-binary";
version = "0.2.1.1";
sha256 = "b697b2bd09080643d4686705c779122129638904870df5c1d41c8fc72f08f4a1";
libraryHaskellDepends = [
base
binary
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kawu/text-binary";
description = "Binary instances for text types";
license = stdenv.lib.licenses.bsd2;

}) {};
"text-conversions" = callPackage
({
  mkDerivation
, base
, base16-bytestring
, base64-bytestring
, bytestring
, errors
, stdenv
, text
}:
mkDerivation {

pname = "text-conversions";
version = "0.3.0";
sha256 = "1756be2f6b515fea9e00b383c00d1ee851f8b25ddbc2901dd6be27d9b6292c21";
libraryHaskellDepends = [
base
base16-bytestring
base64-bytestring
bytestring
errors
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cjdev/text-conversions#readme";
description = "Safe conversions between textual types";
license = stdenv.lib.licenses.isc;

}) {};
"text-format" = callPackage
({
  mkDerivation
, array
, base
, double-conversion
, ghc-prim
, integer-gmp
, old-locale
, stdenv
, text
, time
, transformers
}:
mkDerivation {

pname = "text-format";
version = "0.3.1.1";
sha256 = "6de112764446a65370204f35a5fc4b1831106049f90918545d5dcd2ddd7fee0b";
revision = "1";
editedCabalFile = "1ap2paddh2q1ifs3nwdj0f1r7fypnsa669l7gdvgyfidz3w5vzic";
libraryHaskellDepends = [
array
base
double-conversion
ghc-prim
integer-gmp
old-locale
text
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/text-format";
description = "Text formatting";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-generic-pretty" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, groom
, ixset-typed
, protolude
, QuickCheck
, stdenv
, string-conversions
, text
, time
, unordered-containers
, wl-pprint-text
}:
mkDerivation {

pname = "text-generic-pretty";
version = "1.2.1";
sha256 = "cff331fdea2f695cf9a2583f4bd7393935b4a6ffa2bd47eb7dd983c6184752c7";
libraryHaskellDepends = [
base
containers
ghc-prim
groom
ixset-typed
protolude
QuickCheck
string-conversions
text
time
unordered-containers
wl-pprint-text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joe9/GenericPretty";
description = "A generic, derivable, haskell pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-icu" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, icu
, stdenv
, text
}:
mkDerivation {

pname = "text-icu";
version = "0.7.0.1";
sha256 = "e2764c2749033706eed5b9fb3cda11177ad15cdf11912028f551eca39a2c7f78";
libraryHaskellDepends = [
base
bytestring
deepseq
text
];
librarySystemDepends = [
icu
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/text-icu";
description = "Bindings to the ICU library";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) icu;};
"text-latin1" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, data-checked
, hashable
, semigroups
, stdenv
, text
}:
mkDerivation {

pname = "text-latin1";
version = "0.3.1";
sha256 = "6c7482ae0cfde06fe6ad8f0e6ea6b0d082d27a075370b5c018c31e53aad9abf3";
libraryHaskellDepends = [
base
bytestring
case-insensitive
data-checked
hashable
semigroups
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/text-latin1";
description = "Latin-1 (including ASCII) utility functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-ldap" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, containers
, dlist
, memory
, stdenv
, transformers
}:
mkDerivation {

pname = "text-ldap";
version = "0.1.1.12";
sha256 = "7d65962e68c52c2785c779679ebd365c7c84b26c640c42a0897f5754ed39d7cd";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
bytestring
containers
dlist
memory
transformers
];
executableHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
description = "Parser and Printer for LDAP text data stream";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-manipulate" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "text-manipulate";
version = "0.2.0.1";
sha256 = "e0e9c71d9b1cfb7d3bca3d0a500d939b3efc6684515c0d7bd685503aa4f49d2f";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/brendanhay/text-manipulate";
description = "Case conversion, word boundary manipulation, and textual subjugation";
license = "unknown";

}) {};
"text-metrics" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, text
, vector
}:
mkDerivation {

pname = "text-metrics";
version = "0.3.0";
sha256 = "3874af74060e35f01702640b353ac2180d93bb5d292a204e0ee3cadd26efbfa2";
revision = "2";
editedCabalFile = "1371qwwmq8w4p6zg0z43qnrpf9yb8yadnw97ka56mx4jlagrdm8n";
libraryHaskellDepends = [
base
containers
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/text-metrics";
description = "Calculate various string metrics efficiently";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-postgresql" = callPackage
({
  mkDerivation
, base
, dlist
, stdenv
, transformers
, transformers-compat
}:
mkDerivation {

pname = "text-postgresql";
version = "0.0.3.0";
sha256 = "654017986968d54dba0b0a8c48d51adbb37ab9d8325a0637aabdc71f62466035";
libraryHaskellDepends = [
base
dlist
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://khibino.github.io/haskell-relational-record/";
description = "Parser and Printer of PostgreSQL extended types";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-printer" = callPackage
({
  mkDerivation
, base
, bytestring
, pretty
, semigroups
, stdenv
, text
, text-latin1
}:
mkDerivation {

pname = "text-printer";
version = "0.5";
sha256 = "8f0c01a6a15b4314c2d47ab5f0772d176ec38f1c1fe190b9fa7db5149a6c4a0b";
libraryHaskellDepends = [
base
bytestring
pretty
semigroups
text
text-latin1
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/text-printer";
description = "Abstract interface for text builders/printers";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-region" = callPackage
({
  mkDerivation
, aeson
, base
, base-unicode-symbols
, bytestring
, groups
, lens
, stdenv
, text
}:
mkDerivation {

pname = "text-region";
version = "0.3.1.0";
sha256 = "a74cac02ae5b3c37d09d415f2440a2ea1977145b962b3e291c6484d7cffac5ff";
libraryHaskellDepends = [
aeson
base
base-unicode-symbols
bytestring
groups
lens
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvoidex/text-region";
description = "Marking text regions";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-short" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, ghc-prim
, hashable
, stdenv
, text
}:
mkDerivation {

pname = "text-short";
version = "0.1.2";
sha256 = "b3f2b867d14c7c2586ea580028606b6662293ad080726d5241def937e5e31167";
libraryHaskellDepends = [
base
binary
bytestring
deepseq
ghc-prim
hashable
text
];
doHaddock = false;
doCheck = false;
description = "Memory-efficient representation of Unicode text strings";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-show" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, bifunctors
, bytestring
, bytestring-builder
, containers
, contravariant
, generic-deriving
, ghc-boot-th
, ghc-prim
, integer-gmp
, nats
, semigroups
, stdenv
, tagged
, template-haskell
, text
, th-abstraction
, th-lift
, transformers
, transformers-compat
, void
}:
mkDerivation {

pname = "text-show";
version = "3.7.2";
sha256 = "7a20d6d9608184899b0a28e6e58f622762c04f68c2acaf4f74fb07c407f2673d";
revision = "2";
editedCabalFile = "0fjysjlmvvzvndxsni2ja92kr1pyqgl4dyc5c7x2ffaf02g9h2d2";
libraryHaskellDepends = [
array
base
base-compat
bifunctors
bytestring
bytestring-builder
containers
contravariant
generic-deriving
ghc-boot-th
ghc-prim
integer-gmp
nats
semigroups
tagged
template-haskell
text
th-abstraction
th-lift
transformers
transformers-compat
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/text-show";
description = "Efficient conversion of values into Text";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-show-instances" = callPackage
({
  mkDerivation
, base
, base-compat
, bifunctors
, binary
, bytestring
, containers
, directory
, ghc-boot-th
, haskeline
, hoopl
, hpc
, old-locale
, old-time
, pretty
, process
, random
, semigroups
, stdenv
, tagged
, template-haskell
, terminfo
, text
, text-show
, time
, transformers
, transformers-compat
, unix
, unordered-containers
, vector
, xhtml
}:
mkDerivation {

pname = "text-show-instances";
version = "3.6.3";
sha256 = "d9a5a5d397c463d7f456bb237a99f4c7c21990aa8801d42c2111c6dec15f6591";
libraryHaskellDepends = [
base
base-compat
bifunctors
binary
bytestring
containers
directory
ghc-boot-th
haskeline
hoopl
hpc
old-locale
old-time
pretty
process
random
semigroups
tagged
template-haskell
terminfo
text
text-show
time
transformers
transformers-compat
unix
unordered-containers
vector
xhtml
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/RyanGlScott/text-show-instances";
description = "Additional instances for text-show";
license = stdenv.lib.licenses.bsd3;

}) {};
"text-zipper" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, text
, vector
}:
mkDerivation {

pname = "text-zipper";
version = "0.10.1";
sha256 = "9afaeb93d55b0bb6d0d6f495e3ff0789a60d0dee57fb6103f52e4c05ae64b14b";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
deepseq
text
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/text-zipper/";
description = "A text editor zipper library";
license = stdenv.lib.licenses.bsd3;

}) {};
"textlocal" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, http-client
, http-client-tls
, http-conduit
, stdenv
, text
, unix-time
}:
mkDerivation {

pname = "textlocal";
version = "0.1.0.5";
sha256 = "8954ff6270c9920fc390be6b9f398975ea06dd6808a411cbf8fa5fb4a9cf3087";
libraryHaskellDepends = [
aeson
base
bytestring
http-client
http-client-tls
http-conduit
text
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/just-chow/textlocal";
description = "Haskell wrapper for textlocal SMS gateway";
license = stdenv.lib.licenses.bsd3;

}) {};
"tf-random" = callPackage
({
  mkDerivation
, base
, primitive
, random
, stdenv
, time
}:
mkDerivation {

pname = "tf-random";
version = "0.5";
sha256 = "2e30cec027b313c9e1794d326635d8fc5f79b6bf6e7580ab4b00186dadc88510";
libraryHaskellDepends = [
base
primitive
random
time
];
doHaddock = false;
doCheck = false;
description = "High-quality splittable pseudorandom number generator";
license = stdenv.lib.licenses.bsd3;

}) {};
"tfp" = callPackage
({
  mkDerivation
, base
, stdenv
, utility-ht
}:
mkDerivation {

pname = "tfp";
version = "1.0.0.2";
sha256 = "9a817090cb91f78424affc3bfb6a7ea65b520087b779c9fd501fc9779e654cda";
libraryHaskellDepends = [
base
utility-ht
];
doHaddock = false;
doCheck = false;
homepage = "http://www.haskell.org/haskellwiki/Type_arithmetic";
description = "Type-level integers, booleans, lists using type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-abstraction" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-abstraction";
version = "0.2.6.0";
sha256 = "e52e289a547d68f203d65f2e63ec2d87a3c613007d2fe873615c0969b981823c";
revision = "1";
editedCabalFile = "0k4s4nbg9jlgaza38842jnzs8s01ig85fzmjgd10k9hl02gc3r44";
libraryHaskellDepends = [
base
containers
ghc-prim
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/glguy/th-abstraction";
description = "Nicer interface for reified information about data types";
license = stdenv.lib.licenses.isc;

}) {};
"th-data-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-data-compat";
version = "0.0.2.6";
sha256 = "422fa20a0df78a5c47d0867d3094e4f0a5ba9b3f7118300af7c580156fce78bd";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Compatibility for data definition template of TH";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-desugar" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, syb
, template-haskell
, th-expand-syns
, th-lift
, th-orphans
}:
mkDerivation {

pname = "th-desugar";
version = "1.7";
sha256 = "52b31ca68f27cd9d73c4def58ce12350ec525c6bbeed00d37e5085ae9ac214c7";
revision = "1";
editedCabalFile = "06cxv8yx2dwppzzb9vjqiic2hiaiiqakg0kv0byp9k00sidabbm3";
libraryHaskellDepends = [
base
containers
mtl
syb
template-haskell
th-expand-syns
th-lift
th-orphans
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/goldfirere/th-desugar";
description = "Functions to desugar Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-expand-syns" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "th-expand-syns";
version = "0.4.4.0";
sha256 = "cc0f52d1364ace9ba56f51afd9106a5fe01ed3f5ae45c958c1b0f83be0a6f906";
libraryHaskellDepends = [
base
containers
syb
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanielSchuessler/th-expand-syns";
description = "Expands type synonyms in Template Haskell ASTs";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-extras" = callPackage
({
  mkDerivation
, base
, stdenv
, syb
, template-haskell
}:
mkDerivation {

pname = "th-extras";
version = "0.0.0.4";
sha256 = "8feff450aaf28ec4f08c45a5656c62879861a8e7f45591cb367d5351ddc3fbed";
libraryHaskellDepends = [
base
syb
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mokus0/th-extras";
description = "A grab bag of functions for use with Template Haskell";
license = stdenv.lib.licenses.publicDomain;

}) {};
"th-lift" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, template-haskell
, th-abstraction
}:
mkDerivation {

pname = "th-lift";
version = "0.7.10";
sha256 = "b9ce47a1e5e50d273606e826c1210b724f1af2f302a1de71cd5c9297724d888d";
libraryHaskellDepends = [
base
ghc-prim
template-haskell
th-abstraction
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mboes/th-lift";
description = "Derive Template Haskell's Lift class for datatypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-lift-instances" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
, template-haskell
, text
, th-lift
, vector
}:
mkDerivation {

pname = "th-lift-instances";
version = "0.1.11";
sha256 = "1da46afabdc73c86f279a0557d5a8f9af1296f9f6043264ba354b1c9cc65a6b8";
libraryHaskellDepends = [
base
bytestring
containers
template-haskell
text
th-lift
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/bennofs/th-lift-instances/";
description = "Lift instances for template-haskell for common data types";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-orphans" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, template-haskell
, th-lift
, th-lift-instances
, th-reify-many
}:
mkDerivation {

pname = "th-orphans";
version = "0.13.5";
sha256 = "95644d4b7914317e1dd31095947b8371f1a18be0c09e75f0e29203eb774a25ad";
revision = "1";
editedCabalFile = "1rgsrnh0qvlriz0c2c3q8wbb3ykby8d3lli0j553ml3n1sn9k4zv";
libraryHaskellDepends = [
base
mtl
template-haskell
th-lift
th-lift-instances
th-reify-many
];
doHaddock = false;
doCheck = false;
description = "Orphan instances for TH datatypes";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-reify-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-reify-compat";
version = "0.0.1.4";
sha256 = "089f9dda73744c533badcf13bc8e7c6dece4518a3a0b3eb5309cf55808a28a22";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/khibino/haskell-th-reify-compat/";
description = "Compatibility for the result type of TH reify";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-reify-many" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, safe
, stdenv
, template-haskell
, th-expand-syns
}:
mkDerivation {

pname = "th-reify-many";
version = "0.1.8";
sha256 = "cecaae187df911de515d08929e1394d6d6f7ce129795be8189a6b10d3734fe43";
libraryHaskellDepends = [
base
containers
mtl
safe
template-haskell
th-expand-syns
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mgsloan/th-reify-many";
description = "Recurseively reify template haskell datatype info";
license = stdenv.lib.licenses.bsd3;

}) {};
"th-strict-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-strict-compat";
version = "0.1.0.1";
sha256 = "c3fad31e4b657047d8dd248803e2206c6a5b7375e22d3940714d0cc42d93aa4a";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/igrep/th-strict-compat";
description = "Compatibility shim for Bang and Strict in Template Haskell";
license = stdenv.lib.licenses.asl20;

}) {};
"th-to-exp" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "th-to-exp";
version = "0.0.1.1";
sha256 = "867f213987ed37798e209fd7adf2d29f1eb7789dc605e0f362cf67f576965825";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lexi-lambda/th-to-exp#readme";
description = "Provides a way to persist data from compile-time to runtime";
license = stdenv.lib.licenses.isc;

}) {};
"th-utilities" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, primitive
, stdenv
, syb
, template-haskell
, text
, th-orphans
}:
mkDerivation {

pname = "th-utilities";
version = "0.2.0.1";
sha256 = "65c64cee69c0d9bf8d0d5d4590aaea7dcf4177f97818526cbb3fac20901671d6";
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
primitive
syb
template-haskell
text
th-orphans
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/th-utilities#readme";
description = "Collection of useful functions for use with Template Haskell";
license = stdenv.lib.licenses.mit;

}) {};
"these" = callPackage
({
  mkDerivation
, aeson
, base
, bifunctors
, binary
, containers
, data-default-class
, deepseq
, hashable
, keys
, mtl
, profunctors
, QuickCheck
, semigroupoids
, stdenv
, transformers
, transformers-compat
, unordered-containers
, vector
, vector-instances
}:
mkDerivation {

pname = "these";
version = "0.7.4";
sha256 = "dcf37d7bab1780fc56663dac1f2eeee7890a4511f66e268aafbf786def8d884a";
revision = "7";
editedCabalFile = "112m4b952zdm1fsjlz8q4ln3arhhiyfi9sb00d797y8fr16bs6yf";
libraryHaskellDepends = [
aeson
base
bifunctors
binary
containers
data-default-class
deepseq
hashable
keys
mtl
profunctors
QuickCheck
semigroupoids
transformers
transformers-compat
unordered-containers
vector
vector-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/isomorphism/these";
description = "An either-or-both data type & a generalized 'zip with padding' typeclass";
license = stdenv.lib.licenses.bsd3;

}) {};
"thread-hierarchy" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, stm
}:
mkDerivation {

pname = "thread-hierarchy";
version = "0.3.0.0";
sha256 = "e8879653bbe54b5134eed23186f98688c4e9819ce9ef4f2e2d01d0f1ae219a18";
libraryHaskellDepends = [
base
containers
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nshimaza/thread-hierarchy#readme";
description = "Simple Haskel thread management in hierarchical manner";
license = stdenv.lib.licenses.mit;

}) {};
"thread-local-storage" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "thread-local-storage";
version = "0.1.2";
sha256 = "85c271438bb702698cb010ec1fb9c63641b1b6519208a4520a5f34f05204d459";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/rrnewton/thread-local-storage";
description = "Several options for thread-local-storage (TLS) in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"threads" = callPackage
({
  mkDerivation
, base
, Cabal
, stdenv
, stm
}:
mkDerivation {

pname = "threads";
version = "0.5.1.6";
sha256 = "139ac3c067fcbb392b5b9c2feaa98184b75ebe7f2e580726eea6ce812d94562e";
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
base
stm
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/threads";
description = "Fork threads and wait for their result";
license = stdenv.lib.licenses.bsd3;

}) {};
"threads-extras" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, threads
}:
mkDerivation {

pname = "threads-extras";
version = "0.1.0.2";
sha256 = "4defab98b8a767b9580413d530e6823e53f6169671e53b6f8b6bfea89fde2575";
libraryHaskellDepends = [
base
stm
threads
];
doHaddock = false;
doCheck = false;
description = "Extends the threads package with a bounded thread group";
license = stdenv.lib.licenses.bsd3;

}) {};
"threepenny-editors" = callPackage
({
  mkDerivation
, base
, bifunctors
, casing
, containers
, generics-sop
, profunctors
, stdenv
, text
, threepenny-gui
}:
mkDerivation {

pname = "threepenny-editors";
version = "0.5.6";
sha256 = "dc56e12c5ecc7cfcc862461747a9cdfe6bfb79b07615d6919bd3f7a186fbcb3e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bifunctors
casing
containers
generics-sop
profunctors
text
threepenny-gui
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/pepeiborra/threepenny-editors";
description = "Composable algebraic editors";
license = stdenv.lib.licenses.bsd3;

}) {};
"threepenny-gui" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, containers
, data-default
, deepseq
, exceptions
, file-embed
, filepath
, hashable
, network-uri
, safe
, snap-core
, snap-server
, stdenv
, stm
, template-haskell
, text
, transformers
, unordered-containers
, vault
, vector
, websockets
, websockets-snap
}:
mkDerivation {

pname = "threepenny-gui";
version = "0.8.2.3";
sha256 = "8be3123765f8f162715f39f5daccddf2d07e2d65ec4ed803312a09ee6228909e";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
async
base
bytestring
containers
data-default
deepseq
exceptions
file-embed
filepath
hashable
network-uri
safe
snap-core
snap-server
stm
template-haskell
text
transformers
unordered-containers
vault
vector
websockets
websockets-snap
];
doHaddock = false;
doCheck = false;
homepage = "http://wiki.haskell.org/Threepenny-gui";
description = "GUI framework that uses the web browser as a display";
license = stdenv.lib.licenses.bsd3;

}) {};
"threepenny-gui-flexbox" = callPackage
({
  mkDerivation
, base
, clay
, stdenv
, text
, threepenny-gui
}:
mkDerivation {

pname = "threepenny-gui-flexbox";
version = "0.4.2";
sha256 = "86862538c0e8448ee7fc9b0b8c47e912587f26db6d1178660d74bf44dca9f0f5";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
clay
text
threepenny-gui
];
executableHaskellDepends = [
base
threepenny-gui
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/barischj/threepenny-gui-flexbox";
description = "Flexbox layouts for Threepenny-gui";
license = stdenv.lib.licenses.bsd3;

}) {};
"throttle-io-stream" = callPackage
({
  mkDerivation
, async
, base
, clock
, stdenv
, stm
, stm-chans
}:
mkDerivation {

pname = "throttle-io-stream";
version = "0.2.0.1";
sha256 = "e897a869062bcb4bcef372cfcf2a1e86699647fab8c721cfb22dbe6c47cf2c8e";
libraryHaskellDepends = [
async
base
clock
stm
stm-chans
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mtesseract/throttle-io-stream#readme";
description = "Throttler between arbitrary IO producer and consumer functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"through-text" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, stdenv
, text
}:
mkDerivation {

pname = "through-text";
version = "0.1.0.0";
sha256 = "933225da128906e61865ccd1da73463781b890d742cbb38f52524d94ac19b4cd";
revision = "3";
editedCabalFile = "1gia9j7zq3g74kqvkzwp68d690nhddix1kpmj23d5a3zns3rxasn";
libraryHaskellDepends = [
base
bytestring
case-insensitive
text
];
doHaddock = false;
doCheck = false;
homepage = "https://www.github.com/bergmark/through-text";
description = "Convert textual types through Text without needing O(n^2) instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"throwable-exceptions" = callPackage
({
  mkDerivation
, base
, safe-exceptions
, stdenv
, template-haskell
}:
mkDerivation {

pname = "throwable-exceptions";
version = "0.1.0.9";
sha256 = "3ab23c1dd24036a5d1229bed2b140ef50259e365e74c97face9d837c50c769a9";
libraryHaskellDepends = [
base
safe-exceptions
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aiya000/hs-throwable-exceptions#README.md";
description = "throwable-exceptions gives the easy way to throw exceptions";
license = stdenv.lib.licenses.mit;

}) {};
"tibetan-utils" = callPackage
({
  mkDerivation
, base
, composition-prelude
, either
, megaparsec
, stdenv
, text
, text-show
}:
mkDerivation {

pname = "tibetan-utils";
version = "0.1.1.5";
sha256 = "38007ff5e5ae38bbd68ff2ee6fd850bedb0da2e81891736146494ba1448f7825";
revision = "1";
editedCabalFile = "0wmfv4dxjhjwsnkc8n7jfhbkvc7zwgcmkj7pvabmhcjzn5ch0dck";
libraryHaskellDepends = [
base
composition-prelude
either
megaparsec
text
text-show
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vmchale/tibetan-utils#readme";
description = "Parse and display tibetan numerals";
license = stdenv.lib.licenses.bsd3;

}) {};
"tidal" = callPackage
({
  mkDerivation
, base
, colour
, containers
, hashable
, hosc
, mersenne-random-pure64
, mtl
, parsec
, safe
, semigroups
, stdenv
, text
, time
, websockets
}:
mkDerivation {

pname = "tidal";
version = "0.9.9";
sha256 = "f9ad27a5a0283a0bb4c53d973144a0da5c07651ad2a7671eadcb0b3e83b5ebfe";
libraryHaskellDepends = [
base
colour
containers
hashable
hosc
mersenne-random-pure64
mtl
parsec
safe
semigroups
text
time
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://tidalcycles.org/";
description = "Pattern language for improvised music";
license = stdenv.lib.licenses.gpl3;

}) {};
"tile" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "tile";
version = "0.3.0.0";
sha256 = "15ed186360bea0bfc64dd4e6fc27b4e4aed9ba2cc344f1d8ea69687933cc65f0";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/caneroj1/tile#readme";
description = "Slippy map tile functionality";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-compat" = callPackage
({
  mkDerivation
, base
, old-time
, stdenv
, time
}:
mkDerivation {

pname = "time-compat";
version = "0.1.0.3";
sha256 = "590711214510c0d2d09780c7fe3b21748bc4802e9053f78ccd6658e951fe0f7f";
libraryHaskellDepends = [
base
old-time
time
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/dag/time-compat";
description = "Compatibility with old-time for the time package";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-lens" = callPackage
({
  mkDerivation
, base
, data-lens-light
, stdenv
, time
}:
mkDerivation {

pname = "time-lens";
version = "0.4.0.2";
sha256 = "d8cbb8fcb79867d4a5fe6bc024d0badd68fad8986f6cdc1161b0f41afa49d01e";
libraryHaskellDepends = [
base
data-lens-light
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/feuerbach/time-lens";
description = "Lens-based interface to Data.Time data structures";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-locale-compat" = callPackage
({
  mkDerivation
, base
, old-locale
, stdenv
, time
}:
mkDerivation {

pname = "time-locale-compat";
version = "0.1.1.4";
sha256 = "f2d165557e2bbd014a4d6615b3e6c177adb034179a307a775e06836f91ebbe62";
libraryHaskellDepends = [
base
old-locale
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/khibino/haskell-time-locale-compat";
description = "Compatibile module for time-format locale";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-locale-vietnamese" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "time-locale-vietnamese";
version = "1.0.0.0";
sha256 = "96062db31c2a858c20c8e3eb10aaff93e87f6514f335c14d0243429a7f730b76";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tungd/time-locale-vietnamese#readme";
description = "Vietnamese locale for date and time format";
license = stdenv.lib.licenses.asl20;

}) {};
"time-parsers" = callPackage
({
  mkDerivation
, base
, parsers
, stdenv
, template-haskell
, time
}:
mkDerivation {

pname = "time-parsers";
version = "0.1.2.0";
sha256 = "4e50d40f13f8e6c5175be22b91586f909607ecb631f8209ff45bce2031bb3c24";
revision = "2";
editedCabalFile = "1qvhmwkdb4a0msxpfssyqdz0fmi45iv7iwmw7b1mf4flqz6jvaql";
libraryHaskellDepends = [
base
parsers
template-haskell
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/time-parsers#readme";
description = "Parsers for types in `time`";
license = stdenv.lib.licenses.bsd3;

}) {};
"time-units" = callPackage
({
  mkDerivation
, base
, fetchgit
, stdenv
}:
mkDerivation {

pname = "time-units";
version = "1.0.0";
src = fetchgit {

url = "https://github.com/serokell/time-units.git";
sha256 = "0psdr1if0rgnn24698x3583m0603rwd3sd7yb9whj03hskmkwpgs";
rev = "6c3747c1ac794f952de996dd7ba8a2f6d63bf132";

};
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/acw/time-units";
description = "A basic library for defining units of time as types";
license = stdenv.lib.licenses.bsd3;

}) {};
"timeit" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "timeit";
version = "2.0";
sha256 = "a14df4e578db371e5c609f0784209144545f9cae90026d24a3398042f7c591ea";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/merijn/timeit";
description = "Time monadic computations with an IO base";
license = stdenv.lib.licenses.bsd3;

}) {};
"timelens" = callPackage
({
  mkDerivation
, base
, lens
, stdenv
, time
}:
mkDerivation {

pname = "timelens";
version = "0.2.0.2";
sha256 = "f4e6fa016ec37f79c96a62cff174929f04152831c308ab1f9a797f5b5674a764";
libraryHaskellDepends = [
base
lens
time
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/massysett/timelens";
description = "Lenses for the time package";
license = stdenv.lib.licenses.bsd3;

}) {};
"timemap" = callPackage
({
  mkDerivation
, base
, containers
, focus
, hashable
, list-t
, stdenv
, stm
, stm-containers
, time
, unordered-containers
}:
mkDerivation {

pname = "timemap";
version = "0.0.7";
sha256 = "2f4b99d9ebf1be931bc20c9274a6ec9e309c309829f2e463848c64b0022e3d1b";
libraryHaskellDepends = [
base
containers
focus
hashable
list-t
stm
stm-containers
time
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/timemap#readme";
license = stdenv.lib.licenses.bsd3;

}) {};
"timerep" = callPackage
({
  mkDerivation
, attoparsec
, base
, monoid-subclasses
, stdenv
, text
, time
}:
mkDerivation {

pname = "timerep";
version = "2.0.0.2";
sha256 = "1d4e417f3ca08921941c16791680e13b66fb1844d94759068846ede78c965339";
libraryHaskellDepends = [
attoparsec
base
monoid-subclasses
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/HugoDaniel/timerep";
description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
license = stdenv.lib.licenses.bsd3;

}) {};
"timespan" = callPackage
({
  mkDerivation
, base
, stdenv
, time
}:
mkDerivation {

pname = "timespan";
version = "0.3.0.0";
sha256 = "46a51e1e0d776d65d0094bf8158c938255491fbaa4d4f39b0a1477806312851f";
libraryHaskellDepends = [
base
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/timespan#readme";
description = "Useful timespan datatype and functions";
license = stdenv.lib.licenses.mit;

}) {};
"timezone-olson" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, extensible-exceptions
, stdenv
, time
, timezone-series
}:
mkDerivation {

pname = "timezone-olson";
version = "0.1.9";
sha256 = "32230509029bcf9e1bd95b5ad7ee69b8b0250cffc4bb8f2df88a651b3af74b15";
libraryHaskellDepends = [
base
binary
bytestring
extensible-exceptions
time
timezone-series
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/time-ng/";
description = "A pure Haskell parser and renderer for binary Olson timezone files";
license = stdenv.lib.licenses.bsd3;

}) {};
"timezone-series" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, time
}:
mkDerivation {

pname = "timezone-series";
version = "0.1.9";
sha256 = "e5d35df5dc2408803120602b0a66ed63439e36b38dd0895f3e2159fcbd7d9cae";
libraryHaskellDepends = [
base
deepseq
time
];
doHaddock = false;
doCheck = false;
homepage = "http://projects.haskell.org/time-ng/";
description = "Enhanced timezone handling for Data.Time";
license = stdenv.lib.licenses.bsd3;

}) {};
"tinylog" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, double-conversion
, fast-logger
, stdenv
, text
, transformers
, unix-time
}:
mkDerivation {

pname = "tinylog";
version = "0.14.1";
sha256 = "d13e96117dfcedc861185bee5d1d130a92bce7876cc1ffd041ace2426820df07";
libraryHaskellDepends = [
base
bytestring
containers
double-conversion
fast-logger
text
transformers
unix-time
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/tinylog/";
description = "Simplistic logging using fast-logger";
license = stdenv.lib.licenses.mpl20;

}) {};
"tinytemplate" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "tinytemplate";
version = "0.1.2.0";
sha256 = "30c73964f575bd139ccb214b1123caa99bc330d1904c4d3a5e31e33c31d17d0a";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/dicomgrid/tinytemplate";
description = "A tiny text templating library";
license = stdenv.lib.licenses.mit;

}) {};
"titlecase" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "titlecase";
version = "1.0.1";
sha256 = "e7731c29509d2b41b1d94b89484edffa10b86689a755c4019617a6c9485e49cc";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/peti/titlecase#readme";
description = "Convert English Words to Title Case";
license = stdenv.lib.licenses.bsd3;

}) {};
"tldr" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, bytestring
, cmark
, directory
, filepath
, optparse-applicative
, semigroups
, stdenv
, text
, typed-process
}:
mkDerivation {

pname = "tldr";
version = "0.3.0";
sha256 = "074be0da39540898488f477907f54174931abe9093c2d288f1a6b4c4020dccf2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
ansi-terminal
base
bytestring
cmark
text
];
executableHaskellDepends = [
base
directory
filepath
optparse-applicative
semigroups
typed-process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/tldr-hs#readme";
description = "Haskell tldr client";
license = stdenv.lib.licenses.bsd3;

}) {};
"tls" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, async
, base
, bytestring
, cereal
, cryptonite
, data-default-class
, memory
, mtl
, network
, stdenv
, transformers
, x509
, x509-store
, x509-validation
}:
mkDerivation {

pname = "tls";
version = "1.4.1";
sha256 = "bbead1afc0b808bd5cff7bddaeae84ade37f18bbe72bd78d45a2fa4ac41908f8";
libraryHaskellDepends = [
asn1-encoding
asn1-types
async
base
bytestring
cereal
cryptonite
data-default-class
memory
mtl
network
transformers
x509
x509-store
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-tls";
description = "TLS/SSL protocol native implementation (Server and Client)";
license = stdenv.lib.licenses.bsd3;

}) {};
"tls-debug" = callPackage
({
  mkDerivation
, base
, bytestring
, cryptonite
, data-default-class
, network
, pem
, stdenv
, time
, tls
, x509
, x509-store
, x509-system
, x509-validation
}:
mkDerivation {

pname = "tls-debug";
version = "0.4.5";
sha256 = "a345c4863bf923829d73abb8e2b706dab8058b12cdf73859d3860eaf7223eb9b";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
cryptonite
data-default-class
network
pem
time
tls
x509
x509-store
x509-system
x509-validation
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-tls";
description = "Set of programs for TLS testing and debugging";
license = stdenv.lib.licenses.bsd3;

}) {};
"tls-session-manager" = callPackage
({
  mkDerivation
, auto-update
, base
, clock
, psqueues
, stdenv
, tls
}:
mkDerivation {

pname = "tls-session-manager";
version = "0.0.0.2";
sha256 = "c586ccfd8da578ed2174352bea1952f55fe38023e476f851d7f0ed428aa57567";
libraryHaskellDepends = [
auto-update
base
clock
psqueues
tls
];
doHaddock = false;
doCheck = false;
description = "In-memory TLS session manager";
license = stdenv.lib.licenses.bsd3;

}) {};
"tmapchan" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, stm
, unordered-containers
}:
mkDerivation {

pname = "tmapchan";
version = "0.0.3";
sha256 = "e86db4c2e6cdd373b0cbe91e01d2a223c95d5d36930f5a6c484c1586ae5011e0";
libraryHaskellDepends = [
base
containers
hashable
stm
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/tmapchan#readme";
description = "An insert-ordered multimap (indexed FIFO) which consumes values as you lookup";
license = stdenv.lib.licenses.bsd3;

}) {};
"tmapmvar" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, stm
, unordered-containers
}:
mkDerivation {

pname = "tmapmvar";
version = "0.0.4";
sha256 = "a6e58cfd8bed77c9ec6122d26db79b3d16f139c977a255bd336fe3c53822b4e3";
libraryHaskellDepends = [
base
containers
hashable
stm
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "A single-entity stateful Map in STM, similar to tmapchan";
license = stdenv.lib.licenses.bsd3;

}) {};
"tmp-postgres" = callPackage
({
  mkDerivation
, base
, bytestring
, directory
, network
, postgresql-simple
, process
, stdenv
, temporary
, unix
}:
mkDerivation {

pname = "tmp-postgres";
version = "0.1.1.1";
sha256 = "2c5d557c53f60179d5e5e8c7fb6e393ff703e45b55c126359b308ab7a82be863";
libraryHaskellDepends = [
base
bytestring
directory
network
postgresql-simple
process
temporary
unix
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jfischoff/tmp-postgres#readme";
description = "Start and stop a temporary postgres for testing";
license = stdenv.lib.licenses.bsd3;

}) {};
"token-bucket" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "token-bucket";
version = "0.1.0.1";
sha256 = "312609c0037271b1091f23c2edf467e9449edca5bbed0cfb45c2c93c1bee6ad0";
revision = "3";
editedCabalFile = "1gqlxy3rwrgag4qbjkh1f2kya4gcy1x5ic9xn997nzc6yi334v7m";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/token-bucket";
description = "Rate limiter using lazy bucket algorithm";
license = stdenv.lib.licenses.gpl3;

}) {};
"tostring" = callPackage
({
  mkDerivation
, base
, case-insensitive
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "tostring";
version = "0.2.1.1";
sha256 = "efa700d44aec57c82be60c0eabd610f62f2df0d9b06cf41b5fc35a2b77502531";
libraryHaskellDepends = [
base
case-insensitive
text
utf8-string
];
doHaddock = false;
doCheck = false;
description = "The ToString class";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-base" = callPackage
({
  mkDerivation
, base
, stdenv
, stm
, transformers
, transformers-compat
}:
mkDerivation {

pname = "transformers-base";
version = "0.4.4";
sha256 = "6aa3494fc70659342fbbb163035d5827ecfd8079e3c929e2372adf771fd52387";
revision = "1";
editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
libraryHaskellDepends = [
base
stm
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/transformers-base";
description = "Lift computations from the bottom of a transformer stack";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-bifunctors" = callPackage
({
  mkDerivation
, base
, mmorph
, stdenv
, transformers
}:
mkDerivation {

pname = "transformers-bifunctors";
version = "0.1";
sha256 = "3c25d3d76361f62b4c7c37d4bc4b7497af691d000fcd8e5fe9cbb3544d284807";
libraryHaskellDepends = [
base
mmorph
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jystic/transformers-bifunctors";
description = "Bifunctors over monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-compat" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
, transformers
}:
mkDerivation {

pname = "transformers-compat";
version = "0.5.1.4";
sha256 = "d881ef4ec164b631591b222efe7ff555af6d5397c9d86475b309ba9402a8ca9f";
libraryHaskellDepends = [
base
ghc-prim
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/transformers-compat/";
description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-either" = callPackage
({
  mkDerivation
, base
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "transformers-either";
version = "0.0.2";
sha256 = "aaf4fd14cbe09250e384271b478d51e09a0d4978ff53f876b2837e75f5cb4284";
revision = "1";
editedCabalFile = "134big9w9307vjmj6p6m3wgmh4lrvv8dyg0iw2nm54p9kg0c6ga8";
libraryHaskellDepends = [
base
text
transformers
];
doHaddock = false;
doCheck = false;
description = "An Either monad transformer";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-fix" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "transformers-fix";
version = "1.0";
sha256 = "65d1fff36b844d8ac22d47eb47e2c7e9d7ece54fafeeca4d4e38a08910be4a09";
revision = "1";
editedCabalFile = "126gyjr8jp42md6nblx7c0kan97jgsakvsf2vzv2pj828ax1icrs";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/thumphries/transformers-fix";
description = "Monad transformer for evaluating to a fixpoint";
license = stdenv.lib.licenses.bsd3;

}) {};
"transformers-lift" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
, writer-cps-transformers
}:
mkDerivation {

pname = "transformers-lift";
version = "0.2.0.1";
sha256 = "0bd8bf23fb29874daf9ff990bf25035e21208cfa292f9f18e8cfdb0b4b1ee09d";
revision = "1";
editedCabalFile = "1dy9vg0drkm9ria80hlfx6v72ji2fwmv3ik7lryv7i7hk0bdzk8l";
libraryHaskellDepends = [
base
transformers
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
description = "Ad-hoc type classes for lifting";
license = stdenv.lib.licenses.bsd3;

}) {};
"transient" = callPackage
({
  mkDerivation
, atomic-primops
, base
, bytestring
, containers
, directory
, mtl
, random
, stdenv
, stm
, time
, transformers
}:
mkDerivation {

pname = "transient";
version = "0.5.9.2";
sha256 = "22b7e4da2f0855c44d642880bfb876f55ffe74afa51973a5ddc9d21f18f34346";
libraryHaskellDepends = [
atomic-primops
base
bytestring
containers
directory
mtl
random
stm
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.fpcomplete.com/user/agocorona";
description = "composing programs with multithreading, events and distributed computing";
license = stdenv.lib.licenses.mit;

}) {};
"transient-universe" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, containers
, directory
, filepath
, hashable
, HTTP
, iproute
, mtl
, network
, network-info
, network-uri
, process
, random
, stdenv
, stm
, TCache
, text
, time
, transformers
, transient
, vector
, websockets
}:
mkDerivation {

pname = "transient-universe";
version = "0.4.6.1";
sha256 = "36cab01053b99b3503ac1a3cbbd8ef5178e442b3169d9f794f49fbb980325daf";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
case-insensitive
containers
directory
filepath
hashable
HTTP
iproute
mtl
network
network-info
network-uri
process
random
stm
TCache
text
time
transformers
transient
vector
websockets
];
executableHaskellDepends = [
base
bytestring
case-insensitive
containers
directory
filepath
hashable
HTTP
mtl
network
network-info
network-uri
process
random
stm
TCache
text
time
transformers
transient
vector
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://www.fpcomplete.com/user/agocorona";
description = "Remote execution and map-reduce: distributed computing for Transient";
license = stdenv.lib.licenses.mit;

}) {};
"traverse-with-class" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, transformers
}:
mkDerivation {

pname = "traverse-with-class";
version = "1.0.0.0";
sha256 = "65a220f1652b68269dfe8cc283a6e9292941eb12bdbd79344e073ba766191fbb";
libraryHaskellDepends = [
base
template-haskell
transformers
];
doHaddock = false;
doCheck = false;
description = "Generic applicative traversals";
license = stdenv.lib.licenses.mit;

}) {};
"tree-diff" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, ansi-wl-pprint
, base
, base-compat
, bytestring
, containers
, generics-sop
, hashable
, MemoTrie
, parsec
, parsers
, pretty
, QuickCheck
, scientific
, stdenv
, tagged
, text
, time
, unordered-containers
, uuid-types
, vector
}:
mkDerivation {

pname = "tree-diff";
version = "0.0.1";
sha256 = "bfe23e4c17c0cdbffa9f159b7adaaeb20e48575b3b5bda591c5e025118213b11";
revision = "4";
editedCabalFile = "1rqxxyj6hqllahs11693g855cxz8mgnb490s7j1ksd300i5xgjsp";
libraryHaskellDepends = [
aeson
ansi-terminal
ansi-wl-pprint
base
base-compat
bytestring
containers
generics-sop
hashable
MemoTrie
parsec
parsers
pretty
QuickCheck
scientific
tagged
text
time
unordered-containers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phadej/tree-diff";
description = "Diffing of (expression) trees";
license = stdenv.lib.licenses.bsd3;

}) {};
"tree-fun" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
}:
mkDerivation {

pname = "tree-fun";
version = "0.8.1.0";
sha256 = "2ae925f198e9700dedbf809c2b77086fef32f58b4a4adb6c398dca49f4d56f1f";
libraryHaskellDepends = [
base
containers
mtl
];
doHaddock = false;
doCheck = false;
description = "Library for functions pertaining to tree exploration and manipulation";
license = stdenv.lib.licenses.gpl3;

}) {};
"tries" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-trie
, composition
, containers
, deepseq
, hashable
, keys
, QuickCheck
, quickcheck-instances
, rose-trees
, semigroups
, sets
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "tries";
version = "0.0.5";
sha256 = "a083827d0396608a1d6944185216111c8e5413d26db5759c30a971c7dbe492f6";
libraryHaskellDepends = [
base
bytestring
bytestring-trie
composition
containers
deepseq
hashable
keys
QuickCheck
quickcheck-instances
rose-trees
semigroups
sets
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/tries#readme";
description = "Various trie implementations in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"trifecta" = callPackage
({
  mkDerivation
, ansi-terminal
, ansi-wl-pprint
, array
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, Cabal
, cabal-doctest
, charset
, comonad
, containers
, deepseq
, fingertree
, ghc-prim
, hashable
, lens
, mtl
, parsers
, profunctors
, reducers
, semigroups
, stdenv
, transformers
, unordered-containers
, utf8-string
}:
mkDerivation {

pname = "trifecta";
version = "1.7.1.1";
sha256 = "61f8753368fa0c7673b44c4e4c4dede00916f68b3f3b68a5fef6d9dedc50c68e";
revision = "4";
editedCabalFile = "12dv7mipmqc7ykazjqql6slbgdgi5f6hglw2cbdi6brvkwxk7w9z";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
ansi-terminal
ansi-wl-pprint
array
base
blaze-builder
blaze-html
blaze-markup
bytestring
charset
comonad
containers
deepseq
fingertree
ghc-prim
hashable
lens
mtl
parsers
profunctors
reducers
semigroups
transformers
unordered-containers
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/trifecta/";
description = "A modern parser combinator library with convenient diagnostics";
license = stdenv.lib.licenses.bsd3;

}) {};
"triplesec" = callPackage
({
  mkDerivation
, base
, cryptonite
, memory
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "triplesec";
version = "0.1.2.0";
sha256 = "86b8749e708fd288a874d23ebeb9ff5e3a584ada13bc22c3a9b596418bd57063";
libraryHaskellDepends = [
base
cryptonite
memory
mtl
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/SamProtas/hs-triplesec";
description = "TripleSec is a simple, triple-paranoid, symmetric encryption library";
license = stdenv.lib.licenses.bsd3;

}) {};
"true-name" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "true-name";
version = "0.1.0.3";
sha256 = "c630ef80687e12c092a797229be96e930819c1042c7cc9f755637ef74774e468";
revision = "1";
editedCabalFile = "0x56r3wyrrsckx6kdvr4v9janrby5qa21fjqwg9k211765c9ddj6";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/liyang/true-name";
description = "Template Haskell hack to violate module abstractions";
license = stdenv.lib.licenses.bsd3;

}) {};
"tsv2csv" = callPackage
({
  mkDerivation
, base
, HUnit
, split
, stdenv
}:
mkDerivation {

pname = "tsv2csv";
version = "0.1.0.2";
sha256 = "2c082f8bac93a5d47e312148493d0b8f078e2e0d0e919caa0fa24cab63dd3397";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
HUnit
split
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Convert tsv to csv";
license = stdenv.lib.licenses.bsd3;

}) {};
"ttrie" = callPackage
({
  mkDerivation
, atomic-primops
, base
, hashable
, primitive
, stdenv
, stm
}:
mkDerivation {

pname = "ttrie";
version = "0.1.2.1";
sha256 = "50444fe989559a0b16120df72765321ffd9de2fd97c943104513d894f21f4a68";
libraryHaskellDepends = [
atomic-primops
base
hashable
primitive
stm
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/mcschroeder/ttrie";
description = "Contention-free STM hash map";
license = stdenv.lib.licenses.mit;

}) {};
"tuple" = callPackage
({
  mkDerivation
, base
, OneTuple
, stdenv
}:
mkDerivation {

pname = "tuple";
version = "0.3.0.2";
sha256 = "2fcb068ffafbe64170e02094a363f83d1725f44f8af963d9dad943a592e89624";
libraryHaskellDepends = [
base
OneTuple
];
doHaddock = false;
doCheck = false;
description = "Various functions on tuples";
license = stdenv.lib.licenses.bsd3;

}) {};
"tuple-th" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, template-haskell
}:
mkDerivation {

pname = "tuple-th";
version = "0.2.5";
sha256 = "56ea37dcede07b5cf5385108540ae626db163f9df0387583d3c7afdaf72634d7";
libraryHaskellDepends = [
base
containers
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Generate (non-recursive) utility functions for tuples of statically known size";
license = stdenv.lib.licenses.bsd3;

}) {};
"tuples-homogenous-h98" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "tuples-homogenous-h98";
version = "0.1.1.0";
sha256 = "025afc8f0fe9c92fb43cebedfa6a764f744d3dc3a3d52935d0a01bc80d111f3a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ppetr/tuples-homogenous-h98";
description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
license = stdenv.lib.licenses.bsd3;

}) {};
"turtle" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, async
, base
, bytestring
, clock
, containers
, directory
, exceptions
, foldl
, hostname
, managed
, optional-args
, optparse-applicative
, process
, semigroups
, stdenv
, stm
, system-fileio
, system-filepath
, temporary
, text
, time
, transformers
, unix
, unix-compat
}:
mkDerivation {

pname = "turtle";
version = "1.5.8";
sha256 = "045bc65a84a1cb01c0078462cb386b1aeb7a845ee8c1a5ae891353ef9720e46e";
libraryHaskellDepends = [
ansi-wl-pprint
async
base
bytestring
clock
containers
directory
exceptions
foldl
hostname
managed
optional-args
optparse-applicative
process
semigroups
stm
system-fileio
system-filepath
temporary
text
time
transformers
unix
unix-compat
];
doHaddock = false;
doCheck = false;
description = "Shell programming, Haskell-style";
license = stdenv.lib.licenses.bsd3;

}) {};
"turtle-options" = callPackage
({
  mkDerivation
, base
, optional-args
, parsec
, stdenv
, text
, turtle
}:
mkDerivation {

pname = "turtle-options";
version = "0.1.0.4";
sha256 = "c2c76b0bc0bc93397827c12b6f049e682afe702f9f662a1b0818e8e221d51ace";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
optional-args
parsec
text
turtle
];
executableHaskellDepends = [
base
turtle
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/elaye/turtle-options#readme";
description = "Collection of command line options and parsers for these options";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-assertions" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-assertions";
version = "0.1.0.0";
sha256 = "aac74571c99fa0170970716385570cf0e0bbb18fc93f1d7ad372824fe7a679bb";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lexi-lambda/type-assertions#readme";
description = "Runtime type assertions for testing";
license = stdenv.lib.licenses.isc;

}) {};
"type-combinators" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-combinators";
version = "0.2.4.3";
sha256 = "1f0ccb6929f53b676e6582141c9423458468eec98be62acc8dc3bab0d52337f6";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kylcarte/type-combinators";
description = "A collection of data types for type-level programming";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-combinators-singletons" = callPackage
({
  mkDerivation
, base
, singletons
, stdenv
, type-combinators
}:
mkDerivation {

pname = "type-combinators-singletons";
version = "0.2.1.0";
sha256 = "18d8804ece39d885b2935b86c36a1305fd37a61e3995702ee3a1093599a39c01";
libraryHaskellDepends = [
base
singletons
type-combinators
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/type-combinators-singletons";
description = "Interop between /type-combinators/ and /singletons/";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-fun" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-fun";
version = "0.1.1";
sha256 = "df5ec7428a101235df46c0b819a9ab3562d1d27991cc3b04303643952c555da1";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/s9gf4ult/type-fun";
description = "Collection of widely reimplemented type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-hint" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-hint";
version = "0.1";
sha256 = "1161cdbf4b4b43c2953ee60438e948737604193e1bfe2c880ff178538faa99b9";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mvv/type-hint";
description = "Guide type inference with proxy values";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-level-integers" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-level-integers";
version = "0.0.1";
sha256 = "118be3a4b3ab65bb1d31220738079013bd14fc77db674a9a1577f5582ffcc7ba";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mtesseract/type-level-integers";
description = "Provides integers lifted to the type level";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-level-kv-list" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "type-level-kv-list";
version = "1.1.0";
sha256 = "4ff032e59108edc7dd27309ac0ee8987cc41ffba695d9699700bd37c6e7f7d73";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/arowM/type-level-kv-list#readme";
description = "A module for hash map like object with type level keys";
license = stdenv.lib.licenses.mit;

}) {};
"type-level-numbers" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
}:
mkDerivation {

pname = "type-level-numbers";
version = "0.1.1.1";
sha256 = "5b56ef5f6e0b6476b9aba46055c3919e67823cbc1b87ed8e6ed70113b1f2318a";
libraryHaskellDepends = [
base
template-haskell
];
doHaddock = false;
doCheck = false;
description = "Type level numbers implemented using type families";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-of-html" = callPackage
({
  mkDerivation
, base
, bytestring
, double-conversion
, ghc-prim
, stdenv
, text
}:
mkDerivation {

pname = "type-of-html";
version = "1.3.4.0";
sha256 = "4e4ff452186ca1b10dd00164c28ecc7e20ba32ae484f5ca4fc7cd08ef8bdb985";
libraryHaskellDepends = [
base
bytestring
double-conversion
ghc-prim
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/knupfer/type-of-html";
description = "High performance type driven html generation";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-operators" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "type-operators";
version = "0.1.0.4";
sha256 = "dbbcedf368c23c46abac04f157cb4f2c812099a4f75d606b24f1ac1116d40b74";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Shou/type-operators#readme";
description = "Various type-level operators";
license = stdenv.lib.licenses.bsd3;

}) {};
"type-spec" = callPackage
({
  mkDerivation
, base
, pretty
, stdenv
}:
mkDerivation {

pname = "type-spec";
version = "0.3.0.1";
sha256 = "aecd1a319efc13eb42b73b489cf374f94bf126f19fdc28b2f5cd6f73dda3a241";
libraryHaskellDepends = [
base
pretty
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sheyll/type-spec#readme";
description = "Type Level Specification by Example";
license = stdenv.lib.licenses.bsd3;

}) {};
"typed-process" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, process
, stdenv
, stm
, transformers
}:
mkDerivation {

pname = "typed-process";
version = "0.2.2.0";
sha256 = "42ed06889c15aa07577a0e8e3632659e343be95b77afa252b48b592ff7dbcf30";
libraryHaskellDepends = [
async
base
bytestring
process
stm
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://haskell-lang.org/library/typed-process";
description = "Run external processes, with strong typing of streams";
license = stdenv.lib.licenses.mit;

}) {};
"typelits-witnesses" = callPackage
({
  mkDerivation
, base
, base-compat
, constraints
, reflection
, stdenv
, transformers
}:
mkDerivation {

pname = "typelits-witnesses";
version = "0.3.0.2";
sha256 = "6e26c69ff347d138568e6c7e3fc5b256fc3fa3d54c563c2423443dc3428ee64c";
libraryHaskellDepends = [
base
base-compat
constraints
reflection
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/typelits-witnesses";
description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
license = stdenv.lib.licenses.mit;

}) {};
"typography-geometry" = callPackage
({
  mkDerivation
, base
, containers
, parallel
, polynomials-bernstein
, stdenv
, vector
}:
mkDerivation {

pname = "typography-geometry";
version = "1.0.0.1";
sha256 = "edaeafb60126be19f0e4fdda54be89b92317dd03b59e9d8b6f119064c1642ad7";
libraryHaskellDepends = [
base
containers
parallel
polynomials-bernstein
vector
];
doHaddock = false;
doCheck = false;
description = "Drawings for printed text documents";
license = "GPL";

}) {};
"tz" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-default
, deepseq
, stdenv
, template-haskell
, time
, tzdata
, vector
}:
mkDerivation {

pname = "tz";
version = "0.1.3.1";
sha256 = "0b54729c7b60e90e00ee8e78190d4e86b3fb02d24ef4e393383df800faccfff9";
libraryHaskellDepends = [
base
binary
bytestring
containers
data-default
deepseq
template-haskell
time
tzdata
vector
];
doHaddock = false;
doCheck = false;
preConfigure = "export TZDIR=${pkgs.tzdata}/share/zoneinfo";
homepage = "https://github.com/nilcons/haskell-tz";
description = "Efficient time zone handling";
license = stdenv.lib.licenses.asl20;

}) {};
"tzdata" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, stdenv
, vector
}:
mkDerivation {

pname = "tzdata";
version = "0.1.20180122.0";
sha256 = "a31bd845e94fd50d0e97d6d23a0ae39511cdf144075f4978579ede55b714db9d";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
deepseq
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nilcons/haskell-tzdata";
description = "Time zone database (as files and as a module)";
license = stdenv.lib.licenses.asl20;

}) {};
"ua-parser" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, data-default
, file-embed
, pcre-light
, stdenv
, text
, yaml
}:
mkDerivation {

pname = "ua-parser";
version = "0.7.4.1";
sha256 = "2ed79b0ae9f3d60d1aeeeb45a9229840708f009ca34752a9787134b8b0d094df";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
aeson
base
bytestring
data-default
file-embed
pcre-light
text
yaml
];
doHaddock = false;
doCheck = false;
description = "A library for parsing User-Agent strings, official Haskell port of ua-parser";
license = stdenv.lib.licenses.bsd3;

}) {};
"uglymemo" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
}:
mkDerivation {

pname = "uglymemo";
version = "0.1.0.1";
sha256 = "fe89ef49c0cb15867c58815b050b33f17d394d4c48a9b7240a39780a5a79b847";
libraryHaskellDepends = [
base
containers
];
doHaddock = false;
doCheck = false;
description = "A simple (but internally ugly) memoization function";
license = stdenv.lib.licenses.publicDomain;

}) {};
"unbound-generics" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, containers
, contravariant
, deepseq
, exceptions
, mtl
, profunctors
, stdenv
, template-haskell
, transformers
, transformers-compat
}:
mkDerivation {

pname = "unbound-generics";
version = "0.3.3";
sha256 = "7fedc5b19dfb4a20d280a4ae538d89cf3482ad30ac77ee1bd2aaa35a6519ad1a";
libraryHaskellDepends = [
ansi-wl-pprint
base
containers
contravariant
deepseq
exceptions
mtl
profunctors
template-haskell
transformers
transformers-compat
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/lambdageek/unbound-generics";
description = "Support for programming with names and binders using GHC Generics";
license = stdenv.lib.licenses.bsd3;

}) {};
"unbounded-delays" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "unbounded-delays";
version = "0.1.1.0";
sha256 = "8aa7f7d10a8d0073518804db76c3ef4c313359994ef175122341b0bce07329c7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/basvandijk/unbounded-delays";
description = "Unbounded thread delays and timeouts";
license = stdenv.lib.licenses.bsd3;

}) {};
"unboxed-ref" = callPackage
({
  mkDerivation
, base
, ghc-prim
, primitive
, stdenv
}:
mkDerivation {

pname = "unboxed-ref";
version = "0.4.0.0";
sha256 = "64eba8d550035a3a90cf9179e52f79877b426f0a6337cc216fdef45fcbb8773f";
libraryHaskellDepends = [
base
ghc-prim
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/unboxed-ref";
description = "Fast unboxed references for ST and IO monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"uncertain" = callPackage
({
  mkDerivation
, ad
, base
, base-compat
, containers
, free
, mwc-random
, primitive
, stdenv
, transformers
}:
mkDerivation {

pname = "uncertain";
version = "0.3.1.0";
sha256 = "6f67855ed4799e0c3465dfaef062b637efc61fbea40ebc44ced163028a996ff2";
libraryHaskellDepends = [
ad
base
base-compat
containers
free
mwc-random
primitive
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mstksg/uncertain";
description = "Manipulating numbers with inherent experimental/measurement uncertainty";
license = stdenv.lib.licenses.bsd3;

}) {};
"unexceptionalio" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "unexceptionalio";
version = "0.3.0";
sha256 = "927e2be6bb9ced73c1c17d79c981cadef4039d9ee45d2d3d6b4c133ff93ff0b8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/singpolyma/unexceptionalio";
description = "IO without any non-error, synchronous exceptions";
license = "unknown";

}) {};
"unfoldable" = callPackage
({
  mkDerivation
, base
, containers
, ghc-prim
, one-liner
, QuickCheck
, random
, stdenv
, transformers
}:
mkDerivation {

pname = "unfoldable";
version = "0.9.6";
sha256 = "cd90eae9ba258cfaf2554b4946c9b60def83c92548bbeb7269fec97a8657eaa1";
libraryHaskellDepends = [
base
containers
ghc-prim
one-liner
QuickCheck
random
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sjoerdvisscher/unfoldable";
description = "Class of data structures that can be unfolded";
license = stdenv.lib.licenses.bsd3;

}) {};
"unfoldable-restricted" = callPackage
({
  mkDerivation
, base
, constraints
, containers
, hashable
, stdenv
, transformers
, unfoldable
, unit-constraint
, unordered-containers
}:
mkDerivation {

pname = "unfoldable-restricted";
version = "0.0.3";
sha256 = "0b19287719453617f3883863f32be75ba62aad68151cb79aea3a5fa90dc7836e";
libraryHaskellDepends = [
base
constraints
containers
hashable
transformers
unfoldable
unit-constraint
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "An alternative to the Unfoldable typeclass";
license = stdenv.lib.licenses.bsd3;

}) {};
"unicode" = callPackage
({
  mkDerivation
, base
, containers
, semigroups
, stdenv
}:
mkDerivation {

pname = "unicode";
version = "0.0.1";
sha256 = "49bde95d4df4ebed755b10860aeb92f9cf0a3be8127d39a95f480036e6449b81";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
containers
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://hub.darcs.net/thielema/unicode/";
description = "Construct and transform unicode characters";
license = stdenv.lib.licenses.bsd3;

}) {};
"unicode-show" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "unicode-show";
version = "0.1.0.2";
sha256 = "7ee394879b345ee397aef87ca058628cd79d59cbfc1cec81aeda7fea65f53943";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nushio3/unicode-show#readme";
description = "print and show in unicode";
license = stdenv.lib.licenses.bsd3;

}) {};
"unicode-transforms" = callPackage
({
  mkDerivation
, base
, bitarray
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "unicode-transforms";
version = "0.3.4";
sha256 = "829eaccba7d2e3d642d0cf60bbab403a6a5673db64284c02abf3ee3e8d5c0852";
libraryHaskellDepends = [
base
bitarray
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/harendra-kumar/unicode-transforms";
description = "Unicode normalization";
license = stdenv.lib.licenses.bsd3;

}) {};
"unification-fd" = callPackage
({
  mkDerivation
, base
, containers
, logict
, mtl
, stdenv
}:
mkDerivation {

pname = "unification-fd";
version = "0.10.0.1";
sha256 = "5bf46760e6db104c57f915322b32744f7604323281f5c7dd20185f905fb51996";
libraryHaskellDepends = [
base
containers
logict
mtl
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Simple generic unification algorithms";
license = stdenv.lib.licenses.bsd3;

}) {};
"union" = callPackage
({
  mkDerivation
, base
, deepseq
, profunctors
, stdenv
, tagged
, vinyl
}:
mkDerivation {

pname = "union";
version = "0.1.1.2";
sha256 = "7ce28e082940e184a255459b29356b7d39e3421cb37b01ee1ed067437165d382";
revision = "3";
editedCabalFile = "1llczfg153qqrkp2biqaa9qqyzy6li5cnxbyp5p24d7f2dr0d5fc";
libraryHaskellDepends = [
base
deepseq
profunctors
tagged
vinyl
];
doHaddock = false;
doCheck = false;
description = "Extensible type-safe unions";
license = stdenv.lib.licenses.bsd3;

}) {};
"union-find" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, transformers
}:
mkDerivation {

pname = "union-find";
version = "0.2";
sha256 = "e6c2682bb8c06e8c43e360f45658d0eea17209cce84953e2a7d2f0240591f0ec";
revision = "1";
editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
libraryHaskellDepends = [
base
containers
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/nominolo/union-find";
description = "Efficient union and equivalence testing of sets";
license = stdenv.lib.licenses.bsd3;

}) {};
"uniplate" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, stdenv
, syb
, unordered-containers
}:
mkDerivation {

pname = "uniplate";
version = "1.6.12";
sha256 = "fcc60bc6b3f6e925f611646db90e6db9f05286a9363405f844df1dc15572a8b7";
libraryHaskellDepends = [
base
containers
hashable
syb
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://community.haskell.org/~ndm/uniplate/";
description = "Help writing simple, concise and fast generic operations";
license = stdenv.lib.licenses.bsd3;

}) {};
"uniq-deep" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, stdenv
}:
mkDerivation {

pname = "uniq-deep";
version = "1.1.0.0";
sha256 = "f8953f91cbf90c5073ca90d4e9235dbe0a399ff811709d051b037a8a7db0d38e";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
base
bytestring
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ncaq/uniq-deep";
description = "uniq-deep";
license = stdenv.lib.licenses.publicDomain;

}) {};
"unique" = callPackage
({
  mkDerivation
, base
, ghc-prim
, hashable
, stdenv
}:
mkDerivation {

pname = "unique";
version = "0";
sha256 = "e3fb171b7b1787683863934df0fc082fb47c0da6972bb1839c2ee8ceb64a0a90";
revision = "1";
editedCabalFile = "0pq3a5y8ddgd37x21vafwxpyi079ir7k9g96y99pygmxwibkg4v8";
libraryHaskellDepends = [
base
ghc-prim
hashable
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/unique/";
description = "Fully concurrent unique identifiers";
license = stdenv.lib.licenses.bsd3;

}) {};
"unit-constraint" = callPackage
({
  mkDerivation
, base
, constraints
, stdenv
}:
mkDerivation {

pname = "unit-constraint";
version = "0.0.0";
sha256 = "446de8480016c9db75676445477b5ce1ff5c6d486d6708c55b06de7cbd845e59";
libraryHaskellDepends = [
base
constraints
];
doHaddock = false;
doCheck = false;
description = "Extremely simple typeclass";
license = stdenv.lib.licenses.bsd3;

}) {};
"units-parser" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, multimap
, parsec
, stdenv
}:
mkDerivation {

pname = "units-parser";
version = "0.1.1.2";
sha256 = "0a63f8b62a5d48e6c7126970cc0c6c350711b1d55ccb8182567a47ca35ce751a";
libraryHaskellDepends = [
base
containers
mtl
multimap
parsec
];
doHaddock = false;
doCheck = false;
description = "A parser for units of measure";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe" = callPackage
({
  mkDerivation
, stdenv
, universe-instances-base
, universe-instances-extended
, universe-instances-trans
, universe-reverse-instances
}:
mkDerivation {

pname = "universe";
version = "1.0";
sha256 = "1f80e4788d348d53e39a32c8514940418a71c49c5423eb70b94e1786d94ff9a7";
libraryHaskellDepends = [
universe-instances-base
universe-instances-extended
universe-instances-trans
universe-reverse-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Classes for types where we know all the values";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-base" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "universe-base";
version = "1.0.2.1";
sha256 = "07c48350afacdc0b5569f72e3d6a27a8ff3c208b7a6f22d00e149a201798bb51";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-instances-base" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, universe-base
}:
mkDerivation {

pname = "universe-instances-base";
version = "1.0";
sha256 = "a21150ee3bb71283522a573bf092c8d96b2e28a95336a95505aa4c2a067dd212";
revision = "1";
editedCabalFile = "13s8gxsvkw6phwvd79h9f3xaqbyzsx1svpysbmq72z1hv3mqyz8a";
libraryHaskellDepends = [
base
containers
universe-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Universe instances for types from the base package";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-instances-extended" = callPackage
({
  mkDerivation
, adjunctions
, base
, comonad
, stdenv
, universe-instances-base
, void
}:
mkDerivation {

pname = "universe-instances-extended";
version = "1.0.0.1";
sha256 = "665b272701b16a6bb8d40a5396aa1dcb038f002452ebdc29d353e3be2070c997";
revision = "2";
editedCabalFile = "1di3jk3ciikjrxzr76i0mqqza26mclnbxxak7ybkk4l06yqanj38";
libraryHaskellDepends = [
adjunctions
base
comonad
universe-instances-base
void
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Universe instances for types from select extra packages";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-instances-trans" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, universe-base
, universe-instances-base
}:
mkDerivation {

pname = "universe-instances-trans";
version = "1.0.0.1";
sha256 = "0d047cf1eb4af9f2052f44f487e7d2d44c86f51b54a3cc1fc5243ad816e8310e";
revision = "1";
editedCabalFile = "0dcwgbgmbkjwzbxlncpl1b5hgjrmkl73djknjkhbnh02pysbwv69";
libraryHaskellDepends = [
base
mtl
transformers
universe-base
universe-instances-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "Universe instances for types from the transformers and mtl packages";
license = stdenv.lib.licenses.bsd3;

}) {};
"universe-reverse-instances" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, universe-instances-base
}:
mkDerivation {

pname = "universe-reverse-instances";
version = "1.0";
sha256 = "e9d41cbf26eabd77587fddf69493d7ad23028303d1c1d1d2ee1de1bf3d3e8d49";
revision = "1";
editedCabalFile = "0rq6h7yghnzrnv56pxnlfr6cfih8dbnhc6hh5416pgy5bxsa0ydj";
libraryHaskellDepends = [
base
containers
universe-instances-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/dmwit/universe";
description = "instances of standard classes that are made possible by enumerations";
license = stdenv.lib.licenses.bsd3;

}) {};
"universum" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, fetchgit
, fmt
, formatting
, ghc-prim
, hashable
, microlens
, microlens-mtl
, mtl
, safe-exceptions
, stdenv
, stm
, text
, transformers
, type-operators
, unordered-containers
, utf8-string
, vector
}:
mkDerivation {

pname = "universum";
version = "1.2.0";
src = fetchgit {

url = "https://github.com/input-output-hk/universum.git";
sha256 = "12ppiszywj0dsspwlhb8bzhsrlgszk8rvlhcy8il3ppz99mlnw5g";
rev = "7f1b2483f71cacdfd032fe447064d6e0a1df50fc";

};
libraryHaskellDepends = [
base
bytestring
containers
deepseq
fmt
formatting
ghc-prim
hashable
microlens
microlens-mtl
mtl
safe-exceptions
stm
text
transformers
type-operators
unordered-containers
utf8-string
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/serokell/universum";
description = "Custom prelude used in Serokell";
license = stdenv.lib.licenses.mit;

}) {};
"unix-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "unix-bytestring";
version = "0.3.7.3";
sha256 = "a3ec273da411988b7d9eb7317f6d84ce47f4b7fd39bdc721acd5229e7cff808c";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~wren/";
description = "Unix/Posix-specific functions for ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"unix-compat" = callPackage
({
  mkDerivation
, base
, stdenv
, unix
}:
mkDerivation {

pname = "unix-compat";
version = "0.5.0.1";
sha256 = "c2f299e0439c15d93d5700911c922fd2b35543c19ba053779cd52f3b051caebd";
libraryHaskellDepends = [
base
unix
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jystic/unix-compat";
description = "Portable POSIX-compatibility layer";
license = stdenv.lib.licenses.bsd3;

}) {};
"unix-time" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, old-time
, stdenv
}:
mkDerivation {

pname = "unix-time";
version = "0.3.8";
sha256 = "dca1bd332f4690f667570868c91c1270083428067e0e20b88a9d9516efa33a14";
libraryHaskellDepends = [
base
binary
bytestring
old-time
];
doHaddock = false;
doCheck = false;
description = "Unix time parser/formatter and utilities";
license = stdenv.lib.licenses.bsd3;

}) {};
"unliftio" = callPackage
({
  mkDerivation
, async
, base
, deepseq
, directory
, filepath
, process
, stdenv
, stm
, time
, transformers
, unix
, unliftio-core
}:
mkDerivation {

pname = "unliftio";
version = "0.2.7.0";
sha256 = "5adaf4c623914ec027760259042059326c14831e8c9142287cf8f082e9481463";
libraryHaskellDepends = [
async
base
deepseq
directory
filepath
process
stm
time
transformers
unix
unliftio-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/unliftio/tree/master/unliftio#readme";
description = "The MonadUnliftIO typeclass for unlifting monads to IO (batteries included)";
license = stdenv.lib.licenses.mit;

}) {};
"unliftio-core" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "unliftio-core";
version = "0.1.1.0";
sha256 = "7550b017d87af53ae3e0d3b8524e24a77faf739073f35e40663454a9e9752385";
revision = "1";
editedCabalFile = "16bjwcsaghqqmyi69rq65dn3ydifyfaabq3ns37apdm00mwqbcj2";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/unliftio/tree/master/unliftio-core#readme";
description = "The MonadUnliftIO typeclass for unlifting monads to IO";
license = stdenv.lib.licenses.mit;

}) {};
"unlit" = callPackage
({
  mkDerivation
, base
, directory
, stdenv
, text
}:
mkDerivation {

pname = "unlit";
version = "0.4.0.0";
sha256 = "489ecde4843f1911ebdaac3099241d703bb1161f3d386e2b5143f2fd6c355515";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
directory
text
];
executableHaskellDepends = [
base
directory
text
];
doHaddock = false;
doCheck = false;
description = "Tool to convert literate code between styles or to code";
license = stdenv.lib.licenses.bsd3;

}) {};
"unordered-containers" = callPackage
({
  mkDerivation
, base
, deepseq
, hashable
, stdenv
}:
mkDerivation {

pname = "unordered-containers";
version = "0.2.9.0";
sha256 = "6730cb5c4a3e953e2c199d6425be08fd088ff0089a3e140d63226c052e318250";
libraryHaskellDepends = [
base
deepseq
hashable
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tibbe/unordered-containers";
description = "Efficient hashing-based container types";
license = stdenv.lib.licenses.bsd3;

}) {};
"unsafe" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "unsafe";
version = "0.0";
sha256 = "df0a74ccf7b43956c1b5decd5580e235317d1f96a1bbd75e117fc21143ee8641";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~thielema/unsafe/";
description = "Unified interface to unsafe functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"uri-bytestring" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, bytestring
, containers
, stdenv
, template-haskell
, th-lift-instances
}:
mkDerivation {

pname = "uri-bytestring";
version = "0.3.2.0";
sha256 = "acecd68b9d3128d6b6de99580664ab1e7cbaa0e7722e50c5fc67ccbd7c9104e0";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
bytestring
containers
template-haskell
th-lift-instances
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Soostone/uri-bytestring";
description = "Haskell URI parsing as ByteStrings";
license = stdenv.lib.licenses.bsd3;

}) {};
"uri-bytestring-aeson" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, stdenv
, text
, uri-bytestring
}:
mkDerivation {

pname = "uri-bytestring-aeson";
version = "0.1.0.6";
sha256 = "d8bd5f0772e8f45a7530b8b4422102ab24a896ac75611a3c36a02a56dffcef0a";
libraryHaskellDepends = [
aeson
base
bytestring
text
uri-bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/reactormonk/uri-bytestring-aeson";
description = "Aeson instances for URI Bytestring";
license = stdenv.lib.licenses.bsd3;

}) {};
"uri-encode" = callPackage
({
  mkDerivation
, base
, bytestring
, network-uri
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "uri-encode";
version = "1.5.0.5";
sha256 = "e82b588aad63112d34f6bad6f1ef72489b9edebfe14f2f523dc1dabdcbe2b186";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
network-uri
text
utf8-string
];
doHaddock = false;
doCheck = false;
description = "Unicode aware uri-encoding";
license = stdenv.lib.licenses.bsd3;

}) {};
"uri-templater" = callPackage
({
  mkDerivation
, ansi-wl-pprint
, base
, bytestring
, charset
, containers
, dlist
, HTTP
, mtl
, parsers
, stdenv
, template-haskell
, text
, time
, trifecta
, unordered-containers
, uuid-types
, vector
}:
mkDerivation {

pname = "uri-templater";
version = "0.3.1.0";
sha256 = "21e665ff2600b3de42b6ad01ef342b6165859dc6e66897f84a9075649f1c49c2";
revision = "1";
editedCabalFile = "0vl1nv40yzns9fnaz6h34x72vpfaaws8f0zm8qlr82333pxg2scw";
libraryHaskellDepends = [
ansi-wl-pprint
base
bytestring
charset
containers
dlist
HTTP
mtl
parsers
template-haskell
text
time
trifecta
unordered-containers
uuid-types
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/iand675/uri-templater";
description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
license = stdenv.lib.licenses.mit;

}) {};
"userid" = callPackage
({
  mkDerivation
, aeson
, base
, boomerang
, cereal
, safecopy
, stdenv
, web-routes
, web-routes-th
}:
mkDerivation {

pname = "userid";
version = "0.1.3.2";
sha256 = "6a6c06354f4b6bfbfb497fbdae52203b07a6c5d861474a0ebb5ef1f3e4c8a87a";
libraryHaskellDepends = [
aeson
base
boomerang
cereal
safecopy
web-routes
web-routes-th
];
doHaddock = false;
doCheck = false;
homepage = "http://www.github.com/Happstack/userid";
description = "The UserId type and useful instances for web development";
license = stdenv.lib.licenses.bsd3;

}) {};
"users" = callPackage
({
  mkDerivation
, aeson
, base
, bcrypt
, path-pieces
, stdenv
, text
, time
}:
mkDerivation {

pname = "users";
version = "0.5.0.0";
sha256 = "6761ac937b0d4c13c5158239a0c51199c394facb72cc734ada90a391f01e53d4";
revision = "1";
editedCabalFile = "1x26g7k6kmq2vng9y5qkz82z06rs322s2y8bs9y6r4vayvg07q9v";
libraryHaskellDepends = [
aeson
base
bcrypt
path-pieces
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/users";
description = "A library simplifying user management for web applications";
license = stdenv.lib.licenses.mit;

}) {};
"users-postgresql-simple" = callPackage
({
  mkDerivation
, base
, bytestring
, mtl
, postgresql-simple
, stdenv
, text
, time
, users
, uuid
}:
mkDerivation {

pname = "users-postgresql-simple";
version = "0.5.0.2";
sha256 = "051b5d2c9c6cdeaacb6271a50ee4084cc1473de8d873825dc6d98023e96ec100";
libraryHaskellDepends = [
base
bytestring
mtl
postgresql-simple
text
time
users
uuid
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/users";
description = "A PostgreSQL backend for the users package";
license = stdenv.lib.licenses.mit;

}) {};
"users-test" = callPackage
({
  mkDerivation
, base
, hspec
, stdenv
, text
, users
}:
mkDerivation {

pname = "users-test";
version = "0.5.0.1";
sha256 = "f68549fa0cc002b16dc55f23a73b1a423aa2e64ab584c4041252a3bb6a5cac3e";
libraryHaskellDepends = [
base
hspec
text
users
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/agrafix/users";
description = "Library to test backends for the users library";
license = stdenv.lib.licenses.mit;

}) {};
"utf8-light" = callPackage
({
  mkDerivation
, base
, bytestring
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "utf8-light";
version = "0.4.2";
sha256 = "184c428ce7896d702da46f6f107e6873ff100dbc1af40b49b5ce87317e619e67";
libraryHaskellDepends = [
base
bytestring
ghc-prim
];
doHaddock = false;
doCheck = false;
description = "Unicode";
license = stdenv.lib.licenses.bsd3;

}) {};
"utf8-string" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "utf8-string";
version = "1.0.1.1";
sha256 = "fb0b9e3acbe0605bcd1c63e51f290a7bbbe6628dfa3294ff453e4235fbaef140";
revision = "3";
editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/glguy/utf8-string/";
description = "Support for reading and writing UTF8 Strings";
license = stdenv.lib.licenses.bsd3;

}) {};
"utility-ht" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "utility-ht";
version = "0.0.14";
sha256 = "69c2eee1330839cdff40fad4f68f8c7ce41ae3b46a9e1d575f589fcdcf7ceba8";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
license = stdenv.lib.licenses.bsd3;

}) {};
"uuid" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cryptohash-md5
, cryptohash-sha1
, entropy
, network-info
, random
, stdenv
, text
, time
, uuid-types
}:
mkDerivation {

pname = "uuid";
version = "1.3.13";
sha256 = "dfac808a7026217d018b408eab18facc6a85c6183be308d4ac7877e80599b027";
revision = "2";
editedCabalFile = "0m185q62jkfb5jsv358nxbnrkv8y8hd0qqvgvh22wvc5g9ipz0r9";
libraryHaskellDepends = [
base
binary
bytestring
cryptohash-md5
cryptohash-sha1
entropy
network-info
random
text
time
uuid-types
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hvr/uuid";
description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
license = stdenv.lib.licenses.bsd3;

}) {};
"uuid-types" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, hashable
, random
, stdenv
, text
}:
mkDerivation {

pname = "uuid-types";
version = "1.0.3";
sha256 = "9276517ab24a9b06f39d6e3c33c6c2b4ace1fc2126dbc1cd9806866a6551b3fd";
revision = "1";
editedCabalFile = "0iwwj07gp28g357hv76k4h8pvlzamvchnw003cv3qk778pcpx201";
libraryHaskellDepends = [
base
binary
bytestring
deepseq
hashable
random
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/aslatter/uuid";
description = "Type definitions for Universally Unique Identifiers";
license = stdenv.lib.licenses.bsd3;

}) {};
"vado" = callPackage
({
  mkDerivation
, attoparsec
, base
, directory
, filepath
, process
, stdenv
, text
}:
mkDerivation {

pname = "vado";
version = "0.0.9";
sha256 = "5ae8e162eba0f2ef45bebea623ea0497ae048a922e1bf1ad6cbea3b379b48878";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
directory
filepath
process
text
];
executableHaskellDepends = [
attoparsec
base
directory
filepath
process
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hamishmack/vado";
description = "Runs commands on remote machines using ssh";
license = stdenv.lib.licenses.mit;

}) {};
"validation" = callPackage
({
  mkDerivation
, base
, bifunctors
, deepseq
, lens
, semigroupoids
, semigroups
, stdenv
}:
mkDerivation {

pname = "validation";
version = "1";
sha256 = "70455a22637983dbcf7a688ff80c05bb8bf2690d9e4523d6ca4ebcef77abb921";
libraryHaskellDepends = [
base
bifunctors
deepseq
lens
semigroupoids
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/qfpl/validation";
description = "A data-type like Either but with an accumulating Applicative";
license = stdenv.lib.licenses.bsd3;

}) {};
"validationt" = callPackage
({
  mkDerivation
, aeson
, base
, containers
, exceptions
, lens
, monad-control
, mtl
, QuickCheck
, stdenv
, text
, transformers
, transformers-base
, transformers-lift
, vector
}:
mkDerivation {

pname = "validationt";
version = "0.2.0.0";
sha256 = "3e665cedffa1e45632ee9b1439e6a86e97a5f037be941c9b6fdba192663d513f";
libraryHaskellDepends = [
aeson
base
containers
exceptions
lens
monad-control
mtl
QuickCheck
text
transformers
transformers-base
transformers-lift
vector
];
doHaddock = false;
doCheck = false;
homepage = "typeable.io";
description = "Straightforward validation monad. Convenient solution for validating web forms and APIs.";
license = stdenv.lib.licenses.bsd3;

}) {};
"validity" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "validity";
version = "0.4.0.4";
sha256 = "9dae58e3a22dd953002ccdcb4544370998a7f7d4868b5566e3d362e534306ac7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity typeclass";
license = stdenv.lib.licenses.mit;

}) {};
"validity-aeson" = callPackage
({
  mkDerivation
, aeson
, base
, stdenv
, validity
, validity-scientific
, validity-text
, validity-unordered-containers
, validity-vector
}:
mkDerivation {

pname = "validity-aeson";
version = "0.1.0.0";
sha256 = "2f4eb3a1ab7817bd6311b89ac9df97f8d443697506ac5d2bd676e48298f1f8af";
libraryHaskellDepends = [
aeson
base
validity
validity-scientific
validity-text
validity-unordered-containers
validity-vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for aeson";
license = stdenv.lib.licenses.mit;

}) {};
"validity-bytestring" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, validity
}:
mkDerivation {

pname = "validity-bytestring";
version = "0.2.0.0";
sha256 = "873e9a37af525591a1895751d6d63af47dae7730c4e3d0225f6ecf11b43a0f85";
libraryHaskellDepends = [
base
bytestring
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for bytestring";
license = stdenv.lib.licenses.mit;

}) {};
"validity-containers" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, validity
}:
mkDerivation {

pname = "validity-containers";
version = "0.2.0.0";
sha256 = "f0e991152eb3dceb11cbeeaa75630403b6e66b8fd4edaf4b87e3ce88cecf7f0a";
libraryHaskellDepends = [
base
containers
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for containers";
license = stdenv.lib.licenses.mit;

}) {};
"validity-path" = callPackage
({
  mkDerivation
, base
, filepath
, path
, stdenv
, validity
}:
mkDerivation {

pname = "validity-path";
version = "0.2.0.2";
sha256 = "de6c96c98c0fa85f7f5037b52a80002112a443bae6b716e7edcfa194dab70130";
libraryHaskellDepends = [
base
filepath
path
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for Path";
license = stdenv.lib.licenses.mit;

}) {};
"validity-scientific" = callPackage
({
  mkDerivation
, base
, scientific
, stdenv
, validity
}:
mkDerivation {

pname = "validity-scientific";
version = "0.1.0.0";
sha256 = "ec17870364bfaf40f2d9adfed314379a5577cec87c28bc7946925bb49a9ca55d";
libraryHaskellDepends = [
base
scientific
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for scientific";
license = stdenv.lib.licenses.mit;

}) {};
"validity-text" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
, validity
}:
mkDerivation {

pname = "validity-text";
version = "0.2.0.1";
sha256 = "64e282a5658ce214b5659cf02afe7ae703930cb2c3cd747c22f5c1e381b526e5";
libraryHaskellDepends = [
base
bytestring
text
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for text";
license = stdenv.lib.licenses.mit;

}) {};
"validity-time" = callPackage
({
  mkDerivation
, base
, stdenv
, time
, validity
}:
mkDerivation {

pname = "validity-time";
version = "0.1.0.0";
sha256 = "5f8cdd1fc63891306dc5cb38f204bd1bf3bdb9f20e6f52aed0054bb745829ed7";
libraryHaskellDepends = [
base
time
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for time";
license = stdenv.lib.licenses.mit;

}) {};
"validity-unordered-containers" = callPackage
({
  mkDerivation
, base
, hashable
, stdenv
, unordered-containers
, validity
}:
mkDerivation {

pname = "validity-unordered-containers";
version = "0.1.0.0";
sha256 = "2dbd007dc722a48a8296b838b02233dc742bd9d57af553ade888e623c8ece5b3";
libraryHaskellDepends = [
base
hashable
unordered-containers
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for unordered-containers";
license = stdenv.lib.licenses.mit;

}) {};
"validity-uuid" = callPackage
({
  mkDerivation
, base
, stdenv
, uuid
, validity
}:
mkDerivation {

pname = "validity-uuid";
version = "0.0.0.0";
sha256 = "6ee5f62bbe400afd7e972cc1c08bde5611a16890780e8d9a658acca945ca618b";
libraryHaskellDepends = [
base
uuid
validity
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for uuid";
license = stdenv.lib.licenses.mit;

}) {};
"validity-vector" = callPackage
({
  mkDerivation
, base
, hashable
, stdenv
, validity
, vector
}:
mkDerivation {

pname = "validity-vector";
version = "0.1.0.0";
sha256 = "011e1104312392997914567b2804a5cef4b0e7baaf7f5382494e249e55a8e47c";
libraryHaskellDepends = [
base
hashable
validity
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/NorfairKing/validity#readme";
description = "Validity instances for vector";
license = stdenv.lib.licenses.mit;

}) {};
"varying" = callPackage
({
  mkDerivation
, base
, stdenv
, time
, transformers
}:
mkDerivation {

pname = "varying";
version = "0.7.0.3";
sha256 = "6cd417fad6b30d8f9bd5a01dd21d059ecbc26cd1faf27bb7973eea43b5640309";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
transformers
];
executableHaskellDepends = [
base
time
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/schell/varying";
description = "FRP through value streams and monadic splines";
license = stdenv.lib.licenses.mit;

}) {};
"vault" = callPackage
({
  mkDerivation
, base
, containers
, hashable
, semigroups
, stdenv
, unordered-containers
}:
mkDerivation {

pname = "vault";
version = "0.3.1.1";
sha256 = "b2a4150699db8a45d189cc93c34c36c3bfc1082b4ca94612e242aefd4e8e2e28";
libraryHaskellDepends = [
base
containers
hashable
semigroups
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/HeinrichApfelmus/vault";
description = "a persistent store for values of arbitrary types";
license = stdenv.lib.licenses.bsd3;

}) {};
"vcswrapper" = callPackage
({
  mkDerivation
, base
, containers
, directory
, filepath
, hxt
, mtl
, parsec
, process
, split
, stdenv
, text
}:
mkDerivation {

pname = "vcswrapper";
version = "0.1.6";
sha256 = "2eba26a2fd5bc53fff4a7d1bb3ba831f3d188c6f9cd8a2ca97d59b7002b53b3e";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
directory
filepath
hxt
mtl
parsec
process
split
text
];
executableHaskellDepends = [
base
containers
directory
filepath
hxt
mtl
parsec
process
split
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/forste/haskellVCSWrapper";
description = "Wrapper for source code management systems";
license = "GPL";

}) {};
"vector" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, primitive
, stdenv
}:
mkDerivation {

pname = "vector";
version = "0.12.0.1";
sha256 = "b100ee79b9da2651276278cd3e0f08a3c152505cc52982beda507515af173d7b";
revision = "2";
editedCabalFile = "0vzr8kra73anchp86knkmkq2afkd1hw6hirldn9vn69frynb1n6y";
libraryHaskellDepends = [
base
deepseq
ghc-prim
primitive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/vector";
description = "Efficient Arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-algorithms" = callPackage
({
  mkDerivation
, base
, bytestring
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "vector-algorithms";
version = "0.7.0.1";
sha256 = "ed460a41ca068f568bc2027579ab14185fbb72c7ac469b5179ae5f8a52719070";
revision = "1";
editedCabalFile = "1996aj239vasr4hd5c0pi9i0bd08r6clzr76nqvf3hc5kjs7vml2";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://code.haskell.org/~dolio/";
description = "Efficient algorithms for vector arrays";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-binary-instances" = callPackage
({
  mkDerivation
, base
, binary
, stdenv
, vector
}:
mkDerivation {

pname = "vector-binary-instances";
version = "0.2.4";
sha256 = "2b2f783e414dcf2e7dc34ad14264e5af83e5cd4784d5a0a64e4b4571963443f8";
revision = "1";
editedCabalFile = "196frl4akhfk7xf1nxzn8lmq99dxhzhsimanswn9yy7ym8zhki4i";
libraryHaskellDepends = [
base
binary
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bos/vector-binary-instances";
description = "Instances of Data.Binary and Data.Serialize for vector";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-buffer" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, vector
}:
mkDerivation {

pname = "vector-buffer";
version = "0.4.1";
sha256 = "9b5a9b57488267a765d9e7a8f2aa387ee0d3153989c169952da1e1229a60fd9b";
libraryHaskellDepends = [
base
deepseq
vector
];
doHaddock = false;
doCheck = false;
description = "A buffer compatible with Data.Vector.*";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-builder" = callPackage
({
  mkDerivation
, base
, base-prelude
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "vector-builder";
version = "0.3.4.1";
sha256 = "d1649096abdcc96894031292a63dfc0b36be4ab004a00f91f08aa5bc4c65ebb7";
libraryHaskellDepends = [
base
base-prelude
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/nikita-volkov/vector-builder";
description = "Vector builder";
license = stdenv.lib.licenses.mit;

}) {};
"vector-fftw" = callPackage
({
  mkDerivation
, base
, fftw
, primitive
, stdenv
, storable-complex
, vector
}:
mkDerivation {

pname = "vector-fftw";
version = "0.1.3.8";
sha256 = "e64a333a46c323aa69f5cce08a6e45cb4a93d41066e66fe3b5d440684c219976";
revision = "1";
editedCabalFile = "0417f7grdvs3ws508a7k9ngpnisw7f7b6bcmmasflvvr66m6166f";
libraryHaskellDepends = [
base
primitive
storable-complex
vector
];
librarySystemDepends = [
fftw
];
doHaddock = false;
doCheck = false;
homepage = "http://hackage.haskell.org/package/vector-fftw";
description = "A binding to the fftw library for one-dimensional vectors";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) fftw;};
"vector-instances" = callPackage
({
  mkDerivation
, base
, comonad
, hashable
, keys
, pointed
, semigroupoids
, semigroups
, stdenv
, vector
}:
mkDerivation {

pname = "vector-instances";
version = "3.4";
sha256 = "1b0246ef0cf8372d61d5c7840d857f49299af2304b5107510377255ed4dd5381";
libraryHaskellDepends = [
base
comonad
hashable
keys
pointed
semigroupoids
semigroups
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/vector-instances";
description = "Orphan Instances for 'Data.Vector'";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-mmap" = callPackage
({
  mkDerivation
, base
, mmap
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "vector-mmap";
version = "0.0.3";
sha256 = "e539ddb02190ab5d04ba2605ac24317360919f99c332af470aafd0b78d9a868a";
libraryHaskellDepends = [
base
mmap
primitive
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pumpkin/vector-mmap";
description = "Memory map immutable and mutable vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-sized" = callPackage
({
  mkDerivation
, base
, deepseq
, finite-typelits
, stdenv
, vector
}:
mkDerivation {

pname = "vector-sized";
version = "0.6.1.0";
sha256 = "4d6e3e1292955778b6fa14b2f57f3417c7884e90d56b494b5d6b09dde7f67821";
revision = "1";
editedCabalFile = "0lcm7gdzqnp5v0rfd9f611yspa493j4azdj3gzy71398z3zda5w4";
libraryHaskellDepends = [
base
deepseq
finite-typelits
vector
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/expipiplus1/vector-sized#readme";
description = "Size tagged vectors";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-space" = callPackage
({
  mkDerivation
, base
, Boolean
, MemoTrie
, NumInstances
, stdenv
}:
mkDerivation {

pname = "vector-space";
version = "0.13";
sha256 = "0291d5778378acbbb1d6709ba57238f3d6ad551b8b2c6ca2b8177e68f748d617";
libraryHaskellDepends = [
base
Boolean
MemoTrie
NumInstances
];
doHaddock = false;
doCheck = false;
description = "Vector & affine spaces, linear maps, and derivatives";
license = stdenv.lib.licenses.bsd3;

}) {};
"vector-split" = callPackage
({
  mkDerivation
, base
, stdenv
, vector
}:
mkDerivation {

pname = "vector-split";
version = "1.0.0.2";
sha256 = "b4aeeea50fec52e594b2d3c05aca3a112b2095d1e5238ced065cecf2d89bbd16";
libraryHaskellDepends = [
base
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fhaust/vector-split";
description = "Combinator library for splitting vectors";
license = stdenv.lib.licenses.mit;

}) {};
"vector-th-unbox" = callPackage
({
  mkDerivation
, base
, stdenv
, template-haskell
, vector
}:
mkDerivation {

pname = "vector-th-unbox";
version = "0.2.1.6";
sha256 = "be87d4a6f1005ee2d0de6adf521e05c9e83c441568a8a8b60c79efe24ae90235";
libraryHaskellDepends = [
base
template-haskell
vector
];
doHaddock = false;
doCheck = false;
description = "Deriver for Data.Vector.Unboxed using Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"vectortiles" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, deepseq
, hashable
, protocol-buffers
, protocol-buffers-descriptor
, stdenv
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "vectortiles";
version = "1.3.0";
sha256 = "60ca5767d5a5a9fbd28b176cf0a7031a4182d942d4f3f3152ab59937969876c3";
revision = "2";
editedCabalFile = "0c3xkk3xks9c4kn1l6d58v0qsg7q3pdjwdwgpwd93npcjl3isc19";
libraryHaskellDepends = [
base
bytestring
containers
deepseq
hashable
protocol-buffers
protocol-buffers-descriptor
text
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fosskers/vectortiles";
description = "GIS Vector Tiles, as defined by Mapbox";
license = stdenv.lib.licenses.bsd3;

}) {};
"verbosity" = callPackage
({
  mkDerivation
, base
, binary
, data-default-class
, deepseq
, stdenv
}:
mkDerivation {

pname = "verbosity";
version = "0.2.3.0";
sha256 = "8b4ce5ab48aab17b6752dec4efba259964b7084ce10330198ae3ff7ea090f264";
libraryHaskellDepends = [
base
binary
data-default-class
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/trskop/verbosity";
description = "Simple enum that encodes application verbosity";
license = stdenv.lib.licenses.bsd3;

}) {};
"versions" = callPackage
({
  mkDerivation
, base
, deepseq
, hashable
, megaparsec
, stdenv
, text
}:
mkDerivation {

pname = "versions";
version = "3.3.2";
sha256 = "cfe98ab9cb8a53ff3a0eef7f1cbe2041f86214202c5a31025fc9d0dd92328bf0";
revision = "1";
editedCabalFile = "0vh8nikp0xqyp24fx5lm7221jg7pp8c83dankja2zzkmr09pd96v";
libraryHaskellDepends = [
base
deepseq
hashable
megaparsec
text
];
doHaddock = false;
doCheck = false;
description = "Types and parsers for software version numbers";
license = stdenv.lib.licenses.bsd3;

}) {};
"vhd" = callPackage
({
  mkDerivation
, base
, byteable
, bytestring
, cereal
, cipher-aes
, cryptohash
, directory
, filepath
, mmap
, random
, stdenv
, storable-endian
, text
, time
}:
mkDerivation {

pname = "vhd";
version = "0.2.2";
sha256 = "7c678f076395f44d853f87a4538635bc83d7a10319933dec9e06b40ce409ea7c";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
byteable
bytestring
cereal
cipher-aes
cryptohash
directory
filepath
mmap
random
storable-endian
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/vincenthz/hs-vhd";
description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
license = stdenv.lib.licenses.bsd3;

}) {};
"vinyl" = callPackage
({
  mkDerivation
, base
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "vinyl";
version = "0.7.0";
sha256 = "fa3a1628d6c459a709de35c942cbf052a73734e8041fe99990c610103a0b90bd";
revision = "1";
editedCabalFile = "0g5b9g7mkjib4ar1v6jfn5m15vj1zg7qn4ffhz03labh3zlkw7zz";
libraryHaskellDepends = [
base
ghc-prim
];
doHaddock = false;
doCheck = false;
description = "Extensible Records";
license = stdenv.lib.licenses.mit;

}) {};
"vivid" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, hashable
, MonadRandom
, mtl
, network
, process
, random
, random-shuffle
, split
, stdenv
, stm
, time
, transformers
, utf8-string
, vivid-osc
, vivid-supercollider
}:
mkDerivation {

pname = "vivid";
version = "0.3.0.2";
sha256 = "00e0941c018fc467424d10a94ed568b48bf1fd226cd81a00ced319817d79bb99";
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
hashable
MonadRandom
mtl
network
process
random
random-shuffle
split
stm
time
transformers
utf8-string
vivid-osc
vivid-supercollider
];
doHaddock = false;
doCheck = false;
description = "Sound synthesis with SuperCollider";
license = "GPL";

}) {};
"vivid-osc" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cereal
, stdenv
, time
}:
mkDerivation {

pname = "vivid-osc";
version = "0.3.0.0";
sha256 = "a728f85c60f6b8361d6b973f45c854485a2b061431869934df72c172a4884a94";
libraryHaskellDepends = [
base
binary
bytestring
cereal
time
];
doHaddock = false;
doCheck = false;
description = "Open Sound Control encode/decode";
license = "GPL";

}) {};
"vivid-supercollider" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, cereal
, split
, stdenv
, utf8-string
, vivid-osc
}:
mkDerivation {

pname = "vivid-supercollider";
version = "0.3.0.0";
sha256 = "83b79ebc06b4e6db34c91c850191e11488e108b4bf64aa85110c3a389cc4d395";
libraryHaskellDepends = [
base
binary
bytestring
cereal
split
utf8-string
vivid-osc
];
doHaddock = false;
doCheck = false;
description = "Implementation of SuperCollider server specifications";
license = "GPL";

}) {};
"void" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "void";
version = "0.7.2";
sha256 = "d3fffe66a03e4b53db1e459edf75ad8402385a817cae415d857ec0b03ce0cf2b";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/void";
description = "A Haskell 98 logically uninhabited data type";
license = stdenv.lib.licenses.bsd3;

}) {};
"vty" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, deepseq
, directory
, filepath
, hashable
, microlens
, microlens-mtl
, microlens-th
, mtl
, parallel
, parsec
, stdenv
, stm
, terminfo
, text
, transformers
, unix
, utf8-string
, vector
}:
mkDerivation {

pname = "vty";
version = "5.20";
sha256 = "430169fed9ce8f7f2784222f558fa0fc89850125727ef8f1699376f4c9a43d51";
revision = "1";
editedCabalFile = "01awxbjxls9v9jh7d7mic7lzmaabsx8g9lqks8fbrjixhka321fl";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
deepseq
directory
filepath
hashable
microlens
microlens-mtl
microlens-th
mtl
parallel
parsec
stm
terminfo
text
transformers
unix
utf8-string
vector
];
executableHaskellDepends = [
base
containers
microlens
microlens-mtl
mtl
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/vty";
description = "A simple terminal UI library";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai" = callPackage
({
  mkDerivation
, base
, bytestring
, http-types
, network
, stdenv
, text
, transformers
, vault
}:
mkDerivation {

pname = "wai";
version = "3.2.1.2";
sha256 = "282351461f19fbac26aa0a7896d7ab583b4abef522fcd9aba944f1848e58234b";
libraryHaskellDepends = [
base
bytestring
http-types
network
text
transformers
vault
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "Web Application Interface";
license = stdenv.lib.licenses.mit;

}) {};
"wai-app-static" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, bytestring
, containers
, cryptonite
, directory
, file-embed
, filepath
, http-date
, http-types
, memory
, mime-types
, old-locale
, optparse-applicative
, stdenv
, template-haskell
, text
, time
, transformers
, unix-compat
, unordered-containers
, wai
, wai-extra
, warp
, zlib
}:
mkDerivation {

pname = "wai-app-static";
version = "3.1.6.2";
sha256 = "d0b0a566be61ef4c8f800922a71dbc4de64287f8f73782b1461cd5d294c1dc3e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
blaze-html
blaze-markup
bytestring
containers
cryptonite
directory
file-embed
filepath
http-date
http-types
memory
mime-types
old-locale
optparse-applicative
template-haskell
text
time
transformers
unix-compat
unordered-containers
wai
wai-extra
warp
zlib
];
executableHaskellDepends = [
base
bytestring
containers
directory
mime-types
text
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/web-application-interface";
description = "WAI application for static serving";
license = stdenv.lib.licenses.mit;

}) {};
"wai-cli" = callPackage
({
  mkDerivation
, ansi-terminal
, base
, http-types
, monads-tf
, network
, options
, socket-activation
, stdenv
, stm
, streaming-commons
, unix
, wai
, wai-extra
, warp
, warp-tls
}:
mkDerivation {

pname = "wai-cli";
version = "0.1.1";
sha256 = "0643ebd8cbd4fcedd2076450b635d020aa2101b26e80f69ade10acd2c3252862";
libraryHaskellDepends = [
ansi-terminal
base
http-types
monads-tf
network
options
socket-activation
stm
streaming-commons
unix
wai
wai-extra
warp
warp-tls
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/myfreeweb/wai-cli";
description = "Command line runner for Wai apps (using Warp) with TLS, CGI, socket activation & graceful shutdown";
license = stdenv.lib.licenses.publicDomain;

}) {};
"wai-conduit" = callPackage
({
  mkDerivation
, base
, bytestring
, conduit
, http-types
, stdenv
, transformers
, wai
}:
mkDerivation {

pname = "wai-conduit";
version = "3.0.0.4";
sha256 = "2790093bd52892b8087c295044573c720773144f4061ccc72d6d6a617320d61f";
libraryHaskellDepends = [
base
bytestring
conduit
http-types
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/wai";
description = "conduit wrappers for WAI";
license = stdenv.lib.licenses.mit;

}) {};
"wai-cors" = callPackage
({
  mkDerivation
, attoparsec
, base
, base-unicode-symbols
, bytestring
, case-insensitive
, http-types
, mtl
, stdenv
, transformers
, wai
}:
mkDerivation {

pname = "wai-cors";
version = "0.2.6";
sha256 = "cac61023184404ba5abf8d3739e51c4862561ba56f829f6f5e69dd64216aa986";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
attoparsec
base
base-unicode-symbols
bytestring
case-insensitive
http-types
mtl
transformers
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/larskuhtz/wai-cors";
description = "CORS for WAI";
license = stdenv.lib.licenses.mit;

}) {};
"wai-eventsource" = callPackage
({
  mkDerivation
, stdenv
, wai
}:
mkDerivation {

pname = "wai-eventsource";
version = "3.0.0";
sha256 = "785005f23bf9bf4e1dfaae0705472c0e3ea4c3843ff6a8625db8d1e327a6bfc0";
libraryHaskellDepends = [
wai
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/book/web-application-interface";
description = "WAI support for server-sent events (deprecated)";
license = stdenv.lib.licenses.mit;

}) {};
"wai-extra" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, containers
, cookie
, data-default-class
, deepseq
, directory
, fast-logger
, http-types
, iproute
, lifted-base
, network
, old-locale
, resourcet
, stdenv
, streaming-commons
, stringsearch
, text
, time
, transformers
, unix
, unix-compat
, vault
, void
, wai
, wai-logger
, word8
, zlib
}:
mkDerivation {

pname = "wai-extra";
version = "3.0.22.0";
sha256 = "62943d71071cbc557686ccb00b4c64383c24b8839b838841686fc2290bd59367";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-terminal
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
containers
cookie
data-default-class
deepseq
directory
fast-logger
http-types
iproute
lifted-base
network
old-locale
resourcet
streaming-commons
stringsearch
text
time
transformers
unix
unix-compat
vault
void
wai
wai-logger
word8
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "Provides some basic WAI handlers and middleware";
license = stdenv.lib.licenses.mit;

}) {};
"wai-handler-launch" = callPackage
({
  mkDerivation
, async
, base
, blaze-builder
, bytestring
, http-types
, process
, stdenv
, streaming-commons
, transformers
, wai
, warp
}:
mkDerivation {

pname = "wai-handler-launch";
version = "3.0.2.3";
sha256 = "6dd00e0b703fad0880c69a40f39daff61a3106d7242d9bd0f7ff9f7e97ef61d3";
libraryHaskellDepends = [
async
base
blaze-builder
bytestring
http-types
process
streaming-commons
transformers
wai
warp
];
doHaddock = false;
doCheck = false;
description = "Launch a web app in the default browser";
license = stdenv.lib.licenses.mit;

}) {};
"wai-logger" = callPackage
({
  mkDerivation
, base
, byteorder
, bytestring
, case-insensitive
, fast-logger
, http-types
, network
, stdenv
, unix
, unix-time
, wai
}:
mkDerivation {

pname = "wai-logger";
version = "2.3.2";
sha256 = "8dd4ff875d9ac2c115f5d45cc4375635a6c3e55a75c632ff3781d1fb086eb470";
libraryHaskellDepends = [
base
byteorder
bytestring
case-insensitive
fast-logger
http-types
network
unix
unix-time
wai
];
doHaddock = false;
doCheck = false;
description = "A logging system for WAI";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-caching" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, http-types
, stdenv
, wai
}:
mkDerivation {

pname = "wai-middleware-caching";
version = "0.1.0.2";
sha256 = "15b5fb9c92599d5ecb6a70ba40bad024488f9eca7139abe23b961ba21602d78d";
libraryHaskellDepends = [
base
blaze-builder
bytestring
http-types
wai
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
description = "WAI Middleware to cache things";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-caching-lru" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, http-types
, lrucache
, stdenv
, text
, wai
, wai-middleware-caching
}:
mkDerivation {

pname = "wai-middleware-caching-lru";
version = "0.1.0.0";
sha256 = "377dc842f5ad77b98e8a817e092c891ccfd0da978fb9f69a380f001a95da28d3";
libraryHaskellDepends = [
base
blaze-builder
bytestring
http-types
lrucache
text
wai
wai-middleware-caching
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-lru#readme";
description = "Initial project template from stack";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-caching-redis" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, hedis
, http-types
, stdenv
, text
, wai
, wai-middleware-caching
}:
mkDerivation {

pname = "wai-middleware-caching-redis";
version = "0.2.0.0";
sha256 = "6ff53783db20d8f0ff00514ea2679f7022ca59eb20ffad22628ac17c13bf7c4c";
libraryHaskellDepends = [
base
blaze-builder
bytestring
hedis
http-types
text
wai
wai-middleware-caching
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-redis#readme";
description = "Cache Wai Middleware using Redis backend";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-consul" = callPackage
({
  mkDerivation
, async
, base
, base-prelude
, bytestring
, conduit
, conduit-extra
, consul-haskell
, enclosed-exceptions
, http-client
, http-types
, monad-control
, monad-logger
, network
, process
, resourcet
, stdenv
, text
, transformers
, void
, wai
, wai-conduit
}:
mkDerivation {

pname = "wai-middleware-consul";
version = "0.1.0.2";
sha256 = "d89d5a5bf0b08cf4fcd300d9e16c351a146119c34a9f31949498a874699c0763";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
async
base
base-prelude
bytestring
conduit
conduit-extra
consul-haskell
enclosed-exceptions
http-client
http-types
monad-control
monad-logger
network
process
resourcet
text
transformers
void
wai
wai-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/wai-middleware-consul";
description = "Wai Middleware for Consul";
license = stdenv.lib.licenses.mit;

}) {};
"wai-middleware-crowd" = callPackage
({
  mkDerivation
, authenticate
, base
, base64-bytestring
, binary
, blaze-builder
, bytestring
, case-insensitive
, clientsession
, containers
, cookie
, gitrev
, http-client
, http-client-tls
, http-reverse-proxy
, http-types
, optparse-applicative
, resourcet
, stdenv
, template-haskell
, text
, time
, transformers
, unix-compat
, vault
, wai
, wai-app-static
, wai-extra
, warp
}:
mkDerivation {

pname = "wai-middleware-crowd";
version = "0.1.4.2";
sha256 = "1136b61a6ce7729093664b63a4ab70de73e356d34b0c7a8114b639b18626b058";
revision = "1";
editedCabalFile = "0qvh92p9s80kmzg5w7rga54kfqbwcrkkv5p03pd92px04j2h5lbm";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
authenticate
base
base64-bytestring
binary
blaze-builder
bytestring
case-insensitive
clientsession
containers
cookie
http-client
http-client-tls
http-types
resourcet
text
time
unix-compat
vault
wai
];
executableHaskellDepends = [
base
bytestring
clientsession
gitrev
http-client
http-client-tls
http-reverse-proxy
http-types
optparse-applicative
template-haskell
text
transformers
wai
wai-app-static
wai-extra
warp
];
doHaddock = false;
doCheck = false;
description = "Middleware and utilities for using Atlassian Crowd authentication";
license = stdenv.lib.licenses.mit;

}) {};
"wai-middleware-metrics" = callPackage
({
  mkDerivation
, base
, ekg-core
, http-types
, stdenv
, text
, time
, wai
}:
mkDerivation {

pname = "wai-middleware-metrics";
version = "0.2.4";
sha256 = "e73685a748f0ba6d16956b500cdc23f3802f794f5259a3d6b8a5b885e928ec74";
libraryHaskellDepends = [
base
ekg-core
http-types
text
time
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/Helkafen/wai-middleware-metrics";
description = "A WAI middleware to collect EKG request metrics";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-prometheus" = callPackage
({
  mkDerivation
, base
, bytestring
, clock
, data-default
, http-types
, prometheus-client
, stdenv
, text
, wai
}:
mkDerivation {

pname = "wai-middleware-prometheus";
version = "0.3.0";
sha256 = "cec4403e54456e0b885d7ace402ea1eb64f0eb50e1db35de0366dee09752d513";
libraryHaskellDepends = [
base
bytestring
clock
data-default
http-types
prometheus-client
text
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fimad/prometheus-haskell";
description = "WAI middlware for exposing http://prometheus.io metrics.";
license = stdenv.lib.licenses.asl20;

}) {};
"wai-middleware-rollbar" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, hostname
, http-client
, http-conduit
, http-types
, rollbar-hs
, stdenv
, text
, time
, uuid
, wai
}:
mkDerivation {

pname = "wai-middleware-rollbar";
version = "0.10.0";
sha256 = "a6edb8124323c4fd43e6cb64d8b17374d2aca01a0313c4c4065ed7c7ea6305a4";
libraryHaskellDepends = [
aeson
base
bytestring
hostname
http-client
http-conduit
http-types
rollbar-hs
text
time
uuid
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/joneshf/wai-middleware-rollbar#readme";
description = "Middleware that communicates to Rollbar";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-static" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, cryptonite
, directory
, expiring-cache-map
, filepath
, http-types
, memory
, mime-types
, mtl
, old-locale
, semigroups
, stdenv
, text
, time
, wai
}:
mkDerivation {

pname = "wai-middleware-static";
version = "0.8.2";
sha256 = "0be4e9fd5252d526334e4e5885a2a75269aaaad560282b5c383c49e4d855befc";
libraryHaskellDepends = [
base
bytestring
containers
cryptonite
directory
expiring-cache-map
filepath
http-types
memory
mime-types
mtl
old-locale
semigroups
text
time
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/scotty-web/wai-middleware-static";
description = "WAI middleware that serves requests to static files";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-middleware-throttle" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-builder
, containers
, hashable
, http-types
, mtl
, network
, stdenv
, stm
, text
, token-bucket
, transformers
, wai
}:
mkDerivation {

pname = "wai-middleware-throttle";
version = "0.2.2.1";
sha256 = "4a3eb90928e0be25cda9a66f5a47fe4dbaf127e81cf11382a0ece059943c96fc";
libraryHaskellDepends = [
base
bytestring
bytestring-builder
containers
hashable
http-types
mtl
network
stm
text
token-bucket
transformers
wai
];
doHaddock = false;
doCheck = false;
description = "WAI Middleware for Request Throttling";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-predicates" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, case-insensitive
, cookie
, http-types
, singletons
, stdenv
, text
, transformers
, vault
, vector
, wai
}:
mkDerivation {

pname = "wai-predicates";
version = "0.10.0";
sha256 = "b7b3f6d147bbbf7a959c84235d0533763eda8fc4973b42f131fd47fe8ffbd7c2";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
case-insensitive
cookie
http-types
singletons
text
transformers
vault
vector
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/wai-predicates/";
description = "WAI request predicates";
license = "unknown";

}) {};
"wai-route" = callPackage
({
  mkDerivation
, base
, bytestring
, http-types
, stdenv
, unordered-containers
, wai
}:
mkDerivation {

pname = "wai-route";
version = "0.3.1.2";
sha256 = "01517d2cb005deeead0e3e99ffe33b7b105bb6b5f651ed9466f128856ec131ae";
libraryHaskellDepends = [
base
bytestring
http-types
unordered-containers
wai
];
doHaddock = false;
doCheck = false;
description = "Minimalistic, efficient routing for WAI";
license = stdenv.lib.licenses.mpl20;

}) {};
"wai-routing" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, bytestring-conversion
, case-insensitive
, cookie
, http-types
, stdenv
, transformers
, wai
, wai-predicates
, wai-route
}:
mkDerivation {

pname = "wai-routing";
version = "0.13.0";
sha256 = "f4841b028e20f49e3617d13247c04f457c850421321a92e7ab4e372ee85cde8f";
libraryHaskellDepends = [
attoparsec
base
bytestring
bytestring-conversion
case-insensitive
cookie
http-types
transformers
wai
wai-predicates
wai-route
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/wai-routing/";
description = "Declarative routing for WAI";
license = stdenv.lib.licenses.mpl20;

}) {};
"wai-session" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, bytestring-builder
, containers
, cookie
, entropy
, http-types
, StateVar
, stdenv
, time
, transformers
, vault
, wai
}:
mkDerivation {

pname = "wai-session";
version = "0.3.3";
sha256 = "d2392702446b9af8d45b83b2ce1bbb9937024c2d65fcf943ab51a7d52c7e0053";
libraryHaskellDepends = [
base
blaze-builder
bytestring
bytestring-builder
containers
cookie
entropy
http-types
StateVar
time
transformers
vault
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/singpolyma/wai-session";
description = "Flexible session middleware for WAI";
license = "unknown";

}) {};
"wai-session-postgresql" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, cookie
, data-default
, entropy
, postgresql-simple
, resource-pool
, stdenv
, text
, time
, transformers
, wai
, wai-session
}:
mkDerivation {

pname = "wai-session-postgresql";
version = "0.2.1.2";
sha256 = "39d570dd99b4dc38e7803b60b4da4bc804244ed83b3fb250a6e2191a1419ac83";
libraryHaskellDepends = [
base
bytestring
cereal
cookie
data-default
entropy
postgresql-simple
resource-pool
text
time
transformers
wai
wai-session
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/hce/postgresql-session#readme";
description = "PostgreSQL backed Wai session store";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-slack-middleware" = callPackage
({
  mkDerivation
, aeson
, base
, http-client
, http-types
, stdenv
, wai
}:
mkDerivation {

pname = "wai-slack-middleware";
version = "0.2.0";
sha256 = "d14482f43147e16f05c7282f5b478e76a803dc7398d73dbf6cd2d9be83695750";
libraryHaskellDepends = [
aeson
base
http-client
http-types
wai
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/wai-slack-middleware#readme";
description = "A Slack middleware for WAI";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-transformers" = callPackage
({
  mkDerivation
, base
, exceptions
, stdenv
, transformers
, wai
, wai-websockets
, websockets
}:
mkDerivation {

pname = "wai-transformers";
version = "0.0.7";
sha256 = "1a1801a2048eb84808a09e44cb899d6cc689948619eeeea005e312ea5a2fe32c";
libraryHaskellDepends = [
base
exceptions
transformers
wai
wai-websockets
websockets
];
doHaddock = false;
doCheck = false;
description = "Simple parameterization of Wai's Application type";
license = stdenv.lib.licenses.bsd3;

}) {};
"wai-websockets" = callPackage
({
  mkDerivation
, base
, bytestring
, case-insensitive
, file-embed
, http-types
, network
, stdenv
, text
, transformers
, wai
, wai-app-static
, warp
, websockets
}:
mkDerivation {

pname = "wai-websockets";
version = "3.0.1.2";
sha256 = "917cceb08f296d7dc6b6cafb66133ae53888b2c98b8fb2a2d7fa629d75ab5d2c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
case-insensitive
http-types
network
transformers
wai
websockets
];
executableHaskellDepends = [
base
bytestring
case-insensitive
file-embed
http-types
network
text
transformers
wai
wai-app-static
warp
websockets
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "Provide a bridge between WAI and the websockets package";
license = stdenv.lib.licenses.mit;

}) {};
"warp" = callPackage
({
  mkDerivation
, array
, async
, auto-update
, base
, bsb-http-chunked
, bytestring
, case-insensitive
, containers
, ghc-prim
, hashable
, http-date
, http-types
, http2
, iproute
, network
, simple-sendfile
, stdenv
, stm
, streaming-commons
, text
, unix
, unix-compat
, vault
, wai
, word8
}:
mkDerivation {

pname = "warp";
version = "3.2.22";
sha256 = "645b230c32050da227e4c2486a0ae6b6866706f563d2ba5e3761f581855f590e";
libraryHaskellDepends = [
array
async
auto-update
base
bsb-http-chunked
bytestring
case-insensitive
containers
ghc-prim
hashable
http-date
http-types
http2
iproute
network
simple-sendfile
stm
streaming-commons
text
unix
unix-compat
vault
wai
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "A fast, light-weight web server for WAI applications";
license = stdenv.lib.licenses.mit;

}) {};
"warp-tls" = callPackage
({
  mkDerivation
, base
, bytestring
, cryptonite
, data-default-class
, network
, stdenv
, streaming-commons
, tls
, tls-session-manager
, wai
, warp
}:
mkDerivation {

pname = "warp-tls";
version = "3.2.4.3";
sha256 = "84cd511e32019ba5bef07b0e8a3550b2da06d534bf3df1673d14a5ec4a12f29d";
libraryHaskellDepends = [
base
bytestring
cryptonite
data-default-class
network
streaming-commons
tls
tls-session-manager
wai
warp
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/wai";
description = "HTTP over TLS support for Warp via the TLS package";
license = stdenv.lib.licenses.mit;

}) {};
"wave" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, containers
, data-default-class
, stdenv
, transformers
}:
mkDerivation {

pname = "wave";
version = "0.1.5";
sha256 = "250a08b0c36870fb7fd0de7714818784eed0c4ff74377746dc1842967965fe0f";
revision = "1";
editedCabalFile = "1wvgxay0r5rpcc7yxkznxxcp1za0ifxvk87w0xrilxgb35r3izz8";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
cereal
containers
data-default-class
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/wave";
description = "Work with WAVE and RF64 files";
license = stdenv.lib.licenses.bsd3;

}) {};
"wavefront" = callPackage
({
  mkDerivation
, attoparsec
, base
, dlist
, filepath
, mtl
, stdenv
, text
, transformers
, vector
}:
mkDerivation {

pname = "wavefront";
version = "0.7.1.2";
sha256 = "12939c0d3d6726180dcc968c18632a0ddad371211c8588aee79dc099376bf010";
libraryHaskellDepends = [
attoparsec
base
dlist
filepath
mtl
text
transformers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/wavefront";
description = "Wavefront OBJ loader";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-plugins" = callPackage
({
  mkDerivation
, base
, containers
, mtl
, stdenv
, stm
, text
}:
mkDerivation {

pname = "web-plugins";
version = "0.2.9";
sha256 = "e63bfd7f666b40c7ff962a070c64dc5bef4a5c490af745fa7ee8f964284a7a50";
libraryHaskellDepends = [
base
containers
mtl
stm
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/clckwrks/web-plugins";
description = "dynamic plugin system for web applications";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, exceptions
, ghc-prim
, http-types
, mtl
, parsec
, split
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "web-routes";
version = "0.27.14.2";
sha256 = "af8b349c5d17de1d1accc30ab0a21537414a66e9d9515852098443e1d5d1f74a";
libraryHaskellDepends = [
base
blaze-builder
bytestring
exceptions
ghc-prim
http-types
mtl
parsec
split
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
description = "portable, type-safe URL routing";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-boomerang" = callPackage
({
  mkDerivation
, base
, boomerang
, mtl
, parsec
, stdenv
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-boomerang";
version = "0.28.4.2";
sha256 = "7ea892cd6e8c25e4adabf999d2332248a7b458662479a28a812bafd8dd2b7827";
libraryHaskellDepends = [
base
boomerang
mtl
parsec
text
web-routes
];
doHaddock = false;
doCheck = false;
description = "Use boomerang for type-safe URL parsers/printers";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-happstack" = callPackage
({
  mkDerivation
, base
, bytestring
, happstack-server
, stdenv
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-happstack";
version = "0.23.11";
sha256 = "3ef98ced2c3f198ac4a91072cbe338343b489237882f0939f1c59b372067fd4b";
libraryHaskellDepends = [
base
bytestring
happstack-server
text
web-routes
];
doHaddock = false;
doCheck = false;
description = "Adds support for using web-routes with Happstack";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-hsp" = callPackage
({
  mkDerivation
, base
, hsp
, stdenv
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-hsp";
version = "0.24.6.1";
sha256 = "ca7cf5bf026c52fee5b6af3ca173c7341cd991dcd38508d07589cc7ea8102cab";
libraryHaskellDepends = [
base
hsp
text
web-routes
];
doHaddock = false;
doCheck = false;
description = "Adds XMLGenerator instance for RouteT monad";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-th" = callPackage
({
  mkDerivation
, base
, parsec
, split
, stdenv
, template-haskell
, text
, web-routes
}:
mkDerivation {

pname = "web-routes-th";
version = "0.22.6.3";
sha256 = "9d4cebf6305ca3ded4f4fdcdd21d959f11bcb66aac24a6f820cce72ef79255fd";
libraryHaskellDepends = [
base
parsec
split
template-haskell
text
web-routes
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/happstack/web-routes-th";
description = "Support for deriving PathInfo using Template Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"web-routes-wai" = callPackage
({
  mkDerivation
, base
, bytestring
, http-types
, stdenv
, text
, wai
, web-routes
}:
mkDerivation {

pname = "web-routes-wai";
version = "0.24.3.1";
sha256 = "8e1fd187686452af39929bc6b6a31319001859930744e22e2eee1fa9ad103049";
libraryHaskellDepends = [
base
bytestring
http-types
text
wai
web-routes
];
doHaddock = false;
doCheck = false;
description = "Library for maintaining correctness of URLs within an application";
license = stdenv.lib.licenses.bsd3;

}) {};
"web3" = callPackage
({
  mkDerivation
, aeson
, async
, base
, basement
, bytestring
, cereal
, cryptonite
, data-default
, exceptions
, generics-sop
, http-client
, machines
, memory
, mtl
, parsec
, stdenv
, tagged
, template-haskell
, text
, transformers
}:
mkDerivation {

pname = "web3";
version = "0.7.3.0";
sha256 = "af821da95766fcfc74a2dd3cfac867e651443011c2c8251dfad46f63f314c5b9";
libraryHaskellDepends = [
aeson
async
base
basement
bytestring
cereal
cryptonite
data-default
exceptions
generics-sop
http-client
machines
memory
mtl
parsec
tagged
template-haskell
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/airalab/hs-web3#readme";
description = "Ethereum API for Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"webdriver" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, base64-bytestring
, bytestring
, data-default-class
, directory
, directory-tree
, exceptions
, filepath
, http-client
, http-types
, lifted-base
, monad-control
, network
, network-uri
, scientific
, stdenv
, temporary
, text
, time
, transformers
, transformers-base
, unordered-containers
, vector
, zip-archive
}:
mkDerivation {

pname = "webdriver";
version = "0.8.5";
sha256 = "a8167a8b147411a929e81727a77bc31fcd7d93424442268913fb522e1932c1be";
libraryHaskellDepends = [
aeson
attoparsec
base
base64-bytestring
bytestring
data-default-class
directory
directory-tree
exceptions
filepath
http-client
http-types
lifted-base
monad-control
network
network-uri
scientific
temporary
text
time
transformers
transformers-base
unordered-containers
vector
zip-archive
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kallisti-dev/hs-webdriver";
description = "a Haskell client for the Selenium WebDriver protocol";
license = stdenv.lib.licenses.bsd3;

}) {};
"webdriver-angular" = callPackage
({
  mkDerivation
, aeson
, base
, language-javascript
, stdenv
, template-haskell
, text
, transformers
, unordered-containers
, webdriver
}:
mkDerivation {

pname = "webdriver-angular";
version = "0.1.11";
sha256 = "5ebb650cdd9d0815ec897b4972cb0ab7f93d223e8f810e9bf30d6e1fd2ff49f6";
libraryHaskellDepends = [
aeson
base
language-javascript
template-haskell
text
transformers
unordered-containers
webdriver
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
description = "Webdriver actions to assist with testing a webpage which uses Angular.Js";
license = stdenv.lib.licenses.mit;

}) {};
"webpage" = callPackage
({
  mkDerivation
, base
, blaze-html
, data-default
, lucid
, stdenv
, text
}:
mkDerivation {

pname = "webpage";
version = "0.0.5";
sha256 = "213e92ff931d7f58becb532a70cb958a691b216fa85c43f950b429ffad3d1aad";
libraryHaskellDepends = [
base
blaze-html
data-default
lucid
text
];
doHaddock = false;
doCheck = false;
description = "Organized and simple web page scaffold for blaze and lucid";
license = stdenv.lib.licenses.mit;

}) {};
"webrtc-vad" = callPackage
({
  mkDerivation
, base
, primitive
, stdenv
, vector
}:
mkDerivation {

pname = "webrtc-vad";
version = "0.1.0.3";
sha256 = "89cc6691d314c8c2ae7801bf56e1cca0252617536af4ac94acb92ad6d560d453";
libraryHaskellDepends = [
base
primitive
vector
];
doHaddock = false;
doCheck = false;
description = "Easy voice activity detection";
license = stdenv.lib.licenses.mit;

}) {};
"websockets" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, binary
, bytestring
, bytestring-builder
, case-insensitive
, containers
, entropy
, network
, random
, SHA
, stdenv
, streaming-commons
, text
}:
mkDerivation {

pname = "websockets";
version = "0.12.5.0";
sha256 = "2d8f8d0ea1df5b62920539464ff9b40249c3663f3b8a80014ac6ac78650577a7";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
binary
bytestring
bytestring-builder
case-insensitive
containers
entropy
network
random
SHA
streaming-commons
text
];
doHaddock = false;
doCheck = false;
homepage = "http://jaspervdj.be/websockets";
description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"websockets-rpc" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, containers
, exceptions
, hashable
, monad-control
, mtl
, QuickCheck
, stdenv
, stm
, text
, transformers
, unordered-containers
, uuid
, wai-transformers
, websockets
, websockets-simple
}:
mkDerivation {

pname = "websockets-rpc";
version = "0.6.0";
sha256 = "efcd5b6d39506fc591863d10d2e179603a004f7730bc1424920c69d7412b31ce";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
async
base
bytestring
containers
exceptions
hashable
monad-control
mtl
QuickCheck
stm
text
transformers
unordered-containers
uuid
wai-transformers
websockets
websockets-simple
];
doHaddock = false;
doCheck = false;
description = "Simple streaming RPC mechanism using WebSockets";
license = stdenv.lib.licenses.bsd3;

}) {};
"websockets-simple" = callPackage
({
  mkDerivation
, aeson
, async
, base
, bytestring
, every
, exceptions
, monad-control
, stdenv
, stm
, transformers
, wai-transformers
, websockets
}:
mkDerivation {

pname = "websockets-simple";
version = "0.0.6.3";
sha256 = "2f71348c842ca065df3da61cd1005182dc430977242a0debcaa4635b0aaaef14";
libraryHaskellDepends = [
aeson
async
base
bytestring
every
exceptions
monad-control
stm
transformers
wai-transformers
websockets
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/athanclark/websockets-simple#readme";
description = "Simpler interface to the websockets api";
license = stdenv.lib.licenses.bsd3;

}) {};
"websockets-snap" = callPackage
({
  mkDerivation
, base
, bytestring
, bytestring-builder
, io-streams
, mtl
, snap-core
, snap-server
, stdenv
, websockets
}:
mkDerivation {

pname = "websockets-snap";
version = "0.10.3.0";
sha256 = "b34a40583a2111bb44233b728095fac38b8de1ab74c027fc4ee92a65af373be4";
libraryHaskellDepends = [
base
bytestring
bytestring-builder
io-streams
mtl
snap-core
snap-server
websockets
];
doHaddock = false;
doCheck = false;
description = "Snap integration for the websockets library";
license = stdenv.lib.licenses.bsd3;

}) {};
"weeder" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, cmdargs
, deepseq
, directory
, extra
, filepath
, foundation
, hashable
, process
, stdenv
, text
, unordered-containers
, vector
, yaml
}:
mkDerivation {

pname = "weeder";
version = "1.0.5";
sha256 = "51e73d9a404b262f7726c2d706c9a354b880abf3574c535bd725c910b29d8a2e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
cmdargs
deepseq
directory
extra
filepath
foundation
hashable
process
text
unordered-containers
vector
yaml
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ndmitchell/weeder#readme";
description = "Detect dead code";
license = stdenv.lib.licenses.bsd3;

}) {};
"weigh" = callPackage
({
  mkDerivation
, base
, deepseq
, mtl
, process
, split
, stdenv
, temporary
}:
mkDerivation {

pname = "weigh";
version = "0.0.12";
sha256 = "fdc8b86edac17d57a56a04f149f796f55bfffa04e3c8d32afeedf5775252827f";
libraryHaskellDepends = [
base
deepseq
mtl
process
split
temporary
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fpco/weigh#readme";
description = "Measure allocations of a Haskell functions/values";
license = stdenv.lib.licenses.bsd3;

}) {};
"wide-word" = callPackage
({
  mkDerivation
, base
, deepseq
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "wide-word";
version = "0.1.0.6";
sha256 = "1d8c0998b70af7b850a9d22642a50c6334ec47acdb8a31a90de7533d4b6b7c78";
libraryHaskellDepends = [
base
deepseq
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/erikd/wide-word";
description = "Data types for large but fixed width signed and unsigned integers";
license = stdenv.lib.licenses.bsd2;

}) {};
"wikicfp-scraper" = callPackage
({
  mkDerivation
, attoparsec
, base
, bytestring
, scalpel-core
, stdenv
, text
, time
}:
mkDerivation {

pname = "wikicfp-scraper";
version = "0.1.0.9";
sha256 = "9e3cfd6dae669c34c8037cfc0996f371799297f4d08588702399413d8a4242e2";
libraryHaskellDepends = [
attoparsec
base
bytestring
scalpel-core
text
time
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wikicfp-scraper";
description = "Scrape WikiCFP web site";
license = stdenv.lib.licenses.bsd3;

}) {};
"wild-bind" = callPackage
({
  mkDerivation
, base
, containers
, semigroups
, stdenv
, text
, transformers
}:
mkDerivation {

pname = "wild-bind";
version = "0.1.2.0";
sha256 = "e68ee75a7ae1c5189f8d0b11cf123e834c0d4c34e7f3e9136a37843bc2593630";
libraryHaskellDepends = [
base
containers
semigroups
text
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wild-bind";
description = "Dynamic key binding framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"wild-bind-x11" = callPackage
({
  mkDerivation
, base
, containers
, fold-debounce
, mtl
, semigroups
, stdenv
, stm
, text
, transformers
, wild-bind
, X11
}:
mkDerivation {

pname = "wild-bind-x11";
version = "0.2.0.3";
sha256 = "8d120815f9150fc4ce51d74c290c82632ae34c3c894572b3ad03618ce7ab5859";
libraryHaskellDepends = [
base
containers
fold-debounce
mtl
semigroups
stm
text
transformers
wild-bind
X11
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/debug-ito/wild-bind";
description = "X11-specific implementation for WildBind";
license = stdenv.lib.licenses.bsd3;

}) {};
"wire-streams" = callPackage
({
  mkDerivation
, base
, binary
, binary-parsers
, bytestring
, io-streams
, stdenv
}:
mkDerivation {

pname = "wire-streams";
version = "0.1.1.0";
sha256 = "96dffb70c08c89589881c96f199d271b55e4a5b3cc5be0f3e24e101858e2fb27";
revision = "1";
editedCabalFile = "1j7gpk3k82h0kxnhpv40jmnqxpnr0v0m4lj6bhpga81vlmznr088";
libraryHaskellDepends = [
base
binary
binary-parsers
bytestring
io-streams
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/wire-streams";
description = "Fast binary io-streams adapter";
license = stdenv.lib.licenses.bsd3;

}) {};
"with-location" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "with-location";
version = "0.1.0";
sha256 = "2c91d70cb28d39d6d5fbb37800c7d984aed4254cdcbf03ffa0787404bddefde7";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sol/with-location#readme";
description = "Use ImplicitParams-based source locations in a backward compatible way";
license = stdenv.lib.licenses.mit;

}) {};
"withdependencies" = callPackage
({
  mkDerivation
, base
, conduit
, containers
, mtl
, profunctors
, stdenv
}:
mkDerivation {

pname = "withdependencies";
version = "0.2.4.2";
sha256 = "ff51ed5d94ec0051d61458ef38264e0c21119606377d27cc0d9a5a8ae32bf312";
libraryHaskellDepends = [
base
conduit
containers
mtl
profunctors
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/bartavelle/withdependencies";
description = "Run computations that depend on one or more elements in a stream";
license = stdenv.lib.licenses.gpl3;

}) {};
"witherable" = callPackage
({
  mkDerivation
, base
, base-orphans
, containers
, hashable
, stdenv
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "witherable";
version = "0.2";
sha256 = "9ddb5a2b02fe0f7950742461dfabc9fc4aba245eddeec6afa9e1cd35fa16ea2d";
libraryHaskellDepends = [
base
base-orphans
containers
hashable
transformers
unordered-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/witherable";
description = "filterable traversable";
license = stdenv.lib.licenses.bsd3;

}) {};
"witness" = callPackage
({
  mkDerivation
, base
, constraints
, semigroupoids
, stdenv
, transformers
}:
mkDerivation {

pname = "witness";
version = "0.4";
sha256 = "93c6c83681a3ab94f53e49c07d0d1474e21169f779c917a896c9d6ed1bf01ea0";
libraryHaskellDepends = [
base
constraints
semigroupoids
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/AshleyYakeley/witness";
description = "values that witness types";
license = stdenv.lib.licenses.bsd3;

}) {};
"wizards" = callPackage
({
  mkDerivation
, base
, containers
, control-monad-free
, haskeline
, mtl
, stdenv
, transformers
}:
mkDerivation {

pname = "wizards";
version = "1.0.2";
sha256 = "4ba12c726d60688b8173db3891aa1dce7f57c6364c40ba2f1c2c8d16404bd30b";
revision = "1";
editedCabalFile = "15vwynd5v6xm92dxkxf125grd8sv599n5bnj92qqmhlc89psxhxk";
libraryHaskellDepends = [
base
containers
control-monad-free
haskeline
mtl
transformers
];
doHaddock = false;
doCheck = false;
description = "High level, generic library for interrogative user interfaces";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "wl-pprint";
version = "1.2.1";
sha256 = "0c7c8323ff9ef60e7183fcd76ff7176b78872873b19606ff410eeddc2ef2c74e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "The Wadler/Leijen Pretty Printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-annotated" = callPackage
({
  mkDerivation
, base
, containers
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "wl-pprint-annotated";
version = "0.1.0.0";
sha256 = "b7ce310688626b25c19e2c93c3546ce5f6a3a6c5943b0a687031b757ba494930";
libraryHaskellDepends = [
base
containers
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/wl-pprint-annotated#readme";
description = "Wadler/Leijen pretty printer with annotations and slightly modernized API";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-console" = callPackage
({
  mkDerivation
, base
, bytestring
, colorful-monoids
, stdenv
, text
, wl-pprint-annotated
}:
mkDerivation {

pname = "wl-pprint-console";
version = "0.1.0.1";
sha256 = "a7c7f6aa14f78bf6a8aae1a629433872f8bfb377b1392f08047520cdcb3b70fc";
revision = "1";
editedCabalFile = "1mlbjjk5mhv3jxzqvfspm07di09pns0xfalhx68k2r39z4lj1fa5";
libraryHaskellDepends = [
base
bytestring
colorful-monoids
text
wl-pprint-annotated
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/wl-pprint-console#readme";
description = "Wadler/Leijen pretty printer supporting colorful console output";
license = stdenv.lib.licenses.mit;

}) {};
"wl-pprint-extras" = callPackage
({
  mkDerivation
, base
, containers
, nats
, semigroupoids
, semigroups
, stdenv
, text
, utf8-string
}:
mkDerivation {

pname = "wl-pprint-extras";
version = "3.5.0.5";
sha256 = "a9c21a85a729191fc422938a1f785d61be52f3a2923d8d79dade9b21e8e98d8f";
libraryHaskellDepends = [
base
containers
nats
semigroupoids
semigroups
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/wl-pprint-extras/";
description = "A free monad based on the Wadler/Leijen pretty printer";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-terminfo" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, nats
, semigroups
, stdenv
, terminfo
, text
, transformers
, wl-pprint-extras
}:
mkDerivation {

pname = "wl-pprint-terminfo";
version = "3.7.1.4";
sha256 = "3cdaba571fc3f8c51e39d14773b23f0f8237bb2d33dbaf9230a98d4b2f388d20";
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
bytestring
containers
nats
semigroups
terminfo
text
transformers
wl-pprint-extras
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
description = "A color pretty printer with terminfo support";
license = stdenv.lib.licenses.bsd3;

}) {};
"wl-pprint-text" = callPackage
({
  mkDerivation
, base
, base-compat
, stdenv
, text
}:
mkDerivation {

pname = "wl-pprint-text";
version = "1.1.1.0";
sha256 = "2960c8201c05d912a1df748a3ceeadc7525905ff1c371d7b4972f4011eca0acd";
libraryHaskellDepends = [
base
base-compat
text
];
doHaddock = false;
doCheck = false;
description = "A Wadler/Leijen Pretty Printer for Text values";
license = stdenv.lib.licenses.bsd3;

}) {};
"word-trie" = callPackage
({
  mkDerivation
, base
, binary
, containers
, stdenv
}:
mkDerivation {

pname = "word-trie";
version = "0.3.0";
sha256 = "a3f3c2c088c64219ae35f7383a5dc1a368217183ba603e98785c110ac3f29282";
revision = "1";
editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
libraryHaskellDepends = [
base
binary
containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/word-trie";
description = "Implementation of a finite trie over words";
license = stdenv.lib.licenses.gpl2;

}) {};
"word-wrap" = callPackage
({
  mkDerivation
, base
, stdenv
, text
}:
mkDerivation {

pname = "word-wrap";
version = "0.4.1";
sha256 = "eb72f91947c0c62cb862feb33cad9efdc5e720f456fa9ca68ef8ac9d1ec42c97";
revision = "1";
editedCabalFile = "1k4w4g053vhmpp08542hrqaw81p3p35i567xgdarqmpghfrk68pp";
libraryHaskellDepends = [
base
text
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/jtdaugherty/word-wrap/";
description = "A library for word-wrapping";
license = stdenv.lib.licenses.bsd3;

}) {};
"word24" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
}:
mkDerivation {

pname = "word24";
version = "2.0.1";
sha256 = "c34ba17cc88df314151ef27dea192102ed73d5f0678f1359a5fe59799dc3a086";
libraryHaskellDepends = [
base
deepseq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/winterland1989/word24";
description = "24-bit word and int types for GHC";
license = stdenv.lib.licenses.bsd3;

}) {};
"word8" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "word8";
version = "0.1.3";
sha256 = "2630934c75728bfbf390c1f0206b225507b354f68d4047b06c018a36823b5d8a";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Word8 library";
license = stdenv.lib.licenses.bsd3;

}) {};
"world-peace" = callPackage
({
  mkDerivation
, aeson
, base
, deepseq
, profunctors
, stdenv
, tagged
}:
mkDerivation {

pname = "world-peace";
version = "0.1.0.0";
sha256 = "737685799cdd97c2178c749a60906d15548b040570b90f1bbb4f259ba0e756a5";
libraryHaskellDepends = [
aeson
base
deepseq
profunctors
tagged
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/world-peace";
description = "Open Union and Open Product Types";
license = stdenv.lib.licenses.bsd3;

}) {};
"wrap" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "wrap";
version = "0.0.0";
sha256 = "f8bbc4b417b2291532784d0c7940c0f1a24d054e6012963f7d727ad13977f50e";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
description = "Wrap a function's return value with another function";
license = stdenv.lib.licenses.bsd3;

}) {};
"wrecker" = callPackage
({
  mkDerivation
, aeson
, ansi-terminal
, ansigraph
, array
, authenticate-oauth
, base
, base64-bytestring
, blaze-builder
, bytestring
, case-insensitive
, clock
, clock-extras
, connection
, containers
, cookie
, cryptonite
, data-default
, data-default-class
, deepseq
, exceptions
, fast-logger
, filepath
, http-client
, http-client-tls
, http-types
, immortal
, lens
, markdown-unlit
, memory
, mime-types
, network
, network-uri
, next-ref
, optparse-applicative
, random
, statistics
, stdenv
, stm
, stm-chans
, streaming-commons
, tabular
, tdigest
, text
, threads
, threads-extras
, time
, tls
, transformers
, unix
, unordered-containers
, vector
, vty
, wreq
}:
mkDerivation {

pname = "wrecker";
version = "1.3.1.0";
sha256 = "27e64c8970340ad6849e689330eb4497789494128fde4a8a4d805f8bd04c0a7c";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
ansi-terminal
ansigraph
array
authenticate-oauth
base
base64-bytestring
blaze-builder
bytestring
case-insensitive
clock
clock-extras
connection
containers
cookie
cryptonite
data-default
data-default-class
deepseq
exceptions
fast-logger
filepath
http-client
http-client-tls
http-types
immortal
memory
mime-types
network
network-uri
next-ref
optparse-applicative
random
statistics
stm
stm-chans
streaming-commons
tabular
tdigest
text
threads
threads-extras
time
tls
transformers
unix
unordered-containers
vector
vty
wreq
];
executableHaskellDepends = [
base
http-client
http-client-tls
lens
markdown-unlit
optparse-applicative
transformers
wreq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/lorenzo/wrecker#readme";
description = "An HTTP Performance Benchmarker";
license = stdenv.lib.licenses.bsd3;

}) {};
"wreq" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, authenticate-oauth
, base
, base16-bytestring
, bytestring
, Cabal
, cabal-doctest
, case-insensitive
, containers
, cryptonite
, exceptions
, ghc-prim
, hashable
, http-client
, http-client-tls
, http-types
, lens
, lens-aeson
, memory
, mime-types
, psqueues
, stdenv
, template-haskell
, text
, time
, time-locale-compat
, unordered-containers
}:
mkDerivation {

pname = "wreq";
version = "0.5.2.1";
sha256 = "b3d069b38d709becdd5ebc75859ff46833419d25f6168367e672243f29491237";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
aeson
attoparsec
authenticate-oauth
base
base16-bytestring
bytestring
case-insensitive
containers
cryptonite
exceptions
ghc-prim
hashable
http-client
http-client-tls
http-types
lens
lens-aeson
memory
mime-types
psqueues
template-haskell
text
time
time-locale-compat
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "http://www.serpentine.com/wreq";
description = "An easy-to-use HTTP client library";
license = stdenv.lib.licenses.bsd3;

}) {};
"wreq-stringless" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
, utf8-string
, wreq
}:
mkDerivation {

pname = "wreq-stringless";
version = "0.5.9.1";
sha256 = "502cd16163ff3356f5477ed7ab1b67147aa6bb445238055450df12b69697f235";
libraryHaskellDepends = [
base
bytestring
text
utf8-string
wreq
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/j-keck/wreq-stringless#readme";
description = "Simple wrapper to use wreq without Strings";
license = stdenv.lib.licenses.mit;

}) {};
"writer-cps-full" = callPackage
({
  mkDerivation
, base
, stdenv
, writer-cps-lens
, writer-cps-morph
, writer-cps-mtl
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-full";
version = "0.1.0.0";
sha256 = "ba51df5149470be6d70fd179f2af4cae30824a3a63528f1549a97f57610a5e95";
libraryHaskellDepends = [
base
writer-cps-lens
writer-cps-morph
writer-cps-mtl
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/writer-cps-full#readme";
description = "WriteT and RWST monad transformers (Reexport with all dependencies)";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-lens" = callPackage
({
  mkDerivation
, base
, lens
, profunctors
, stdenv
, transformers
, writer-cps-mtl
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-lens";
version = "0.1.0.1";
sha256 = "2d6b8b6f4f86dcb3cc75bdd25d4ab186d09c2859023f3a6ef2171576b0d306ef";
libraryHaskellDepends = [
base
lens
profunctors
transformers
writer-cps-mtl
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/writer-cps-lens#readme";
description = "Lens instances for the stricter CPS WriterT and RWST";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-morph" = callPackage
({
  mkDerivation
, base
, mmorph
, stdenv
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-morph";
version = "0.1.0.2";
sha256 = "e91d07b7dce83973c8ad8f489e161ea8092bd3c7d161f4e57cddeedd2f3fd5d8";
revision = "1";
editedCabalFile = "0dqpbpaidwa7ahk0n7pv397mv7ncr26p3vcrjh1xzl6vk26bdah5";
libraryHaskellDepends = [
base
mmorph
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/louispan/writer-cps-morph#readme";
description = "MFunctor instance for CPS style WriterT and RWST";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-mtl" = callPackage
({
  mkDerivation
, base
, mtl
, stdenv
, transformers
, writer-cps-transformers
}:
mkDerivation {

pname = "writer-cps-mtl";
version = "0.1.1.4";
sha256 = "62a3b3b76a5dc0dc6e8b9837afc8c5fc83fb334a034f89fab6a4a544fe204870";
libraryHaskellDepends = [
base
mtl
transformers
writer-cps-transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/writer-cps-mtl#readme";
description = "MonadWriter orphan instances for writer-cps-transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"writer-cps-transformers" = callPackage
({
  mkDerivation
, base
, stdenv
, transformers
}:
mkDerivation {

pname = "writer-cps-transformers";
version = "0.1.1.3";
sha256 = "8aa22832fdb413c706a6862b83ad4a4ef8dd61ae8658aca6e5076cf2a5cd4aae";
libraryHaskellDepends = [
base
transformers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/minad/writer-cps-transformers#readme";
description = "WriteT and RWST monad transformers";
license = stdenv.lib.licenses.bsd3;

}) {};
"wuss" = callPackage
({
  mkDerivation
, base
, bytestring
, connection
, network
, stdenv
, websockets
}:
mkDerivation {

pname = "wuss";
version = "1.1.9";
sha256 = "3f3529a040cd40aaf8a76a0605fab252d21cb5cd3c3924b5988087a5dbfe40d1";
libraryHaskellDepends = [
base
bytestring
connection
network
websockets
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/tfausak/wuss#readme";
description = "Secure WebSocket (WSS) clients";
license = stdenv.lib.licenses.mit;

}) {};
"x11-xim" = callPackage
({
  mkDerivation
, base
, stdenv
, utf8-string
, X11
}:
mkDerivation {

pname = "x11-xim";
version = "0.0.9.0";
sha256 = "3ccb05847f7eacd607db095e4f655984607f46313d6b70130d09fd096442c76a";
revision = "1";
editedCabalFile = "1c561z9xvfcd7ddbiw3r0frhjvsrklachd38s66fzwjdgw1sl124";
libraryHaskellDepends = [
base
utf8-string
X11
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/YoshikuniJujo/x11-xim_haskell/wiki/";
description = "A binding to the xim of X11 graphics library";
license = stdenv.lib.licenses.bsd3;

}) {};
"x509" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-parse
, asn1-types
, base
, bytestring
, containers
, cryptonite
, hourglass
, memory
, mtl
, pem
, stdenv
}:
mkDerivation {

pname = "x509";
version = "1.7.3";
sha256 = "41740f949bb773dc721d342a85587a512658c81ee8cd38f102473b315e127356";
revision = "1";
editedCabalFile = "06zzirygvzp0ssdg9blipdwmd0b41p4gxh3ldai7ngjyjsdclwsx";
libraryHaskellDepends = [
asn1-encoding
asn1-parse
asn1-types
base
bytestring
containers
cryptonite
hourglass
memory
mtl
pem
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "X509 reader and writer";
license = stdenv.lib.licenses.bsd3;

}) {};
"x509-store" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, bytestring
, containers
, cryptonite
, directory
, filepath
, mtl
, pem
, stdenv
, x509
}:
mkDerivation {

pname = "x509-store";
version = "1.6.6";
sha256 = "6a276f595cf91c9688129cad4c9c6be9c349ffc0de22300eeb3dfa6a2b6e7635";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
bytestring
containers
cryptonite
directory
filepath
mtl
pem
x509
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "X.509 collection accessing and storing methods";
license = stdenv.lib.licenses.bsd3;

}) {};
"x509-system" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, filepath
, mtl
, pem
, process
, stdenv
, x509
, x509-store
}:
mkDerivation {

pname = "x509-system";
version = "1.6.6";
sha256 = "40dcdaae3ec67f38c08d96d4365b901eb8ac0c590bd7972eb429d37d58aa4419";
libraryHaskellDepends = [
base
bytestring
containers
directory
filepath
mtl
pem
process
x509
x509-store
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "Handle per-operating-system X.509 accessors and storage";
license = stdenv.lib.licenses.bsd3;

}) {};
"x509-validation" = callPackage
({
  mkDerivation
, asn1-encoding
, asn1-types
, base
, bytestring
, containers
, cryptonite
, data-default-class
, hourglass
, memory
, mtl
, pem
, stdenv
, x509
, x509-store
}:
mkDerivation {

pname = "x509-validation";
version = "1.6.10";
sha256 = "761c9d77322528259b690508e829cb360feb1fc542951a99f3af51ae980e45d7";
revision = "1";
editedCabalFile = "1isap8v1gh31q4pj3gn155ya8nd1da0a5a3cryqh4yhf0ivbwl0w";
libraryHaskellDepends = [
asn1-encoding
asn1-types
base
bytestring
containers
cryptonite
data-default-class
hourglass
memory
mtl
pem
x509
x509-store
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/vincenthz/hs-certificate";
description = "X.509 Certificate and CRL validation";
license = stdenv.lib.licenses.bsd3;

}) {};
"xdg-basedir" = callPackage
({
  mkDerivation
, base
, directory
, filepath
, stdenv
}:
mkDerivation {

pname = "xdg-basedir";
version = "0.2.2";
sha256 = "e461c3a5c6007c55ceaea03be3be0ef3a92aa0ea1aea936da0c43671bbfaf42b";
libraryHaskellDepends = [
base
directory
filepath
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/willdonnelly/xdg-basedir";
description = "A basic implementation of the XDG Base Directory specification";
license = stdenv.lib.licenses.bsd3;

}) {};
"xeno" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, deepseq
, hspec
, mtl
, mutable-containers
, stdenv
, vector
}:
mkDerivation {

pname = "xeno";
version = "0.3.4";
sha256 = "5a2a56d969a6410b65150bc4254f343c6bbe585e60eb4890d2bc0ac6c1f334eb";
libraryHaskellDepends = [
array
base
bytestring
deepseq
hspec
mtl
mutable-containers
vector
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ocramz/xeno";
description = "A fast event-based XML parser in pure Haskell";
license = stdenv.lib.licenses.bsd3;

}) {};
"xenstore" = callPackage
({
  mkDerivation
, base
, bytestring
, cereal
, mtl
, network
, stdenv
}:
mkDerivation {

pname = "xenstore";
version = "0.1.1";
sha256 = "c2b538c9ce6716f4a1b4c0cb63ed5c6e5ee3e69e80dbb7826ee7f5392f45e874";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bytestring
cereal
mtl
network
];
doHaddock = false;
doCheck = false;
description = "Xenstore client access";
license = stdenv.lib.licenses.bsd3;

}) {};
"xhtml" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "xhtml";
version = "3000.2.2";
sha256 = "e47c0d0b75ed973928ffb423fa8b571138dfc4ad66ce80b2c4dfcbed64a9647c";
revision = "1";
editedCabalFile = "0qj770djlsiv82mlkasqp2zd1v4966h0zjw1y1qfvjmsm3b35hga";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell/xhtml";
description = "An XHTML combinator library";
license = stdenv.lib.licenses.bsd3;

}) {};
"xls" = callPackage
({
  mkDerivation
, base
, conduit
, filepath
, getopt-generics
, resourcet
, stdenv
, transformers
}:
mkDerivation {

pname = "xls";
version = "0.1.1";
sha256 = "097711246a78389bdde19484d422ffb2248d46ab62248e4ca653c50e12ff0928";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
conduit
filepath
resourcet
transformers
];
executableHaskellDepends = [
base
conduit
getopt-generics
resourcet
transformers
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/harendra-kumar/xls";
description = "Parse Microsoft Excel xls files (BIFF/Excel 97-2004)";
license = stdenv.lib.licenses.bsd3;

}) {};
"xlsx" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, binary-search
, bytestring
, conduit
, containers
, data-default
, deepseq
, errors
, extra
, filepath
, lens
, mtl
, network-uri
, old-locale
, safe
, stdenv
, text
, time
, transformers
, vector
, xeno
, xml-conduit
, zip-archive
, zlib
}:
mkDerivation {

pname = "xlsx";
version = "0.7.2";
sha256 = "b2560467ea5639d7bbd97ecf492f2e2cc9fa34e0b05fc5d55243304bbe7f1103";
libraryHaskellDepends = [
attoparsec
base
base64-bytestring
binary-search
bytestring
conduit
containers
data-default
deepseq
errors
extra
filepath
lens
mtl
network-uri
old-locale
safe
text
time
transformers
vector
xeno
xml-conduit
zip-archive
zlib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/qrilka/xlsx";
description = "Simple and incomplete Excel file parser/writer";
license = stdenv.lib.licenses.mit;

}) {};
"xlsx-tabular" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, data-default
, lens
, stdenv
, text
, xlsx
}:
mkDerivation {

pname = "xlsx-tabular";
version = "0.2.2.1";
sha256 = "48dd897d41df81f9009e6c6c988021bc989286cee385bd2535d8e60b54d0fd2d";
libraryHaskellDepends = [
aeson
base
bytestring
containers
data-default
lens
text
xlsx
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/kkazuo/xlsx-tabular";
description = "Xlsx table cell value extraction utility";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, text
}:
mkDerivation {

pname = "xml";
version = "1.3.14";
sha256 = "32d1a1a9f21a59176d84697f96ae3a13a0198420e3e4f1c48abbab7d2425013d";
libraryHaskellDepends = [
base
bytestring
text
];
doHaddock = false;
doCheck = false;
homepage = "http://code.galois.com";
description = "A simple XML library";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-basic" = callPackage
({
  mkDerivation
, base
, containers
, data-accessor
, explicit-exception
, semigroups
, stdenv
, utility-ht
}:
mkDerivation {

pname = "xml-basic";
version = "0.1.3";
sha256 = "98d8d1263462c7880afefff15957affe969d202bd3716f5bb553c6ada55c4355";
libraryHaskellDepends = [
base
containers
data-accessor
explicit-exception
semigroups
utility-ht
];
doHaddock = false;
doCheck = false;
description = "Basics for XML/HTML representation and processing";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-conduit" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-html
, blaze-markup
, bytestring
, conduit
, conduit-extra
, containers
, data-default-class
, deepseq
, monad-control
, resourcet
, stdenv
, text
, transformers
, xml-types
}:
mkDerivation {

pname = "xml-conduit";
version = "1.8.0";
sha256 = "0382bfd3627be4970b11228948274faef51ca9a2590a7723b5787a7205a52036";
libraryHaskellDepends = [
attoparsec
base
blaze-html
blaze-markup
bytestring
conduit
conduit-extra
containers
data-default-class
deepseq
monad-control
resourcet
text
transformers
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/xml";
description = "Pure-Haskell utilities for dealing with XML with the conduit package";
license = stdenv.lib.licenses.mit;

}) {};
"xml-conduit-writer" = callPackage
({
  mkDerivation
, base
, containers
, data-default
, dlist
, mtl
, stdenv
, text
, xml-conduit
, xml-types
}:
mkDerivation {

pname = "xml-conduit-writer";
version = "0.1.1.2";
sha256 = "0891c05ad2a2de68183868de8f66230d02f209446ee91bca772cbf22b599ae58";
libraryHaskellDepends = [
base
containers
data-default
dlist
mtl
text
xml-conduit
xml-types
];
doHaddock = false;
doCheck = false;
homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
description = "Warm and fuzzy creation of XML documents";
license = stdenv.lib.licenses.mit;

}) {};
"xml-hamlet" = callPackage
({
  mkDerivation
, base
, containers
, parsec
, shakespeare
, stdenv
, template-haskell
, text
, xml-conduit
}:
mkDerivation {

pname = "xml-hamlet";
version = "0.5.0";
sha256 = "7bcec0aad83e72c2870efd3327553b3d78f6332cf01c12ad4b67c02f499015a3";
libraryHaskellDepends = [
base
containers
parsec
shakespeare
template-haskell
text
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Hamlet-style quasiquoter for XML content";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-html-qq" = callPackage
({
  mkDerivation
, base
, blaze-markup
, conduit
, data-default
, from-sum
, heterocephalus
, html-conduit
, resourcet
, stdenv
, template-haskell
, text
, th-lift
, th-lift-instances
, xml-conduit
}:
mkDerivation {

pname = "xml-html-qq";
version = "0.1.0.1";
sha256 = "1a2ebb1f4ca58a4f442c470db6d3271e6b1069d41860f8683b5da9082329235a";
libraryHaskellDepends = [
base
blaze-markup
conduit
data-default
from-sum
heterocephalus
html-conduit
resourcet
template-haskell
text
th-lift
th-lift-instances
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/xml-html-qq";
description = "Quasi-quoters for XML and HTML Documents";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-indexed-cursor" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, data-default
, stdenv
, text
, xml-conduit
}:
mkDerivation {

pname = "xml-indexed-cursor";
version = "0.1.1.0";
sha256 = "46d622fc738e8cc1513f598207ee5e6cda790c79e0697fe02d2da6ad02a6da74";
libraryHaskellDepends = [
base
bytestring
containers
data-default
text
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/cdepillabout/xml-indexed-cursor";
description = "Indexed XML cursors similar to 'Text.XML.Cursor' from xml-conduit";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-isogen" = callPackage
({
  mkDerivation
, base
, dom-parser
, lens
, mtl
, QuickCheck
, semigroups
, stdenv
, template-haskell
, text
, xml-conduit
, xml-conduit-writer
}:
mkDerivation {

pname = "xml-isogen";
version = "0.2.1";
sha256 = "d4d86df194a5b4efa867ec9c015d9cf2432c2246c1c45548c3cda43f7d02dbcd";
libraryHaskellDepends = [
base
dom-parser
lens
mtl
QuickCheck
semigroups
template-haskell
text
xml-conduit
xml-conduit-writer
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/typeable/xml-isogen";
description = "Generate XML-isomorphic types";
license = stdenv.lib.licenses.mit;

}) {};
"xml-lens" = callPackage
({
  mkDerivation
, base
, case-insensitive
, containers
, lens
, stdenv
, text
, xml-conduit
}:
mkDerivation {

pname = "xml-lens";
version = "0.1.6.3";
sha256 = "4dd7f1a91fbb12ae52d5a14badd9f38c0f0d7556f08ee77d79a67cc546dcb1e8";
revision = "1";
editedCabalFile = "1fbk4wv7zr10wsh8a0svd799im64fybnlb09rjpfl2pvb6i6h1qs";
libraryHaskellDepends = [
base
case-insensitive
containers
lens
text
xml-conduit
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/fumieval/xml-lens";
description = "Lenses, traversals, and prisms for xml-conduit";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-picklers" = callPackage
({
  mkDerivation
, base
, containers
, stdenv
, text
, xml-types
}:
mkDerivation {

pname = "xml-picklers";
version = "0.3.6";
sha256 = "d1b802cd9543a228c6699928e6695539c28f6cbd8e7859a65ca874543ef1d1a4";
libraryHaskellDepends = [
base
containers
text
xml-types
];
doHaddock = false;
doCheck = false;
description = "XML picklers based on xml-types, ported from hexpat-pickle";
license = stdenv.lib.licenses.bsd3;

}) {};
"xml-to-json" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, containers
, curl
, hashable
, hxt
, hxt-curl
, hxt-expat
, hxt-tagsoup
, regex-posix
, stdenv
, tagsoup
, text
, unordered-containers
, vector
}:
mkDerivation {

pname = "xml-to-json";
version = "2.0.1";
sha256 = "ad1a2501828052a1798178c309638a9b8e4fe66ad24dae9c76de939c156d2e2f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
base
bytestring
containers
curl
hashable
hxt
hxt-curl
hxt-expat
hxt-tagsoup
regex-posix
tagsoup
text
unordered-containers
vector
];
executableHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sinelaw/xml-to-json";
description = "Library and command line tool for converting XML files to json";
license = stdenv.lib.licenses.mit;

}) {};
"xml-to-json-fast" = callPackage
({
  mkDerivation
, base
, directory
, process
, stdenv
, tagsoup
, text
}:
mkDerivation {

pname = "xml-to-json-fast";
version = "2.0.0";
sha256 = "dd852fe1aa54db3c6d87a2e74b5345b0f14effdd49bad5b73d79571e1b47563f";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
tagsoup
text
];
executableHaskellDepends = [
base
directory
process
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/sinelaw/xml-to-json-fast";
description = "Fast, light converter of xml to json capable of handling huge xml files";
license = stdenv.lib.licenses.mit;

}) {};
"xml-types" = callPackage
({
  mkDerivation
, base
, deepseq
, stdenv
, text
}:
mkDerivation {

pname = "xml-types";
version = "0.3.6";
sha256 = "9937d440072552c03c6d8ad79f61e61467dc28dcd5adeaad81038b9b94eef8c9";
libraryHaskellDepends = [
base
deepseq
text
];
doHaddock = false;
doCheck = false;
homepage = "https://john-millikin.com/software/haskell-xml/";
description = "Basic types for representing XML";
license = stdenv.lib.licenses.mit;

}) {};
"xmlgen" = callPackage
({
  mkDerivation
, base
, blaze-builder
, bytestring
, containers
, mtl
, stdenv
, text
}:
mkDerivation {

pname = "xmlgen";
version = "0.6.2.2";
sha256 = "926fa98c77525f5046274758fcebd190e86de3f53a4583179e8ce328f25a34d6";
libraryHaskellDepends = [
base
blaze-builder
bytestring
containers
mtl
text
];
doHaddock = false;
doCheck = false;
description = "Fast XML generation library";
license = stdenv.lib.licenses.bsd3;

}) {};
"xmlhtml" = callPackage
({
  mkDerivation
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, bytestring-builder
, containers
, parsec
, stdenv
, text
, unordered-containers
}:
mkDerivation {

pname = "xmlhtml";
version = "0.2.5.2";
sha256 = "64818617644bfc7c3c9fe561435af9929ef60310627b0796c78b4b99240b5bdc";
libraryHaskellDepends = [
base
blaze-builder
blaze-html
blaze-markup
bytestring
bytestring-builder
containers
parsec
text
unordered-containers
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snapframework/xmlhtml";
description = "XML parser and renderer with HTML 5 quirks mode";
license = stdenv.lib.licenses.bsd3;

}) {};
"xmonad" = callPackage
({
  mkDerivation
, base
, containers
, data-default
, directory
, extensible-exceptions
, filepath
, mtl
, process
, setlocale
, stdenv
, unix
, utf8-string
, X11
}:
mkDerivation {

pname = "xmonad";
version = "0.13";
sha256 = "f9f81b63569f18c777a939741024ec3ae34e4ec84015e5cc50f6622034a303ca";
isLibrary = true;
isExecutable = true;
enableSeparateDataOutput = true;
libraryHaskellDepends = [
base
containers
data-default
directory
extensible-exceptions
filepath
mtl
process
setlocale
unix
utf8-string
X11
];
executableHaskellDepends = [
base
mtl
unix
X11
];
doHaddock = false;
doCheck = false;
postInstall = ''
  shopt -s globstar
  mkdir -p $doc/share/man/man1
  mv "$data/"**"/man/"*[0-9] $doc/share/man/man1/
  rm "$data/"**"/man/"*
'';
homepage = "http://xmonad.org";
description = "A tiling window manager";
license = stdenv.lib.licenses.bsd3;

}) {};
"xmonad-contrib" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, directory
, extensible-exceptions
, filepath
, mtl
, old-locale
, old-time
, process
, random
, stdenv
, unix
, utf8-string
, X11
, X11-xft
, xmonad
}:
mkDerivation {

pname = "xmonad-contrib";
version = "0.13";
sha256 = "a760827fe5b1f99d783f52ccbb72b272d02d53daa26757363cde3ceba014476e";
libraryHaskellDepends = [
base
bytestring
containers
directory
extensible-exceptions
filepath
mtl
old-locale
old-time
process
random
unix
utf8-string
X11
X11-xft
xmonad
];
doHaddock = false;
doCheck = false;
homepage = "http://xmonad.org/";
description = "Third party extensions for xmonad";
license = stdenv.lib.licenses.bsd3;

}) {};
"xmonad-extras" = callPackage
({
  mkDerivation
, alsa-mixer
, base
, bytestring
, containers
, hint
, libmpd
, mtl
, network
, regex-posix
, stdenv
, X11
, xmonad
, xmonad-contrib
}:
mkDerivation {

pname = "xmonad-extras";
version = "0.13.3";
sha256 = "e0eac5f92dab5b6163cb1fb529a1dbc34bb0ffb6e6fa4fffc9d5b411ed9cfd95";
configureFlags = [
"-f-with_hlist"
"-fwith_parsec"
"-fwith_split"
];
libraryHaskellDepends = [
alsa-mixer
base
bytestring
containers
hint
libmpd
mtl
network
regex-posix
X11
xmonad
xmonad-contrib
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/xmonad/xmonad-extras";
description = "Third party extensions for xmonad with wacky dependencies";
license = stdenv.lib.licenses.bsd3;

}) {};
"xss-sanitize" = callPackage
({
  mkDerivation
, attoparsec
, base
, containers
, css-text
, network-uri
, stdenv
, tagsoup
, text
, utf8-string
}:
mkDerivation {

pname = "xss-sanitize";
version = "0.3.5.7";
sha256 = "955856413e70375c794766d04ac9ab7f0d3337dbb04a412c9b7ff5c415acac00";
libraryHaskellDepends = [
attoparsec
base
containers
css-text
network-uri
tagsoup
text
utf8-string
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
description = "sanitize untrusted HTML to prevent XSS attacks";
license = stdenv.lib.licenses.bsd2;

}) {};
"xturtle" = callPackage
({
  mkDerivation
, base
, convertible
, Imlib
, setlocale
, stdenv
, X11
, X11-xft
, x11-xim
, yjsvg
, yjtools
}:
mkDerivation {

pname = "xturtle";
version = "0.2.0.0";
sha256 = "43180537377db24e446f83bddd6f0c7ceadeb871c793e046bddeab433e24ce22";
libraryHaskellDepends = [
base
convertible
Imlib
setlocale
X11
X11-xft
x11-xim
yjsvg
yjtools
];
doHaddock = false;
doCheck = false;
description = "turtle like LOGO";
license = stdenv.lib.licenses.bsd3;

}) {};
"xxhash" = callPackage
({
  mkDerivation
, base
, bytestring
, crypto-api
, stdenv
, tagged
}:
mkDerivation {

pname = "xxhash";
version = "0.0.2";
sha256 = "4f5cc71564d71b7ab1e9f70ce9b8d32a3d73cb0b1e08ff96bc54298b21eb2f27";
libraryHaskellDepends = [
base
bytestring
crypto-api
tagged
];
doHaddock = false;
doCheck = false;
description = "A Haskell implementation of the xxHash algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"xxhash-ffi" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
}:
mkDerivation {

pname = "xxhash-ffi";
version = "0.2.0.0";
sha256 = "fc2e63ea54531e2888a9ddd6816cb113bd5fd0e01192156e9f1459d88af92e6b";
libraryHaskellDepends = [
base
bytestring
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/haskell-haskey/xxhash-ffi#readme";
description = "Bindings to the C implementation the xxHash algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"yaml" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, bytestring
, conduit
, containers
, directory
, filepath
, libyaml
, resourcet
, scientific
, semigroups
, stdenv
, template-haskell
, text
, transformers
, unordered-containers
, vector
}:
mkDerivation {

pname = "yaml";
version = "0.8.30";
sha256 = "d15b6e9d599137329161931478259462549dd1a38337ec7e8b17fe1c3496be85";
configureFlags = [
"-fsystem-libyaml"
];
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
aeson
attoparsec
base
bytestring
conduit
containers
directory
filepath
resourcet
scientific
semigroups
template-haskell
text
transformers
unordered-containers
vector
];
libraryPkgconfigDepends = [
libyaml
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snoyberg/yaml/";
description = "Support for parsing and rendering YAML documents";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) libyaml;};
"yes-precure5-command" = callPackage
({
  mkDerivation
, base
, Cabal
, containers
, mtl
, parsec
, random
, stdenv
}:
mkDerivation {

pname = "yes-precure5-command";
version = "5.5.3";
sha256 = "27f2f2dcd81923a18450cda21a31585d0d3887afde504190667cb7dbf0a0af7e";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
Cabal
containers
mtl
parsec
random
];
executableHaskellDepends = [
base
Cabal
containers
mtl
parsec
random
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/igrep/yes-precure5-command/";
description = "Extended yes command to reproduce phrases in Yes! Precure 5";
license = stdenv.lib.licenses.mit;

}) {};
"yeshql" = callPackage
({
  mkDerivation
, base
, containers
, convertible
, filepath
, HDBC
, parsec
, stdenv
, template-haskell
}:
mkDerivation {

pname = "yeshql";
version = "3.0.1.3";
sha256 = "376126afd611d84599fd9c0f9f50c27bea8b9b8630e608bda424555829765b13";
libraryHaskellDepends = [
base
containers
convertible
filepath
HDBC
parsec
template-haskell
];
doHaddock = false;
doCheck = false;
description = "YesQL-style SQL database abstraction";
license = stdenv.lib.licenses.mit;

}) {};
"yesod" = callPackage
({
  mkDerivation
, aeson
, base
, blaze-html
, blaze-markup
, bytestring
, conduit
, data-default-class
, directory
, fast-logger
, monad-logger
, resourcet
, semigroups
, shakespeare
, stdenv
, streaming-commons
, template-haskell
, text
, transformers
, unix
, unordered-containers
, wai
, wai-extra
, wai-logger
, warp
, yaml
, yesod-core
, yesod-form
, yesod-persistent
}:
mkDerivation {

pname = "yesod";
version = "1.6.0";
sha256 = "8a242ffe1df10bc2c5dffb6e255ad21b11e96a9c4794bac20504b67f973da773";
libraryHaskellDepends = [
aeson
base
blaze-html
blaze-markup
bytestring
conduit
data-default-class
directory
fast-logger
monad-logger
resourcet
semigroups
shakespeare
streaming-commons
template-haskell
text
transformers
unix
unordered-containers
wai
wai-extra
wai-logger
warp
yaml
yesod-core
yesod-form
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Creation of type-safe, RESTful web applications";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-alerts" = callPackage
({
  mkDerivation
, alerts
, base
, blaze-html
, blaze-markup
, safe
, stdenv
, text
, yesod-core
}:
mkDerivation {

pname = "yesod-alerts";
version = "0.1.2.0";
sha256 = "8e52c8a7ec9cdbe7cdc06f39ea4e27b852be0391cf78652e349f0f2c169b146f";
libraryHaskellDepends = [
alerts
base
blaze-html
blaze-markup
safe
text
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/alx741/yesod-alerts#readme";
description = "Alert messages for the Yesod framework";
license = stdenv.lib.licenses.bsd3;

}) {};
"yesod-auth" = callPackage
({
  mkDerivation
, aeson
, authenticate
, base
, base16-bytestring
, base64-bytestring
, binary
, blaze-builder
, blaze-html
, blaze-markup
, byteable
, bytestring
, conduit
, conduit-extra
, containers
, cryptonite
, data-default
, email-validate
, file-embed
, http-client
, http-client-tls
, http-conduit
, http-types
, memory
, mime-mail
, network-uri
, nonce
, persistent
, persistent-template
, random
, resourcet
, safe
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, unliftio
, unliftio-core
, unordered-containers
, wai
, yesod-core
, yesod-form
, yesod-persistent
}:
mkDerivation {

pname = "yesod-auth";
version = "1.6.3";
sha256 = "a0df427bfd95374957435f56561787d0bc66f978a7ea7cb017ec64f59c8698b8";
libraryHaskellDepends = [
aeson
authenticate
base
base16-bytestring
base64-bytestring
binary
blaze-builder
blaze-html
blaze-markup
byteable
bytestring
conduit
conduit-extra
containers
cryptonite
data-default
email-validate
file-embed
http-client
http-client-tls
http-conduit
http-types
memory
mime-mail
network-uri
nonce
persistent
persistent-template
random
resourcet
safe
shakespeare
template-haskell
text
time
transformers
unliftio
unliftio-core
unordered-containers
wai
yesod-core
yesod-form
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Authentication for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-auth-fb" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, fb
, http-conduit
, resourcet
, shakespeare
, stdenv
, text
, time
, transformers
, unliftio
, wai
, yesod-auth
, yesod-core
, yesod-fb
}:
mkDerivation {

pname = "yesod-auth-fb";
version = "1.9.0";
sha256 = "e8751b7703b2bc73eb37ec3ed03f3afec552cbc3933dff25fa0d899dcfea46c2";
libraryHaskellDepends = [
aeson
base
bytestring
conduit
fb
http-conduit
resourcet
shakespeare
text
time
transformers
unliftio
wai
yesod-auth
yesod-core
yesod-fb
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/yesod-auth-fb";
description = "Authentication backend for Yesod using Facebook";
license = stdenv.lib.licenses.bsd3;

}) {};
"yesod-auth-hashdb" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, persistent
, stdenv
, text
, yesod-auth
, yesod-core
, yesod-form
, yesod-persistent
}:
mkDerivation {

pname = "yesod-auth-hashdb";
version = "1.7";
sha256 = "65b9a941a9eb87421dfc57f817a7e4dd46bb204b0f27438084f7417805434f1c";
libraryHaskellDepends = [
aeson
base
bytestring
persistent
text
yesod-auth
yesod-core
yesod-form
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
description = "Authentication plugin for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-bin" = callPackage
({
  mkDerivation
, attoparsec
, base
, base64-bytestring
, blaze-builder
, bytestring
, Cabal
, conduit
, conduit-extra
, containers
, data-default-class
, directory
, file-embed
, filepath
, fsnotify
, http-client
, http-client-tls
, http-reverse-proxy
, http-types
, network
, optparse-applicative
, parsec
, process
, project-template
, resourcet
, say
, shakespeare
, split
, stdenv
, stm
, streaming-commons
, tar
, template-haskell
, text
, time
, transformers
, transformers-compat
, unix-compat
, unliftio
, unordered-containers
, wai
, wai-extra
, warp
, warp-tls
, yaml
, zlib
}:
mkDerivation {

pname = "yesod-bin";
version = "1.6.0.3";
sha256 = "e4db295b4c651c205a1730df38501c217d9b600f3dbc1eea21d5fa47e832aedc";
revision = "1";
editedCabalFile = "0dr9i8jisp5vd0pz6pckdiax1ynm9rhgjjr2xhxlrlfy24k14gg3";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
attoparsec
base
base64-bytestring
blaze-builder
bytestring
Cabal
conduit
conduit-extra
containers
data-default-class
directory
file-embed
filepath
fsnotify
http-client
http-client-tls
http-reverse-proxy
http-types
network
optparse-applicative
parsec
process
project-template
resourcet
say
shakespeare
split
stm
streaming-commons
tar
template-haskell
text
time
transformers
transformers-compat
unix-compat
unliftio
unordered-containers
wai
wai-extra
warp
warp-tls
yaml
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "The yesod helper executable";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-core" = callPackage
({
  mkDerivation
, aeson
, auto-update
, base
, blaze-html
, blaze-markup
, byteable
, bytestring
, case-insensitive
, cereal
, clientsession
, conduit
, conduit-extra
, containers
, cookie
, deepseq
, deepseq-generics
, directory
, fast-logger
, http-types
, monad-logger
, mtl
, old-locale
, parsec
, path-pieces
, primitive
, random
, resourcet
, safe
, semigroups
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, unix-compat
, unliftio
, unordered-containers
, vector
, wai
, wai-extra
, wai-logger
, warp
, word8
}:
mkDerivation {

pname = "yesod-core";
version = "1.6.5";
sha256 = "b446be00eb6580317c2cce24144768aeb8505b90ce9ae3142796b2c3dd32407a";
libraryHaskellDepends = [
aeson
auto-update
base
blaze-html
blaze-markup
byteable
bytestring
case-insensitive
cereal
clientsession
conduit
conduit-extra
containers
cookie
deepseq
deepseq-generics
directory
fast-logger
http-types
monad-logger
mtl
old-locale
parsec
path-pieces
primitive
random
resourcet
safe
semigroups
shakespeare
template-haskell
text
time
transformers
unix-compat
unliftio
unordered-containers
vector
wai
wai-extra
wai-logger
warp
word8
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Creation of type-safe, RESTful web applications";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-csp" = callPackage
({
  mkDerivation
, attoparsec
, base
, case-insensitive
, mono-traversable
, network-uri
, semigroups
, stdenv
, syb
, template-haskell
, text
, wai
, yesod
, yesod-core
}:
mkDerivation {

pname = "yesod-csp";
version = "0.2.4.0";
sha256 = "e05d31857d6d0e8aececdd83b6a896267ecab2c29426d559e3dafb259eac92a5";
libraryHaskellDepends = [
attoparsec
base
case-insensitive
mono-traversable
network-uri
semigroups
syb
template-haskell
text
wai
yesod
yesod-core
];
doHaddock = false;
doCheck = false;
description = "Add CSP headers to Yesod apps";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-eventsource" = callPackage
({
  mkDerivation
, base
, blaze-builder
, conduit
, stdenv
, transformers
, wai
, wai-eventsource
, wai-extra
, yesod-core
}:
mkDerivation {

pname = "yesod-eventsource";
version = "1.6.0";
sha256 = "6fceeca34d5e80c8a0d65ab95fab3c53807d1f18eb506abdef67a8f70d0e418b";
libraryHaskellDepends = [
base
blaze-builder
conduit
transformers
wai
wai-eventsource
wai-extra
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Server-sent events support for Yesod apps";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-fb" = callPackage
({
  mkDerivation
, aeson
, base
, bytestring
, conduit
, crypto-api
, fb
, http-client-tls
, http-conduit
, stdenv
, text
, wai
, yesod-core
}:
mkDerivation {

pname = "yesod-fb";
version = "0.5.0";
sha256 = "de375004c12e89eec47738d60465c7c63b5f0c7bfc3591c70a35522fdc0841db";
libraryHaskellDepends = [
aeson
base
bytestring
conduit
crypto-api
fb
http-client-tls
http-conduit
text
wai
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/psibi/yesod-fb";
description = "Useful glue functions between the fb library and Yesod";
license = stdenv.lib.licenses.bsd3;

}) {};
"yesod-form" = callPackage
({
  mkDerivation
, aeson
, attoparsec
, base
, blaze-builder
, blaze-html
, blaze-markup
, byteable
, bytestring
, containers
, data-default
, email-validate
, network-uri
, persistent
, resourcet
, semigroups
, shakespeare
, stdenv
, template-haskell
, text
, time
, transformers
, wai
, xss-sanitize
, yesod-core
, yesod-persistent
}:
mkDerivation {

pname = "yesod-form";
version = "1.6.1";
sha256 = "b8ff14eafff4bb6c2b01b235e8ebeafe9802f545979c1c1227076b06edd3f616";
libraryHaskellDepends = [
aeson
attoparsec
base
blaze-builder
blaze-html
blaze-markup
byteable
bytestring
containers
data-default
email-validate
network-uri
persistent
resourcet
semigroups
shakespeare
template-haskell
text
time
transformers
wai
xss-sanitize
yesod-core
yesod-persistent
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Form handling support for Yesod Web Framework";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-form-bootstrap4" = callPackage
({
  mkDerivation
, base
, classy-prelude-yesod
, stdenv
, yesod-form
}:
mkDerivation {

pname = "yesod-form-bootstrap4";
version = "0.1.1";
sha256 = "afbe1c57a0add7d493aff37e19f25783be17c7fa7f1fb60f2f485e582f686d9d";
libraryHaskellDepends = [
base
classy-prelude-yesod
yesod-form
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/ncaq/yesod-form-bootstrap4#readme";
description = "renderBootstrap4";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-gitrepo" = callPackage
({
  mkDerivation
, base
, directory
, http-types
, process
, stdenv
, temporary
, text
, unliftio
, wai
, yesod-core
}:
mkDerivation {

pname = "yesod-gitrepo";
version = "0.3.0";
sha256 = "b03c67c506bc3fc402cb41759d69f2c3159af47959cbd964cb6531996084981e";
libraryHaskellDepends = [
base
directory
http-types
process
temporary
text
unliftio
wai
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/snoyberg/yesod-gitrepo#readme";
description = "Host content provided by a Git repo";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-gitrev" = callPackage
({
  mkDerivation
, aeson
, base
, gitrev
, stdenv
, template-haskell
, yesod-core
}:
mkDerivation {

pname = "yesod-gitrev";
version = "0.2.0.0";
sha256 = "df9f374e6099e55eb62cc273451605ce8746785a293e76115d25002355fee052";
revision = "1";
editedCabalFile = "1b0df34lz569gnwbbz0p20dml6bi2nbva9wfdsxyvva0dhvxjaz5";
libraryHaskellDepends = [
aeson
base
gitrev
template-haskell
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/DanBurton/yesod-gitrev";
description = "A subsite for displaying git information";
license = stdenv.lib.licenses.bsd3;

}) {};
"yesod-newsfeed" = callPackage
({
  mkDerivation
, base
, blaze-html
, blaze-markup
, bytestring
, containers
, shakespeare
, stdenv
, text
, time
, xml-conduit
, yesod-core
}:
mkDerivation {

pname = "yesod-newsfeed";
version = "1.6.1.0";
sha256 = "6d0b97592d74ca45e204f1876fb113a4830c5f35612b876175169af3d2f79615";
libraryHaskellDepends = [
base
blaze-html
blaze-markup
bytestring
containers
shakespeare
text
time
xml-conduit
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Helper functions and data types for producing News feeds";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-paginator" = callPackage
({
  mkDerivation
, base
, persistent
, resourcet
, stdenv
, text
, transformers
, yesod
}:
mkDerivation {

pname = "yesod-paginator";
version = "0.11.0";
sha256 = "60afa9b2a11f8c61a5ca090d3e0b0effe35162f67038e9c833a6e100b28aeb96";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
persistent
resourcet
text
transformers
yesod
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/pbrisbin/yesod-paginator";
description = "A pagination approach for yesod";
license = stdenv.lib.licenses.bsd3;

}) {};
"yesod-persistent" = callPackage
({
  mkDerivation
, base
, blaze-builder
, conduit
, persistent
, persistent-template
, resource-pool
, resourcet
, stdenv
, transformers
, yesod-core
}:
mkDerivation {

pname = "yesod-persistent";
version = "1.6.0";
sha256 = "42be2b4277fb265e18273503f3592259feb69ce5bfa2d2a862639b755c4fa5bd";
libraryHaskellDepends = [
base
blaze-builder
conduit
persistent
persistent-template
resource-pool
resourcet
transformers
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Some helpers for using Persistent from Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-sitemap" = callPackage
({
  mkDerivation
, base
, conduit
, containers
, data-default
, stdenv
, text
, time
, xml-conduit
, xml-types
, yesod-core
}:
mkDerivation {

pname = "yesod-sitemap";
version = "1.6.0";
sha256 = "e5fa06abdcd57772fc74707ae663c63b45b172bce48117b70a4a9af15131dbd6";
libraryHaskellDepends = [
base
conduit
containers
data-default
text
time
xml-conduit
xml-types
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Generate XML sitemaps";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-static" = callPackage
({
  mkDerivation
, async
, attoparsec
, base
, base64-bytestring
, blaze-builder
, byteable
, bytestring
, conduit
, containers
, cryptonite
, cryptonite-conduit
, css-text
, data-default
, directory
, exceptions
, file-embed
, filepath
, hashable
, hjsmin
, http-types
, memory
, mime-types
, old-time
, process
, resourcet
, stdenv
, template-haskell
, text
, transformers
, unix-compat
, unordered-containers
, wai
, wai-app-static
, yesod-core
}:
mkDerivation {

pname = "yesod-static";
version = "1.6.0";
sha256 = "bd0bf5924bb9c27fe24047816018158e92fc687053c190221af2f03bac94880e";
libraryHaskellDepends = [
async
attoparsec
base
base64-bytestring
blaze-builder
byteable
bytestring
conduit
containers
cryptonite
cryptonite-conduit
css-text
data-default
directory
exceptions
file-embed
filepath
hashable
hjsmin
http-types
memory
mime-types
old-time
process
resourcet
template-haskell
text
transformers
unix-compat
unordered-containers
wai
wai-app-static
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com/";
description = "Static file serving subsite for Yesod Web Framework";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-table" = callPackage
({
  mkDerivation
, base
, bytestring
, containers
, contravariant
, semigroups
, stdenv
, text
, yesod-core
}:
mkDerivation {

pname = "yesod-table";
version = "2.0.3";
sha256 = "363a70fe6def770776e1e0e777651c66e4849e4d95e853956a2f2ae1be80189b";
libraryHaskellDepends = [
base
bytestring
containers
contravariant
semigroups
text
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/andrewthad/yesod-table";
description = "HTML tables for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-test" = callPackage
({
  mkDerivation
, attoparsec
, base
, blaze-builder
, blaze-html
, blaze-markup
, bytestring
, case-insensitive
, conduit
, containers
, cookie
, hspec-core
, html-conduit
, http-types
, HUnit
, network
, persistent
, pretty-show
, semigroups
, stdenv
, text
, time
, transformers
, wai
, wai-extra
, xml-conduit
, xml-types
, yesod-core
}:
mkDerivation {

pname = "yesod-test";
version = "1.6.4";
sha256 = "cffa1639237646836be0ead1bc0b1787a3fccb384cbb7e77dcbcf54c1ed3b95b";
libraryHaskellDepends = [
attoparsec
base
blaze-builder
blaze-html
blaze-markup
bytestring
case-insensitive
conduit
containers
cookie
hspec-core
html-conduit
http-types
HUnit
network
persistent
pretty-show
semigroups
text
time
transformers
wai
wai-extra
xml-conduit
xml-types
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "http://www.yesodweb.com";
description = "integration testing for WAI/Yesod Applications";
license = stdenv.lib.licenses.mit;

}) {};
"yesod-websockets" = callPackage
({
  mkDerivation
, base
, conduit
, mtl
, stdenv
, transformers
, unliftio
, wai
, wai-websockets
, websockets
, yesod-core
}:
mkDerivation {

pname = "yesod-websockets";
version = "0.3.0";
sha256 = "4a642982209e27e3b1dac0f29c2c86c4ac39e5109483fa8274e97cd8a574e446";
libraryHaskellDepends = [
base
conduit
mtl
transformers
unliftio
wai
wai-websockets
websockets
yesod-core
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yesodweb/yesod";
description = "WebSockets support for Yesod";
license = stdenv.lib.licenses.mit;

}) {};
"yi-core" = callPackage
({
  mkDerivation
, array
, attoparsec
, base
, binary
, bytestring
, containers
, data-default
, directory
, dlist
, dynamic-state
, exceptions
, filepath
, hashable
, ListLike
, microlens-platform
, mtl
, old-locale
, oo-prototypes
, parsec
, pointedlist
, process
, process-extras
, split
, stdenv
, text
, time
, transformers-base
, unix
, unix-compat
, unordered-containers
, xdg-basedir
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-core";
version = "0.17.1";
sha256 = "17d0b84a1db3d122d76c5658ad9c5dd80df38f0cbd877376b75cce93ed3768e3";
libraryHaskellDepends = [
array
attoparsec
base
binary
bytestring
containers
data-default
directory
dlist
dynamic-state
exceptions
filepath
hashable
ListLike
microlens-platform
mtl
old-locale
oo-prototypes
parsec
pointedlist
process
process-extras
split
text
time
transformers-base
unix
unix-compat
unordered-containers
xdg-basedir
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor core library";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-frontend-vty" = callPackage
({
  mkDerivation
, base
, containers
, data-default
, dlist
, microlens-platform
, pointedlist
, stdenv
, stm
, text
, vty
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-frontend-vty";
version = "0.17.1";
sha256 = "06a6eb58d438bdb2404da48818c6d2ce318ebfe0d97174e0c3ddc87ffea80044";
libraryHaskellDepends = [
base
containers
data-default
dlist
microlens-platform
pointedlist
stm
text
vty
yi-core
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Vty frontend for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-fuzzy-open" = callPackage
({
  mkDerivation
, base
, binary
, containers
, data-default
, directory
, filepath
, mtl
, pointedlist
, stdenv
, text
, transformers-base
, vector
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-fuzzy-open";
version = "0.17.1";
sha256 = "506e2cc5420c58339cf9f6a6bbc3c280c0e75cb50c8c30662e77c2635ae0a1f1";
libraryHaskellDepends = [
base
binary
containers
data-default
directory
filepath
mtl
pointedlist
text
transformers-base
vector
yi-core
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Fuzzy open plugin for yi";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-ireader" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, containers
, data-default
, microlens-platform
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-ireader";
version = "0.17.1";
sha256 = "fec8c8d03976e20c8a4e17443f50417fd69d396388a37f561dfc644ce15c6a89";
libraryHaskellDepends = [
base
binary
bytestring
containers
data-default
microlens-platform
text
yi-core
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor incremental reader";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-keymap-cua" = callPackage
({
  mkDerivation
, base
, microlens-platform
, stdenv
, text
, yi-core
, yi-keymap-emacs
, yi-rope
}:
mkDerivation {

pname = "yi-keymap-cua";
version = "0.17.1";
sha256 = "52f128c4a75fd1a0fbf17b10ba5071a01f38e3581b21448caa5c2072c3227c14";
libraryHaskellDepends = [
base
microlens-platform
text
yi-core
yi-keymap-emacs
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Cua keymap for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-keymap-emacs" = callPackage
({
  mkDerivation
, base
, containers
, filepath
, Hclip
, microlens-platform
, mtl
, oo-prototypes
, stdenv
, text
, transformers-base
, yi-core
, yi-language
, yi-misc-modes
, yi-rope
}:
mkDerivation {

pname = "yi-keymap-emacs";
version = "0.17.1";
sha256 = "3ceb457c7c78edb5f0ab8a32f2aa332a2fc6dd202b089df3b828817d2edca7cb";
libraryHaskellDepends = [
base
containers
filepath
Hclip
microlens-platform
mtl
oo-prototypes
text
transformers-base
yi-core
yi-language
yi-misc-modes
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Emacs keymap for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-keymap-vim" = callPackage
({
  mkDerivation
, attoparsec
, base
, binary
, containers
, data-default
, directory
, filepath
, Hclip
, microlens-platform
, mtl
, oo-prototypes
, pointedlist
, safe
, stdenv
, text
, transformers-base
, unordered-containers
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-keymap-vim";
version = "0.17.1";
sha256 = "1c916d810d270edc0e9ce6d6695b5cb45c2a687c93746054c7cc94a98c076dff";
libraryHaskellDepends = [
attoparsec
base
binary
containers
data-default
directory
filepath
Hclip
microlens-platform
mtl
oo-prototypes
pointedlist
safe
text
transformers-base
unordered-containers
yi-core
yi-language
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Vim keymap for Yi editor";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-language" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, containers
, data-default
, hashable
, microlens-platform
, oo-prototypes
, pointedlist
, regex-base
, regex-tdfa
, stdenv
, template-haskell
, transformers-base
, unordered-containers
}:
mkDerivation {

pname = "yi-language";
version = "0.17.1";
sha256 = "4aee628b278e9d6b2b2e92a8974696ce6de10c30ef137ababb709bdca193b69e";
libraryHaskellDepends = [
array
base
binary
containers
data-default
hashable
microlens-platform
oo-prototypes
pointedlist
regex-base
regex-tdfa
template-haskell
transformers-base
unordered-containers
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Collection of language-related Yi libraries";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-misc-modes" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, data-default
, filepath
, microlens-platform
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-misc-modes";
version = "0.17.1";
sha256 = "e0a9cf8541370407dccfc4afe13f1d10e2b5d0025dfd7b9294ecc25dcc45db7b";
libraryHaskellDepends = [
array
base
binary
data-default
filepath
microlens-platform
text
yi-core
yi-language
yi-rope
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor miscellaneous modes";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-mode-haskell" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, data-default
, filepath
, microlens-platform
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-mode-haskell";
version = "0.17.1";
sha256 = "dddff698eae295238fd599ddcd684c50fa673df5e730636f65801123769d89ba";
libraryHaskellDepends = [
array
base
binary
data-default
filepath
microlens-platform
text
yi-core
yi-language
yi-rope
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor haskell mode";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-mode-javascript" = callPackage
({
  mkDerivation
, alex
, array
, base
, binary
, data-default
, dlist
, filepath
, microlens-platform
, mtl
, stdenv
, text
, yi-core
, yi-language
, yi-rope
}:
mkDerivation {

pname = "yi-mode-javascript";
version = "0.17.1";
sha256 = "2448556c225eec9b707aa0ee3c0fdbbc3e53e5e110bc9c18db440ea73bf77e1c";
libraryHaskellDepends = [
array
base
binary
data-default
dlist
filepath
microlens-platform
mtl
text
yi-core
yi-language
yi-rope
];
libraryToolDepends = [
alex
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Yi editor javascript mode";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-rope" = callPackage
({
  mkDerivation
, base
, binary
, bytestring
, deepseq
, fingertree
, stdenv
, text
}:
mkDerivation {

pname = "yi-rope";
version = "0.10";
sha256 = "4933721b7ca34068035d13485097012da7dabc9b8dabbc9a697f476b85626a52";
libraryHaskellDepends = [
base
binary
bytestring
deepseq
fingertree
text
];
doHaddock = false;
doCheck = false;
description = "A rope data structure used by Yi";
license = stdenv.lib.licenses.gpl2;

}) {};
"yi-snippet" = callPackage
({
  mkDerivation
, base
, binary
, containers
, data-default
, free
, microlens-platform
, mtl
, stdenv
, text
, vector
, yi-core
, yi-rope
}:
mkDerivation {

pname = "yi-snippet";
version = "0.17.1";
sha256 = "cbbc4f742e0a0b4f3fbeae72f342a3e499021c3a48356df0bc16d72f59fc2cdf";
libraryHaskellDepends = [
base
binary
containers
data-default
free
microlens-platform
mtl
text
vector
yi-core
yi-rope
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/yi-editor/yi#readme";
description = "Snippet support for yi";
license = stdenv.lib.licenses.gpl2;

}) {};
"yjsvg" = callPackage
({
  mkDerivation
, base
, HaXml
, stdenv
}:
mkDerivation {

pname = "yjsvg";
version = "0.2.0.1";
sha256 = "f737b7d43b7b3fd3237d07761c672569a2b5d0c1e1b26d48097b9e96b1262e7e";
libraryHaskellDepends = [
base
HaXml
];
doHaddock = false;
doCheck = false;
description = "make SVG string from Haskell data";
license = stdenv.lib.licenses.bsd3;

}) {};
"yjtools" = callPackage
({
  mkDerivation
, base
, stdenv
}:
mkDerivation {

pname = "yjtools";
version = "0.9.18";
sha256 = "9b121c6fcece8241d87aec737458d49c0b76313e9e5e1e70f72b5f71cfc0eb8f";
libraryHaskellDepends = [
base
];
doHaddock = false;
doCheck = false;
homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
description = "some tools for Monad, List, Tuple and so on";
license = "LGPL";

}) {};
"yoga" = callPackage
({
  mkDerivation
, base
, bindings-DSL
, ieee754
, stdenv
}:
mkDerivation {

pname = "yoga";
version = "0.0.0.2";
sha256 = "2ce82bd1e87ea37cd8ad1e1bb3886bb3535ce583aea2841d07f0b47658a278be";
isLibrary = true;
isExecutable = true;
libraryHaskellDepends = [
base
bindings-DSL
ieee754
];
doHaddock = false;
doCheck = false;
description = "Bindings to Facebook's Yoga layout library";
license = stdenv.lib.licenses.bsd3;

}) {};
"youtube" = callPackage
({
  mkDerivation
, base
, bytestring
, process
, stdenv
, utility-ht
}:
mkDerivation {

pname = "youtube";
version = "0.2.1.1";
sha256 = "2e396a785f3d8f504f0e39ed8c87d0a748111ed40b26b950595d83c3fd840e25";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
base
bytestring
process
utility-ht
];
doHaddock = false;
doCheck = false;
description = "Upload video to YouTube via YouTube API";
license = stdenv.lib.licenses.bsd3;

}) {};
"zero" = callPackage
({
  mkDerivation
, base
, semigroups
, stdenv
}:
mkDerivation {

pname = "zero";
version = "0.1.4";
sha256 = "38cdc62d9673b8b40999de69da2ec60dab7a65fb1c22133ecd54e0a2ec61d5d5";
libraryHaskellDepends = [
base
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/phaazon/zero";
description = "Semigroups with absorption";
license = stdenv.lib.licenses.bsd3;

}) {};
"zeromq4-haskell" = callPackage
({
  mkDerivation
, async
, base
, bytestring
, containers
, exceptions
, monad-control
, semigroups
, stdenv
, transformers
, transformers-base
, zeromq
}:
mkDerivation {

pname = "zeromq4-haskell";
version = "0.7.0";
sha256 = "58d4504ee607cb681fc3da2474ed92afaefdb2dc34752b145aa9f746ab29079f";
libraryHaskellDepends = [
async
base
bytestring
containers
exceptions
monad-control
semigroups
transformers
transformers-base
];
libraryPkgconfigDepends = [
zeromq
];
doHaddock = false;
doCheck = false;
homepage = "https://gitlab.com/twittner/zeromq-haskell/";
description = "Bindings to ZeroMQ 4.x";
license = stdenv.lib.licenses.mit;

}) {inherit (pkgs) zeromq;};
"zim-parser" = callPackage
({
  mkDerivation
, array
, base
, base-compat
, binary
, binary-conduit
, bytestring
, conduit
, conduit-extra
, lzma
, stdenv
}:
mkDerivation {

pname = "zim-parser";
version = "0.2.1.0";
sha256 = "b27f6a395c54e0dac6926a5ea18b582aa21c5d91e31b53f8749f063947a15789";
libraryHaskellDepends = [
array
base
base-compat
binary
binary-conduit
bytestring
conduit
conduit-extra
lzma
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/robbinch/zim-parser#readme";
description = "Read and parse ZIM files";
license = stdenv.lib.licenses.gpl3;

}) {};
"zip" = callPackage
({
  mkDerivation
, base
, bytestring
, bzlib-conduit
, case-insensitive
, cereal
, conduit
, conduit-extra
, containers
, digest
, directory
, dlist
, exceptions
, filepath
, monad-control
, mtl
, resourcet
, stdenv
, text
, time
, transformers
, transformers-base
}:
mkDerivation {

pname = "zip";
version = "1.0.0";
sha256 = "a9fab436946e6e47b5a2925a09e068a79783a0c4ddbfa0a6e59cc257b3c7d198";
revision = "3";
editedCabalFile = "0af1qpyn6vfzcdyi1md7aq39fznswxijzm0ap7mdwp0g0l7pcdyh";
libraryHaskellDepends = [
base
bytestring
bzlib-conduit
case-insensitive
cereal
conduit
conduit-extra
containers
digest
directory
dlist
exceptions
filepath
monad-control
mtl
resourcet
text
time
transformers
transformers-base
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/mrkkrp/zip";
description = "Operations on zip archives";
license = stdenv.lib.licenses.bsd3;

}) {};
"zip-archive" = callPackage
({
  mkDerivation
, array
, base
, binary
, bytestring
, Cabal
, containers
, digest
, directory
, filepath
, mtl
, old-time
, pretty
, stdenv
, text
, time
, unix
, zlib
}:
mkDerivation {

pname = "zip-archive";
version = "0.3.2.5";
sha256 = "0939d80f13e34a5140a8b89248ad16a4c5183bcbb7c0d0f8eafd7e538854b393";
isLibrary = true;
isExecutable = true;
setupHaskellDepends = [
base
Cabal
];
libraryHaskellDepends = [
array
base
binary
bytestring
containers
digest
directory
filepath
mtl
old-time
pretty
text
time
unix
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/jgm/zip-archive";
description = "Library for creating and modifying zip archives";
license = stdenv.lib.licenses.bsd3;

}) {};
"zippers" = callPackage
({
  mkDerivation
, base
, Cabal
, cabal-doctest
, lens
, profunctors
, semigroupoids
, semigroups
, stdenv
}:
mkDerivation {

pname = "zippers";
version = "0.2.5";
sha256 = "2d127772564655df0cb99d5191b91a555797e66e535d0b8b4f5ed4d54097c085";
revision = "2";
editedCabalFile = "03vmfmj38sa6pn858wa4fcbn3b0jw5pcypzv0kls600fgdbjfqbm";
setupHaskellDepends = [
base
Cabal
cabal-doctest
];
libraryHaskellDepends = [
base
lens
profunctors
semigroupoids
semigroups
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/ekmett/zippers/";
description = "Traversal based zippers";
license = stdenv.lib.licenses.bsd3;

}) {};
"zlib" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "zlib";
version = "0.6.2";
sha256 = "0dcc7d925769bdbeb323f83b66884101084167501f11d74d21eb9bc515707fed";
libraryHaskellDepends = [
base
bytestring
];
librarySystemDepends = [
zlib
];
doHaddock = false;
doCheck = false;
description = "Compression and decompression in the gzip and zlib formats";
license = stdenv.lib.licenses.bsd3;

}) {inherit (pkgs) zlib;};
"zlib-bindings" = callPackage
({
  mkDerivation
, base
, bytestring
, stdenv
, zlib
}:
mkDerivation {

pname = "zlib-bindings";
version = "0.1.1.5";
sha256 = "c83bb438f9b6c5fe860982731eb8ac7eff993e8b56cbc15ef5b471f229f79109";
revision = "2";
editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
libraryHaskellDepends = [
base
bytestring
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://github.com/snapframework/zlib-bindings";
description = "Low-level bindings to the zlib package";
license = stdenv.lib.licenses.bsd3;

}) {};
"zlib-lens" = callPackage
({
  mkDerivation
, base
, bytestring
, profunctors
, stdenv
, zlib
}:
mkDerivation {

pname = "zlib-lens";
version = "0.1.2.1";
sha256 = "e5a563453899e0896cfa3aed22a2fbfc67012990ace6d14631f31b704ff766eb";
libraryHaskellDepends = [
base
bytestring
profunctors
zlib
];
doHaddock = false;
doCheck = false;
homepage = "http://lens.github.io/";
description = "Lenses for zlib";
license = stdenv.lib.licenses.bsd3;

}) {};
"zot" = callPackage
({
  mkDerivation
, base
, monads-tf
, stdenv
}:
mkDerivation {

pname = "zot";
version = "0.0.3";
sha256 = "c8a9091b939e3f74aca6be3007a0066c8a1de69da4b62e22891bed543f8a2b32";
revision = "1";
editedCabalFile = "04gsbs6fvwpjjg1f6g1j17dxlfzsci9vmirk7mwqwmm9ha0a4hxm";
isLibrary = false;
isExecutable = true;
enableSeparateDataOutput = true;
executableHaskellDepends = [
base
monads-tf
];
doHaddock = false;
doCheck = false;
description = "Zot language";
license = stdenv.lib.licenses.bsd3;

}) {};
"zstd" = callPackage
({
  mkDerivation
, base
, bytestring
, deepseq
, ghc-prim
, stdenv
}:
mkDerivation {

pname = "zstd";
version = "0.1.0.0";
sha256 = "0875840799d987cf8f8dd5e0a7686978084b3088c07123e66f6f88561f474bff";
libraryHaskellDepends = [
base
bytestring
deepseq
ghc-prim
];
doHaddock = false;
doCheck = false;
homepage = "https://github.com/facebookexperimental/hs-zstd";
description = "Haskell bindings to the Zstandard compression algorithm";
license = stdenv.lib.licenses.bsd3;

}) {};
"ztail" = callPackage
({
  mkDerivation
, array
, base
, bytestring
, filepath
, hinotify
, process
, regex-posix
, stdenv
, time
, unix
, unordered-containers
}:
mkDerivation {

pname = "ztail";
version = "1.2.0.2";
sha256 = "a14341d51da6dbef9f0edcdefe185dbd7726880ec4e230855fb9871de7c07717";
isLibrary = false;
isExecutable = true;
executableHaskellDepends = [
array
base
bytestring
filepath
hinotify
process
regex-posix
time
unix
unordered-containers
];
doHaddock = false;
doCheck = false;
description = "Multi-file, colored, filtered log tailer";
license = stdenv.lib.licenses.bsd3;

}) {};
    };
in compiler.override {
  initialPackages = stackPackages;
  configurationCommon = { ... }: self: super: {};
  compilerConfig = self: super: {};
}

