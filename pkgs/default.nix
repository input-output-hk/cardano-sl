# Generated using stack2nix 0.1.3.1.
#
# Only works with sufficiently recent nixpkgs, e.g. "NIX_PATH=nixpkgs=https://github.com/NixOS/nixpkgs/archive/21a8239452adae3a4717772f4e490575586b2755.tar.gz".

{ pkgs ? (import <nixpkgs> {})
, compiler ? pkgs.haskell.packages.ghc822
}:

with pkgs.haskell.lib;

let
  stackPackages = { pkgs, stdenv, callPackage }:
    self: {
      array = null;
      base = null;
      binary = null;
      bytestring = null;
      containers = null;
      deepseq = null;
      filepath = null;
      ghc-boot-th = null;
      ghc-prim = null;
      hoopl = null;
      integer-gmp = null;
      pretty = null;
      rts = null;
      template-haskell = null;
      terminfo = null;
      time = null;
      unix = null;
      "ALUT" = callPackage
        ({ mkDerivation, base, freealut, OpenAL, pretty, StateVar, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "ALUT";
           version = "2.4.0.2";
           sha256 = "b8364da380f5f1d85d13e427851a153be2809e1838d16393e37566f34b384b87";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base OpenAL StateVar transformers ];
           librarySystemDepends = [ freealut ];
           executableHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-openal/ALUT";
           description = "A binding for the OpenAL Utility Toolkit";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) freealut;};
      "Agda" = callPackage
        ({ mkDerivation, alex, array, async, base, binary, blaze-html
         , boxes, bytestring, containers, cpphs, data-hash, deepseq
         , directory, EdisonCore, edit-distance, emacs, equivalence
         , filepath, geniplate-mirror, gitrev, happy, hashable, hashtables
         , haskeline, ieee754, monadplus, mtl, murmur-hash, parallel, pretty
         , process, regex-tdfa, stdenv, stm, strict, template-haskell, text
         , time, transformers, unordered-containers, uri-encode, zlib
         }:
         mkDerivation {
           pname = "Agda";
           version = "2.5.3";
           sha256 = "aa14d4a3582013100f71e64d71c5deff6caa2a286083e20fc16f6dbb0fdf0065";
           revision = "5";
           editedCabalFile = "0cly9p549phqv86dlqacxrs2w50y5jmsw21657gpn84ryz3cmjbs";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array async base binary blaze-html boxes bytestring containers
             data-hash deepseq directory EdisonCore edit-distance equivalence
             filepath geniplate-mirror gitrev hashable hashtables haskeline
             ieee754 monadplus mtl murmur-hash parallel pretty process
             regex-tdfa stm strict template-haskell text time transformers
             unordered-containers uri-encode zlib
           ];
           libraryToolDepends = [ alex cpphs happy ];
           executableHaskellDepends = [ base directory filepath process ];
           executableToolDepends = [ emacs ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             files=("$data/share/ghc-"*"/"*"-ghc-"*"/Agda-"*"/lib/prim/Agda/"{Primitive.agda,Builtin"/"*.agda})
             for f in "''${files[@]}" ; do
               $out/bin/agda $f
             done
             for f in "''${files[@]}" ; do
               $out/bin/agda -c --no-main $f
             done
             $out/bin/agda-mode compile
           '';
           homepage = "http://wiki.portal.chalmers.se/agda/";
           description = "A dependently typed functional programming language and proof assistant";
           license = "unknown";
         }) {};
      "BiobaseNewick" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, binary, cereal
         , cereal-text, cmdargs, containers, fgl, ForestStructures
         , QuickCheck, stdenv, text, text-binary, vector
         }:
         mkDerivation {
           pname = "BiobaseNewick";
           version = "0.0.0.2";
           sha256 = "6432f684a75fd8a2cea59a5359a59f48020ead19119efaed7018ecae726d13bd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base binary cereal cereal-text containers fgl
             ForestStructures QuickCheck text text-binary vector
           ];
           executableHaskellDepends = [
             base cmdargs ForestStructures text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/choener/BiobaseNewick";
           description = "Newick file format parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "BlastHTTP" = callPackage
        ({ mkDerivation, base, biocore, biofasta, blastxml, bytestring
         , conduit, HTTP, http-conduit, hxt, mtl, network, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "BlastHTTP";
           version = "1.2.1";
           sha256 = "cee85e0fba0530aff57209b3d91a800db52b63c3f7e4a431a04e7a9cbd355bd5";
           libraryHaskellDepends = [
             base biocore biofasta blastxml bytestring conduit HTTP http-conduit
             hxt mtl network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/eggzilla/BlastHTTP";
           description = "Libary to interface with the NCBI blast REST interface";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Boolean" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "Boolean";
           version = "0.2.4";
           sha256 = "67216013b02b8ac5b534a1ef25f409f930eea1a85eae801933a01ad43145eef8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Generalized booleans and numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "BoundedChan" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "BoundedChan";
           version = "1.0.3.0";
           sha256 = "531ceaed7f62844c2a63a7cbfdcab332ea5eaa218e9922ca3305580438adc46d";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of bounded channels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Cabal" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , deepseq, directory, filepath, pretty, process, stdenv, time, unix
         }:
         mkDerivation {
           pname = "Cabal";
           version = "2.0.1.1";
           sha256 = "802bc6d0113fdb734ea938ad2aadc14f590e372b55d56be6712de319bb343d1b";
           revision = "1";
           editedCabalFile = "17ydppw8x5cx5whrs44yxirh7xgcaa6gzvxmlgqnbalcf8wkj23l";
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq directory filepath
             pretty process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/cabal/";
           description = "A framework for packaging Haskell software";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ChannelT" = callPackage
        ({ mkDerivation, base, free, mmorph, mtl, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "ChannelT";
           version = "0.0.0.4";
           sha256 = "76437ff58b44bfcf805494a12916b127c0e591718b6e7372315992782720d91b";
           libraryHaskellDepends = [ base free mmorph mtl transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pthariensflame/ChannelT";
           description = "Generalized stream processors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart" = callPackage
        ({ mkDerivation, array, base, colour, data-default-class, lens, mtl
         , old-locale, operational, stdenv, time, vector
         }:
         mkDerivation {
           pname = "Chart";
           version = "1.8.3";
           sha256 = "c1c749007245f016d421793b62868651e2222c7bebcd557a6db35eb1a023468f";
           libraryHaskellDepends = [
             array base colour data-default-class lens mtl old-locale
             operational time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "A library for generating 2D Charts and Plots";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart-cairo" = callPackage
        ({ mkDerivation, array, base, cairo, Chart, colour
         , data-default-class, lens, mtl, old-locale, operational, stdenv
         , time
         }:
         mkDerivation {
           pname = "Chart-cairo";
           version = "1.8.3";
           sha256 = "2455baf9bdfae5955d9844906135eeaaa1043b7762b08a0e5048ec3d6d980195";
           libraryHaskellDepends = [
             array base cairo Chart colour data-default-class lens mtl
             old-locale operational time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "Cairo backend for Charts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Chart-diagrams" = callPackage
        ({ mkDerivation, base, blaze-markup, bytestring, Chart, colour
         , containers, data-default-class, diagrams-core, diagrams-lib
         , diagrams-postscript, diagrams-svg, lens, mtl, old-locale
         , operational, stdenv, svg-builder, SVGFonts, text, time
         }:
         mkDerivation {
           pname = "Chart-diagrams";
           version = "1.8.3";
           sha256 = "beed1e3d4ef96be26921d058bc8d3510641514eb3c4539258e8ecf1efabc3adc";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-markup bytestring Chart colour containers
             data-default-class diagrams-core diagrams-lib diagrams-postscript
             diagrams-svg lens mtl old-locale operational svg-builder SVGFonts
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/timbod7/haskell-chart/wiki";
           description = "Diagrams backend for Charts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ChasingBottoms" = callPackage
        ({ mkDerivation, base, containers, mtl, QuickCheck, random, stdenv
         , syb
         }:
         mkDerivation {
           pname = "ChasingBottoms";
           version = "1.3.1.3";
           sha256 = "38984a3514fb6a3be12c7a5ea50bced9c674d67d83917b37240c5721b4e45c12";
           libraryHaskellDepends = [
             base containers mtl QuickCheck random syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "For testing partial and infinite values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "Clipboard" = callPackage
        ({ mkDerivation, base, directory, stdenv, unix, utf8-string, X11 }:
         mkDerivation {
           pname = "Clipboard";
           version = "2.3.2.0";
           sha256 = "3f82c8183a599025c5199ba50d0661512683e9cf29e6054858f1abe2ab8b25b7";
           libraryHaskellDepends = [ base directory unix utf8-string X11 ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Clipboard";
           description = "System clipboard interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ClustalParser" = callPackage
        ({ mkDerivation, base, cmdargs, either-unwrap, parsec, stdenv, text
         , vector
         }:
         mkDerivation {
           pname = "ClustalParser";
           version = "1.2.1";
           sha256 = "0034a9fdca3e4bcb70edb961536ee4acb162fec0ab1b2c67108598bfcd75879d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec text vector ];
           executableHaskellDepends = [ base cmdargs either-unwrap ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for parsing Clustal tools output";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "ConfigFile" = callPackage
        ({ mkDerivation, base, containers, MissingH, mtl, parsec, stdenv }:
         mkDerivation {
           pname = "ConfigFile";
           version = "1.1.4";
           sha256 = "ae087b359ff2945a62b671449227e0a811d143ee651179f4e7e9c66548e0f514";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers MissingH mtl parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/configfile";
           description = "Configuration file reading & writing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "DAV" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , data-default, exceptions, haskeline, http-client, http-client-tls
         , http-types, lens, mtl, network, network-uri, optparse-applicative
         , stdenv, transformers, transformers-base, transformers-compat
         , utf8-string, xml-conduit, xml-hamlet
         }:
         mkDerivation {
           pname = "DAV";
           version = "1.3.2";
           sha256 = "613314357579b29e1d3fa8451b51e8b9a1307a2b33b65a3f2b2ef2bece025169";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring case-insensitive containers data-default exceptions
             http-client http-client-tls http-types lens mtl transformers
             transformers-base transformers-compat utf8-string xml-conduit
             xml-hamlet
           ];
           executableHaskellDepends = [
             base bytestring case-insensitive containers data-default exceptions
             haskeline http-client http-client-tls http-types lens mtl network
             network-uri optparse-applicative transformers transformers-base
             transformers-compat utf8-string xml-conduit xml-hamlet
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hDAV";
           description = "RFC 4918 WebDAV support";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "DRBG" = callPackage
        ({ mkDerivation, base, bytestring, cereal, cipher-aes128
         , crypto-api, cryptohash-cryptoapi, entropy, mtl, parallel
         , prettyclass, stdenv, tagged
         }:
         mkDerivation {
           pname = "DRBG";
           version = "0.5.5";
           sha256 = "21df3202486cc83c7cc3f867cb139eac9a3f69bd91b5f6b016ae026e03c33bfd";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal cipher-aes128 crypto-api
             cryptohash-cryptoapi entropy mtl parallel prettyclass tagged
           ];
           doHaddock = false;
           doCheck = false;
           description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Decimal" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "Decimal";
           version = "0.4.2";
           sha256 = "c5f53652949eedd48dbafc1bb3e08c05348d5e25c248e8e1543bc380a9f84261";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
           description = "Decimal numbers with variable precision";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Diff" = callPackage
        ({ mkDerivation, array, base, pretty, stdenv }:
         mkDerivation {
           pname = "Diff";
           version = "0.3.4";
           sha256 = "77b7daec5a79ade779706748f11b4d9b8f805e57a68e7406c3b5a1dee16e0c2f";
           libraryHaskellDepends = [ array base pretty ];
           doHaddock = false;
           doCheck = false;
           description = "O(ND) diff algorithm in haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Earley" = callPackage
        ({ mkDerivation, base, ListLike, stdenv, unordered-containers }:
         mkDerivation {
           pname = "Earley";
           version = "0.12.0.1";
           sha256 = "fc26a93c20b2c13fc9d4717926e724f1e9abfb7c8543657d835e35ba6e56d5b1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ListLike ];
           executableHaskellDepends = [ base unordered-containers ];
           doHaddock = false;
           doCheck = false;
           description = "Parsing all context-free grammars using Earley's algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Ebnf2ps" = callPackage
        ({ mkDerivation, array, base, containers, directory, happy
         , old-time, stdenv, unix
         }:
         mkDerivation {
           pname = "Ebnf2ps";
           version = "1.0.15";
           sha256 = "0ecce7d721d6c8993fa6ba6cfb16f1101d85e00bbaf0b6941d36a00badea2b4b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base containers directory old-time unix
           ];
           executableToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/FranklinChen/Ebnf2ps";
           description = "Peter's Syntax Diagram Drawing Tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "EdisonAPI" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "EdisonAPI";
           version = "1.3.1";
           sha256 = "95a3b8d01599520a50456219b5a2e9f7832bcddaaeb8e94ce777bd87a4a6b56e";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rwd.rdockins.name/edison/home/";
           description = "A library of efficient, purely-functional data structures (API)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "EdisonCore" = callPackage
        ({ mkDerivation, array, base, containers, EdisonAPI, mtl
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "EdisonCore";
           version = "1.3.1.1";
           sha256 = "3e0720ee3b179304f563b99dd446c1d6911e31ddc4d0f78d6550b18e59ed501b";
           libraryHaskellDepends = [
             array base containers EdisonAPI mtl QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rwd.rdockins.name/edison/home/";
           description = "A library of efficent, purely-functional data structures (Core Implementations)";
           license = "unknown";
         }) {};
      "EntrezHTTP" = callPackage
        ({ mkDerivation, base, biocore, bytestring, conduit, HTTP
         , http-conduit, hxt, mtl, network, stdenv, Taxonomy, text
         , transformers
         }:
         mkDerivation {
           pname = "EntrezHTTP";
           version = "1.0.4";
           sha256 = "b86ffe46c049bdfa7d7ebe99215ac994735fe5772dadf6c2f48ae702f278e5be";
           libraryHaskellDepends = [
             base biocore bytestring conduit HTTP http-conduit hxt mtl network
             Taxonomy text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/eggzilla/EntrezHTTP";
           description = "Libary to interface with the NCBI Entrez REST service";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "FPretty" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "FPretty";
           version = "1.1";
           sha256 = "b8ac0122e923b0e20cee6ba77ffb07dfeaa96a194cdc1622808e97f443a8eb42";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.kent.ac.uk/~oc/pretty.html";
           description = "Efficient simple pretty printing combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FenwickTree" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, template-haskell }:
         mkDerivation {
           pname = "FenwickTree";
           version = "0.1.2.1";
           sha256 = "9c172d62b24365e663a0355e8eaa34362a1a769c18a64391939a9b50e384f03c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base QuickCheck template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/FenwickTree";
           description = "Data structure for fast query and update of cumulative sums";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FindBin" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "FindBin";
           version = "0.0.5";
           sha256 = "279c7967e0803ca3b9a0a1956ce7ba9b9a2294eb9f971bea8a557b5f80ddfda4";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/audreyt/findbin";
           description = "Locate directory of original program";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FloatingHex" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "FloatingHex";
           version = "0.4";
           sha256 = "b277054db48d2dec62e3831586f218cbe0a056dec44dbc032e9a73087425a24c";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Read and write hexadecimal floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "FontyFruity" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , directory, filepath, stdenv, text, vector, xml
         }:
         mkDerivation {
           pname = "FontyFruity";
           version = "0.5.3.3";
           sha256 = "b0d06e7c5eb1aa7ffd11a85598df05d034bab3a83130fdf37121f89136e0025c";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq directory filepath text
             vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "A true type file format loader";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ForestStructures" = callPackage
        ({ mkDerivation, base, containers, fgl, QuickCheck, stdenv
         , unordered-containers, vector, vector-th-unbox
         }:
         mkDerivation {
           pname = "ForestStructures";
           version = "0.0.0.2";
           sha256 = "fe74067fee601844de5c839a115f2bd75d4a1be9f0ee8ec42c0150bcf886693f";
           libraryHaskellDepends = [
             base containers fgl QuickCheck unordered-containers vector
             vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/choener/ForestStructures";
           description = "Tree- and forest structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Frames" = callPackage
        ({ mkDerivation, base, ghc-prim, pipes, pipes-bytestring
         , pipes-group, pipes-parse, pipes-safe, pipes-text, primitive
         , readable, stdenv, template-haskell, text, transformers, vector
         , vinyl
         }:
         mkDerivation {
           pname = "Frames";
           version = "0.3.0.2";
           sha256 = "26a1b821f1dca29ac25c6c964984cba1cca3db0176c73271b545e2e8dac00da8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base ghc-prim pipes pipes-bytestring pipes-group pipes-parse
             pipes-safe pipes-text primitive readable template-haskell text
             transformers vector vinyl
           ];
           doHaddock = false;
           doCheck = false;
           description = "Data frames For working with tabular data files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GLFW-b" = callPackage
        ({ mkDerivation, base, bindings-GLFW, stdenv }:
         mkDerivation {
           pname = "GLFW-b";
           version = "1.4.8.1";
           sha256 = "438a49ec5cf6cbda95966fcc42750b9245f54fe7daf69a6493e7703c3f178ae9";
           libraryHaskellDepends = [ base bindings-GLFW ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to GLFW OpenGL library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GLURaw" = callPackage
        ({ mkDerivation, base, freeglut, mesa, OpenGLRaw, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "GLURaw";
           version = "2.0.0.3";
           sha256 = "582cf8c0c1b8c0123ee9a8a06eba65fffded6decfe4e2e08bfea308f55f7ccee";
           libraryHaskellDepends = [ base OpenGLRaw transformers ];
           librarySystemDepends = [ freeglut mesa ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A raw binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) freeglut; inherit (pkgs) mesa;};
      "GLUT" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, OpenGL
         , OpenGLRaw, random, StateVar, stdenv, transformers
         }:
         mkDerivation {
           pname = "GLUT";
           version = "2.7.0.12";
           sha256 = "66f516bd9f836e5252fe0186e447b68a61b594d9247466c502b74994d3e9f1b5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base containers OpenGL StateVar transformers
           ];
           executableHaskellDepends = [
             array base bytestring OpenGLRaw random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A binding for the OpenGL Utility Toolkit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "GPipe" = callPackage
        ({ mkDerivation, base, Boolean, containers, exception-transformers
         , gl, hashtables, linear, stdenv, transformers
         }:
         mkDerivation {
           pname = "GPipe";
           version = "2.2.3";
           sha256 = "77baca8d7a7933d069a3b20d6a16270e8560f1f6aff941c950e71a180e1976a5";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base Boolean containers exception-transformers gl hashtables linear
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tobbebex/GPipe-Core#readme";
           description = "Typesafe functional GPU graphics programming";
           license = stdenv.lib.licenses.mit;
         }) {};
      "Genbank" = callPackage
        ({ mkDerivation, base, biocore, biofasta, bytestring, cmdargs
         , parsec, split, stdenv
         }:
         mkDerivation {
           pname = "Genbank";
           version = "1.0.3";
           sha256 = "2baf631ac851b1c29ba531ae1c16b8ba3c4b672bac9d4840a3b9afc0a89d2b93";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base biocore biofasta bytestring parsec split
           ];
           executableHaskellDepends = [ base cmdargs ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for processing the NCBI genbank format";
           license = "GPL";
         }) {};
      "GenericPretty" = callPackage
        ({ mkDerivation, base, ghc-prim, pretty, stdenv }:
         mkDerivation {
           pname = "GenericPretty";
           version = "1.2.1";
           sha256 = "175e334292904d365c630c9dfcc5a94f0c052a88a10d34513f39ebc36205672d";
           libraryHaskellDepends = [ base ghc-prim pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RazvanRanca/GenericPretty";
           description = "A generic, derivable, haskell pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Glob" = callPackage
        ({ mkDerivation, base, containers, directory, dlist, filepath
         , stdenv, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "Glob";
           version = "0.9.2";
           sha256 = "8fc7134e9a930dd53fd168f200bde8ca07905365788f70adc6a1a4c413667ce5";
           libraryHaskellDepends = [
             base containers directory dlist filepath transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://iki.fi/matti.niemenmaa/glob/";
           description = "Globbing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "H" = callPackage
        ({ mkDerivation, base, bytestring, cmdargs, file-embed, inline-r
         , pretty, process, stdenv, temporary, vector
         }:
         mkDerivation {
           pname = "H";
           version = "0.9.0.1";
           sha256 = "5fc04dfefcac9f6882cea9e65755479f7b1d853618c89258a005df63c8d57134";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring cmdargs file-embed inline-r pretty process
             temporary vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://tweag.github.io/HaskellR";
           description = "The Haskell/R mixed programming environment";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HCodecs" = callPackage
        ({ mkDerivation, array, base, bytestring, QuickCheck, random
         , stdenv
         }:
         mkDerivation {
           pname = "HCodecs";
           version = "0.5";
           sha256 = "b1bf109a5e0877b47eb2f942ad0d1aa2368b9c006882ba07fe345dd0a90a1756";
           libraryHaskellDepends = [
             array base bytestring QuickCheck random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
           description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HDBC" = callPackage
        ({ mkDerivation, base, bytestring, containers, convertible, mtl
         , old-time, stdenv, text, time, utf8-string
         }:
         mkDerivation {
           pname = "HDBC";
           version = "2.4.0.2";
           sha256 = "670757fd674b6caf2f456034bdcb54812af2cdf2a32465d7f4b7f0baa377db5a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers convertible mtl old-time text time
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdbc/hdbc";
           description = "Haskell Database Connectivity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HDBC-mysql" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, HDBC, mysqlclient
         , openssl, stdenv, time, utf8-string, zlib
         }:
         mkDerivation {
           pname = "HDBC-mysql";
           version = "0.7.1.0";
           sha256 = "81c985d4a243c965930fb412b3175ca799ba66985f8b6844014fd600df1da7cf";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring HDBC time utf8-string ];
           librarySystemDepends = [ mysqlclient openssl zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ryantm/hdbc-mysql";
           description = "MySQL driver for HDBC";
           license = "LGPL";
         }) {inherit (pkgs) mysqlclient; inherit (pkgs) openssl; 
inherit (pkgs) zlib;};
      "HDBC-session" = callPackage
        ({ mkDerivation, base, HDBC, stdenv }:
         mkDerivation {
           pname = "HDBC-session";
           version = "0.1.1.1";
           sha256 = "255c4e55f888c873bfa6f9af25ccb7fb0eb004f398b86b74ed7878d39c59ce99";
           libraryHaskellDepends = [ base HDBC ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Bracketed connection for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HPDF" = callPackage
        ({ mkDerivation, array, base, base64-bytestring, binary, bytestring
         , containers, errors, mtl, random, stdenv, vector, zlib
         }:
         mkDerivation {
           pname = "HPDF";
           version = "1.4.10";
           sha256 = "de2bfddd93eeef2129a2378e8dce486d086bec3c48ee2a1bf1a5fb01581607d4";
           libraryHaskellDepends = [
             array base base64-bytestring binary bytestring containers errors
             mtl random vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.alpheccar.org";
           description = "Generation of PDF documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HSet" = callPackage
        ({ mkDerivation, base, containers, hashable, hashtables, stdenv }:
         mkDerivation {
           pname = "HSet";
           version = "0.0.1";
           sha256 = "eba93be5a76581585ae33af6babe9c2718fae307d41989cd36a605d9b0e8d16a";
           libraryHaskellDepends = [ base containers hashable hashtables ];
           doHaddock = false;
           doCheck = false;
           description = "Faux heterogeneous sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HStringTemplate" = callPackage
        ({ mkDerivation, array, base, blaze-builder, bytestring, containers
         , deepseq, directory, filepath, mtl, old-locale, parsec, pretty
         , stdenv, syb, template-haskell, text, time, void
         }:
         mkDerivation {
           pname = "HStringTemplate";
           version = "0.8.6";
           sha256 = "7022cb9c1e1c223cfb8adf5ca6994b9f4709399ae197cb7541247c0b5d0255cd";
           revision = "1";
           editedCabalFile = "05j23rsll9xxj92gk1qvaksd9z985fpdmbp8mv73ywwjl29kfwyb";
           libraryHaskellDepends = [
             array base blaze-builder bytestring containers deepseq directory
             filepath mtl old-locale parsec pretty syb template-haskell text
             time void
           ];
           doHaddock = false;
           doCheck = false;
           description = "StringTemplate implementation in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HSvm" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "HSvm";
           version = "0.1.0.3.22";
           sha256 = "8dac8a583c762675f2d64138303618f017d6be95d59e60774ea7cbfc040dab04";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell Bindings for libsvm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HTF" = callPackage
        ({ mkDerivation, aeson, array, base, base64-bytestring, bytestring
         , containers, cpphs, Diff, directory, haskell-src, HUnit
         , lifted-base, monad-control, mtl, old-time, pretty, process
         , QuickCheck, random, regex-compat, stdenv, text, time, unix
         , vector, xmlgen
         }:
         mkDerivation {
           pname = "HTF";
           version = "0.13.2.2";
           sha256 = "1db49f6b796699e5f86ae9485bd3f5874eca23bc01a0c8e1ac58519f47e1c3ba";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson array base base64-bytestring bytestring containers cpphs Diff
             directory haskell-src HUnit lifted-base monad-control mtl old-time
             pretty process QuickCheck random regex-compat text time unix vector
             xmlgen
           ];
           executableHaskellDepends = [
             array base cpphs directory HUnit mtl old-time random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/skogsbaer/HTF/";
           description = "The Haskell Test Framework";
           license = "LGPL";
         }) {};
      "HTTP" = callPackage
        ({ mkDerivation, array, base, bytestring, mtl, network, network-uri
         , parsec, stdenv, time
         }:
         mkDerivation {
           pname = "HTTP";
           version = "4000.3.9";
           sha256 = "05962b8a6248d348977af2a755f0ed57a6ab523185235546dd66cf90a54663ff";
           libraryHaskellDepends = [
             array base bytestring mtl network network-uri parsec time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/HTTP";
           description = "A library for client-side HTTP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HUnit" = callPackage
        ({ mkDerivation, base, call-stack, deepseq, stdenv }:
         mkDerivation {
           pname = "HUnit";
           version = "1.6.0.0";
           sha256 = "7448e6b966e98e84b7627deba23f71b508e9a61e7bc571d74304a25d30e6d0de";
           libraryHaskellDepends = [ base call-stack deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/HUnit#readme";
           description = "A unit testing framework for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HUnit-approx" = callPackage
        ({ mkDerivation, base, call-stack, HUnit, stdenv }:
         mkDerivation {
           pname = "HUnit-approx";
           version = "1.1.1.1";
           sha256 = "4a4327d328bb8b944c73ec211dd29e953e477f99fd3f9e28fe5200f02fa62baf";
           libraryHaskellDepends = [ base call-stack HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/goldfirere/HUnit-approx";
           description = "Approximate equality for floating point numbers with HUnit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaTeX" = callPackage
        ({ mkDerivation, base, bytestring, containers, hashable, matrix
         , parsec, QuickCheck, stdenv, text, transformers, wl-pprint-extras
         }:
         mkDerivation {
           pname = "HaTeX";
           version = "3.17.3.1";
           sha256 = "ab19f779ba7c265f80d14d2bae85d26c611c031b877f228432b833909c1702ef";
           libraryHaskellDepends = [
             base bytestring containers hashable matrix parsec QuickCheck text
             transformers wl-pprint-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
           description = "The Haskell LaTeX library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaXml" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , polyparse, pretty, random, stdenv
         }:
         mkDerivation {
           pname = "HaXml";
           version = "1.25.4";
           sha256 = "d77467b8c855ba85d900b5d1a9b771aa498c80d570f9ac60a9f10803cfc01db5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers filepath polyparse pretty random
           ];
           executableHaskellDepends = [ base directory polyparse pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/HaXml/";
           description = "Utilities for manipulating XML documents";
           license = "LGPL";
         }) {};
      "HandsomeSoup" = callPackage
        ({ mkDerivation, base, containers, HTTP, hxt, hxt-http, mtl
         , network, network-uri, parsec, stdenv, transformers
         }:
         mkDerivation {
           pname = "HandsomeSoup";
           version = "0.4.2";
           sha256 = "0ae2dad3fbde1efee9e45b84b2aeb5b526cc7b3ea2cbc5715494f7bde3ceeefb";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers HTTP hxt hxt-http mtl network network-uri parsec
             transformers
           ];
           executableHaskellDepends = [ base hxt ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/egonSchiele/HandsomeSoup";
           description = "Work with HTML more easily in HXT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaskellNet" = callPackage
        ({ mkDerivation, array, base, base64-string, bytestring, cryptohash
         , mime-mail, mtl, network, old-time, pretty, stdenv, text
         }:
         mkDerivation {
           pname = "HaskellNet";
           version = "0.5.1";
           sha256 = "3245d31ad76f9f9013a2f6e2285d73ed37376eeb073c100b9a6d19e87f0ca838";
           libraryHaskellDepends = [
             array base base64-string bytestring cryptohash mime-mail mtl
             network old-time pretty text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/HaskellNet";
           description = "Client support for POP3, SMTP, and IMAP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HaskellNet-SSL" = callPackage
        ({ mkDerivation, base, bytestring, connection, data-default
         , HaskellNet, network, stdenv, tls
         }:
         mkDerivation {
           pname = "HaskellNet-SSL";
           version = "0.3.4.0";
           sha256 = "83ae92547fd5d52b5b74402101ec254423abeac0c0725e14a112d6ffc843040f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring connection data-default HaskellNet network tls
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dpwright/HaskellNet-SSL";
           description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Hclip" = callPackage
        ({ mkDerivation, base, mtl, process, stdenv, strict }:
         mkDerivation {
           pname = "Hclip";
           version = "3.0.0.4";
           sha256 = "d8c80bd2d035571cd76ce4f69453e9fcef4096dbc8868eb4cfcd7eb74fe5f712";
           libraryHaskellDepends = [ base mtl process strict ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jetho/Hclip";
           description = "A small cross-platform library for reading and modifying the system clipboard";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Hoed" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, clock, containers
         , deepseq, directory, libgraph, process, QuickCheck, regex-tdfa
         , semigroups, stdenv, strict, template-haskell, terminal-size
         , uniplate, vector
         }:
         mkDerivation {
           pname = "Hoed";
           version = "0.4.1";
           sha256 = "074f44d54aa0ed0334d9ff317b1293b03802f8a6971217d082b597d3afe7a491";
           libraryHaskellDepends = [
             array base bytestring cereal clock containers deepseq directory
             libgraph process QuickCheck regex-tdfa semigroups strict
             template-haskell terminal-size uniplate vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MaartenFaddegon/Hoed";
           description = "Lightweight algorithmic debugging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "HsOpenSSL" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, integer-gmp, network
         , openssl, stdenv, time
         }:
         mkDerivation {
           pname = "HsOpenSSL";
           version = "0.11.4.12";
           sha256 = "356a526263d988254d5830dd5a368380163975174dfc9230b697e6129e5c15a2";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [
             base bytestring integer-gmp network time
           ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vshabanov/HsOpenSSL";
           description = "Partial OpenSSL binding for Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {inherit (pkgs) openssl;};
      "HsOpenSSL-x509-system" = callPackage
        ({ mkDerivation, base, bytestring, HsOpenSSL, stdenv, unix }:
         mkDerivation {
           pname = "HsOpenSSL-x509-system";
           version = "0.1.0.3";
           sha256 = "5bdcb7ae2faba07a374109fea0a1431ae09d080f8574e60ab7a351b46f931f92";
           libraryHaskellDepends = [ base bytestring HsOpenSSL unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/HsOpenSSL-x509-system";
           description = "Use the system's native CA certificate store with HsOpenSSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "IPv6Addr" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, iproute, network
         , network-info, random, stdenv, text
         }:
         mkDerivation {
           pname = "IPv6Addr";
           version = "1.0.1";
           sha256 = "dff7e9d19e60f08401fd79a8d5004b2166d45d0a1160e5705aac821268a54207";
           libraryHaskellDepends = [
             aeson attoparsec base iproute network network-info random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/IPv6Addr";
           description = "Library to deal with IPv6 address text representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "IPv6DB" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, fast-logger
         , hedis, http-types, IPv6Addr, mtl, optparse-applicative, stdenv
         , text, unordered-containers, vector, wai, wai-logger, warp
         }:
         mkDerivation {
           pname = "IPv6DB";
           version = "0.2.5";
           sha256 = "d879d2e1d56ad60e7039f0771e71ed0c21385d076f1e59f20bd7dc361d4a0959";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring hedis http-types IPv6Addr mtl text
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring fast-logger hedis http-types IPv6Addr mtl
             optparse-applicative text unordered-containers vector wai
             wai-logger warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://ipv6db.cybervisible.com";
           description = "A RESTful Web Service for IPv6-related data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "IfElse" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "IfElse";
           version = "0.85";
           sha256 = "8ad3bfc3e2c867e6330d9bff874b3105476c35b2e1638fd448f233e9f80addcd";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Anaphoric and miscellaneous useful control-flow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Imlib" = callPackage
        ({ mkDerivation, array, base, imlib2, stdenv, X11 }:
         mkDerivation {
           pname = "Imlib";
           version = "0.1.2";
           sha256 = "3ed318a7777a3b0752327b7b128edb3a1d562202b480a6d6b793b79ed90ebd1c";
           libraryHaskellDepends = [ array base X11 ];
           librarySystemDepends = [ imlib2 ];
           doHaddock = false;
           doCheck = false;
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) imlib2;};
      "Interpolation" = callPackage
        ({ mkDerivation, base, haskell-src-meta, stdenv, syb
         , template-haskell
         }:
         mkDerivation {
           pname = "Interpolation";
           version = "0.3.0";
           sha256 = "1bf68489dafd52f25d93a3aad672a2dc7110d77ffb85348cb82c3e5a51e8cb10";
           libraryHaskellDepends = [
             base haskell-src-meta syb template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Multiline strings, interpolation and templating";
           license = "unknown";
         }) {};
      "IntervalMap" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "IntervalMap";
           version = "0.5.3.1";
           sha256 = "9a575459f66ad48b734ca79885b599ab5a5eed800bb409b11f08c8a7d53f8c21";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
           description = "Containers for intervals, with efficient search";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq, mtl
         , primitive, stdenv, transformers, vector, zlib
         }:
         mkDerivation {
           pname = "JuicyPixels";
           version = "3.2.9.4";
           sha256 = "ff35047d6f453f9fd5cccb99b2170375ecbf7f73ba350db6ac89b091d91f92d6";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq mtl primitive
             transformers vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Twinside/Juicy.Pixels";
           description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels-extra" = callPackage
        ({ mkDerivation, base, JuicyPixels, stdenv }:
         mkDerivation {
           pname = "JuicyPixels-extra";
           version = "0.2.2";
           sha256 = "8d7e375f8f30b0f98912dd24365920a4b466aecb49e28f7325408fd378d71eb8";
           revision = "1";
           editedCabalFile = "1h88x4bp9jvxx8laz69izna82a9d3bapr7nfpa9gpbvqpmi7d3vd";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base JuicyPixels ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/JuicyPixels-extra";
           description = "Efficiently scale, crop, flip images with JuicyPixels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "JuicyPixels-scale-dct" = callPackage
        ({ mkDerivation, base, base-compat, carray, fft, JuicyPixels
         , stdenv
         }:
         mkDerivation {
           pname = "JuicyPixels-scale-dct";
           version = "0.1.1.2";
           sha256 = "9abd9d00520424912201b58343f252362b9f34760023d3324732ca00a906fe96";
           revision = "1";
           editedCabalFile = "08myhf2912c5hd7hhiq58lsylfpj2zwhak5kmhhcffc7zsvhcl24";
           libraryHaskellDepends = [
             base base-compat carray fft JuicyPixels
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
           description = "Scale JuicyPixels images with DCT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "LibZip" = callPackage
        ({ mkDerivation, base, bindings-libzip, bytestring, filepath, mtl
         , stdenv, time, utf8-string
         }:
         mkDerivation {
           pname = "LibZip";
           version = "1.0.1";
           sha256 = "a636e0202d2a3f60d894a814bd9834cf8c62313b67ccc48c295f02a4bebe425f";
           libraryHaskellDepends = [
             base bindings-libzip bytestring filepath mtl time utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitbucket.org/astanin/hs-libzip/";
           description = "Bindings to libzip, a library for manipulating zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "List" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "List";
           version = "0.6.2";
           sha256 = "c4b92be1202fc59112018f76d5b17cd3a659ebc36384a46e000ab2fbaf99b878";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yairchu/generator";
           description = "List monad transformer and class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ListLike" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , dlist, fmlist, stdenv, text, utf8-string, vector
         }:
         mkDerivation {
           pname = "ListLike";
           version = "4.5.1";
           sha256 = "b70745335b563cd9039bb17a1e2faf7edb1b68febdd19586b28ab67c55562a8d";
           libraryHaskellDepends = [
             array base bytestring containers deepseq dlist fmlist text
             utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/JohnLato/listlike";
           description = "Generic support for list-like structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MFlow" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
         , case-insensitive, clientsession, conduit, conduit-extra
         , containers, cpphs, directory, extensible-exceptions, http-types
         , monadloc, mtl, old-time, parsec, pwstore-fast, random
         , RefSerialize, resourcet, stdenv, stm, TCache, text, time
         , transformers, utf8-string, vector, wai, wai-extra, warp, warp-tls
         , Workflow
         }:
         mkDerivation {
           pname = "MFlow";
           version = "0.4.6.0";
           sha256 = "4e93f7488152d88359fd100a742c2ea96788284d262f3cd1b50d936f80f1a342";
           libraryHaskellDepends = [
             base blaze-html blaze-markup bytestring case-insensitive
             clientsession conduit conduit-extra containers directory
             extensible-exceptions http-types monadloc mtl old-time parsec
             pwstore-fast random RefSerialize resourcet stm TCache text time
             transformers utf8-string vector wai wai-extra warp warp-tls
             Workflow
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           description = "stateful, RESTful web framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MemoTrie" = callPackage
        ({ mkDerivation, base, newtype-generics, stdenv }:
         mkDerivation {
           pname = "MemoTrie";
           version = "0.6.9";
           sha256 = "1d6045b8fdf7b89ed6b495e535613f5091cdfc9cdfe05a862207e76ce205f794";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base newtype-generics ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/MemoTrie";
           description = "Trie-based memo functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MissingH" = callPackage
        ({ mkDerivation, array, base, containers, directory, filepath
         , hslogger, HUnit, mtl, network, old-locale, old-time, parsec
         , process, random, regex-compat, stdenv, time, unix
         }:
         mkDerivation {
           pname = "MissingH";
           version = "1.4.0.1";
           sha256 = "283f2afd46625d98b4e29f77edadfa5e6009a227812ee2ece10091ad6a7e9b71";
           libraryHaskellDepends = [
             array base containers directory filepath hslogger HUnit mtl network
             old-locale old-time parsec process random regex-compat time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/missingh";
           description = "Large utility library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MonadPrompt" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "MonadPrompt";
           version = "1.0.0.5";
           sha256 = "b012cbbe83650f741c7b7f6eafcc89dec299b0ac74a758b6f3a8cdfc5d3bbeda";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "MonadPrompt, implementation & examples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MonadRandom" = callPackage
        ({ mkDerivation, base, fail, mtl, primitive, random, stdenv
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "MonadRandom";
           version = "0.5.1";
           sha256 = "9e3f0f92807285302036dc504066ae6d968c8b0b4c25d9360888f31fe1730d87";
           libraryHaskellDepends = [
             base fail mtl primitive random transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Random-number generation monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "MusicBrainz" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , HTTP, http-conduit, http-types, monad-control, resourcet, stdenv
         , text, time, time-locale-compat, transformers, vector, xml-conduit
         , xml-types
         }:
         mkDerivation {
           pname = "MusicBrainz";
           version = "0.3.1";
           sha256 = "3518fd97581cbb90a15c5dc62b637cde5d71911b3f10d62c37ed17157415f3fd";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra HTTP http-conduit
             http-types monad-control resourcet text time time-locale-compat
             transformers vector xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hMusicBrainz";
           description = "interface to MusicBrainz XML2 and JSON web services";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Network-NineP" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, convertible
         , exceptions, hslogger, monad-loops, monad-peel, mstate, mtl
         , network, NineP, regex-posix, stateref, stdenv, transformers
         }:
         mkDerivation {
           pname = "Network-NineP";
           version = "0.4.2";
           sha256 = "cd3c066be0bb4aca33a096416dd2c9280aaf6185465eba1c04b47a79bbc7d78c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers convertible exceptions hslogger
             monad-loops monad-peel mstate mtl network NineP regex-posix
             stateref transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "High-level abstraction over 9P protocol";
           license = "unknown";
         }) {};
      "NineP" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "NineP";
           version = "0.0.2.1";
           sha256 = "4bb1516b9fb340118960043e0c72aa62316be8ff3f78cc8c1354e2fac96dd8cc";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://9ph.googlecode.com";
           description = "9P2000 in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "NoHoed" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "NoHoed";
           version = "0.1.1";
           sha256 = "9b663a234c034e0049126ae7f06d1756dc496012177bf18548c6d8caeec43b3d";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/NoHoed";
           description = "Placeholder package to preserve debug ability via conditional builds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "NoTrace" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "NoTrace";
           version = "0.3.0.2";
           sha256 = "39ea78488aa2a172691b2d97b3bc6673a423f1eb0c184381da546de61d94125b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/CindyLinz/Haskell-NoTrace";
           description = "Remove all the functions come from Debug.Trace after debugging";
           license = stdenv.lib.licenses.mit;
         }) {};
      "NumInstances" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "NumInstances";
           version = "1.4";
           sha256 = "cbdb2a49346f59ceb5ab38592d7bc52e5205580d431d0ac6d852fd9880e59679";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/NumInstances";
           description = "Instances of numeric classes for functions and tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ObjectName" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "ObjectName";
           version = "1.1.0.1";
           sha256 = "72dbef237580fd4e8567de2de752835bbadd3629f486d1586486d49a49aad210";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/svenpanne/ObjectName";
           description = "Explicitly handled object names";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OneTuple" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "OneTuple";
           version = "0.2.1";
           sha256 = "4b6f74b6d92df112b0f4eaf15ccdc5fbb763d59f07e9a2afa5690ef89159a2f4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Singleton Tuple";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Only" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "Only";
           version = "0.1";
           sha256 = "ab7aa193e8c257d3bda6b0b3c1cbcf74cdaa85ab08cb20c2dd62ba248c1ab265";
           revision = "1";
           editedCabalFile = "1ahk7p34kmh041mz7lyc10nhcxgv2i4z8nvzxvqm2x34gslmsbzr";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "The 1-tuple type or single-value \"collection\"";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OpenAL" = callPackage
        ({ mkDerivation, base, ObjectName, openal, OpenGL, StateVar, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "OpenAL";
           version = "1.7.0.4";
           sha256 = "3989f6c4fe437843551004dd011c4308bf63d787ae4fbb8ce71d44b1b0b1f118";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base ObjectName OpenGL StateVar transformers
           ];
           librarySystemDepends = [ openal ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-openal/ALUT";
           description = "A binding to the OpenAL cross-platform 3D audio API";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openal;};
      "OpenGL" = callPackage
        ({ mkDerivation, base, bytestring, containers, GLURaw, ObjectName
         , OpenGLRaw, StateVar, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "OpenGL";
           version = "3.0.2.0";
           sha256 = "faa99459724d614d2cf2d2b83c7bda4898ee71752a253bf4699c096822450efb";
           libraryHaskellDepends = [
             base bytestring containers GLURaw ObjectName OpenGLRaw StateVar
             text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "OpenGLRaw" = callPackage
        ({ mkDerivation, base, bytestring, containers, fixed, half, mesa
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "OpenGLRaw";
           version = "3.2.7.0";
           sha256 = "62723d0fc287e5e5e93853b1fed0ca76495e6b693261aa9aae35340182a58a08";
           libraryHaskellDepends = [
             base bytestring containers fixed half text transformers
           ];
           librarySystemDepends = [ mesa ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Opengl";
           description = "A raw binding for the OpenGL graphics system";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mesa;};
      "PSQueue" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "PSQueue";
           version = "1.1";
           sha256 = "a8e0871ad10f916f55c3b9baec53eff23c4e97e09cf96d6c66771789e00a49cc";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Priority Search Queue";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ParsecTools" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "ParsecTools";
           version = "0.0.2.0";
           sha256 = "ef4843353127aa3e6f6ab0aece9f4245225d375802921e151a1751d797857a87";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           description = "Parsec combinators for more complex objects";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "PortMidi" = callPackage
        ({ mkDerivation, alsaLib, base, stdenv }:
         mkDerivation {
           pname = "PortMidi";
           version = "0.1.6.1";
           sha256 = "b89e9293d5b80d23b197dbb9bf196737765c66ffe96eaabdb9517fe20b516690";
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ninegua/PortMidi";
           description = "A binding for PortMedia/PortMidi";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "QuasiText" = callPackage
        ({ mkDerivation, attoparsec, base, haskell-src-meta, stdenv
         , template-haskell, text, th-lift-instances
         }:
         mkDerivation {
           pname = "QuasiText";
           version = "0.1.2.6";
           sha256 = "e801d269e25263645ee66fc090040fe9b9c8a8e5bf10485801dd7a5a30e0f119";
           libraryHaskellDepends = [
             attoparsec base haskell-src-meta template-haskell text
             th-lift-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mikeplus64/QuasiText";
           description = "A QuasiQuoter for Text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "QuickCheck" = callPackage
        ({ mkDerivation, base, containers, deepseq, random, stdenv
         , template-haskell, tf-random, transformers
         }:
         mkDerivation {
           pname = "QuickCheck";
           version = "2.10.1";
           sha256 = "1dbb56786854fd539315497086284dfff039a52a487319e648140e4987b6d5e5";
           libraryHaskellDepends = [
             base containers deepseq random template-haskell tf-random
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nick8325/quickcheck";
           description = "Automatic testing of Haskell programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "RNAlien" = callPackage
        ({ mkDerivation, aeson, base, biocore, biofasta, BlastHTTP
         , blastxml, bytestring, cassava, ClustalParser, cmdargs, containers
         , directory, edit-distance, either-unwrap, EntrezHTTP, filepath
         , hierarchical-clustering, HTTP, http-conduit, http-types, hxt
         , matrix, network, parsec, process, pureMD5, random, split, stdenv
         , Taxonomy, text, text-metrics, time, transformers, vector
         , ViennaRNAParser
         }:
         mkDerivation {
           pname = "RNAlien";
           version = "1.3.7";
           sha256 = "de54278982eecd9568ee155a3155f632b503776fff7634b8b3746e29d28248a5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base biocore biofasta BlastHTTP blastxml bytestring cassava
             ClustalParser cmdargs containers directory edit-distance
             either-unwrap EntrezHTTP filepath hierarchical-clustering HTTP
             http-conduit http-types hxt matrix network parsec process pureMD5
             random Taxonomy text text-metrics transformers vector
             ViennaRNAParser
           ];
           executableHaskellDepends = [
             base biocore biofasta bytestring cassava cmdargs containers
             directory either-unwrap filepath process random split text time
             vector ViennaRNAParser
           ];
           doHaddock = false;
           doCheck = false;
           description = "Unsupervized construction of RNA family models";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "RSA" = callPackage
        ({ mkDerivation, base, binary, bytestring, crypto-api
         , crypto-pubkey-types, SHA, stdenv
         }:
         mkDerivation {
           pname = "RSA";
           version = "2.3.0";
           sha256 = "eee76dc7f9dd2d2cdeb014af728ff56f2f5d2908212bd3bb8c5e89f5c6485333";
           libraryHaskellDepends = [
             base binary bytestring crypto-api crypto-pubkey-types SHA
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Rasterific" = callPackage
        ({ mkDerivation, base, bytestring, containers, dlist, FontyFruity
         , free, JuicyPixels, mtl, primitive, stdenv, transformers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "Rasterific";
           version = "0.7.2.1";
           sha256 = "7f6d86495a5a3aa72dd9c13f2dd8d93526cd5166889f39c5e7dde529cef44d74";
           libraryHaskellDepends = [
             base bytestring containers dlist FontyFruity free JuicyPixels mtl
             primitive transformers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           description = "A pure haskell drawing engine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "RefSerialize" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, hashtables
         , stdenv, stringsearch
         }:
         mkDerivation {
           pname = "RefSerialize";
           version = "0.4.0";
           sha256 = "05b25eb1ab943d96119aa2acca678fc8f194c3411af521e3835f4de5c752bbb2";
           libraryHaskellDepends = [
             base binary bytestring containers hashtables stringsearch
           ];
           doHaddock = false;
           doCheck = false;
           description = "Write to and read from ByteStrings maintaining internal memory references";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SCalendar" = callPackage
        ({ mkDerivation, base, containers, stdenv, text, time }:
         mkDerivation {
           pname = "SCalendar";
           version = "1.1.0";
           sha256 = "4971bf6df45953434088ba50d0e17dcc49a0e4c2dd37ad06385c1f87d87b348d";
           libraryHaskellDepends = [ base containers text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.researchgate.net/publication/311582722_Method_of_Managing_Resources_in_a_Telecommunication_Network_or_a_Computing_System";
           description = "This is a library for handling calendars and resource availability based on the \"top-nodes algorithm\" and set operations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "SHA" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, directory, stdenv
         }:
         mkDerivation {
           pname = "SHA";
           version = "1.6.4.2";
           sha256 = "c470176f63cbe49fd0502a1b32ef22bc01b1af42385583b8be94547750958a8c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ array base binary bytestring ];
           executableHaskellDepends = [ base bytestring directory ];
           doHaddock = false;
           doCheck = false;
           description = "Implementations of the SHA suite of message digest functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "STMonadTrans" = callPackage
        ({ mkDerivation, array, base, mtl, stdenv }:
         mkDerivation {
           pname = "STMonadTrans";
           version = "0.4.3";
           sha256 = "574fd56cf74036c20d00a09d815659dbbb0ae51c8103d00c93cd9558ad3322db";
           revision = "1";
           editedCabalFile = "09kqrv9a4yhsdpix49h9qjw0j2fhxrgkjnfrnyxg1nspmqrvl50m";
           libraryHaskellDepends = [ array base mtl ];
           doHaddock = false;
           doCheck = false;
           description = "A monad transformer version of the ST monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SVGFonts" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-markup, blaze-svg
         , bytestring, cereal, cereal-vector, containers, data-default-class
         , diagrams-core, diagrams-lib, directory, parsec, split, stdenv
         , text, tuple, vector, xml
         }:
         mkDerivation {
           pname = "SVGFonts";
           version = "1.6.0.3";
           sha256 = "bc8f8863799070c345fdd88c065852c6434af9e802fd0171df2a3dbd37f35887";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base blaze-markup blaze-svg bytestring cereal
             cereal-vector containers data-default-class diagrams-core
             diagrams-lib directory parsec split text tuple vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fonts from the SVG-Font format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SafeSemaphore" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm }:
         mkDerivation {
           pname = "SafeSemaphore";
           version = "0.10.1";
           sha256 = "21e5b737a378cae9e1faf85cab015316d4c84d4b37e6d9d202111cef8c4cef66";
           revision = "1";
           editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
           libraryHaskellDepends = [ base containers stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
           description = "Much safer replacement for QSemN, QSem, and SampleVar";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "SegmentTree" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "SegmentTree";
           version = "0.3";
           sha256 = "6188c1b1276d7fa0391098a563df73dd522d20b57dc5321fe3418a9e3ca84fc1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Data structure for querying the set (or count) of intervals covering given point";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ShellCheck" = callPackage
        ({ mkDerivation, base, containers, directory, json, mtl, parsec
         , process, QuickCheck, regex-tdfa, stdenv
         }:
         mkDerivation {
           pname = "ShellCheck";
           version = "0.4.7";
           sha256 = "184955264d42c5dca0300fb9688b9a6c9a1c70c345dbcd8e30bb48a049a70d7c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory json mtl parsec process QuickCheck
             regex-tdfa
           ];
           executableHaskellDepends = [
             base containers directory json mtl parsec QuickCheck regex-tdfa
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.shellcheck.net/";
           description = "Shell script analysis tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Spintax" = callPackage
        ({ mkDerivation, attoparsec, base, extra, mtl, mwc-random, stdenv
         , text
         }:
         mkDerivation {
           pname = "Spintax";
           version = "0.3.2";
           sha256 = "f7e620817ce065f06ae163b08461eb3ce3dc0254caf0dcbd00d01836759bf048";
           libraryHaskellDepends = [
             attoparsec base extra mtl mwc-random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/spintax";
           description = "Random text generation based on spintax";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, containers
         , cryptonite, focus, hashable, http-types, hvect, list-t
         , monad-control, mtl, reroute, resource-pool, resourcet, Spock-core
         , stdenv, stm, stm-containers, text, time, transformers
         , transformers-base, unordered-containers, vault, wai
         }:
         mkDerivation {
           pname = "Spock";
           version = "0.12.0.0";
           sha256 = "8392d1ee34b46238c6bfe951080f06e11e1f3622d8402e7762c70aa61430e3d9";
           revision = "1";
           editedCabalFile = "0a9mfn2p1b6r6pc6n3a2l7xl4607mjj3fvsvpcipp2zvqsryi9c8";
           libraryHaskellDepends = [
             base base64-bytestring bytestring containers cryptonite focus
             hashable http-types hvect list-t monad-control mtl reroute
             resource-pool resourcet Spock-core stm stm-containers text time
             transformers transformers-base unordered-containers vault wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.spock.li";
           description = "Another Haskell web framework for rapid development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock-api" = callPackage
        ({ mkDerivation, aeson, base, deepseq, hvect, reroute, stdenv }:
         mkDerivation {
           pname = "Spock-api";
           version = "0.12.0.0";
           sha256 = "8cfdbcbd2fa426c595fb7d29f8a6395dea17476c15d5ae863da2605b1c6ebe00";
           revision = "1";
           editedCabalFile = "0w0xah0lirgrs1xvlw5z6saa3wvzdl5r3yq3zxipg7kmrfxgbfbz";
           libraryHaskellDepends = [ aeson base deepseq hvect reroute ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.spock.li";
           description = "Another Haskell web framework for rapid development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock-api-server" = callPackage
        ({ mkDerivation, base, hvect, mtl, Spock-api, Spock-core, stdenv }:
         mkDerivation {
           pname = "Spock-api-server";
           version = "0.12.0.0";
           sha256 = "29734206823875ec71d7cad14bf012adb70b01700975e2181a7cb52713b131ce";
           libraryHaskellDepends = [ base hvect mtl Spock-api Spock-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.spock.li";
           description = "Another Haskell web framework for rapid development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock-core" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , case-insensitive, containers, cookie, directory, hashable
         , http-api-data, http-types, hvect, mtl, old-locale, reroute
         , resourcet, stdenv, stm, superbuffer, text, time, transformers
         , unordered-containers, vault, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "Spock-core";
           version = "0.12.0.0";
           sha256 = "e69b70ea3027fa644d546bcae25bbf75e38abd6f4a7f88f0628fea6e16e97895";
           revision = "1";
           editedCabalFile = "0xk6kmka807ifwldr34wjgkwdn19p848ik6lmm2zyah08amvcgqq";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring case-insensitive containers
             cookie directory hashable http-api-data http-types hvect mtl
             old-locale reroute resourcet stm superbuffer text time transformers
             unordered-containers vault wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.spock.li";
           description = "Another Haskell web framework for rapid development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock-lucid" = callPackage
        ({ mkDerivation, base, lucid, Spock, stdenv, transformers }:
         mkDerivation {
           pname = "Spock-lucid";
           version = "0.4.0.1";
           sha256 = "3126d512e9528a6cf8830ad355dd2f0429bfd41f0ae048138818ae8dcedc2397";
           libraryHaskellDepends = [ base lucid Spock transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/Spock-lucid";
           description = "Lucid support for Spock";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Spock-worker" = callPackage
        ({ mkDerivation, base, containers, errors, lifted-base, mtl, Spock
         , stdenv, stm, text, time, transformers, vector
         }:
         mkDerivation {
           pname = "Spock-worker";
           version = "0.3.1.0";
           sha256 = "edc009d59fe528ab3bee887b8092f720a8a4ee85b550dec065964ed55c76dc4b";
           libraryHaskellDepends = [
             base containers errors lifted-base mtl Spock stm text time
             transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/Spock-worker";
           description = "Background workers for Spock";
           license = stdenv.lib.licenses.mit;
         }) {};
      "StateVar" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers }:
         mkDerivation {
           pname = "StateVar";
           version = "1.1.0.4";
           sha256 = "7ad68decb5c9a76f83c95ece5fa13d1b053e4fb1079bd2d3538f6b05014dffb7";
           libraryHaskellDepends = [ base stm transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-opengl/StateVar";
           description = "State variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Strafunski-StrategyLib" = callPackage
        ({ mkDerivation, base, directory, mtl, stdenv, syb, transformers }:
         mkDerivation {
           pname = "Strafunski-StrategyLib";
           version = "5.0.0.10";
           sha256 = "308a1a051df6bb617c9d37bda297fdbedfb8b4c7f6ea5864443cfb9f15e80cc2";
           revision = "1";
           editedCabalFile = "031p57vf33vdhwk1p4d1jzpk8fcl2js8kzdg7gyhz9g11vl2n4j9";
           libraryHaskellDepends = [ base directory mtl syb transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Library for strategic programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Stream" = callPackage
        ({ mkDerivation, base, lazysmallcheck, QuickCheck, stdenv }:
         mkDerivation {
           pname = "Stream";
           version = "0.4.7.2";
           sha256 = "990be249b3ef1b0075563026d4d2c803b86e3cbf168965ba6f9f2b4227a007d1";
           libraryHaskellDepends = [ base lazysmallcheck QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "A library for manipulating infinite lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "TCache" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , hashtables, mtl, old-time, RefSerialize, stdenv, stm, text
         }:
         mkDerivation {
           pname = "TCache";
           version = "0.12.1";
           sha256 = "f134b45fcdd127fa1a4214f01d44dc34e994fed137cec63f4c4ea632363ab7bd";
           libraryHaskellDepends = [
             base bytestring containers directory hashtables mtl old-time
             RefSerialize stm text
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Transactional cache with user-defined persistence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Taxonomy" = callPackage
        ({ mkDerivation, aeson, base, bytestring, either-unwrap, fgl
         , graphviz, parsec, stdenv, text, vector
         }:
         mkDerivation {
           pname = "Taxonomy";
           version = "1.0.3";
           sha256 = "b6f793127ba68fce97e1ab5482e41c8833b9577f01ef9b41470ab143c50e9270";
           libraryHaskellDepends = [
             aeson base bytestring either-unwrap fgl graphviz parsec text vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for parsing, processing and vizualization of taxonomy data";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "TypeCompose" = callPackage
        ({ mkDerivation, base, base-orphans, stdenv }:
         mkDerivation {
           pname = "TypeCompose";
           version = "0.9.12";
           sha256 = "3a182c2cc93f8291b3aedfc32c0b1faa84a982601c1a24cbe7fe1ecc50e333e2";
           revision = "1";
           editedCabalFile = "0j27xdfim7a6a16v834n3jdp1j7bsr3yn19bnfwni3xsvrc732q3";
           libraryHaskellDepends = [ base base-orphans ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/TypeCompose";
           description = "Type composition classes & instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Unique" = callPackage
        ({ mkDerivation, base, containers, extra, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "Unique";
           version = "0.4.7.2";
           sha256 = "b56155043817187170d02e6fa7c5ec69c72dc2a1c00b50bdd34d6d2875795b6b";
           libraryHaskellDepends = [
             base containers extra hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "It provides the functionality like unix \"uniq\" utility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ViennaRNAParser" = callPackage
        ({ mkDerivation, base, parsec, ParsecTools, process, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "ViennaRNAParser";
           version = "1.3.3";
           sha256 = "7ee941d106b8b0c57e1ca5104d19b94215721e4a7b8aeb53fa353d246efbaefe";
           libraryHaskellDepends = [
             base parsec ParsecTools process transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libary for parsing ViennaRNA package output";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "Win32" = callPackage
        ({ mkDerivation, advapi32, base, bytestring, filepath, gdi32, imm32
         , msimg32, shell32, shfolder, shlwapi, stdenv, user32, winmm
         }:
         mkDerivation {
           pname = "Win32";
           version = "2.5.4.1";
           sha256 = "cc183e9e545ad04fe8e509eb9447e9d11b160b2027482230cee8cdc141fd3d64";
           libraryHaskellDepends = [ base bytestring filepath ];
           librarySystemDepends = [
             advapi32 gdi32 imm32 msimg32 shell32 shfolder shlwapi user32 winmm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/win32";
           description = "A binding to part of the Win32 library";
           license = stdenv.lib.licenses.bsd3;
           platforms = stdenv.lib.platforms.none;
         }) {inherit (pkgs) advapi32; inherit (pkgs) gdi32; 
inherit (pkgs) imm32; inherit (pkgs) msimg32; 
inherit (pkgs) shell32; inherit (pkgs) shfolder; 
inherit (pkgs) shlwapi; inherit (pkgs) user32; 
inherit (pkgs) winmm;};
      "Win32-notify" = callPackage
        ({ mkDerivation, base, containers, directory, stdenv, Win32 }:
         mkDerivation {
           pname = "Win32-notify";
           version = "0.3.0.3";
           sha256 = "0c21dbe06cb1ce3b3e5f1aace0b7ee359b36e7cb057f8fe2c28c943150044116";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers directory Win32 ];
           executableHaskellDepends = [ base directory ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to part of the Win32 library for file notification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Workflow" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , exceptions, extensible-exceptions, mtl, old-time, RefSerialize
         , stdenv, stm, TCache, vector
         }:
         mkDerivation {
           pname = "Workflow";
           version = "0.8.3";
           sha256 = "c89b4b3a4a29fe576f8972ffa1e698eff8ac0ceb433642fc0b3f9c0308d22123";
           revision = "1";
           editedCabalFile = "0jy6hn1lx9wpq44ld96msgb6a2hb6cvryn1a39b4rq4iy3m45r8v";
           libraryHaskellDepends = [
             base binary bytestring containers directory exceptions
             extensible-exceptions mtl old-time RefSerialize stm TCache vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Workflow patterns over a monad for thread state logging & recovery";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "X11" = callPackage
        ({ mkDerivation, base, data-default, libX11, libXext, libXinerama
         , libXrandr, libXrender, stdenv
         }:
         mkDerivation {
           pname = "X11";
           version = "1.8";
           sha256 = "541b166aab1e05a92dc8f42a511d827e7aad373af12ae283b9df9982ccc09d8e";
           libraryHaskellDepends = [ base data-default ];
           librarySystemDepends = [
             libX11 libXext libXinerama libXrandr libXrender
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xmonad/X11";
           description = "A binding to the X11 graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs.xorg) libXext; inherit (pkgs.xorg) libXinerama; 
inherit (pkgs.xorg) libXrender;};
      "X11-xft" = callPackage
        ({ mkDerivation, base, libXft, stdenv, utf8-string, X11 }:
         mkDerivation {
           pname = "X11-xft";
           version = "0.3.1";
           sha256 = "4eba3fee62570e06447654030a62fb55f19587884bc2cef77a9c3b2c3458f8d1";
           libraryHaskellDepends = [ base utf8-string X11 ];
           libraryPkgconfigDepends = [ libXft ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to the Xft, X Free Type interface library, and some Xrender parts";
           license = "LGPL";
         }) {};
      "Xauth" = callPackage
        ({ mkDerivation, base, libXau, stdenv }:
         mkDerivation {
           pname = "Xauth";
           version = "0.1";
           sha256 = "ba332dea9ec152b3f676d22461eee81a657e16987c3dfb8249e9dbe0cda56ed7";
           libraryHaskellDepends = [ base ];
           libraryPkgconfigDepends = [ libXau ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to the X11 authentication library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "Yampa" = callPackage
        ({ mkDerivation, base, deepseq, random, stdenv }:
         mkDerivation {
           pname = "Yampa";
           version = "0.10.7";
           sha256 = "14b13dcb9e52a4c6f738d7515d82d681618720de5598ec11448646333193d1c5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base deepseq random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Yampa";
           description = "Library for programming hybrid systems";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "YampaSynth" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, HCodecs
         , stdenv, Yampa
         }:
         mkDerivation {
           pname = "YampaSynth";
           version = "0.2";
           sha256 = "a1c6a0ea57aee855ca3f558f1b6d7ec167abb57333052d8a9f7b46ef323d0a09";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             array base bytestring containers HCodecs Yampa
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
           description = "Software synthesizer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-deque" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv, time }:
         mkDerivation {
           pname = "abstract-deque";
           version = "0.3";
           sha256 = "09aa10f38193a8275a7791b92a4f3a7192a304874637e2a35c897dde25d75ca2";
           libraryHaskellDepends = [ array base containers random time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "Abstract, parameterized interface to mutable Deques";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-deque-tests" = callPackage
        ({ mkDerivation, abstract-deque, array, base, containers, HUnit
         , random, stdenv, test-framework, test-framework-hunit, time
         }:
         mkDerivation {
           pname = "abstract-deque-tests";
           version = "0.3";
           sha256 = "5f17fb4cc26559f81c777f494622907e8927181175eaa172fb6adbf14b2feba5";
           libraryHaskellDepends = [
             abstract-deque array base containers HUnit random test-framework
             test-framework-hunit time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "A test-suite for any queue or double-ended queue satisfying an interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "abstract-par" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "abstract-par";
           version = "0.3.3";
           sha256 = "248a8739bd902462cb16755b690b55660e196e58cc7e6ef8157a72c2a3d5d860";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "Type classes generalizing the functionality of the 'monad-par' library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, base-orphans, containers
         , deepseq, directory, exceptions, fclabels, filepath, ghc-prim
         , hashable, hashtables, mtl, stdenv, template-haskell, time
         , transformers, unique, unix, unordered-containers
         }:
         mkDerivation {
           pname = "accelerate";
           version = "1.1.1.0";
           sha256 = "a4f482472bbd0e858bbe568834490af46d882bafb598576213b63a44be828ee1";
           libraryHaskellDepends = [
             ansi-wl-pprint base base-orphans containers deepseq directory
             exceptions fclabels filepath ghc-prim hashable hashtables mtl
             template-haskell time transformers unique unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AccelerateHS/accelerate/";
           description = "An embedded language for accelerated array processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-arithmetic" = callPackage
        ({ mkDerivation, accelerate, accelerate-utility, base, QuickCheck
         , stdenv, utility-ht
         }:
         mkDerivation {
           pname = "accelerate-arithmetic";
           version = "1.0";
           sha256 = "62a467818285031330ecc85968d58d86986e1dacebe901c9d86b0fa53ba60c3f";
           libraryHaskellDepends = [
             accelerate accelerate-utility base QuickCheck utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/accelerate-arithmetic/";
           description = "Linear algebra and interpolation using the Accelerate framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-bignum" = callPackage
        ({ mkDerivation, accelerate, accelerate-llvm
         , accelerate-llvm-native, accelerate-llvm-ptx, base, ghc-prim
         , llvm-hs-pure, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "accelerate-bignum";
           version = "0.1.0.0";
           sha256 = "7c18c467d646ed30131ad197144c4f7fa6ce3e821d41c6db3dba4361f04e30a5";
           revision = "1";
           editedCabalFile = "0gwfw6bzy00spi0nm82p63fjc7sigk733ysnla64znqilca8nrmv";
           libraryHaskellDepends = [
             accelerate accelerate-llvm accelerate-llvm-native
             accelerate-llvm-ptx base ghc-prim llvm-hs-pure template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcdonell/accelerate-bignum";
           description = "Fixed-length large integer arithmetic for Accelerate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-blas" = callPackage
        ({ mkDerivation, accelerate, accelerate-llvm
         , accelerate-llvm-native, accelerate-llvm-ptx, base, blas-hs
         , bytestring, containers, cublas, cuda, file-embed, llvm-hs-pure
         , mtl, stdenv, storable-complex
         }:
         mkDerivation {
           pname = "accelerate-blas";
           version = "0.1.0.1";
           sha256 = "cda96b600cfa251036db1c3568778235cb766d6f9bcff80420b4de48867a4c66";
           revision = "2";
           editedCabalFile = "1bxh38hyn7lq73z1dqg8rsbdblvy3551lp08jlm2h8p9b8bsriia";
           libraryHaskellDepends = [
             accelerate accelerate-llvm accelerate-llvm-native
             accelerate-llvm-ptx base blas-hs bytestring containers cublas cuda
             file-embed llvm-hs-pure mtl storable-complex
           ];
           doHaddock = false;
           doCheck = false;
           description = "Numeric Linear Algebra in Accelerate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-examples" = callPackage
        ({ mkDerivation, accelerate, accelerate-fft, accelerate-io
         , accelerate-llvm-native, accelerate-llvm-ptx, ansi-wl-pprint
         , array, base, binary, bmp, bytestring, bytestring-lexing, cereal
         , colour-accelerate, containers, criterion, directory, fclabels
         , filepath, gloss, gloss-accelerate, gloss-raster-accelerate
         , gloss-rendering, HUnit, lens-accelerate, linear
         , linear-accelerate, matrix-market-attoparsec, mwc-random
         , normaldistribution, pipes, QuickCheck, random, repa, repa-io
         , scientific, stdenv, test-framework, test-framework-hunit
         , test-framework-quickcheck2, vector, vector-algorithms
         }:
         mkDerivation {
           pname = "accelerate-examples";
           version = "1.1.0.0";
           sha256 = "3de4806f0d4e76733dc76824e737820e53ece0eb42787754739284b1cdacf27e";
           revision = "2";
           editedCabalFile = "1r53mc266gr6h2j0diyb82isaw72g6cdgvlqbhcnlidi3g7vqqcs";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             accelerate accelerate-llvm-native accelerate-llvm-ptx
             ansi-wl-pprint base containers criterion directory fclabels HUnit
             linear mwc-random QuickCheck test-framework test-framework-hunit
             test-framework-quickcheck2
           ];
           executableHaskellDepends = [
             accelerate accelerate-fft accelerate-io array base binary bmp
             bytestring bytestring-lexing cereal colour-accelerate containers
             criterion directory fclabels filepath gloss gloss-accelerate
             gloss-raster-accelerate gloss-rendering HUnit lens-accelerate
             linear-accelerate matrix-market-attoparsec mwc-random
             normaldistribution pipes QuickCheck random repa repa-io scientific
             test-framework test-framework-hunit test-framework-quickcheck2
             vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AccelerateHS/accelerate-examples";
           description = "Examples using the Accelerate library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-fft" = callPackage
        ({ mkDerivation, accelerate, accelerate-llvm
         , accelerate-llvm-native, accelerate-llvm-ptx, base, bytestring
         , carray, cuda, cufft, fft, file-embed, stdenv, storable-complex
         }:
         mkDerivation {
           pname = "accelerate-fft";
           version = "1.1.0.0";
           sha256 = "34d9ae4f15b63067803febd5887a08cf067d7e61dec1c61702a7d66795855160";
           libraryHaskellDepends = [
             accelerate accelerate-llvm accelerate-llvm-native
             accelerate-llvm-ptx base bytestring carray cuda cufft fft
             file-embed storable-complex
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AccelerateHS/accelerate-fft";
           description = "FFT using the Accelerate library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-fftw" = callPackage
        ({ mkDerivation, accelerate, accelerate-io, base, carray, fft
         , stdenv, storable-complex
         }:
         mkDerivation {
           pname = "accelerate-fftw";
           version = "1.0";
           sha256 = "ff4ca5aaaef9105a6e16b8dc275b3ba0fe8444a2a4140774a49b5239f6c9922c";
           libraryHaskellDepends = [
             accelerate accelerate-io base carray fft storable-complex
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/accelerate-fftw/";
           description = "Accelerate frontend to the FFTW library (Fourier transform)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-fourier" = callPackage
        ({ mkDerivation, accelerate, accelerate-arithmetic
         , accelerate-utility, base, containers, QuickCheck, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "accelerate-fourier";
           version = "1.0.0.3";
           sha256 = "cbaeb5606d1bc5b83ad0727c0c7032943ff99256832e3e5d2d726ba8955506f6";
           libraryHaskellDepends = [
             accelerate accelerate-arithmetic accelerate-utility base containers
             QuickCheck transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/accelerate-fourier/";
           description = "Fast Fourier transform and convolution using the Accelerate framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-io" = callPackage
        ({ mkDerivation, accelerate, array, base, bmp, bytestring, repa
         , stdenv, vector
         }:
         mkDerivation {
           pname = "accelerate-io";
           version = "1.0.0.1";
           sha256 = "f5a68d160adb378b1b9e42596786f8cc0ece4bb54af68f0d4f1e5d03c92474e0";
           libraryHaskellDepends = [
             accelerate array base bmp bytestring repa vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AccelerateHS/accelerate-io";
           description = "Read and write Accelerate arrays in various formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-llvm" = callPackage
        ({ mkDerivation, abstract-deque, accelerate, base, bytestring
         , chaselev-deque, containers, data-default-class, deepseq
         , directory, dlist, exceptions, fclabels, filepath, llvm-hs
         , llvm-hs-pure, mtl, mwc-random, stdenv, template-haskell
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "accelerate-llvm";
           version = "1.1.0.0";
           sha256 = "1c0324a64b9515a9b81f3566040bacc7cab230dad7e1d4c74429d5e6947a82f4";
           revision = "1";
           editedCabalFile = "1h26kcajp26w72fhl31i3bagdyn20za4qpb26fb90v15iygq9q46";
           libraryHaskellDepends = [
             abstract-deque accelerate base bytestring chaselev-deque containers
             data-default-class deepseq directory dlist exceptions fclabels
             filepath llvm-hs llvm-hs-pure mtl mwc-random template-haskell
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Accelerate backend component generating LLVM IR";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-llvm-native" = callPackage
        ({ mkDerivation, accelerate, accelerate-llvm, base, bytestring
         , c2hs, Cabal, cereal, containers, directory, dlist, fclabels
         , filepath, ghc, ghc-prim, hashable, libffi, llvm-hs, llvm-hs-pure
         , mtl, stdenv, template-haskell, time, unique, unix, vector
         }:
         mkDerivation {
           pname = "accelerate-llvm-native";
           version = "1.1.0.1";
           sha256 = "b4ec3931647ed297a9588b8eb03d3f1d3dcdaa41d4f2fe808459b3aa69d2bc43";
           revision = "1";
           editedCabalFile = "1kqv7bpa3mm4qzc141z5kqq934930b1cv2djr9m2ycwvb3y8ysfl";
           libraryHaskellDepends = [
             accelerate accelerate-llvm base bytestring Cabal cereal containers
             directory dlist fclabels filepath ghc ghc-prim hashable libffi
             llvm-hs llvm-hs-pure mtl template-haskell time unique unix vector
           ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           description = "Accelerate backend for multicore CPUs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-llvm-ptx" = callPackage
        ({ mkDerivation, accelerate, accelerate-llvm, base, bytestring
         , containers, cuda, deepseq, directory, dlist, fclabels, file-embed
         , filepath, hashable, llvm-hs, llvm-hs-pure, mtl, nvvm, pretty
         , process, stdenv, template-haskell, time, unordered-containers
         }:
         mkDerivation {
           pname = "accelerate-llvm-ptx";
           version = "1.1.0.1";
           sha256 = "b26c1b2d2a3a9f438e255661f3fe28120443c16e9e4e0fd18a2988fe80273248";
           libraryHaskellDepends = [
             accelerate accelerate-llvm base bytestring containers cuda deepseq
             directory dlist fclabels file-embed filepath hashable llvm-hs
             llvm-hs-pure mtl nvvm pretty process template-haskell time
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Accelerate backend for NVIDIA GPUs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accelerate-utility" = callPackage
        ({ mkDerivation, accelerate, base, stdenv, utility-ht }:
         mkDerivation {
           pname = "accelerate-utility";
           version = "1.0";
           sha256 = "939a7eae149915090c7e0fb4697553b67db534e7e7aaf3340113b694543e399a";
           libraryHaskellDepends = [ accelerate base utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/accelerate-utility/";
           description = "Utility functions for the Accelerate framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "accuerr" = callPackage
        ({ mkDerivation, base, bifunctors, lens, semigroups, stdenv }:
         mkDerivation {
           pname = "accuerr";
           version = "0.2.0.2";
           sha256 = "4f6a8230d2ad3bc274dea234208ce4f5282e2d9413a5da1f5505fc55a2fa9a36";
           libraryHaskellDepends = [ base bifunctors lens semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/accuerr";
           description = "Data type like Either but with accumulating error type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ace" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
         , data-default, parsec, stdenv, text
         }:
         mkDerivation {
           pname = "ace";
           version = "0.6";
           sha256 = "d3472b659d26cf7ea9afa207ec24ac0314598de997722e636e9bfa24b3900738";
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup data-default parsec text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Attempto Controlled English parser and printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "acid-state" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, containers
         , directory, exceptions, extensible-exceptions, extra, fetchgit
         , filelock, filepath, hashable, mtl, network, safecopy, stdenv, stm
         , template-haskell, th-expand-syns, time-units, unix
         , unordered-containers
         }:
         mkDerivation {
           pname = "acid-state";
           version = "0.14.2";
           src = fetchgit {
             url = "https://github.com/serokell/acid-state.git";
             sha256 = "0gxy0n08mqq09c2gyzpp6fdxz13lx9xfr6ir2dwr705i3b0k4j8b";
             rev = "1049699df411c9584523ba7424cba1f3f82ac419";
           };
           libraryHaskellDepends = [
             array base bytestring cereal containers directory exceptions
             extensible-exceptions extra filelock filepath hashable mtl network
             safecopy stm template-haskell th-expand-syns time-units unix
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acid-state/acid-state";
           description = "Add ACID guarantees to any serializable Haskell data structure";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "action-permutations" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "action-permutations";
           version = "0.0.0.1";
           sha256 = "a419ee59f996e5305afd96336a561a9fcf26844362eaa32ab6b747a8f9fd1466";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Execute a set of actions (e.g. parsers) in each possible order";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "active" = callPackage
        ({ mkDerivation, base, lens, linear, semigroupoids, semigroups
         , stdenv, vector
         }:
         mkDerivation {
           pname = "active";
           version = "0.2.0.13";
           sha256 = "5d9a141d58bcefbf699ed233a22309ded671c25ed64bcee11a663d00731280fb";
           revision = "3";
           editedCabalFile = "0jm8kkqa5k9nppis3jdx11nmds6w0x62rmnv5bn5q3b75llhnlc1";
           libraryHaskellDepends = [
             base lens linear semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Abstractions for animation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ad" = callPackage
        ({ mkDerivation, array, base, Cabal, cabal-doctest, comonad
         , containers, data-reify, erf, free, nats, reflection, semigroups
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "ad";
           version = "4.3.5";
           sha256 = "9c5e754b1f0ff83490bcc30f5dfa8504de5a34ab8f7be03ac232882940dc8d60";
           revision = "2";
           editedCabalFile = "0307kxvxzfsp9jlkhj4rcc6rncndq2ih87b8vn9h55fzii868j74";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             array base comonad containers data-reify erf free nats reflection
             semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ad";
           description = "Automatic Differentiation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "adjunctions" = callPackage
        ({ mkDerivation, array, base, comonad, containers, contravariant
         , distributive, free, mtl, profunctors, semigroupoids, semigroups
         , stdenv, tagged, transformers, transformers-compat, void
         }:
         mkDerivation {
           pname = "adjunctions";
           version = "4.3";
           sha256 = "b948a14fafe8857f451ae3e474f5264c907b5a2d841d52bf78249ae4749c3ecc";
           revision = "1";
           editedCabalFile = "1079l9szyr7ybi9wcvv1vjsjfrqirkn9z3j7dann8vbk81a4z37q";
           libraryHaskellDepends = [
             array base comonad containers contravariant distributive free mtl
             profunctors semigroupoids semigroups tagged transformers
             transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/adjunctions/";
           description = "Adjunctions and representable functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "adler32" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "adler32";
           version = "0.1.1.0";
           sha256 = "578cb9ea7451dc905a22de15e46f8d6fc27f76e4c6f75352a70ebfe53a6928ec";
           revision = "1";
           editedCabalFile = "087fykdlay78g9zg1w6a36xwd4pizcyi5wqzvj7cw5sh6gq493km";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-adler32";
           description = "An implementation of Adler-32, supporting rolling checksum operation";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "aern2-mp" = callPackage
        ({ mkDerivation, base, convertible, hmpfr, hspec, integer-gmp
         , integer-logarithms, lens, mixed-types-num, QuickCheck, regex-tdfa
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "aern2-mp";
           version = "0.1.2.0";
           sha256 = "9de6632ad943c044115e713f6c87078f33c37c6bde36ff472a5142a96cf53c8c";
           revision = "1";
           editedCabalFile = "09b92kf60m4v0xn2nm9h8wkg8wr7dc1na5c9mg2lk3kplf60sfvk";
           libraryHaskellDepends = [
             base convertible hmpfr hspec integer-gmp integer-logarithms lens
             mixed-types-num QuickCheck regex-tdfa template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michalkonecny/aern2";
           description = "Multi-precision floats via MPFR";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aern2-real" = callPackage
        ({ mkDerivation, aern2-mp, aeson, base, bytestring, containers
         , convertible, hspec, lens, mixed-types-num, QuickCheck, random
         , stdenv, stm, transformers
         }:
         mkDerivation {
           pname = "aern2-real";
           version = "0.1.1.0";
           sha256 = "25e0428536b401d5a06fd3b169025747663359595b3cfcdb56a042be81d002eb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aern2-mp aeson base bytestring containers convertible hspec lens
             mixed-types-num QuickCheck stm transformers
           ];
           executableHaskellDepends = [
             aern2-mp base mixed-types-num QuickCheck random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michalkonecny/aern2";
           description = "Exact real numbers via Cauchy sequences and MPFR";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson" = callPackage
        ({ mkDerivation, attoparsec, base, base-compat, bytestring
         , containers, deepseq, dlist, ghc-prim, hashable, scientific
         , stdenv, tagged, template-haskell, text, th-abstraction, time
         , time-locale-compat, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "aeson";
           version = "1.2.4.0";
           sha256 = "3401dba4fddb92c8a971f6645b38e2f8a1b286ef7061cd392a1a567640bbfc9b";
           libraryHaskellDepends = [
             attoparsec base base-compat bytestring containers deepseq dlist
             ghc-prim hashable scientific tagged template-haskell text
             th-abstraction time time-locale-compat unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/aeson";
           description = "Fast JSON parsing and encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-better-errors" = callPackage
        ({ mkDerivation, aeson, base, bytestring, dlist, mtl, scientific
         , stdenv, text, transformers, transformers-compat
         , unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "aeson-better-errors";
           version = "0.9.1.0";
           sha256 = "68f001bf055ec7b755d91019f2a0ef136307d157a231acddad6b4cc561f67327";
           libraryHaskellDepends = [
             aeson base bytestring dlist mtl scientific text transformers
             transformers-compat unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdgarrood/aeson-better-errors";
           description = "Better error messages when decoding JSON values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-casing" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "aeson-casing";
           version = "0.1.0.5";
           sha256 = "cfec563dc6822f035858a7190153d8818c200be565806b43b70f198bf5410577";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           description = "Tools to change the formatting of field names in Aeson instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-compat" = callPackage
        ({ mkDerivation, aeson, attoparsec, attoparsec-iso8601, base
         , base-compat, bytestring, containers, exceptions, hashable
         , scientific, stdenv, tagged, text, time, time-locale-compat
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-compat";
           version = "0.3.7.1";
           sha256 = "59740dc1e37b08e60abb47f38b87de5b9805611a1b468cd18294d5982a1dcacb";
           libraryHaskellDepends = [
             aeson attoparsec attoparsec-iso8601 base base-compat bytestring
             containers exceptions hashable scientific tagged text time
             time-locale-compat unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/aeson-compat#readme";
           description = "Compatibility layer for aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-diff" = callPackage
        ({ mkDerivation, aeson, base, bytestring, edit-distance-vector
         , hashable, mtl, optparse-applicative, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-diff";
           version = "1.1.0.4";
           sha256 = "87f1e4f9462ddb04d67c517a8810f6769cd628ee792868c490afee1d2b7c8b0e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring edit-distance-vector hashable mtl scientific
             text unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thsutton/aeson-diff";
           description = "Extract and apply patches to JSON documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-extra" = callPackage
        ({ mkDerivation, aeson, aeson-compat, attoparsec
         , attoparsec-iso8601, base, base-compat, bytestring, containers
         , deepseq, exceptions, hashable, parsec, recursion-schemes
         , scientific, stdenv, template-haskell, text, these, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-extra";
           version = "0.4.1.0";
           sha256 = "1e35bda18aca4f847178606e4cc4d24001bd0bae5c40e2934c039b64979f9085";
           libraryHaskellDepends = [
             aeson aeson-compat attoparsec attoparsec-iso8601 base base-compat
             bytestring containers deepseq exceptions hashable parsec
             recursion-schemes scientific template-haskell text these time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/aeson-extra#readme";
           description = "Extra goodies for aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-generic-compat" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "aeson-generic-compat";
           version = "0.0.1.1";
           sha256 = "ba46aa8e57d79c5e865d0224e8642c20facc59a4d2a9fba3b669928ec8835bb5";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           description = "Compatible generic class names of Aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-injector" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, deepseq, hashable, lens
         , servant-docs, stdenv, swagger2, text, unordered-containers
         }:
         mkDerivation {
           pname = "aeson-injector";
           version = "1.1.0.0";
           sha256 = "8ea78f3cf94be2e50654ba1ff8110c528f710f648e1fa10c621fa6f89f3e74b6";
           libraryHaskellDepends = [
             aeson base bifunctors deepseq hashable lens servant-docs swagger2
             text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Injecting fields into aeson values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-pretty" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
         , cmdargs, scientific, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "aeson-pretty";
           version = "0.8.5";
           sha256 = "dd17e86c64b3fe2efb7a855b27b0e5490e42dc58194ae1809d8b662d4e42a9f9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base-compat bytestring scientific text
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson attoparsec base bytestring cmdargs
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/informatikr/aeson-pretty";
           description = "JSON pretty-printing library and command-line tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-qq" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat
         , haskell-src-meta, parsec, scientific, stdenv, template-haskell
         , text, vector
         }:
         mkDerivation {
           pname = "aeson-qq";
           version = "0.8.2";
           sha256 = "6db252c94601efcb1ce395de0084ccf931a3525339ccdca011a740e7b11cc152";
           libraryHaskellDepends = [
             aeson attoparsec base base-compat haskell-src-meta parsec
             scientific template-haskell text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/aeson-qq#readme";
           description = "JSON quasiquoter for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aeson-typescript" = callPackage
        ({ mkDerivation, aeson, base, containers, interpolate, mtl, stdenv
         , template-haskell, text, th-abstraction, unordered-containers
         }:
         mkDerivation {
           pname = "aeson-typescript";
           version = "0.1.0.3";
           sha256 = "0b0054ee94039a982cd8e2a5de84ebec7d3b44c0ba315e3c8e8cdd099d11ba38";
           libraryHaskellDepends = [
             aeson base containers interpolate mtl template-haskell text
             th-abstraction unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/codedownio/aeson-typescript#readme";
           description = "Generate TypeScript definition files from your ADTs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-utils" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, scientific
         , stdenv, text
         }:
         mkDerivation {
           pname = "aeson-utils";
           version = "0.3.0.2";
           sha256 = "71814b1be8849f945395eb81217a2ad464f2943134c50c09afd8a3126add4b1f";
           revision = "5";
           editedCabalFile = "0v6p99nb8s61lc07a93xv94lfb4ybmv8aiqjq77lncs6qgpp97xf";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring scientific text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Utilities for working with Aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "aeson-yak" = callPackage
        ({ mkDerivation, aeson, base, stdenv }:
         mkDerivation {
           pname = "aeson-yak";
           version = "0.1.1.3";
           sha256 = "af4355bc315a152592e9c06f5cc41bdb5ce7b236d85fe572a292c6bac02faa74";
           libraryHaskellDepends = [ aeson base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tejon/aeson-yak";
           description = "Handle JSON that may or may not be a list, or exist";
           license = stdenv.lib.licenses.mit;
         }) {};
      "airship" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, blaze-builder
         , bytestring, bytestring-trie, case-insensitive, containers
         , cryptohash, directory, either, filepath, http-date, http-media
         , http-types, lifted-base, microlens, mime-types, mmorph
         , monad-control, mtl, network, old-locale, random, stdenv, text
         , time, transformers, transformers-base, unix, unordered-containers
         , wai, wai-extra
         }:
         mkDerivation {
           pname = "airship";
           version = "0.9.3";
           sha256 = "e254837d9d667fcb70a2767ad486dfe2b8eb6577f3676abc3ec82227aa6d345a";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring blaze-builder bytestring
             bytestring-trie case-insensitive containers cryptohash directory
             either filepath http-date http-media http-types lifted-base
             microlens mime-types mmorph monad-control mtl network old-locale
             random text time transformers transformers-base unix
             unordered-containers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/helium/airship/";
           description = "A Webmachine-inspired HTTP library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "alarmclock" = callPackage
        ({ mkDerivation, async, base, clock, stdenv, stm, time
         , unbounded-delays
         }:
         mkDerivation {
           pname = "alarmclock";
           version = "0.4.0.3";
           sha256 = "b66f5b18b0efc4471b32704dd7bdb650d09629c5bc006e54f4354b1265650f5e";
           libraryHaskellDepends = [
             async base clock stm time unbounded-delays
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/davecturner/alarmclock";
           description = "Wake up and perform an action at a certain time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alerta" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, containers
         , data-default, http-api-data, http-client, servant, servant-client
         , servant-client-core, servant-server, stdenv, text, time
         }:
         mkDerivation {
           pname = "alerta";
           version = "0.1.0.6";
           sha256 = "d5b5553678adca16770e45fa8d0f9e8378b31962ba8dd1baab600af6d035e6b5";
           libraryHaskellDepends = [
             aeson aeson-pretty base containers data-default http-api-data
             http-client servant servant-client servant-client-core
             servant-server text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mjhopkins/alerta-client";
           description = "Bindings to the alerta REST API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alerts" = callPackage
        ({ mkDerivation, base, blaze-html, stdenv, text }:
         mkDerivation {
           pname = "alerts";
           version = "0.1.0.0";
           sha256 = "52418ed3abfff15e802506e5fb45f56d38eee020cb01af3f0acfe163c470ca68";
           libraryHaskellDepends = [ base blaze-html text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alx741/alerts#readme";
           description = "Alert messages for web applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alex" = callPackage
        ({ mkDerivation, array, base, containers, directory, happy
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "alex";
           version = "3.2.3";
           sha256 = "1a63791417b3e6e36e8b79849317beeaf9ea09efa21bea021c2347b49266212e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base containers directory QuickCheck
           ];
           executableToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/alex/";
           description = "Alex is a tool for generating lexical analysers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "algebraic-graphs" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "algebraic-graphs";
           version = "0.0.5";
           sha256 = "fd7bfc709966c4999e2376376863b894da0c921530ff9e9f71c4f273f201c510";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snowleopard/alga";
           description = "A library for algebraic graph construction and transformation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "alsa-core" = callPackage
        ({ mkDerivation, alsaLib, base, extensible-exceptions, stdenv }:
         mkDerivation {
           pname = "alsa-core";
           version = "0.5.0.1";
           sha256 = "eb50495ef05ecc7c06a0147da7f0d3efde832a44d23caaf5172dc114882270ab";
           libraryHaskellDepends = [ base extensible-exceptions ];
           libraryPkgconfigDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/ALSA";
           description = "Binding to the ALSA Library API (Exceptions)";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "i686-linux" "x86_64-linux" ];
         }) {inherit (pkgs) alsaLib;};
      "alsa-mixer" = callPackage
        ({ mkDerivation, alsa-core, alsaLib, base, c2hs, stdenv, unix }:
         mkDerivation {
           pname = "alsa-mixer";
           version = "0.2.0.3";
           sha256 = "f76deb4081a2ce4a765e78a017b2e13c073d2aaa5a2d2652fd5e635dd169cf8d";
           libraryHaskellDepends = [ alsa-core base unix ];
           librarySystemDepends = [ alsaLib ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ttuegel/alsa-mixer";
           description = "Bindings to the ALSA simple mixer API";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "alsa-pcm" = callPackage
        ({ mkDerivation, alsa-core, alsaLib, array, base
         , extensible-exceptions, sample-frame, stdenv, storable-record
         }:
         mkDerivation {
           pname = "alsa-pcm";
           version = "0.6.0.4";
           sha256 = "9aae1379903b8445073f8a2b6ccf86b904b4045247747516530a165a3f76ca2a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             alsa-core array base extensible-exceptions sample-frame
             storable-record
           ];
           libraryPkgconfigDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/ALSA";
           description = "Binding to the ALSA Library API (PCM audio)";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "alsa-seq" = callPackage
        ({ mkDerivation, alsa-core, alsaLib, array, base, bytestring
         , data-accessor, enumset, extensible-exceptions, poll, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "alsa-seq";
           version = "0.6.0.7";
           sha256 = "06cda1e24993aaf0c3592b51a613cf1e187eea603dd77ad3a129a8a7b1e0b778";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             alsa-core array base bytestring data-accessor enumset
             extensible-exceptions poll transformers utility-ht
           ];
           libraryPkgconfigDepends = [ alsaLib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/ALSA";
           description = "Binding to the ALSA Library API (MIDI sequencer)";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) alsaLib;};
      "alternative-vector" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "alternative-vector";
           version = "0.0.0";
           sha256 = "42474bc708dbc81e13a7850887cefc2596db47cb07423610094cd994f754c7b1";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/alternative-vector#readme";
           description = "Use vectors instead of lists for many and some";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "alternators" = callPackage
        ({ mkDerivation, base, mmorph, stdenv, transformers }:
         mkDerivation {
           pname = "alternators";
           version = "0.1.2.0";
           sha256 = "afe401a4a5ccef58a503f31fd9cf0fdc9618333772e9a80fb5a2696b22f422a6";
           libraryHaskellDepends = [ base mmorph transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/alternators#readme";
           description = "Handy functions when using transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "amazonka" = callPackage
        ({ mkDerivation, amazonka-core, base, bytestring, conduit
         , conduit-extra, directory, exceptions, http-conduit, ini, mmorph
         , monad-control, mtl, resourcet, retry, stdenv, text, time
         , transformers, transformers-base, transformers-compat
         }:
         mkDerivation {
           pname = "amazonka";
           version = "1.5.0";
           sha256 = "fc1aa4ba13add06a6b8f77d0bc6e9bc03f2328605393bb2f891036cf6758ae3c";
           revision = "1";
           editedCabalFile = "0v4wfwrm0zjzm1g2gw9qi521hlvzg26dm79x03zy8i2aqg8rqgri";
           libraryHaskellDepends = [
             amazonka-core base bytestring conduit conduit-extra directory
             exceptions http-conduit ini mmorph monad-control mtl resourcet
             retry text time transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Comprehensive Amazon Web Services SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-apigateway" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-apigateway";
           version = "1.5.0";
           sha256 = "249102fb489b137ff780eef6cd792a7558d3699ccf30d0b449244a4879b855f9";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon API Gateway SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-application-autoscaling" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-application-autoscaling";
           version = "1.5.0";
           sha256 = "d6d52f98c775a7017f037cc2eb87407851f83a0e63d342b432c459c7d3fc9947";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Application Auto Scaling SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-appstream" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-appstream";
           version = "1.5.0";
           sha256 = "6c45433f252e08cb9e4b7eacba4095e41917b78c98c1e210dc5f8d8dccefe515";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon AppStream SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-autoscaling" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-autoscaling";
           version = "1.5.0";
           sha256 = "734734869e469923927dd6ef8015f64e593c149544c3b56b1eace9924bf8b7ca";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Auto Scaling SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-budgets" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-budgets";
           version = "1.5.0";
           sha256 = "0a99ee474fa0fd0838ff89a8b07291512c5e986a72cd1b932a8892c72319d1cf";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Budgets SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-certificatemanager" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-certificatemanager";
           version = "1.5.0";
           sha256 = "7816c83cbabf192f9e30ca5fd3d2ec217149d5fce60192764c38cf3f934edc42";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Certificate Manager SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudformation" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudformation";
           version = "1.5.0";
           sha256 = "71d71ee28e0a5616f2d779a674d4bf7ce48e1e93a30a66b0e0291ae1f8ed83e8";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudFormation SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudfront" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudfront";
           version = "1.5.0";
           sha256 = "6025ac536ad52017cff5c39bda9c5e5e36773f1a77954bb944326525a9285115";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudFront SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudhsm" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudhsm";
           version = "1.5.0";
           sha256 = "a5d787f20bb59f714a6a26faed3ee1e921bc46b571d2d84fb09c87706da38498";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudHSM SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudsearch" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudsearch";
           version = "1.5.0";
           sha256 = "2c81ea7616815c7d2ae5d9381d1cf05fd728bb5676be5eefc0bc887ca6f8dddf";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudSearch SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudsearch-domains" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudsearch-domains";
           version = "1.5.0";
           sha256 = "306beb51bdaefd3511dcadde27f1999053233f70196d9f6a605b46fae50df44f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudSearch Domain SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudtrail" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudtrail";
           version = "1.5.0";
           sha256 = "08805257c6c4ef47ded4413975fff455a8b1656c6b4671217a5b2c686c8104d4";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudTrail SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudwatch" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudwatch";
           version = "1.5.0";
           sha256 = "4530f10c056153070f1fa177e2304622da928846b2f9e624afd02997224d7b58";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudWatch SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudwatch-events" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudwatch-events";
           version = "1.5.0";
           sha256 = "172ccc6e305fb6f92ed4965b936593ab8b7575b7e91d2ef29cb7fc75e4f68060";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudWatch Events SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cloudwatch-logs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cloudwatch-logs";
           version = "1.5.0";
           sha256 = "d9ca3dd12e6482a4fe851c41fdfad3bb49c8cab58b483436770c48de17051016";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CloudWatch Logs SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-codebuild" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-codebuild";
           version = "1.5.0";
           sha256 = "4164938a44ea35a3fbd9ef3d83f1bbc2a5a6ae2210882ede5d22b1e858ce05cd";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CodeBuild SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-codecommit" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-codecommit";
           version = "1.5.0";
           sha256 = "c2df8d30d7cb6987afb9d13dc8362733d8f5ef36fbe86a04170aec109580247b";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CodeCommit SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-codedeploy" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-codedeploy";
           version = "1.5.0";
           sha256 = "48a3881297eefe4790e4b3808f3492a7662e73003eecbed02acea9a1fb930523";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CodeDeploy SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-codepipeline" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-codepipeline";
           version = "1.5.0";
           sha256 = "57a5a1b8918e18256ec2a4344df06c8b141a4a03bab00f6c87e7961bf6632949";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon CodePipeline SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cognito-identity" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cognito-identity";
           version = "1.5.0";
           sha256 = "a7e6e631325cbc2d218a24bf37b9e139ac57b41a11781bf2134b42f9deb78322";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Cognito Identity SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cognito-idp" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cognito-idp";
           version = "1.5.0";
           sha256 = "7c7cb958a7cf3164a1c034e3a58f113808ad6e2bcfec2a1a9f1560e7278354a3";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Cognito Identity Provider SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-cognito-sync" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-cognito-sync";
           version = "1.5.0";
           sha256 = "ea2d75877be42efa9330c2e9501c3daf3ec6594ddbf6d54ab7f73067d3447678";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Cognito Sync SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-config" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-config";
           version = "1.5.0";
           sha256 = "6359b32c44e66773b6e61e29cbe0a3000f5035de26a4d4e8d46364375ce3d1d2";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Config SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-core" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bifunctors, bytestring
         , case-insensitive, conduit, conduit-extra, cryptonite, deepseq
         , exceptions, hashable, http-conduit, http-types, lens, memory, mtl
         , resourcet, scientific, semigroups, stdenv, tagged, text, time
         , transformers, transformers-compat, unordered-containers
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "amazonka-core";
           version = "1.5.0";
           sha256 = "d3f6f9ace5c18680d909d72ca86ba617999267c8e91527a7b658a63b666d759c";
           revision = "2";
           editedCabalFile = "1y1ian4wimsbng4c3ix8jd3pn3b0xhydzwv87blck4sgl41w83vl";
           libraryHaskellDepends = [
             aeson attoparsec base bifunctors bytestring case-insensitive
             conduit conduit-extra cryptonite deepseq exceptions hashable
             http-conduit http-types lens memory mtl resourcet scientific
             semigroups tagged text time transformers transformers-compat
             unordered-containers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Core data types and functionality for Amazonka libraries";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-datapipeline" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-datapipeline";
           version = "1.5.0";
           sha256 = "614a13b1d8a582c886b8880cfc915dee6a94fe50879afc33785667c48773163a";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Data Pipeline SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-devicefarm" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-devicefarm";
           version = "1.5.0";
           sha256 = "0ee3f07808755407ccc042a5cef6874d88872640b37a1010758840aa54801bb1";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Device Farm SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-directconnect" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-directconnect";
           version = "1.5.0";
           sha256 = "2060b96b398214fbb26ee03ac5cd3e5bd20b4d960fb5ecb1c2fec7f140e86b92";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Direct Connect SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-discovery" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-discovery";
           version = "1.5.0";
           sha256 = "a620e2b0f5a3ef62cb6e7922a2fb142c7155597f3729d5943054a6be93cf9354";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Application Discovery Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-dms" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-dms";
           version = "1.5.0";
           sha256 = "02d2e651c2c87736f5e9925235110f86a2fdb734ae040d713496b43cbda734b5";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Database Migration Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-ds" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ds";
           version = "1.5.0";
           sha256 = "92c5b5c1abac4052ce917d6f138a1ade37991b236f4474329794668eabb42957";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Directory Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-dynamodb" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-dynamodb";
           version = "1.5.0";
           sha256 = "c8022fdcd22a3302d09ec8016a3a2357abecec94600354397bd77c1400c321c8";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon DynamoDB SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-dynamodb-streams" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-dynamodb-streams";
           version = "1.5.0";
           sha256 = "21ceb7b12186fd6a8eed54e1c61865096df9b783407ea39ced52bbda4f950049";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon DynamoDB Streams SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-ec2" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ec2";
           version = "1.5.0";
           sha256 = "b00d0d47d83766d9927657a31f11f28288ce6892e55d919c24cac09625e21f41";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Compute Cloud SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-ecr" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ecr";
           version = "1.5.0";
           sha256 = "68bd790b4dd2568fce08ba992382951acc7f0a7dc1a86a5ba10329c4d64fca58";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon EC2 Container Registry SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-ecs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ecs";
           version = "1.5.0";
           sha256 = "45eea9bc27ec26834125cc4316bfcf825630739dc00d5da6dcf69e8674b3a222";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon EC2 Container Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-efs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-efs";
           version = "1.5.0";
           sha256 = "45064be76d9ac2997f781a8d51b2359c2e86b4371bc3062289ea091011852f2d";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic File System SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-elasticache" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elasticache";
           version = "1.5.0";
           sha256 = "e5e4c41e7e290b64f1f29ef8cef1d14769fca58a00353239070044bb26880116";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon ElastiCache SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-elasticbeanstalk" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elasticbeanstalk";
           version = "1.5.0";
           sha256 = "74652cf68d5d937acd4aec4c176a5d8cdefff5248520e1a7338ba8d38fd360b3";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Beanstalk SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-elasticsearch" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elasticsearch";
           version = "1.5.0";
           sha256 = "17f2e6932e69726118b93532feed61aef21f0a02bf946aa58adf74698076d4d7";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elasticsearch Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-elastictranscoder" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elastictranscoder";
           version = "1.5.0";
           sha256 = "a10466246c5dd1f30ce680bb55b5d2754f27ec87a2384d646166a9e72bdef38b";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Transcoder SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-elb" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elb";
           version = "1.5.0";
           sha256 = "0c6c340d02b3b16f2097824cf0d11a27402d52869af3b6d69e47922ba3de54fe";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Load Balancing SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-elbv2" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-elbv2";
           version = "1.5.0";
           sha256 = "b063c7c71e2cbd027572c3777432a7404ec24d0957cc88ac8473b5ca7f03d858";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic Load Balancing SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-emr" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-emr";
           version = "1.5.0";
           sha256 = "5c5b92255086d6c50d99d82ac62d57c78ebbc1a591e78799d3091c342b61bb60";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Elastic MapReduce SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-gamelift" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-gamelift";
           version = "1.5.0";
           sha256 = "b87b1cdb85d6dba0d2d06579324c2b27fa1796a4e0bfc18a2107cff9b2c574da";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon GameLift SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-glacier" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-glacier";
           version = "1.5.0";
           sha256 = "024793c865d9dd67da07816bb5227f0d3ab185aa571095ca1cd9a402ac9730fb";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Glacier SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-health" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-health";
           version = "1.5.0";
           sha256 = "136243654071707eac190b2c646e04dd2913f309c6fb68fa6b6002a30252141f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Health APIs and Notifications SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-iam" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-iam";
           version = "1.5.0";
           sha256 = "9a5d66048d36d1fef69168eaf122a6ec16c3602f09cc4c4f2b0ec2252681bcee";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Identity and Access Management SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-importexport" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-importexport";
           version = "1.5.0";
           sha256 = "3469b32680a2f6e8c20c3b3822ac358141d1eba81cef2c4197536d00cc34d569";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Import/Export SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-inspector" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-inspector";
           version = "1.5.0";
           sha256 = "66d88b2a2e4b043f396b84778bf440c35baf7b1c53f51749a7afa1e28d2bfa46";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Inspector SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-iot" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-iot";
           version = "1.5.0";
           sha256 = "9d36c1b6841648d1e5c9ab2c8ef5297bcbc0be9562586bbf196139b7fbdecd54";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon IoT SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-iot-dataplane" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-iot-dataplane";
           version = "1.5.0";
           sha256 = "45701875c5b5c41ea5924ab97b6cae41f373705d45796db04c7eb5799d694310";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon IoT Data Plane SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-kinesis" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-kinesis";
           version = "1.5.0";
           sha256 = "6cd5d697dde3e39ec3930bacabaefe8d116cfe1ff951b3123163e4c7e16abd1d";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Kinesis SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-kinesis-analytics" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-kinesis-analytics";
           version = "1.5.0";
           sha256 = "99e69790c5d42097edc58c80da210ded3a5e2c5284cdd28251496a5ff3faeb1a";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Kinesis Analytics SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-kinesis-firehose" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-kinesis-firehose";
           version = "1.5.0";
           sha256 = "7f80feb9c546c8e4b907eaf9dc4b89368a3f746c10038140b1d57f55e32135c2";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Kinesis Firehose SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-kms" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-kms";
           version = "1.5.0";
           sha256 = "a44ec473ba44f1a90e9828d3310bb9068aca18fb75510e7da560705b3ec05752";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Key Management Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-lambda" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-lambda";
           version = "1.5.0";
           sha256 = "bde6519b04db0ec4146ddae76db997b714feb1d406221a2b4ffacf3bd1289c12";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Lambda SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-lightsail" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-lightsail";
           version = "1.5.0";
           sha256 = "7bdacf134fcb4acec69bc6906c889b29137a166c5e331ba6bbd5cefa7ef28bd9";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Lightsail SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-marketplace-analytics" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-marketplace-analytics";
           version = "1.5.0";
           sha256 = "8013a28ef701b2e10d33faac905a03095aa3eb9712f0bfa6a3e089a09914343a";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Marketplace Commerce Analytics SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-marketplace-metering" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-marketplace-metering";
           version = "1.5.0";
           sha256 = "d3667751d6cdd7bbbbecff3d863cd08424d7c2abce6504cfc7dc425673cb37a9";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Marketplace Metering SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-ml" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ml";
           version = "1.5.0";
           sha256 = "984badaa88a087799117c073fba500e5e1da3d23e08321780b5cf014a52d7751";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Machine Learning SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-opsworks" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-opsworks";
           version = "1.5.0";
           sha256 = "06af7f975198f386d8a4a2220f487b631bd0ddd52ee60d02ee216cd5bdf99ac1";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon OpsWorks SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-opsworks-cm" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-opsworks-cm";
           version = "1.5.0";
           sha256 = "8593c80d1dabb1526d0bc234d028f20e270884b5bf032504a85bc11b1a47c9f1";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon OpsWorks for Chef Automate SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-pinpoint" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-pinpoint";
           version = "1.5.0";
           sha256 = "963fa4d6d5c41561add01f7adee2f83813d786fb7cfb77755bf365eebc294552";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Pinpoint SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-polly" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-polly";
           version = "1.5.0";
           sha256 = "f330c0de365543271bd481d0d74933a921fd8db05fe8544f30f49793d712b585";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Polly SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-rds" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-rds";
           version = "1.5.0";
           sha256 = "b6b7147e3108d49fa49cd5a476496944f31d5fe8a8aa45de593c05d91c022647";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Relational Database Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-redshift" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-redshift";
           version = "1.5.0";
           sha256 = "1e4f00c724ce597686b3104f236bb607fbd45214d364d4eb00846f0248af84d2";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Redshift SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-rekognition" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-rekognition";
           version = "1.5.0";
           sha256 = "2a918d96928ab7d7a10e08d7f2e6c04cf791bc84958d77b80807d8a120703fea";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Rekognition SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-route53" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv, text }:
         mkDerivation {
           pname = "amazonka-route53";
           version = "1.5.0";
           sha256 = "a421b26083991680bae75f67c8c98b353c8432d39cc67f79654847a50bb15469";
           libraryHaskellDepends = [ amazonka-core base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Route 53 SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-route53-domains" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-route53-domains";
           version = "1.5.0";
           sha256 = "83c2f5596dbaf896590aa5b138be71293ee96ba886cdd5401397f4601b14063b";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Route 53 Domains SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-s3" = callPackage
        ({ mkDerivation, amazonka-core, base, lens, stdenv, text }:
         mkDerivation {
           pname = "amazonka-s3";
           version = "1.5.0";
           sha256 = "2f6bf829b143045d59a29d3aa4c6b65514e741162cd919d60d53bc806c73650f";
           libraryHaskellDepends = [ amazonka-core base lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Storage Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-sdb" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sdb";
           version = "1.5.0";
           sha256 = "43f907d9206d980fedacdeca4e375f681c742109bcd1c67aea0b099f094fefe5";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon SimpleDB SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-servicecatalog" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-servicecatalog";
           version = "1.5.0";
           sha256 = "2cf95f868368335a4015a085aba7515662f8012586faaaef5923c1969c027726";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Service Catalog SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-ses" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ses";
           version = "1.5.0";
           sha256 = "cea4d2d7a04c84b237fe3cd4cd9dfc80e18f9b5fa4089f35151fe250202269ad";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Email Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-shield" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-shield";
           version = "1.5.0";
           sha256 = "d8ce8bc1b42438907a2178b88aacde2252ca90eacb8940def35924daf10a85fb";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Shield SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-sms" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sms";
           version = "1.5.0";
           sha256 = "0966ff88e2d686b0749bdda729959469b0915cdc604d73af0b79f2041be10b7d";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Server Migration Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-snowball" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-snowball";
           version = "1.5.0";
           sha256 = "2451536d632559274a315fa861929199244060bcf8291dee1146ca98e2c09f8f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Import/Export Snowball SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-sns" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sns";
           version = "1.5.0";
           sha256 = "81b4ceac3519f19b8c620d7c6018a279a6eb78f20dcca8ebf13a3456f4507335";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Notification Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-sqs" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sqs";
           version = "1.5.0";
           sha256 = "06fc91d8c46e0e87a505ba7f4d217618f6a6ecc33922e5849dd7d87054c9adc6";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Queue Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-ssm" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-ssm";
           version = "1.5.0";
           sha256 = "58667e2e4ecf94291da33a1cccb283977442d56047f73d8c217d3019c06efff4";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Systems Manager (SSM) SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-stepfunctions" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-stepfunctions";
           version = "1.5.0";
           sha256 = "e20b83c1b94218191dea65f3019ffad3aa1f639e82b0cca7c821eb412bc27177";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Step Functions SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-storagegateway" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-storagegateway";
           version = "1.5.0";
           sha256 = "0f269f4269d78f8fdba2ca741c69f09436626c05b629821746a0c21515f36429";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Storage Gateway SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-sts" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-sts";
           version = "1.5.0";
           sha256 = "1ee7da85be6da495b7ab877e5079821ad177a300acf3e18249fe220452048f30";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Security Token Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-support" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-support";
           version = "1.5.0";
           sha256 = "04dda81e97dbfe98e9c1dd7c2dd5acb75ac55672e8b07757a65748c3cdd1a1d9";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Support SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-swf" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-swf";
           version = "1.5.0";
           sha256 = "441193b1ff65fc414379deae5514e0dbd1801d82bf19f857b1816e9b566bd125";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon Simple Workflow Service SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-test" = callPackage
        ({ mkDerivation, aeson, amazonka-core, base, bifunctors, bytestring
         , case-insensitive, conduit, conduit-extra, groom, http-client
         , http-types, process, resourcet, stdenv, tasty, tasty-hunit
         , template-haskell, temporary, text, time, unordered-containers
         , yaml
         }:
         mkDerivation {
           pname = "amazonka-test";
           version = "1.5.0";
           sha256 = "47e721ed18df6e89ee7efd13275501db262372f0737dbc184c860fa33ea91808";
           libraryHaskellDepends = [
             aeson amazonka-core base bifunctors bytestring case-insensitive
             conduit conduit-extra groom http-client http-types process
             resourcet tasty tasty-hunit template-haskell temporary text time
             unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Common functionality for Amazonka library test-suites";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-waf" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-waf";
           version = "1.5.0";
           sha256 = "8a2591b9ce3c0965aea5d44fa536753b34cde6c22717c9b99b16dae10430626f";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon WAF SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-workspaces" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-workspaces";
           version = "1.5.0";
           sha256 = "733e7105cb1200b30885dd20121e000c0364cab47a7440172817c8c957ed5ece";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon WorkSpaces SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amazonka-xray" = callPackage
        ({ mkDerivation, amazonka-core, base, stdenv }:
         mkDerivation {
           pname = "amazonka-xray";
           version = "1.5.0";
           sha256 = "f3819af0bfa70d5058c40e6254920499ec8ca4cccdc20d0f738ea24401453ac5";
           libraryHaskellDepends = [ amazonka-core base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/amazonka";
           description = "Amazon X-Ray SDK";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "amqp" = callPackage
        ({ mkDerivation, base, binary, bytestring, clock, connection
         , containers, data-binary-ieee754, monad-control, network
         , network-uri, split, stdenv, stm, text, vector, xml
         }:
         mkDerivation {
           pname = "amqp";
           version = "0.18.1";
           sha256 = "4678e2eb976df97e27cacbc4b1feafeb5a1800a9779b0a36666f04804f43e248";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring clock connection containers
             data-binary-ieee754 monad-control network network-uri split stm
             text vector
           ];
           executableHaskellDepends = [ base containers xml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hreinhardt/amqp";
           description = "Client library for AMQP servers (currently only RabbitMQ)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "annotated-wl-pprint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "annotated-wl-pprint";
           version = "0.7.0";
           sha256 = "0c262d7fe13a9a50216438ec882c13e25f31236b886a5692e3c35b85cd773d18";
           revision = "1";
           editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
           description = "The Wadler/Leijen Pretty Printer, with annotation support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ansi-terminal" = callPackage
        ({ mkDerivation, base, colour, stdenv }:
         mkDerivation {
           pname = "ansi-terminal";
           version = "0.7.1.1";
           sha256 = "6fc87697dfff772f7fbb4fe49e29c366b184f9ad288520831a9e0b572aa554fc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base colour ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/ansi-terminal";
           description = "Simple ANSI terminal support, with Windows compatibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ansi-wl-pprint" = callPackage
        ({ mkDerivation, ansi-terminal, base, stdenv }:
         mkDerivation {
           pname = "ansi-wl-pprint";
           version = "0.6.8.2";
           sha256 = "a630721bd57678c3bfeb6c703f8249e434cbf85f40daceec4660fb8c6725cb3e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ ansi-terminal base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ansi-wl-pprint";
           description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ansigraph" = callPackage
        ({ mkDerivation, ansi-terminal, base, stdenv }:
         mkDerivation {
           pname = "ansigraph";
           version = "0.3.0.5";
           sha256 = "2e8dcf6b182c0b0608f515582b780b7b9cf73a63ec8d1f4bf9ce4b3063397a0e";
           libraryHaskellDepends = [ ansi-terminal base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BlackBrane/ansigraph";
           description = "Terminal-based graphing via ANSI and Unicode";
           license = stdenv.lib.licenses.mit;
         }) {};
      "apecs" = callPackage
        ({ mkDerivation, async, base, containers, mtl, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "apecs";
           version = "0.2.4.7";
           sha256 = "1ad954536d6ed1c7f576c8bfd7150d9e69e6e1aa6c19dfe0691f21230a061d43";
           libraryHaskellDepends = [
             async base containers mtl template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonascarpay/apecs#readme";
           description = "A fast ECS for game engine programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "api-field-json-th" = callPackage
        ({ mkDerivation, aeson, base, lens, split, stdenv, template-haskell
         , text
         }:
         mkDerivation {
           pname = "api-field-json-th";
           version = "0.1.0.2";
           sha256 = "b8d49c3869bc8104539c43d5544ed2271d1e68a963440d781ee71d2252b0f724";
           libraryHaskellDepends = [
             aeson base lens split template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nakaji-dayo/api-field-json-th";
           description = "option of aeson's deriveJSON";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "app-settings" = callPackage
        ({ mkDerivation, base, containers, directory, mtl, parsec, stdenv
         , text
         }:
         mkDerivation {
           pname = "app-settings";
           version = "0.2.0.11";
           sha256 = "6a14c69aca4e55cf27933475f5ae0ffead3a83f69f4233896eb13c41dccd50b1";
           libraryHaskellDepends = [
             base containers directory mtl parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emmanueltouzery/app-settings";
           description = "A library to manage application settings (INI file-like)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "appar" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "appar";
           version = "0.1.4";
           sha256 = "58ea66abe4dd502d2fc01eecdb0828d5e214704a3c1b33b1f8b33974644c4b26";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A simple applicative parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apply-refact" = callPackage
        ({ mkDerivation, base, containers, directory, filemanip, filepath
         , ghc, ghc-exactprint, mtl, optparse-applicative, process, refact
         , stdenv, syb, temporary, transformers, unix-compat
         }:
         mkDerivation {
           pname = "apply-refact";
           version = "0.4.1.0";
           sha256 = "7c8eb33266ea4d8e3c668aa1f2f322421b78a83456703e2d0749edec79731502";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory filemanip ghc ghc-exactprint mtl process
             refact syb temporary transformers unix-compat
           ];
           executableHaskellDepends = [
             base containers directory filemanip filepath ghc ghc-exactprint mtl
             optparse-applicative process refact syb temporary transformers
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Perform refactorings specified by the refact library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "apportionment" = callPackage
        ({ mkDerivation, base, containers, stdenv, utility-ht }:
         mkDerivation {
           pname = "apportionment";
           version = "0.0.0.2";
           sha256 = "352d9564ffdb01d3312a1087f8badc544b3478185cbc27d4ca29fc1f18c9f82b";
           libraryHaskellDepends = [ base containers utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/apportionment";
           description = "Round a set of numbers while maintaining its sum";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "approximate" = callPackage
        ({ mkDerivation, base, binary, bytes, Cabal, cabal-doctest, cereal
         , comonad, deepseq, ghc-prim, hashable, lens, log-domain, pointed
         , safecopy, semigroupoids, semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "approximate";
           version = "0.3.1";
           sha256 = "d837f716d9e73d68a53a17321f0433dd9ffe71df24d550aed6a34ec1c2ad2ea2";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base binary bytes cereal comonad deepseq ghc-prim hashable lens
             log-domain pointed safecopy semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/approximate/";
           description = "Approximate discrete values and numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "arithmoi" = callPackage
        ({ mkDerivation, array, base, containers, exact-pi, ghc-prim
         , integer-gmp, integer-logarithms, mtl, random, stdenv
         }:
         mkDerivation {
           pname = "arithmoi";
           version = "0.6.0.1";
           sha256 = "15cffd4c0349024fd5649b5f37c14ff0dc9e9177a4808c796a20c45d72291936";
           revision = "3";
           editedCabalFile = "1ah8b17pxa96gdap3sr7872km29lz95bqjwswqzfkirig2njlf9q";
           libraryHaskellDepends = [
             array base containers exact-pi ghc-prim integer-gmp
             integer-logarithms mtl random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cartazio/arithmoi";
           description = "Efficient basic number-theoretic functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "array-memoize" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "array-memoize";
           version = "0.6.0";
           sha256 = "76c88cb3ed04875821a5601f6a1c40f4e15ef8cb36e8a3d4004df956d1db05dc";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Memoization combinators using arrays for finite sub-domains of functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "arrow-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "arrow-extras";
           version = "0.1.0.1";
           sha256 = "c13c3aba839d1ec78a49991fa4038a68c5eb9ef6da61eceb6e68bc3ce0586a6c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/arrow-extras#readme";
           description = "Extra functions for Control.Arrow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "arrow-list" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "arrow-list";
           version = "0.7";
           sha256 = "33f836f23648aa2cea11533f7a9941127c397eecdca105b2084dded9e039d5d8";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/silkapp/arrow-list";
           description = "List arrows for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "arrowp-qq" = callPackage
        ({ mkDerivation, base, containers, data-default, haskell-src-exts
         , haskell-src-exts-util, haskell-src-meta, NoHoed, stdenv
         , template-haskell, transformers, uniplate
         }:
         mkDerivation {
           pname = "arrowp-qq";
           version = "0.2.1.1";
           sha256 = "258ee29e14727d35efa04c682b35a510c09c0ec24f0096e838a786f194d4ac6b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers data-default haskell-src-exts haskell-src-exts-util
             haskell-src-meta NoHoed template-haskell transformers uniplate
           ];
           executableHaskellDepends = [ base haskell-src-exts NoHoed ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/arrowp";
           description = "A preprocessor and quasiquoter for translating arrow notation";
           license = "GPL";
         }) {};
      "arrows" = callPackage
        ({ mkDerivation, base, stdenv, Stream }:
         mkDerivation {
           pname = "arrows";
           version = "0.4.4.1";
           sha256 = "5b104bd8f8fac5ad0fd194088819423302e52c2a796cc99f6d32bbc134bfebe2";
           libraryHaskellDepends = [ base Stream ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/arrows/";
           description = "Arrow classes and transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ascii-progress" = callPackage
        ({ mkDerivation, async, base, concurrent-output, data-default
         , stdenv, time
         }:
         mkDerivation {
           pname = "ascii-progress";
           version = "0.3.3.0";
           sha256 = "7e3fa6b80c09a83c9ba8a0644ef304ca92d65b76383b8dd023ff9f89ebec913e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base concurrent-output data-default time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-ascii-progress";
           description = "A simple progress bar for the console";
           license = stdenv.lib.licenses.mit;
         }) {};
      "asciidiagram" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , FontyFruity, JuicyPixels, lens, linear, mtl, optparse-applicative
         , rasterific-svg, stdenv, svg-tree, text, vector
         }:
         mkDerivation {
           pname = "asciidiagram";
           version = "1.3.3";
           sha256 = "694948f5f408aa7dfcab17ffefb74e413f1d3dacf2c523bfbf9ecaf972645f18";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers FontyFruity JuicyPixels lens linear mtl
             rasterific-svg svg-tree text vector
           ];
           executableHaskellDepends = [
             base bytestring directory filepath FontyFruity JuicyPixels
             optparse-applicative rasterific-svg svg-tree text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty rendering of Ascii diagram into svg or png";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-encoding" = callPackage
        ({ mkDerivation, asn1-types, base, bytestring, hourglass, stdenv }:
         mkDerivation {
           pname = "asn1-encoding";
           version = "0.9.5";
           sha256 = "1e863bfd363f6c3760cc80f2c0d422e17845a9f79fe006030db202ecab5aaf29";
           libraryHaskellDepends = [ asn1-types base bytestring hourglass ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-asn1";
           description = "ASN1 data reader and writer in RAW, BER and DER forms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-parse" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , stdenv
         }:
         mkDerivation {
           pname = "asn1-parse";
           version = "0.9.4";
           sha256 = "c6a328f570c69db73f8d2416f9251e8a03753f90d5d19e76cbe69509a3ceb708";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-asn1";
           description = "Simple monadic parser for ASN1 stream types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "asn1-types" = callPackage
        ({ mkDerivation, base, bytestring, hourglass, memory, stdenv }:
         mkDerivation {
           pname = "asn1-types";
           version = "0.3.2";
           sha256 = "0c571fff4a10559c6a630d4851ba3cdf1d558185ce3dcfca1136f9883d647217";
           libraryHaskellDepends = [ base bytestring hourglass memory ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-asn1-types";
           description = "ASN.1 types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "assert-failure" = callPackage
        ({ mkDerivation, base, pretty-show, stdenv, text }:
         mkDerivation {
           pname = "assert-failure";
           version = "0.1.2.2";
           sha256 = "f69416fd527b4f6933586edfc9ee741a2163c3741471e9b8e46a244495bd4a9d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base pretty-show text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Mikolaj/assert-failure";
           description = "Syntactic sugar improving 'assert' and 'error'";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "astro" = callPackage
        ({ mkDerivation, base, matrix, stdenv, time }:
         mkDerivation {
           pname = "astro";
           version = "0.4.2.0";
           sha256 = "86fdc23f0420d46e5cf65cb657c448a61c9398163c312ecb8b4344925ffd47ae";
           libraryHaskellDepends = [ base matrix time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alexander-ignatyev/astro";
           description = "Amateur astronomical computations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "async";
           version = "2.1.1.1";
           sha256 = "cd83e471466ea6885b2e8fb60f452db3ac3fdf3ea2d6370aa1e071ebc37544e2";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/async";
           description = "Run IO operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-dejafu" = callPackage
        ({ mkDerivation, base, concurrency, exceptions, stdenv }:
         mkDerivation {
           pname = "async-dejafu";
           version = "0.1.3.0";
           sha256 = "d893a14c85af9cb947e3b3298b77c3665112a54cc8876dca8fc08e6871952afd";
           libraryHaskellDepends = [ base concurrency exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Run MonadConc operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-extra" = callPackage
        ({ mkDerivation, async, base, deepseq, split, stdenv }:
         mkDerivation {
           pname = "async-extra";
           version = "0.2.0.0";
           sha256 = "0d06d5a5cb835597ff1668ae58a1f0d048830164876838533dec4a78eb11cc43";
           libraryHaskellDepends = [ async base deepseq split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/async-extra#readme";
           description = "Useful concurrent combinators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "async-refresh" = callPackage
        ({ mkDerivation, base, formatting, lifted-async, microlens
         , microlens-th, monad-control, monad-logger, safe-exceptions
         , stdenv, stm, text
         }:
         mkDerivation {
           pname = "async-refresh";
           version = "0.2.0.2";
           sha256 = "9a328b67a12980b26360ae7dac30a92f059f78327ead2e2ccf22bcfd6c8201c3";
           libraryHaskellDepends = [
             base formatting lifted-async microlens microlens-th monad-control
             monad-logger safe-exceptions stm text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/async-refresh";
           description = "Package implementing core logic for refreshing of expiring data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-refresh-tokens" = callPackage
        ({ mkDerivation, async-refresh, base, bytestring, formatting
         , lifted-async, microlens, microlens-th, monad-control
         , monad-logger, safe-exceptions, stdenv, stm, text
         }:
         mkDerivation {
           pname = "async-refresh-tokens";
           version = "0.3.0.1";
           sha256 = "bdedc61d44eac7a36442f1a3af51d9a9e7b84901e1fe316a96b9286a5bfea796";
           libraryHaskellDepends = [
             async-refresh base bytestring formatting lifted-async microlens
             microlens-th monad-control monad-logger safe-exceptions stm text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/async-refresh-tokens#readme";
           description = "Package implementing core logic for refreshing of expiring access tokens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "async-timer" = callPackage
        ({ mkDerivation, base, lifted-async, lifted-base, monad-control
         , safe-exceptions, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "async-timer";
           version = "0.1.4.1";
           sha256 = "c2aa4d89792e6f21367122f4d9f1d5cafdf1e04a5a82fb566ec508453a83a398";
           libraryHaskellDepends = [
             base lifted-async lifted-base monad-control safe-exceptions
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/async-timer#readme";
           description = "Provides API for timer based execution of IO actions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atom-basic" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, network
         , network-uri, stdenv, text, time
         }:
         mkDerivation {
           pname = "atom-basic";
           version = "0.2.5";
           sha256 = "24be9667b8bad3ad63b2e9b42fdea5aa0fd96f7e90f52fb1203adfa71d2f75ee";
           libraryHaskellDepends = [
             base base64-bytestring bytestring network network-uri text time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Basic Atom feed construction";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atom-conduit" = callPackage
        ({ mkDerivation, base, blaze-builder, conduit, conduit-combinators
         , lens-simple, mono-traversable, parsers, safe-exceptions, stdenv
         , text, time, timerep, uri-bytestring, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "atom-conduit";
           version = "0.5.0.1";
           sha256 = "8c88c5c77567753b56163bfa596f50a9cfdde28796e66bb194ca6d9057e831cd";
           libraryHaskellDepends = [
             base blaze-builder conduit conduit-combinators lens-simple
             mono-traversable parsers safe-exceptions text time timerep
             uri-bytestring xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming parser/renderer for the Atom 1.0 standard (RFC 4287).";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "atomic-primops" = callPackage
        ({ mkDerivation, base, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "atomic-primops";
           version = "0.8.1.1";
           sha256 = "90f579c60f5affffc171ec3a4eaacc048120c0f174063b42f355d63247442172";
           libraryHaskellDepends = [ base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "A safe approach to CAS and other atomic ops in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "atomic-write" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, stdenv
         , temporary, text, unix-compat
         }:
         mkDerivation {
           pname = "atomic-write";
           version = "0.2.0.5";
           sha256 = "dbc7b4c31c734ad12d8f6c05b5d1384ee57f50ad8ff1a703d560b39e2f0458c5";
           libraryHaskellDepends = [
             base bytestring directory filepath temporary text unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/atomic-write";
           description = "Atomically write to a file";
           license = stdenv.lib.licenses.mit;
         }) {};
      "attoparsec" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , scientific, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "attoparsec";
           version = "0.13.2.2";
           sha256 = "dd93471eb969172cc4408222a3842d867adda3dd7fb39ad8a4df1b121a67d848";
           libraryHaskellDepends = [
             array base bytestring containers deepseq scientific text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/attoparsec";
           description = "Fast combinator parsing for bytestrings and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-binary" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "attoparsec-binary";
           version = "0.2";
           sha256 = "05e6445b20b396c99275de3e37bf8bb18559a5666ad5136907857bf574e77a0b";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Binary processing extensions to Attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-expr" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv }:
         mkDerivation {
           pname = "attoparsec-expr";
           version = "0.1.1.2";
           sha256 = "8d4cd436112ce9007d2831776d4c5102a5322c48993229d2d41e259c07bb457c";
           libraryHaskellDepends = [ attoparsec base ];
           doHaddock = false;
           doCheck = false;
           description = "Port of parsec's expression parser to attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-ip" = callPackage
        ({ mkDerivation, attoparsec, base, ip, stdenv }:
         mkDerivation {
           pname = "attoparsec-ip";
           version = "0.0.1";
           sha256 = "8da5ca8ae483bbb8dacfae3a888fa9438f55f84f8605e7c769091ee5b6555629";
           libraryHaskellDepends = [ attoparsec base ip ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/attoparsec-ip#readme";
           description = "Parse IP data types with attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-iso8601" = callPackage
        ({ mkDerivation, attoparsec, base, base-compat, stdenv, text, time
         }:
         mkDerivation {
           pname = "attoparsec-iso8601";
           version = "1.0.0.0";
           sha256 = "aa6c6d87587383e386cb85e7ffcc4a6317aa8dafb8ba9a104ecac365ce2a858a";
           libraryHaskellDepends = [ attoparsec base base-compat text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/aeson";
           description = "Parsing of ISO 8601 dates, originally from aeson";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-path" = callPackage
        ({ mkDerivation, attoparsec, base, path, stdenv, text }:
         mkDerivation {
           pname = "attoparsec-path";
           version = "0.0.0.1";
           sha256 = "d07126622210fdb18722f585c61bda0a17389aecc83e786f9f6e621ec120b60c";
           libraryHaskellDepends = [ attoparsec base path text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/attoparsec-path#readme";
           description = "Convenience bindings between path and attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "attoparsec-uri" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-ip, base, bytedump, ip
         , stdenv, strict, text, vector
         }:
         mkDerivation {
           pname = "attoparsec-uri";
           version = "0.0.3";
           sha256 = "d6a0f0a2202acdcbb60a75640e042dc48d0951f1286d3adf3bf7a366df7c09d9";
           libraryHaskellDepends = [
             attoparsec attoparsec-ip base bytedump ip strict text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/attoparsec-uri#readme";
           description = "URI parser / printer using attoparsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "audacity" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, directory
         , explicit-exception, filepath, non-empty, stdenv, storable-record
         , storablevector, tagchup, transformers, utility-ht, xml-basic
         }:
         mkDerivation {
           pname = "audacity";
           version = "0.0.1.2";
           sha256 = "4bd172addb40f3876dc0dbe50b05b88561d9871e06d73ce49540bee0ccdcc9b5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring deepseq directory explicit-exception filepath
             non-empty storable-record storablevector tagchup transformers
             utility-ht xml-basic
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/audacity";
           description = "Interchange with the Audacity sound signal editor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "authenticate" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
         , case-insensitive, conduit, containers, http-conduit, http-types
         , network-uri, resourcet, stdenv, tagstream-conduit, text
         , transformers, unordered-containers, xml-conduit
         }:
         mkDerivation {
           pname = "authenticate";
           version = "1.3.4";
           sha256 = "3fd566dbfdf75d81ad1bebd19facb9f01509ead6e27d9aed802404ecde932fb8";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder bytestring case-insensitive
             conduit containers http-conduit http-types network-uri resourcet
             tagstream-conduit text transformers unordered-containers
             xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/authenticate";
           description = "Authentication methods for Haskell web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "authenticate-oauth" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , crypto-pubkey-types, data-default, http-client, http-types
         , random, RSA, SHA, stdenv, time, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "authenticate-oauth";
           version = "1.6";
           sha256 = "d26d9f10fd57e06fa2af066df65e578ff3ec7541efc3e6648b29a743b13f8375";
           revision = "1";
           editedCabalFile = "1fxwn8bn6qs8dhxq0q04psq7zp1qvw1b6g3vmsclgyj9p7kr77ms";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring crypto-pubkey-types
             data-default http-client http-types random RSA SHA time
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/authenticate";
           description = "Library to authenticate with OAuth for Haskell web applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "auto" = callPackage
        ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
         , deepseq, MonadRandom, profunctors, random, semigroups, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "auto";
           version = "0.4.3.1";
           sha256 = "c6e26d1cbb17e3645e55bc8e9432b124520fbcba5ff32445acd4260c25cd3b41";
           libraryHaskellDepends = [
             base base-orphans bytestring cereal containers deepseq MonadRandom
             profunctors random semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/auto";
           description = "Denotative, locally stateful programming DSL & platform";
           license = stdenv.lib.licenses.mit;
         }) {};
      "auto-update" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "auto-update";
           version = "0.1.4";
           sha256 = "5e96c151024e8bcaf4eaa932e16995872b2017f46124b967e155744d9580b425";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Efficiently run periodic, on-demand actions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "autoexporter" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, stdenv }:
         mkDerivation {
           pname = "autoexporter";
           version = "1.1.3";
           sha256 = "d5ec955e0808bdf58f88be06d4f856ecd7415c348201029150c6daefb6586f66";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base Cabal directory filepath ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/autoexporter#readme";
           description = "Automatically re-export modules";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avers" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, clock
         , containers, cryptonite, filepath, inflections, memory
         , MonadRandom, mtl, network, network-uri, resource-pool
         , rethinkdb-client-driver, safe, scrypt, stdenv, stm
         , template-haskell, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "avers";
           version = "0.0.17.1";
           sha256 = "1b45d8aa036b3c2ec7ea180327ff3cdce28dc1e1ef319c062be79f0ffa7626f5";
           revision = "16";
           editedCabalFile = "0dv8lrnnb643fh1rsi10rq99nnb5a98akdl26lfxxjmmdmy238vd";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring clock containers cryptonite
             filepath inflections memory MonadRandom mtl network network-uri
             resource-pool rethinkdb-client-driver safe scrypt stm
             template-haskell text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Server-side implementation of the Avers storage model";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "avers-api" = callPackage
        ({ mkDerivation, aeson, avers, base, bytestring, cookie
         , http-api-data, servant, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "avers-api";
           version = "0.1.0";
           sha256 = "5c1765976fd1ac49444023452e31cbe5200fd9c8480e1927aa4334e8752d5a3e";
           libraryHaskellDepends = [
             aeson avers base bytestring cookie http-api-data servant text time
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/wereHamster/avers-api";
           description = "Types describing the core and extended Avers APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avers-server" = callPackage
        ({ mkDerivation, aeson, avers, avers-api, base, base64-bytestring
         , bytestring, bytestring-conversion, containers, cookie, cryptonite
         , http-types, memory, mtl, resource-pool, rethinkdb-client-driver
         , servant, servant-server, stdenv, stm, text, time, transformers
         , wai, wai-websockets, websockets
         }:
         mkDerivation {
           pname = "avers-server";
           version = "0.1.0";
           sha256 = "1f80f4c234cba9627e190a4fe5d180fd7c8ab6627650beaa856e050aca4d0055";
           libraryHaskellDepends = [
             aeson avers avers-api base base64-bytestring bytestring
             bytestring-conversion containers cookie cryptonite http-types
             memory mtl resource-pool rethinkdb-client-driver servant
             servant-server stm text time transformers wai wai-websockets
             websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/wereHamster/avers-server";
           description = "Server implementation of the Avers API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "avwx" = callPackage
        ({ mkDerivation, attoparsec, base, HTTP, lens, optparse-applicative
         , parsers, pretty-show, stdenv, text
         }:
         mkDerivation {
           pname = "avwx";
           version = "0.3.0.2";
           sha256 = "b4299cc4e05a4c94f53d06f05b30baac1e15c59663b59afd1dd32417a280fb0a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ attoparsec base HTTP lens parsers text ];
           executableHaskellDepends = [
             base optparse-applicative pretty-show text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.hcesperer.org/posts/2016-09-20-avwx.html";
           description = "Parse aviation weather reports";
           license = stdenv.lib.licenses.mit;
         }) {};
      "aws" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
         , base64-bytestring, blaze-builder, byteable, bytestring
         , case-insensitive, cereal, conduit, conduit-extra, containers
         , cryptonite, data-default, directory, filepath, http-conduit
         , http-types, lifted-base, memory, monad-control, mtl, network
         , old-locale, resourcet, safe, scientific, stdenv, tagged, text
         , time, transformers, unordered-containers, utf8-string, vector
         , xml-conduit
         }:
         mkDerivation {
           pname = "aws";
           version = "0.18";
           sha256 = "b2e738b0767b735d4bf297055bf12b586670ae2bb33457fa97bdb03df938e440";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base base16-bytestring base64-bytestring
             blaze-builder byteable bytestring case-insensitive cereal conduit
             conduit-extra containers cryptonite data-default directory filepath
             http-conduit http-types lifted-base memory monad-control mtl
             network old-locale resourcet safe scientific tagged text time
             transformers unordered-containers utf8-string vector xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aristidb/aws";
           description = "Amazon Web Services (AWS) for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "axiom" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , ghcjs-perch, mtl, stdenv, transformers, transient
         , transient-universe
         }:
         mkDerivation {
           pname = "axiom";
           version = "0.4.6";
           sha256 = "8365128ce841379023fee062c16ad1d31c27260f5d994a0a49d9d1fae7cae844";
           libraryHaskellDepends = [
             base bytestring containers directory ghcjs-perch mtl transformers
             transient transient-universe
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/transient-haskell/axiom";
           description = "Web EDSL for running in browsers and server nodes using transient";
           license = stdenv.lib.licenses.mit;
         }) {};
      "b9" = callPackage
        ({ mkDerivation, aeson, async, base, bifunctors, binary, boxes
         , bytestring, conduit, conduit-extra, ConfigFile, directory
         , filepath, free, hashable, mtl, optparse-applicative, parallel
         , parsec, pretty, pretty-show, process, QuickCheck, random
         , semigroups, stdenv, syb, template, text, time, transformers
         , unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "b9";
           version = "0.5.35";
           sha256 = "5b059a37c176e08a8f35ae0333d46e41b68a08c9f3dc80dbf93d593840ae4286";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base bifunctors binary boxes bytestring conduit
             conduit-extra ConfigFile directory filepath free hashable mtl
             parallel parsec pretty pretty-show process QuickCheck random
             semigroups syb template text time transformers unordered-containers
             vector yaml
           ];
           executableHaskellDepends = [
             base bytestring directory optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/b9-vm-image-builder";
           description = "A tool and library for building virtual machine images";
           license = stdenv.lib.licenses.mit;
         }) {};
      "backprop" = callPackage
        ({ mkDerivation, ad, base, generics-sop, microlens, microlens-mtl
         , microlens-th, mtl, profunctors, reflection, stdenv, tagged
         , transformers-base, type-combinators
         }:
         mkDerivation {
           pname = "backprop";
           version = "0.0.3.0";
           sha256 = "ae199a345a134f2251deec151cd7d32cbe28f327a142fb3c5ed883e992d858e6";
           libraryHaskellDepends = [
             ad base generics-sop microlens microlens-mtl microlens-th mtl
             profunctors reflection tagged transformers-base type-combinators
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/backprop";
           description = "Heterogeneous, type-safe automatic backpropagation in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bake" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
         , deepseq, direct-sqlite, directory, disk-free-space, extra
         , filepath, hashable, HTTP, http-client, http-conduit, http-types
         , old-locale, process, random, safe, shake, smtp-mail
         , sqlite-simple, stdenv, text, time, transformers
         , unordered-containers, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "bake";
           version = "0.5";
           sha256 = "1cc3b57b6270a2c80f0b0a8b90fc3929eb0d1da9e113d18bc10d92b40a2d60f5";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring cmdargs containers deepseq direct-sqlite
             directory disk-free-space extra filepath hashable HTTP http-client
             http-conduit http-types old-locale random safe shake smtp-mail
             sqlite-simple text time transformers unordered-containers wai
             wai-extra warp
           ];
           executableHaskellDepends = [
             aeson base bytestring cmdargs containers deepseq direct-sqlite
             directory disk-free-space extra filepath hashable HTTP http-client
             http-conduit http-types old-locale process random safe shake
             smtp-mail sqlite-simple text time transformers unordered-containers
             wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/bake#readme";
           description = "Continuous integration system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bank-holidays-england" = callPackage
        ({ mkDerivation, base, containers, stdenv, time }:
         mkDerivation {
           pname = "bank-holidays-england";
           version = "0.1.0.6";
           sha256 = "57ed284bffdadcaf3dd26795de9815c032c5876034e5200216ae21ac94f434ab";
           libraryHaskellDepends = [ base containers time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
           description = "Calculation of bank holidays in England and Wales";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "barrier" = callPackage
        ({ mkDerivation, base, blaze-svg, bytestring, stdenv
         , template-haskell, text, unordered-containers
         }:
         mkDerivation {
           pname = "barrier";
           version = "0.1.1";
           sha256 = "6395da01eea1984c7bcc85c624b1b5dfbe0b6b764adeed7b04c9fa4d8de91ed9";
           revision = "1";
           editedCabalFile = "167akvi72l47gcqbq5609m24469pq0xmv0kjbmivnrxs796gh890";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-svg bytestring template-haskell text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/philopon/barrier";
           description = "Shields.io style badge generator";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-compat" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "base-compat";
           version = "0.9.3";
           sha256 = "7d602b0f0543fadbd598a090c738e9ce9b07a1896673dc27f1503ae3bea1a210";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           description = "A compatibility layer for base";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-orphans" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "base-orphans";
           version = "0.6";
           sha256 = "c7282aa7516652e6e4a78ccdfb654a99c9da683875748ad5898a3f200be7ad0e";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/base-orphans#readme";
           description = "Backwards-compatible orphan instances for base";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-prelude" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-prelude";
           version = "1.2.0.1";
           sha256 = "811a494f5996ff1012be15a1236cc4afb6a67fc2a9f54fdb53f4e94a8fde119e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/base-prelude";
           description = "The most complete prelude formed solely from the \"base\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base-unicode-symbols" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base-unicode-symbols";
           version = "0.2.2.4";
           sha256 = "a2f841430fec32edba778b74bde83bf0170ada7c5e2e59d7187c8f06d92dcca9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
           description = "Unicode alternatives for common functions and operators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base16-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "base16-bytestring";
           version = "0.1.1.6";
           sha256 = "5afe65a152c5418f5f4e3579a5e0d5ca19c279dc9bf31c1a371ccbe84705c449";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/base16-bytestring";
           description = "Fast base16 (hex) encoding and decoding for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base32string" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, stdenv, text }:
         mkDerivation {
           pname = "base32string";
           version = "0.9.1";
           sha256 = "9e931613aeba5f630f9292fc99131388f406e4b34d8f050515ed93aaf632ea32";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base binary bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a Base-32 string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base58-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "base58-bytestring";
           version = "0.1.0";
           sha256 = "c2dbf598f3415053e12cca84b90fa7c0c1b02f3b784cce0157264baebf2d40d3";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/s9gf4ult/base58-bytestring";
           description = "Implementation of BASE58 transcoding for ByteStrings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "base58string" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, stdenv, text }:
         mkDerivation {
           pname = "base58string";
           version = "0.10.0";
           sha256 = "3b72607dd76e30a5054acea656c3805f7191e27d67884a7db5fbc73c17e9c088";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base binary bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a Base-58 string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "base64-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "base64-bytestring";
           version = "1.0.0.1";
           sha256 = "ab25abf4b00a2f52b270bc3ed43f1d59f16c8eec9d7dffb14df1e9265b233b50";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/base64-bytestring";
           description = "Fast base64 encoding and decoding for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "base64-string" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "base64-string";
           version = "0.2";
           sha256 = "3ec896ca7261ad4ddeffbaa3bdf4d5cb61775250c303fca9929aa9a56acc705e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
           description = "Base64 implementation for String's";
           license = "unknown";
         }) {};
      "basement" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "basement";
           version = "0.0.4";
           sha256 = "68448325bacc85dcb8764d9f78d27285b56e978df03187bee912edbf1adab8fd";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-foundation/foundation";
           description = "Foundation scrap box of array & string";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "basic-prelude" = callPackage
        ({ mkDerivation, base, bytestring, containers, filepath, hashable
         , stdenv, text, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "basic-prelude";
           version = "0.7.0";
           sha256 = "10755f892548faa956b81b40d1d03ec6e94609fd8ec8e92be09b4453b7ad9379";
           libraryHaskellDepends = [
             base bytestring containers filepath hashable text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/basic-prelude#readme";
           description = "An enhanced core prelude; a common foundation for alternate preludes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bbdb" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "bbdb";
           version = "0.8";
           sha256 = "dce7798cb8e46e1c0f7048579496cabeebddaba9b6233820fd0496723fbc2a5c";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/henrylaxen/bbdb";
           description = "Ability to read, write, and modify BBDB files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "bcrypt" = callPackage
        ({ mkDerivation, base, bytestring, data-default, entropy, memory
         , stdenv
         }:
         mkDerivation {
           pname = "bcrypt";
           version = "0.0.11";
           sha256 = "e4331788eda7b65064d88930b4b7a50f5011bdec0ad46059d8c4ee6a5e72fcef";
           libraryHaskellDepends = [
             base bytestring data-default entropy memory
           ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell bindings to the bcrypt password hash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bench" = callPackage
        ({ mkDerivation, base, criterion, optparse-applicative, process
         , silently, stdenv, text, turtle
         }:
         mkDerivation {
           pname = "bench";
           version = "1.0.8";
           sha256 = "74d388f69d638bcc42a6e1610555ed420b8ec44b1646912cb5d6fbf0fd949ea2";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base criterion optparse-applicative process silently text turtle
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/Gabriel439/bench";
           description = "Command-line benchmark tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "benchpress" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, time }:
         mkDerivation {
           pname = "benchpress";
           version = "0.2.2.10";
           sha256 = "e6b0c5ef9e880a866cb438cc1c7efe83bc69ddbc5b0e941833495e43456f39c7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base mtl time ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/WillSewell/benchpress";
           description = "Micro-benchmarking with detailed statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bencode" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, parsec
         , stdenv
         }:
         mkDerivation {
           pname = "bencode";
           version = "0.6.0.0";
           sha256 = "3b8efdfecee9bc486d9bcdbb633b7128ca235360f102478a7e0f8c895281f68a";
           libraryHaskellDepends = [
             base binary bytestring containers parsec
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parser and printer for bencoded data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bento" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bento";
           version = "0.1.0";
           sha256 = "eba28420daba13af9de264ec0e3d605535496536b9aff9bc23798cdbcc209192";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/bento#readme";
           description = "🍱 Manage stateful components";
           license = stdenv.lib.licenses.mit;
         }) {};
      "between" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "between";
           version = "0.11.0.0";
           sha256 = "8337351326c5a613d9b7520b6a8203234c04454e23550a81739beaa6f671465d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/trskop/between";
           description = "Function combinator \"between\" and derived combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bhoogle" = callPackage
        ({ mkDerivation, base, brick, bytestring, containers, directory
         , filepath, hoogle, lens, process, protolude, stdenv, text, time
         , vector, vty
         }:
         mkDerivation {
           pname = "bhoogle";
           version = "0.1.2.5";
           sha256 = "519e7f2c8c0c49f27da2b58cdbe9710183bf1e4d912395e30781821d917b259a";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base brick bytestring containers directory filepath hoogle lens
             process protolude text time vector vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrevdm/bhoogle#readme";
           description = "Simple terminal GUI for local hoogle";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bibtex" = callPackage
        ({ mkDerivation, base, latex, parsec, stdenv, utility-ht }:
         mkDerivation {
           pname = "bibtex";
           version = "0.1.0.6";
           sha256 = "090a3b9589388bdf9d2bf60d8d1898aa0313a2874b551ba86cbbd049f3ee5f04";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base latex parsec utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/BibTeX";
           description = "Parse, format and processing BibTeX files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bifunctors" = callPackage
        ({ mkDerivation, base, base-orphans, comonad, containers
         , semigroups, stdenv, tagged, template-haskell, th-abstraction
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "bifunctors";
           version = "5.5.2";
           sha256 = "332bb2ea19e77dac55282daff8046d89f69514ced5b987779d887e53b5d7cb11";
           revision = "2";
           editedCabalFile = "0glrvir6md8a1ncr6ah95a5mnn7n9v8yl85afvdx24i9z1nr1319";
           libraryHaskellDepends = [
             base base-orphans comonad containers semigroups tagged
             template-haskell th-abstraction transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bifunctors/";
           description = "Bifunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bimap" = callPackage
        ({ mkDerivation, base, containers, exceptions, stdenv }:
         mkDerivation {
           pname = "bimap";
           version = "0.3.3";
           sha256 = "73829355c7bcbd3eedba22a382a04a3ab641702b00828790ec082ec2db3a8ad1";
           libraryHaskellDepends = [ base containers exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joelwilliamson/bimap";
           description = "Bidirectional mapping between two key types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bimap-server" = callPackage
        ({ mkDerivation, aeson, base, bimap, binary, directory, http-types
         , stdenv, unix, wai, warp
         }:
         mkDerivation {
           pname = "bimap-server";
           version = "0.1.0.1";
           sha256 = "09dfd1865812f40e317b610cbe05cc65ba6ea7215428748e1038ff7fc38ef535";
           libraryHaskellDepends = [
             aeson base bimap binary directory http-types unix wai warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Two-column database server";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-bits" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "binary-bits";
           version = "0.5";
           sha256 = "16534a018a4754d8d1eab051711c23fb741f41a0d141b289001c52824b5be794";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Bit parsing/writing on top of binary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-conduit" = callPackage
        ({ mkDerivation, base, binary, bytestring, conduit, resourcet
         , stdenv, vector
         }:
         mkDerivation {
           pname = "binary-conduit";
           version = "1.2.5";
           sha256 = "21d417aae0f9441ecd0e4f5aaac03bf9692fb9e85e48076c774d961567d14b1b";
           libraryHaskellDepends = [
             base binary bytestring conduit resourcet vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/qnikst/binary-conduit/";
           description = "data serialization/deserialization conduit library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "binary-ieee754" = callPackage
        ({ mkDerivation, array, base, binary, stdenv }:
         mkDerivation {
           pname = "binary-ieee754";
           version = "0.1.0.0";
           sha256 = "15c489898bcd346b4067a27579cb5fc62e2fafecbec81ea0446165a24aee4d54";
           libraryHaskellDepends = [ array base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/binary-ieee754";
           description = "Backport ieee754 float double combinators to older binary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-list" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, phantom-state
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "binary-list";
           version = "1.1.1.2";
           sha256 = "6b21e58ea4091b9572cb24a92dfb1ddc14fcea82d2272d30a83eb1b430dd1878";
           libraryHaskellDepends = [
             base binary bytestring deepseq phantom-state transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lists of length a power of two";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-orphans" = callPackage
        ({ mkDerivation, aeson, base, binary, case-insensitive, hashable
         , scientific, stdenv, tagged, text, text-binary, time
         , unordered-containers, vector, vector-binary-instances
         }:
         mkDerivation {
           pname = "binary-orphans";
           version = "0.1.8.0";
           sha256 = "f17557ccd98931df2bea038f25e7f835f38019ea7d53bd763f71fe64f931c0cc";
           revision = "1";
           editedCabalFile = "1zgp08sikp71k9llcplkdrfhh2gn43gk7hx81nslixl5s91a1j9q";
           libraryHaskellDepends = [
             aeson base binary case-insensitive hashable scientific tagged text
             text-binary time unordered-containers vector
             vector-binary-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/binary-orphans#readme";
           description = "Orphan instances for binary";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-parser" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring, mtl, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "binary-parser";
           version = "0.5.5";
           sha256 = "1dab718e06a978118cd28d2412bceaa0b6ec8d67785bdb0982e259fb60fe43b3";
           revision = "3";
           editedCabalFile = "14n41yazmks2qw0v4krxcqw3ac0wdy2z53d0qz0rdjcd94fpghjf";
           libraryHaskellDepends = [
             base base-prelude bytestring mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/binary-parser";
           description = "A highly-efficient but limited parser API specialised for bytestrings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "binary-parsers" = callPackage
        ({ mkDerivation, base, binary, bytestring, bytestring-lexing
         , scientific, stdenv
         }:
         mkDerivation {
           pname = "binary-parsers";
           version = "0.2.3.0";
           sha256 = "bc6195493b950efcbeb9ef54dfe47a6badf894dff934cf02a4b170331c1b217a";
           revision = "1";
           editedCabalFile = "09ag18yr1m26fl3w7ab1d5q5j201ygbw7qsbsy41bwd6iq87rq15";
           libraryHaskellDepends = [
             base binary bytestring bytestring-lexing scientific
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/binary-parsers";
           description = "Extends binary with parsec/attoparsec style parsing combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-search" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "binary-search";
           version = "1.0.0.3";
           sha256 = "b0e32df46aeddceac57bd6afa940f84f275f82fb251479e10fadd7c14414f6fa";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Binary and exponential searches";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "binary-shared" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, mtl, stdenv
         }:
         mkDerivation {
           pname = "binary-shared";
           version = "0.8.3";
           sha256 = "830116505018fc43de09867bea9039b0bfa29e77564efa8c3f3b708933c098b2";
           libraryHaskellDepends = [ base binary bytestring containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leksah.org";
           description = "Sharing for the binary package";
           license = "GPL";
         }) {};
      "binary-tagged" = callPackage
        ({ mkDerivation, aeson, array, base, base16-bytestring, binary
         , bytestring, containers, generics-sop, hashable, nats, scientific
         , semigroups, SHA, stdenv, tagged, text, time, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "binary-tagged";
           version = "0.1.4.2";
           sha256 = "311fab8c2bac00cb6785cb144e25ed58b2efce85e5dc64e30e2b5a2a16cdc784";
           revision = "7";
           editedCabalFile = "04l05gfbf3hf0pnkjpclyfqb9jaa665z4f89kf43lmd19qml6h04";
           libraryHaskellDepends = [
             aeson array base base16-bytestring binary bytestring containers
             generics-sop hashable nats scientific semigroups SHA tagged text
             time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/binary-tagged#readme";
           description = "Tagged binary serialisation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bindings-DSL" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bindings-DSL";
           version = "1.0.24";
           sha256 = "234d8f51dece232e4926943c11427e621757c856be0f27a0a104e7dc71f9c80e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
           description = "FFI domain specific language, on top of hsc2hs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bindings-GLFW" = callPackage
        ({ mkDerivation, base, bindings-DSL, libX11, libXcursor, libXext
         , libXfixes, libXi, libXinerama, libXrandr, libXxf86vm, mesa
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "bindings-GLFW";
           version = "3.1.2.3";
           sha256 = "33ee17f169e5faa7cbdb07743550439a1918e99855c0cc546c96f72b57e7b5f6";
           libraryHaskellDepends = [ base bindings-DSL template-haskell ];
           librarySystemDepends = [
             libX11 libXcursor libXext libXfixes libXi libXinerama libXrandr
             libXxf86vm mesa
           ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level bindings to GLFW OpenGL library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs.xorg) libXext; inherit (pkgs.xorg) libXfixes; 
inherit (pkgs) mesa;};
      "bindings-libzip" = callPackage
        ({ mkDerivation, base, bindings-DSL, libzip, stdenv }:
         mkDerivation {
           pname = "bindings-libzip";
           version = "1.0.1";
           sha256 = "908d060360d66974b1d9400dea28a1dce35a88baf5d73a6e3c12be8e74cda2ec";
           libraryHaskellDepends = [ base bindings-DSL ];
           libraryPkgconfigDepends = [ libzip ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitbucket.org/astanin/hs-libzip/";
           description = "Low level bindings to libzip";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) libzip;};
      "bindings-uname" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "bindings-uname";
           version = "0.1";
           sha256 = "130e75c3fd95e232452c7d903efbfab2d2ff6c9d455b617adeaebe5d60235cd3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level binding to POSIX uname(3)";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "bioace" = callPackage
        ({ mkDerivation, base, bioalign, biocore, bytestring, parsec
         , stdenv
         }:
         mkDerivation {
           pname = "bioace";
           version = "0.0.1";
           sha256 = "6f43645b2a0ccbca20069aa25fae6fc2ae1704a3a0c48b069852fbfb8ce16222";
           libraryHaskellDepends = [
             base bioalign biocore bytestring parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/dfornika/bioace/home";
           description = "Library for reading ace assembly files";
           license = "GPL";
         }) {};
      "bioalign" = callPackage
        ({ mkDerivation, base, biocore, bytestring, stdenv }:
         mkDerivation {
           pname = "bioalign";
           version = "0.0.5";
           sha256 = "b9152e81abbd7c79099520b69aeca3ff21970f1151b3c072a2994ea31b7acf00";
           libraryHaskellDepends = [ base biocore bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/dfornika/biophd/home";
           description = "Data structures and helper functions for calculating alignments";
           license = "GPL";
         }) {};
      "biocore" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, stringable }:
         mkDerivation {
           pname = "biocore";
           version = "0.3.1";
           sha256 = "212b7d7395138d4c231968e1f5bb047c03f61adc6c5eb36162602f42c24db41a";
           libraryHaskellDepends = [ base bytestring stringable ];
           doHaddock = false;
           doCheck = false;
           description = "A bioinformatics library";
           license = "LGPL";
         }) {};
      "biofasta" = callPackage
        ({ mkDerivation, base, biocore, bytestring, stdenv }:
         mkDerivation {
           pname = "biofasta";
           version = "0.0.3";
           sha256 = "6221a89cde259e8f9a2d4da11230a8a53d78b24d3367e70be5e7b1279e06e7d0";
           libraryHaskellDepends = [ base biocore bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
           description = "Library for reading fasta sequence files";
           license = "GPL";
         }) {};
      "biofastq" = callPackage
        ({ mkDerivation, base, biocore, bytestring, stdenv }:
         mkDerivation {
           pname = "biofastq";
           version = "0.1";
           sha256 = "74e51887569c4900f5de266eca0dd28082c8abdf6ef0f34787a91baec562a310";
           libraryHaskellDepends = [ base biocore bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://biohaskell.org/";
           description = "A library for reading FASTQ files";
           license = "LGPL";
         }) {};
      "biopsl" = callPackage
        ({ mkDerivation, base, biocore, bytestring, cmdargs, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "biopsl";
           version = "0.4";
           sha256 = "b2be254020a276df342ede835a1c1b1b989763098d7d8a5536c0b86c5f7a3bed";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base biocore bytestring ];
           executableHaskellDepends = [ cmdargs unordered-containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://biohaskell.org/";
           description = "Library and executables for working with PSL files";
           license = "LGPL";
         }) {};
      "bit-stream" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, vector }:
         mkDerivation {
           pname = "bit-stream";
           version = "0.1.0.2";
           sha256 = "811f2e7d4a827440bc21557e48c5310fe91e1b17f337ec35208546e1c5639bf4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ghc-prim vector ];
           executableHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/bit-stream#readme";
           description = "Lazy, infinite, compact stream of Bool with O(1) indexing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bitarray" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "bitarray";
           version = "0.0.1.1";
           sha256 = "b27f6f1065053a0e8e24fbf9382b7060af9962d8d150b631c682c0c58469d802";
           revision = "1";
           editedCabalFile = "10fk92v9afjqk43zi621jxl0n8kci0xjj32lz3vqa9xbh67zjz45";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~bkomuves/";
           description = "Mutable and immutable bit arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bitcoin-api" = callPackage
        ({ mkDerivation, aeson, base, base58string, binary, bitcoin-block
         , bitcoin-script, bitcoin-tx, bitcoin-types, bytestring, hexstring
         , lens, lens-aeson, stdenv, text, unordered-containers, wreq
         }:
         mkDerivation {
           pname = "bitcoin-api";
           version = "0.12.1";
           sha256 = "c978de1519b24c5c04ff518ad1209f74f91df31d65e23592dc639219df6b3e30";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base58string binary bitcoin-block bitcoin-script
             bitcoin-tx bitcoin-types bytestring hexstring lens lens-aeson text
             unordered-containers wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Provides access to the RPC API of Bitcoin Core";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-api-extra" = callPackage
        ({ mkDerivation, base, binary, bitcoin-api, bitcoin-block
         , bitcoin-tx, bytestring, conduit, lens, stdenv, stm, stm-chans
         , stm-conduit, text, transformers
         }:
         mkDerivation {
           pname = "bitcoin-api-extra";
           version = "0.9.1";
           sha256 = "c423c6007d0f830dd2bbc0e1bc9219980e6fb2bde684890e265e1bfce4bdd7fc";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-api bitcoin-block bitcoin-tx bytestring conduit
             lens stm stm-chans stm-conduit text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Higher level constructs on top of the bitcoin-api package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-block" = callPackage
        ({ mkDerivation, base, binary, bitcoin-tx, bitcoin-types
         , bytestring, cryptohash, hexstring, largeword, lens, stdenv
         }:
         mkDerivation {
           pname = "bitcoin-block";
           version = "0.13.1";
           sha256 = "d7f57c0fe71045dab85d223dc15d64db3a15cc7fd8446bfe4ebd98cd9d417d5a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-tx bitcoin-types bytestring cryptohash
             hexstring largeword lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Utility functions for manipulating bitcoin blocks";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-script" = callPackage
        ({ mkDerivation, base, base16-bytestring, binary, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "bitcoin-script";
           version = "0.11.1";
           sha256 = "398c1d86e918731b5b2026351bb3b0b90b20606517e7c21e42f05d6c6e197b4c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base16-bytestring binary bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Compilation, manipulation and decompilation of Bitcoin scripts";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-tx" = callPackage
        ({ mkDerivation, base, binary, bitcoin-script, bitcoin-types
         , bytestring, cryptohash, hexstring, lens, stdenv
         }:
         mkDerivation {
           pname = "bitcoin-tx";
           version = "0.13.1";
           sha256 = "3bb88265353066c394e96a56b2dc555fa13d37ca7f820978b793196c6829cc00";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bitcoin-script bitcoin-types bytestring cryptohash
             hexstring lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Utility functions for manipulating bitcoin transactions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitcoin-types" = callPackage
        ({ mkDerivation, base, base58string, binary, bytestring, hexstring
         , stdenv, text
         }:
         mkDerivation {
           pname = "bitcoin-types";
           version = "0.9.2";
           sha256 = "b72f9448508b64706d5f443748dc9b8abde8e749959187ce3d8356cde0d6c40b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base58string binary bytestring hexstring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Provides consistent low-level types used commonly among Bitcoin implementations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bits" = callPackage
        ({ mkDerivation, base, bytes, Cabal, cabal-doctest, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "bits";
           version = "0.5.1";
           sha256 = "657e557bb913b53fb3b3fc7eda820cf3c85a5b89692d242275d3e8e8d9479c93";
           revision = "3";
           editedCabalFile = "1xvrnswmny4j0p1h30hfgf5h4p128zn578bxzr83v6drmd74az9k";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base bytes mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bits";
           description = "Various bit twiddling and bitwise serialization primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bitset-word8" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell
         , th-lift-instances
         }:
         mkDerivation {
           pname = "bitset-word8";
           version = "0.1.1.0";
           sha256 = "14e9eded3d5f535dbb1ce6debe4edd2d227765af31cc58e072b78824cd9f9b06";
           libraryHaskellDepends = [
             base containers template-haskell th-lift-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/bitset-word8#readme";
           description = "Space efficient set of Word8 and some pre-canned sets useful for parsing HTTP";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bitx-bitcoin" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, exceptions
         , http-client, http-client-tls, http-types, microlens, microlens-th
         , network, QuickCheck, scientific, split, stdenv, text, time
         }:
         mkDerivation {
           pname = "bitx-bitcoin";
           version = "0.11.0.1";
           sha256 = "926a57fb85bd42185c2e8abb00e6ff309062abb6b24fce2eef61507896fb219c";
           libraryHaskellDepends = [
             aeson base bytestring deepseq exceptions http-client
             http-client-tls http-types microlens microlens-th network
             QuickCheck scientific split text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tebello-thejane/bitx.hs";
           description = "A Haskell library for working with the BitX bitcoin exchange";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blake2" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "blake2";
           version = "0.2.0";
           sha256 = "07d910e3f5c6e98f5a6b9d53dbe5f52506c3859b513bc7493b52552a28382cfc";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/centromere/blake2";
           description = "A library providing BLAKE2";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "blank-canvas" = callPackage
        ({ mkDerivation, aeson, base, base-compat, base64-bytestring
         , bytestring, colour, containers, data-default-class, http-types
         , kansas-comet, mime-types, scotty, semigroups, stdenv, stm, text
         , text-show, transformers, vector, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "blank-canvas";
           version = "0.6.2";
           sha256 = "0461ff6b4b72f67dbe8cfadaebcd194ee3c15deb59b7a435d89672a462df0de2";
           revision = "1";
           editedCabalFile = "0zc84pjrmb2xpsvavvf950vrwyd6nlfj3x2hi930wq1kjm7pr4ps";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base-compat base64-bytestring bytestring colour
             containers data-default-class http-types kansas-comet mime-types
             scotty semigroups stm text text-show transformers vector wai
             wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
           description = "HTML5 Canvas Graphics Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blas-carray" = callPackage
        ({ mkDerivation, base, blas-ffi, carray, netlib-carray, netlib-ffi
         , stdenv, storable-complex, transformers
         }:
         mkDerivation {
           pname = "blas-carray";
           version = "0.0";
           sha256 = "6642e4b2fdc7d91fcf7d75b767814a0ef3c8418f4cb9cb612f94fcd772f9338c";
           libraryHaskellDepends = [
             base blas-ffi carray netlib-carray netlib-ffi storable-complex
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/blas-carray/";
           description = "Auto-generated interface to Fortran BLAS via CArrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blas-ffi" = callPackage
        ({ mkDerivation, base, blas, netlib-ffi, stdenv }:
         mkDerivation {
           pname = "blas-ffi";
           version = "0.0";
           sha256 = "42330c392ebc4595db313279d51996c5730cce34e050577662260d7df3926d9c";
           libraryHaskellDepends = [ base netlib-ffi ];
           libraryPkgconfigDepends = [ blas ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/blas-ffi/";
           description = "Auto-generated interface to Fortran BLAS";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) blas;};
      "blas-hs" = callPackage
        ({ mkDerivation, base, blas, stdenv, storable-complex }:
         mkDerivation {
           pname = "blas-hs";
           version = "0.1.1.0";
           sha256 = "80e06b0927982b391d239f8656ed437cd29665969d1a078ea4e42a2bf196b086";
           libraryHaskellDepends = [ base storable-complex ];
           librarySystemDepends = [ blas ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Rufflewind/blas-hs";
           description = "Low-level Haskell bindings to Blas";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) blas;};
      "blastxml" = callPackage
        ({ mkDerivation, base, biocore, bytestring, parallel, stdenv
         , tagsoup
         }:
         mkDerivation {
           pname = "blastxml";
           version = "0.3.2";
           sha256 = "0c0089c42306c8189a9a26905677372d26adfde03772ae79b4742771d0de986a";
           libraryHaskellDepends = [
             base biocore bytestring parallel tagsoup
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://biohaskell.org/";
           description = "Library for reading Blast XML output";
           license = "LGPL";
         }) {};
      "blaze-bootstrap" = callPackage
        ({ mkDerivation, base, blaze-html, stdenv, text }:
         mkDerivation {
           pname = "blaze-bootstrap";
           version = "0.1.0.1";
           sha256 = "53b54c0b55ae7a436ec7e5d4e29d50fceb1ccd459ef715236358a3c661d05163";
           libraryHaskellDepends = [ base blaze-html text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/blaze-bootstrap";
           description = "Blaze helper functions for bootstrap pages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "blaze-builder" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv, text }:
         mkDerivation {
           pname = "blaze-builder";
           version = "0.4.0.2";
           sha256 = "9ad3e4661bf5556d650fb9aa56a3ad6e6eec7575e87d472e8ab6d15eaef163d4";
           libraryHaskellDepends = [ base bytestring deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lpsmith/blaze-builder";
           description = "Efficient buffered output";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-html" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "blaze-html";
           version = "0.9.0.1";
           sha256 = "aeceaab3fbccbf7f01a241819e6c16c0a1cf19dccecb795c5de5407bc8660a64";
           libraryHaskellDepends = [
             base blaze-builder blaze-markup bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/blaze";
           description = "A blazingly fast HTML combinator library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-markup" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, stdenv, text }:
         mkDerivation {
           pname = "blaze-markup";
           version = "0.8.2.0";
           sha256 = "4436af476abb3420e246c1ab7ce8dc95af250b76b6955776252717d97d1e7054";
           libraryHaskellDepends = [ base blaze-builder bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/blaze";
           description = "A blazingly fast markup combinator library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-svg" = callPackage
        ({ mkDerivation, base, blaze-markup, mtl, stdenv }:
         mkDerivation {
           pname = "blaze-svg";
           version = "0.3.6.1";
           sha256 = "f6a4f1bba1e973b336e94de73369f4562778fde43b6ac7c0b32d6a501527aa60";
           libraryHaskellDepends = [ base blaze-markup mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/deepakjois/blaze-svg";
           description = "SVG combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blaze-textual" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, ghc-prim
         , integer-gmp, old-locale, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "blaze-textual";
           version = "0.2.1.0";
           sha256 = "1042795ab0bab891c034c24a51bafecbb89870ccd28af39534ab3d9ae7f46c2d";
           libraryHaskellDepends = [
             base blaze-builder bytestring ghc-prim integer-gmp old-locale text
             time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/blaze-textual";
           description = "Fast rendering of common datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bloodhound" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, containers
         , data-default-class, exceptions, hashable, http-client, http-types
         , mtl, mtl-compat, network-uri, scientific, semigroups, stdenv
         , text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "bloodhound";
           version = "0.15.0.2";
           sha256 = "3109a143ccb0f7aac7d2346926a3769ceffd0ed0122f4670e0b589330b02bc9f";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring containers data-default-class
             exceptions hashable http-client http-types mtl mtl-compat
             network-uri scientific semigroups text time transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bitemyapp/bloodhound";
           description = "ElasticSearch client library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bloomfilter" = callPackage
        ({ mkDerivation, array, base, bytestring, deepseq, stdenv }:
         mkDerivation {
           pname = "bloomfilter";
           version = "2.0.1.0";
           sha256 = "6c5e0d357d5d39efe97ae2776e8fb533fa50c1c05397c7b85020b0f098ad790f";
           libraryHaskellDepends = [ array base bytestring deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/bloomfilter";
           description = "Pure and impure Bloom Filter implementations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "blosum" = callPackage
        ({ mkDerivation, base, containers, fasta, lens
         , optparse-applicative, pipes, pipes-text, split, stdenv, text
         , text-show
         }:
         mkDerivation {
           pname = "blosum";
           version = "0.1.1.4";
           sha256 = "44b12d24d56bfadec7a53c1d620e1cc52f4126ba01ab541a135b187846c10380";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers fasta lens text text-show
           ];
           executableHaskellDepends = [
             base containers fasta optparse-applicative pipes pipes-text split
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/GregorySchwartz/blosum#readme";
           description = "BLOSUM generator";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "bmp" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "bmp";
           version = "1.2.6.3";
           sha256 = "3cc63de40fe088ce4d1c869180fd2309bcec35a940c9e3d1904d3520ca2fdacc";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/benl23x5/bmp";
           description = "Read and write uncompressed BMP image files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bno055-haskell" = callPackage
        ({ mkDerivation, base, bytestring, cereal, h2c, mtl, resourcet
         , stdenv
         }:
         mkDerivation {
           pname = "bno055-haskell";
           version = "0.1.0";
           sha256 = "7adc29f94755047b4214115c23b63041e9d3970d2648f53dcd38b84725059ad8";
           libraryHaskellDepends = [
             base bytestring cereal h2c mtl resourcet
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/fmapE/bno055-haskell";
           description = "Library for communication with the Bosch BNO055 orientation sensor";
           license = stdenv.lib.licenses.mit;
         }) {};
      "boltzmann-samplers" = callPackage
        ({ mkDerivation, ad, base, containers, hashable, hmatrix, ieee754
         , MonadRandom, mtl, QuickCheck, stdenv, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "boltzmann-samplers";
           version = "0.1.0.0";
           sha256 = "5707065a83cb30223ffedbd740ac07d3d879bb0895ba7666d23d659e3b69883f";
           revision = "1";
           editedCabalFile = "00va7bagszricicai4jckyka8azgw6gly9ps5kabnsyv5znylfr0";
           libraryHaskellDepends = [
             ad base containers hashable hmatrix ieee754 MonadRandom mtl
             QuickCheck transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lysxia/boltzmann-samplers#readme";
           description = "Uniform random generators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bookkeeping" = callPackage
        ({ mkDerivation, base, dlist, mtl, stdenv, text, time }:
         mkDerivation {
           pname = "bookkeeping";
           version = "0.2.1.4";
           sha256 = "ff4294e6c9c03c99cdcda31586ffaedde1f20a4d21fbdd28b2f82a5754ea27e4";
           libraryHaskellDepends = [ base dlist mtl text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arowM/haskell-bookkeeping#readme";
           description = "A module for bookkeeping by double entry";
           license = stdenv.lib.licenses.mit;
         }) {};
      "boolean-like" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , semigroups, stdenv, text, vector
         }:
         mkDerivation {
           pname = "boolean-like";
           version = "0.1.1.0";
           sha256 = "6ca47b21a6d98161edfd94f4d5a19daacc13d229b87a0c107e868ff0259658b8";
           libraryHaskellDepends = [
             attoparsec base bytestring containers semigroups text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/Shou/boolean-like";
           description = "Logical combinatory operations dealing with datatypes representing booleans by their constructors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boolsimplifier" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "boolsimplifier";
           version = "0.1.8";
           sha256 = "096fa9377241520ee114403fd53b51a7369187fb4dca65f19f85a727d689828f";
           revision = "1";
           editedCabalFile = "0xqm0vn9i49b75fnvnvcnr9m4zwvhqynrkcjdxghrsxayg420lnh";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Simplification tools for simple propositional formulas";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boomerang" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell, text }:
         mkDerivation {
           pname = "boomerang";
           version = "1.4.5.3";
           sha256 = "d461a3df761b4d0fd1923060fa08efecd0921fb33dbeb628165e7e5efa089388";
           libraryHaskellDepends = [ base mtl template-haskell text ];
           doHaddock = false;
           doCheck = false;
           description = "Library for invertible parsing and printing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bordacount" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "bordacount";
           version = "0.1.0.0";
           sha256 = "cb691095f688dc2c1726750d5e5d267d3f49466377869a574d6416090a46fdce";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/bordacount#readme";
           description = "Implementation of the Borda count election method";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "both" = callPackage
        ({ mkDerivation, base, semigroups, stdenv, zero }:
         mkDerivation {
           pname = "both";
           version = "0.1.1.0";
           sha256 = "6f4ee8b7745fb3054282240fe941dd74cf2481f1a07b170d211c2b8791340e8e";
           libraryHaskellDepends = [ base semigroups zero ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/both";
           description = "Like Maybe, but with a different Monoid instance";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bound" = callPackage
        ({ mkDerivation, base, bifunctors, binary, bytes, Cabal
         , cabal-doctest, cereal, comonad, deepseq, hashable, mmorph
         , profunctors, stdenv, template-haskell, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "bound";
           version = "2.0.1";
           sha256 = "294a206f33b6583e56bd3aad620e4a7bd0a22b4bf4c6fe5988b2fe55159fbb76";
           revision = "3";
           editedCabalFile = "1ivq22ks8y4c086q6w74bh8jvgvliwzdayqw0h5zycx8wg7vcgiz";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bifunctors binary bytes cereal comonad deepseq hashable mmorph
             profunctors template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/bound/";
           description = "Making de Bruijn Succ Less";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "boundingboxes" = callPackage
        ({ mkDerivation, base, lens, stdenv }:
         mkDerivation {
           pname = "boundingboxes";
           version = "0.2.3";
           sha256 = "e80947aa2c2c7f11e7eb2eb088a463d1cd1cdf03790e4c2746b629dcb1737564";
           libraryHaskellDepends = [ base lens ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/boundingboxes";
           description = "A generic boundingbox for an arbitrary vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bower-json" = callPackage
        ({ mkDerivation, aeson, aeson-better-errors, base, bytestring
         , deepseq, ghc-prim, mtl, scientific, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "bower-json";
           version = "1.0.0.1";
           sha256 = "7aa954e2b1bf79307db710c158108bd9ddb45b333ca96072cdbfaf96c77b7e73";
           libraryHaskellDepends = [
             aeson aeson-better-errors base bytestring deepseq ghc-prim mtl
             scientific text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdgarrood/bower-json";
           description = "Read bower.json from Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "boxes" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "boxes";
           version = "0.1.4";
           sha256 = "4e3ee9a88a28ed14a61b2c885b111922f201f56392ff68d350418ff6e98dfdd8";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           description = "2D text pretty-printing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "brick" = callPackage
        ({ mkDerivation, base, config-ini, containers, contravariant
         , data-clist, deepseq, dlist, microlens, microlens-mtl
         , microlens-th, stdenv, stm, template-haskell, text, text-zipper
         , transformers, vector, vty, word-wrap
         }:
         mkDerivation {
           pname = "brick";
           version = "0.29.1";
           sha256 = "3fa5118b7f7ff8039eb3eb9386bd06500adb7b7184c44f7a3ae3e587b5c354cb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base config-ini containers contravariant data-clist deepseq dlist
             microlens microlens-mtl microlens-th stm template-haskell text
             text-zipper transformers vector vty word-wrap
           ];
           executableHaskellDepends = [
             base microlens microlens-th text text-zipper vector vty word-wrap
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/brick/";
           description = "A declarative terminal user interface library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "brittany" = callPackage
        ({ mkDerivation, aeson, base, butcher, bytestring, cmdargs
         , containers, czipwith, data-tree-print, deepseq, directory, extra
         , filepath, ghc, ghc-boot-th, ghc-exactprint, ghc-paths, hspec
         , monad-memo, mtl, multistate, neat-interpolation, pretty, safe
         , semigroups, stdenv, strict, syb, text, transformers, uniplate
         , unsafe, yaml
         }:
         mkDerivation {
           pname = "brittany";
           version = "0.9.0.0";
           sha256 = "813dade700e6506c7df1c39a85799be3b5e96e84bd0cb8aa867cc5e5d13d283a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base butcher bytestring cmdargs containers czipwith
             data-tree-print deepseq directory extra ghc ghc-boot-th
             ghc-exactprint ghc-paths monad-memo mtl multistate
             neat-interpolation pretty safe semigroups strict syb text
             transformers uniplate unsafe yaml
           ];
           executableHaskellDepends = [
             aeson base butcher bytestring cmdargs containers czipwith
             data-tree-print deepseq directory extra filepath ghc ghc-boot-th
             ghc-exactprint ghc-paths hspec monad-memo mtl multistate
             neat-interpolation pretty safe semigroups strict syb text
             transformers uniplate unsafe yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/brittany/";
           description = "Haskell source code formatter";
           license = stdenv.lib.licenses.agpl3;
         }) {};
      "broadcast-chan" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "broadcast-chan";
           version = "0.1.1";
           sha256 = "ad5bd65a301aff6df38c4111f02e73cce3bcfed7bfae6c66c2e70310f1e985f2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/merijn/broadcast-chan";
           description = "Broadcast channel type that avoids 0 reader space leaks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bson" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptohash
         , data-binary-ieee754, mtl, network, stdenv, text, time
         }:
         mkDerivation {
           pname = "bson";
           version = "0.3.2.3";
           sha256 = "9b3aba435365cdfbbd0ba8ccb3400e961d56329da57f6de2e1e391004c374982";
           libraryHaskellDepends = [
             base binary bytestring cryptohash data-binary-ieee754 mtl network
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mongodb-haskell/bson";
           description = "BSON documents are JSON-like objects with a standard binary encoding";
           license = "unknown";
         }) {};
      "bson-lens" = callPackage
        ({ mkDerivation, base, bson, lens, stdenv, text }:
         mkDerivation {
           pname = "bson-lens";
           version = "0.1.1";
           sha256 = "d73bb417def2d8cb1efebfc22482a859e119bcc4005dd10106c82dff5ceeb160";
           libraryHaskellDepends = [ base bson lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/bson-lens";
           description = "BSON lenses";
           license = stdenv.lib.licenses.mit;
         }) {};
      "btrfs" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, time, unix }:
         mkDerivation {
           pname = "btrfs";
           version = "0.1.2.3";
           sha256 = "7efc0b5c65623dcf60910baf896aec7da7ac2df4231f03a3072c78fb5b2fb88d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring time unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-btrfs";
           description = "Bindings to the btrfs API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "buffer-builder" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "buffer-builder";
           version = "0.2.4.4";
           sha256 = "01c0bafb776784a08c041abfc89c3eaee3236bf5555b98e9542676dc43db2dd8";
           libraryHaskellDepends = [
             base bytestring mtl text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chadaustin/buffer-builder";
           description = "Library for efficiently building up buffers, one piece at a time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "buffer-pipe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "buffer-pipe";
           version = "0.0";
           sha256 = "0875b6e41988f70e20d2e9d1a092ae03d545954732f93d65a3481b5c4b52dccf";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Read from stdin and write to stdout in large blocks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "butcher" = callPackage
        ({ mkDerivation, base, bifunctors, containers, deque, either, extra
         , free, microlens, microlens-th, mtl, multistate, pretty, stdenv
         , transformers, unsafe, void
         }:
         mkDerivation {
           pname = "butcher";
           version = "1.2.1.0";
           sha256 = "5c0cf0d0c835aeb8e5a7a4f9a3d7224c5b3acc65eba4d44cc9688abb302d556d";
           revision = "3";
           editedCabalFile = "1faax0pipbywayjn961id2bc19y109bq0ny2hl1p9mh209iccnza";
           libraryHaskellDepends = [
             base bifunctors containers deque either extra free microlens
             microlens-th mtl multistate pretty transformers unsafe void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/butcher/";
           description = "Chops a command or program invocation into digestable pieces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bv" = callPackage
        ({ mkDerivation, base, ghc-prim, integer-gmp, stdenv }:
         mkDerivation {
           pname = "bv";
           version = "0.4.1";
           sha256 = "dd092150f1792e76e168365d69798d3a27b911ce9de8b21a47c5fed42acf45bb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ghc-prim integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iagoabal/haskell-bv";
           description = "Bit-vector arithmetic library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "byteable";
           version = "0.1.1";
           sha256 = "243b34a1b5b64b39e39fe58f75c18f6cad5b668b10cabcd86816cbde27783fe2";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-byteable";
           description = "Type class for sequence of bytes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytedump" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bytedump";
           version = "1.0";
           sha256 = "ae17b5040f0423eec792505f14d1d3e53f5ff81ddf83524f1c5dc7a16c0dc0dd";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-bytedump";
           description = "Flexible byte dump helpers for human readers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteorder" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "byteorder";
           version = "1.0.4";
           sha256 = "bd20bbb586947f99c38a4c93d9d0266f49f6fc581767b51ba568f6d5d52d2919";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://community.haskell.org/~aslatter/code/byteorder";
           description = "Exposes the native endianness or byte ordering of the system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytes" = callPackage
        ({ mkDerivation, base, binary, bytestring, Cabal, cabal-doctest
         , cereal, containers, hashable, mtl, scientific, stdenv, text, time
         , transformers, transformers-compat, unordered-containers, void
         }:
         mkDerivation {
           pname = "bytes";
           version = "0.15.3";
           sha256 = "d8dcd6b66492db37e48b95535cf3bf91b1b0f356fedba403eb73f81158e0cd4d";
           revision = "3";
           editedCabalFile = "13dwn6srx7zgiyayx5yxc14425asph9mylbi21yw30g04ahrbkxv";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base binary bytestring cereal containers hashable mtl scientific
             text time transformers transformers-compat unordered-containers
             void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ekmett/bytes";
           description = "Sharing code for serialization between binary and cereal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "byteset" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "byteset";
           version = "0.1.1.0";
           sha256 = "13499c5b279f022097e9ae1d0aeef3fcea12b7f18f50157d4950aec58741afa1";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           description = "Set of bytes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-builder" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv }:
         mkDerivation {
           pname = "bytestring-builder";
           version = "0.10.8.1.0";
           sha256 = "6d7404773621efb88b256ff88912a7dbcebc7fb86d27868ef58478249892dbc2";
           libraryHaskellDepends = [ base bytestring deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "The new bytestring builder, packaged outside of GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bytestring-conversion" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, case-insensitive
         , double-conversion, stdenv, text
         }:
         mkDerivation {
           pname = "bytestring-conversion";
           version = "0.3.1";
           sha256 = "13b7ea48737dc7a7fd4c894ff1fb9344cf8d9ef8f4201e813d578b613e874ef8";
           revision = "2";
           editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
           libraryHaskellDepends = [
             attoparsec base bytestring case-insensitive double-conversion text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/twittner/bytestring-conversion/";
           description = "Type-classes to convert values to and from ByteString";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "bytestring-lexing" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "bytestring-lexing";
           version = "0.5.0.2";
           sha256 = "01f9add3f25067a89c5ae9ab1f2fd8ab75ec9f386987ee0d83f73ec855b43f73";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Parse and produce literals efficiently from strict or lazy bytestrings";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "bytestring-strict-builder" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring, semigroups, stdenv
         }:
         mkDerivation {
           pname = "bytestring-strict-builder";
           version = "0.4.5";
           sha256 = "cf192d9951a42cf76f35c4b6dcc8d04868c5df3e279b7b29079ebcd076f8f3ce";
           libraryHaskellDepends = [
             base base-prelude bytestring semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/bytestring-strict-builder";
           description = "An efficient strict bytestring builder";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bytestring-tree-builder" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring, semigroups, stdenv
         , text
         }:
         mkDerivation {
           pname = "bytestring-tree-builder";
           version = "0.2.7.1";
           sha256 = "ae03a5b2e24068870dfcff6c6dc8d6d243aaebdb7c66746d499e7cf6cfd16bd5";
           libraryHaskellDepends = [
             base base-prelude bytestring semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/bytestring-tree-builder";
           description = "A very efficient ByteString builder implementation based on the binary tree";
           license = stdenv.lib.licenses.mit;
         }) {};
      "bytestring-trie" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "bytestring-trie";
           version = "0.2.4.1";
           sha256 = "2fe4feb526a03d32aaf673506623b3af4ce3fee126f745a8852c5fd676a61363";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "An efficient finite map from (byte)strings to values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "bzlib" = callPackage
        ({ mkDerivation, base, bytestring, bzip2, stdenv }:
         mkDerivation {
           pname = "bzlib";
           version = "0.5.0.5";
           sha256 = "9ee7d0ac7461b330820af928c13c6668bf4fe3601f171c42432a85c33718017e";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ bzip2 ];
           doHaddock = false;
           doCheck = false;
           description = "Compression and decompression in the bzip2 format";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) bzip2;};
      "bzlib-conduit" = callPackage
        ({ mkDerivation, base, bindings-DSL, bytestring, bzip2, conduit
         , conduit-extra, data-default, mtl, resourcet, stdenv
         }:
         mkDerivation {
           pname = "bzlib-conduit";
           version = "0.2.1.5";
           sha256 = "5685c0e4f7778a6bcdc6b41eb4f6b5d21190441ecf80dec2a3c62d67324667af";
           revision = "1";
           editedCabalFile = "1pz462dij6rizmbi7dw6qz50f9xgnzzw2z08cjlvbqzn05cpgdv6";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bindings-DSL bytestring conduit conduit-extra data-default mtl
             resourcet
           ];
           librarySystemDepends = [ bzip2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/bzlib-conduit";
           description = "Streaming compression/decompression via conduits";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) bzip2;};
      "c2hs" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, directory
         , dlist, filepath, language-c, pretty, process, stdenv
         }:
         mkDerivation {
           pname = "c2hs";
           version = "0.28.3";
           sha256 = "80cc6db945ee7c0328043b4e69213b2a1cb0806fb35c8362f9dea4a2c312f1cc";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             array base bytestring containers directory dlist filepath
             language-c pretty process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/c2hs";
           description = "C->Haskell FFI tool that gives some cross-language type safety";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "cabal-doctest" = callPackage
        ({ mkDerivation, base, Cabal, directory, filepath, stdenv }:
         mkDerivation {
           pname = "cabal-doctest";
           version = "1.0.6";
           sha256 = "decaaa5a73eaabaf3c4f8c644bd7f6e3f428b6244e935c0cf105f75f9b24ed2d";
           libraryHaskellDepends = [ base Cabal directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/cabal-doctest";
           description = "A Setup.hs helper for doctests running";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-file-th" = callPackage
        ({ mkDerivation, base, Cabal, directory, pretty, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "cabal-file-th";
           version = "0.2.4";
           sha256 = "0b55d7ffacd0c6324fa7c8b8f148e788e6b899fb9bf8795285dea66575bed91c";
           libraryHaskellDepends = [
             base Cabal directory pretty template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nkpart/cabal-file-th";
           description = "Template Haskell expressions for reading fields from a project's cabal file";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-install" = callPackage
        ({ mkDerivation, array, async, base, base16-bytestring, binary
         , bytestring, Cabal, containers, cryptohash-sha256, deepseq
         , directory, echo, edit-distance, filepath, hackage-security
         , hashable, HTTP, mtl, network, network-uri, pretty, process
         , random, stdenv, stm, tar, time, unix, zlib
         }:
         mkDerivation {
           pname = "cabal-install";
           version = "2.0.0.1";
           sha256 = "f991e36f3adaa1c7e2f0c422a2f2a4ab21b7041c82a8896f72afc9843a0d5d99";
           revision = "3";
           editedCabalFile = "148rq7hcbl8rq7pkywn1hk3l7lv442flf6b0wamfixxzxk74fwlj";
           isLibrary = false;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal filepath process ];
           executableHaskellDepends = [
             array async base base16-bytestring binary bytestring Cabal
             containers cryptohash-sha256 deepseq directory echo edit-distance
             filepath hackage-security hashable HTTP mtl network network-uri
             pretty process random stm tar time unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             mkdir $out/etc
             mv bash-completion $out/etc/bash_completion.d
           '';
           homepage = "http://www.haskell.org/cabal/";
           description = "The command-line interface for Cabal and Hackage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal-rpm" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath
         , http-client, http-client-tls, http-conduit, process, stdenv, time
         , unix
         }:
         mkDerivation {
           pname = "cabal-rpm";
           version = "0.12.1";
           sha256 = "5a3b718e3081dc8f499014c21b2efc205c8c75edc0588b6f15a2dc3ff33d772b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring Cabal directory filepath http-client
             http-client-tls http-conduit process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/juhp/cabal-rpm";
           description = "RPM packaging tool for Haskell Cabal-based packages";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "cabal-toolkit" = callPackage
        ({ mkDerivation, base, binary, bytestring, Cabal, containers, ghc
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "cabal-toolkit";
           version = "0.0.5";
           sha256 = "98ad3cc723fd196fd25b3ac4bea2b50bad0cc2d5f24d5557785184bb55396cf0";
           libraryHaskellDepends = [
             base binary bytestring Cabal containers ghc template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TerrorJack/cabal-toolkit#readme";
           description = "Helper functions for writing custom Setup.hs scripts.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cabal2nix" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, bytestring, Cabal
         , cabal-doctest, containers, deepseq, directory
         , distribution-nixpkgs, filepath, hackage-db, hopenssl, hpack
         , language-nix, lens, monad-par, monad-par-extras, mtl
         , optparse-applicative, pretty, process, split, stdenv, text, time
         , transformers, utf8-string, yaml
         }:
         mkDerivation {
           pname = "cabal2nix";
           version = "2.7.2";
           sha256 = "1efe847160adda73c9cf7bb39426e4522a95e9338b5048d171fdc27a4f52e68c";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base bytestring Cabal containers deepseq
             directory distribution-nixpkgs filepath hackage-db hopenssl hpack
             language-nix lens optparse-applicative pretty process split text
             time transformers yaml
           ];
           executableHaskellDepends = [
             aeson ansi-wl-pprint base bytestring Cabal containers deepseq
             directory distribution-nixpkgs filepath hackage-db hopenssl hpack
             language-nix lens monad-par monad-par-extras mtl
             optparse-applicative pretty process split text time transformers
             utf8-string yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nixos/cabal2nix#readme";
           description = "Convert Cabal files into Nix build instructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cache" = callPackage
        ({ mkDerivation, base, clock, hashable, stdenv, stm, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "cache";
           version = "0.1.0.1";
           sha256 = "0d0713104e109e788a338cbc1fd4c36c19fcb1cf0334553e80ef41e768d2672f";
           libraryHaskellDepends = [
             base clock hashable stm transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/haskell-cache";
           description = "An in-memory key/value store with expiration support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cairo" = callPackage
        ({ mkDerivation, array, base, bytestring, Cabal, cairo
         , gtk2hs-buildtools, mtl, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "cairo";
           version = "0.13.4.2";
           sha256 = "0fe675cda4a00ffeee4cecdbf858b9634433ab9a2bb9f021ff4ee6198f19a36a";
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
           libraryHaskellDepends = [
             array base bytestring mtl text utf8-string
           ];
           libraryPkgconfigDepends = [ cairo ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the Cairo library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) cairo;};
      "calendar-recycling" = callPackage
        ({ mkDerivation, base, containers, html, old-time, stdenv
         , utility-ht
         }:
         mkDerivation {
           pname = "calendar-recycling";
           version = "0.0";
           sha256 = "a33e62c5bdbbece82491b6b795510496467df9993c715c819a7aad7707ee7963";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers html old-time utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/calendar-recycling";
           description = "List years with the same calendars";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "call-stack" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "call-stack";
           version = "0.1.0";
           sha256 = "f25f5e0992a39371079cc25c2a14b5abb872fa7d868a32753aac3a258b83b1e2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/call-stack#readme";
           description = "Use GHC call-stacks in a backward compatible way";
           license = stdenv.lib.licenses.mit;
         }) {};
      "canonical-json" = callPackage
        ({ mkDerivation, base, bytestring, containers, fetchgit, parsec
         , pretty, stdenv
         }:
         mkDerivation {
           pname = "canonical-json";
           version = "0.5.0.0";
           src = fetchgit {
             url = "https://github.com/well-typed/canonical-json.git";
             sha256 = "19lc5pr85jz3f8ifmjxnkxgib0lz3vgagdny50gb04midc7y37pr";
             rev = "2d261bb971bada1893753b503452d9e6e217bc4a";
           };
           libraryHaskellDepends = [
             base bytestring containers parsec pretty
           ];
           doHaddock = false;
           doCheck = false;
           description = "Canonical JSON for signing and hashing JSON values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cardano-crypto" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, cryptonite-openssl
         , deepseq, fetchgit, hashable, memory, stdenv
         }:
         mkDerivation {
           pname = "cardano-crypto";
           version = "1.0.0";
           src = fetchgit {
             url = "https://github.com/input-output-hk/cardano-crypto";
             sha256 = "05i1z01fzg0la4hk2ff0l89sk0a5ada81w60kwj9i8ix74jchp94";
             rev = "287cc575fafe86af9d24af9d012c47f9d3f04da0";
           };
           libraryHaskellDepends = [
             base bytestring cryptonite cryptonite-openssl deepseq hashable
             memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/input-output-hk/cardano-crypto#readme";
           description = "Cryptography primitives for cardano";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-report-server" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring
         , case-insensitive, directory, exceptions, fetchgit, filelock
         , filepath, formatting, http-types, lens, lens-aeson, lifted-base
         , log-warper, monad-control, mtl, network, optparse-applicative
         , parsec, random, stdenv, text, time, transformers, universum
         , vector, wai, wai-extra, warp, wreq
         }:
         mkDerivation {
           pname = "cardano-report-server";
           version = "0.4.9";
           src = fetchgit {
             url = "https://github.com/input-output-hk/cardano-report-server.git";
             sha256 = "143jqpgw2a76mc2m6fypbvcfx0m8yxx8gc7pxllxcff0ps9smk9v";
             rev = "0f4d1fc44b18d7bc496a2435b63e36a39bd98d22";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring case-insensitive directory
             exceptions filelock filepath formatting http-types lens lens-aeson
             lifted-base log-warper monad-control mtl network
             optparse-applicative parsec random text time transformers universum
             vector wai wai-extra warp wreq
           ];
           executableHaskellDepends = [
             base directory filepath http-types monad-control mtl
             optparse-applicative parsec random universum wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/input-output-hk/cardano-report-server";
           description = "Reporting server for CSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cardano-sl" = callPackage
        ({ mkDerivation, acid-state, aeson, ansi-terminal, ansi-wl-pprint
         , base, binary, bytestring, canonical-json, cardano-crypto
         , cardano-sl-binary, cardano-sl-block, cardano-sl-core
         , cardano-sl-crypto, cardano-sl-db, cardano-sl-delegation
         , cardano-sl-infra, cardano-sl-lrc, cardano-sl-networking
         , cardano-sl-ssc, cardano-sl-txp, cardano-sl-update
         , cardano-sl-util, cborg, cereal, conduit, constraints, containers
         , cpphs, cryptonite, data-default, deepseq, directory, dns, ed25519
         , ekg-core, ekg-statsd, ekg-wai, ether, exceptions, extra, filelock
         , filepath, fmt, formatting, generic-arbitrary, half, hashable
         , hspec, kademlia, lens, log-warper, lrucache, memory, mmorph
         , monad-control, MonadRandom, mtl, neat-interpolation
         , network-transport, network-transport-tcp, optparse-applicative
         , parsec, plutus-prototype, pvss, QuickCheck, quickcheck-instances
         , random, reflection, resourcet, rocksdb-haskell-ng
         , safe-exceptions, safecopy, serokell-util, servant, servant-client
         , servant-client-core, servant-server, servant-swagger, stdenv, stm
         , systemd, tagged, template-haskell, text, text-format, time
         , time-units, transformers, transformers-base, universum, unix
         , unliftio, unordered-containers, vector, wai, warp, warp-tls, yaml
         }:
         mkDerivation {
           pname = "cardano-sl";
           version = "1.1.0";
           src = ./../lib;
           libraryHaskellDepends = [
             acid-state aeson ansi-terminal ansi-wl-pprint base binary
             bytestring canonical-json cardano-crypto cardano-sl-binary
             cardano-sl-block cardano-sl-core cardano-sl-crypto cardano-sl-db
             cardano-sl-delegation cardano-sl-infra cardano-sl-lrc
             cardano-sl-networking cardano-sl-ssc cardano-sl-txp
             cardano-sl-update cardano-sl-util cborg cereal conduit constraints
             containers cpphs cryptonite data-default deepseq directory dns
             ed25519 ekg-core ekg-statsd ekg-wai ether exceptions filelock
             filepath formatting generic-arbitrary half hashable hspec kademlia
             lens log-warper lrucache memory mmorph monad-control MonadRandom
             mtl neat-interpolation network-transport network-transport-tcp
             optparse-applicative parsec plutus-prototype pvss QuickCheck random
             reflection resourcet rocksdb-haskell-ng safe-exceptions safecopy
             serokell-util servant servant-client servant-client-core
             servant-server servant-swagger stm systemd tagged template-haskell
             text text-format time time-units transformers transformers-base
             universum unix unliftio unordered-containers vector wai warp
             warp-tls yaml
           ];
           testHaskellDepends = [
             base bytestring canonical-json cardano-crypto cardano-sl-binary
             cardano-sl-block cardano-sl-core cardano-sl-crypto cardano-sl-db
             cardano-sl-delegation cardano-sl-infra cardano-sl-lrc
             cardano-sl-networking cardano-sl-ssc cardano-sl-txp
             cardano-sl-update cardano-sl-util cborg cereal containers
             cryptonite data-default extra filelock fmt formatting
             generic-arbitrary half hspec lens MonadRandom mtl pvss QuickCheck
             quickcheck-instances random reflection safecopy serokell-util
             tagged text text-format time-units universum unordered-containers
             vector
           ];
           doHaddock = false;
           description = "Cardano SL main implementation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-auxx" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, async, base, bytestring
         , canonical-json, cardano-sl, cardano-sl-block, cardano-sl-client
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-generator, cardano-sl-infra, cardano-sl-networking
         , cardano-sl-ssc, cardano-sl-txp, cardano-sl-update
         , cardano-sl-util, conduit, constraints, containers, cpphs
         , data-default, Earley, formatting, generic-arbitrary, haskeline
         , hspec, lens, loc, log-warper, megaparsec, mmorph, MonadRandom
         , mtl, neat-interpolation, network-transport-tcp
         , optparse-applicative, parser-combinators, QuickCheck
         , quickcheck-instances, random, reflection, resourcet
         , safe-exceptions, scientific, serokell-util, split, stdenv, stm
         , temporary, text, text-format, time-units, transformers, universum
         , unix, unordered-containers, validation
         }:
         mkDerivation {
           pname = "cardano-sl-auxx";
           version = "1.1.0";
           src = ./../auxx;
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint async base bytestring canonical-json
             cardano-sl cardano-sl-block cardano-sl-client cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-generator
             cardano-sl-infra cardano-sl-networking cardano-sl-ssc
             cardano-sl-txp cardano-sl-update cardano-sl-util conduit
             constraints containers data-default Earley formatting
             generic-arbitrary haskeline lens loc log-warper megaparsec mmorph
             MonadRandom mtl neat-interpolation optparse-applicative
             parser-combinators QuickCheck quickcheck-instances random
             reflection resourcet safe-exceptions scientific serokell-util split
             stm text text-format time-units transformers universum unix
             unordered-containers validation
           ];
           libraryToolDepends = [ cpphs ];
           executableHaskellDepends = [
             base cardano-sl cardano-sl-core cardano-sl-infra
             cardano-sl-networking cardano-sl-txp cardano-sl-update
             cardano-sl-util constraints formatting log-warper
             network-transport-tcp safe-exceptions temporary universum unix
           ];
           executableToolDepends = [ cpphs ];
           testHaskellDepends = [
             cardano-sl-core cardano-sl-crypto hspec QuickCheck universum
           ];
           testToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - Auxx";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-binary" = callPackage
        ({ mkDerivation, autoexporter, base, binary, bytestring, cborg
         , containers, cpphs, digest, formatting, half, hashable, lens, mtl
         , parsec, process, QuickCheck, quickcheck-instances
         , safe-exceptions, semigroups, serokell-util, stdenv, stm, tagged
         , template-haskell, text, th-lift-instances, th-utilities, time
         , time-units, transformers, transformers-base, transformers-lift
         , universum, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cardano-sl-binary";
           version = "1.1.0";
           src = ./../binary;
           libraryHaskellDepends = [
             autoexporter base binary bytestring cborg containers digest
             formatting half hashable lens mtl parsec process QuickCheck
             quickcheck-instances safe-exceptions semigroups serokell-util stm
             tagged template-haskell text th-lift-instances th-utilities time
             time-units transformers transformers-base transformers-lift
             universum unordered-containers vector
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - binary serialization";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-block" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cardano-sl-binary
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-delegation, cardano-sl-infra, cardano-sl-lrc
         , cardano-sl-networking, cardano-sl-ssc, cardano-sl-txp
         , cardano-sl-update, cardano-sl-util, cborg, conduit, containers
         , cpphs, cryptonite, data-default, directory, ekg-core, ether
         , exceptions, filepath, formatting, generic-arbitrary, lens
         , log-warper, mtl, QuickCheck, random, reflection
         , rocksdb-haskell-ng, safe-exceptions, serokell-util, stdenv, stm
         , text, text-format, time-units, transformers, universum, unliftio
         , unordered-containers
         }:
         mkDerivation {
           pname = "cardano-sl-block";
           version = "1.1.0";
           src = ./../block;
           libraryHaskellDepends = [
             aeson base bytestring cardano-sl-binary cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-delegation
             cardano-sl-infra cardano-sl-lrc cardano-sl-networking
             cardano-sl-ssc cardano-sl-txp cardano-sl-update cardano-sl-util
             cborg conduit containers cryptonite data-default directory ekg-core
             ether exceptions filepath formatting generic-arbitrary lens
             log-warper mtl QuickCheck random reflection rocksdb-haskell-ng
             safe-exceptions serokell-util stm text text-format time-units
             transformers universum unliftio unordered-containers
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - block processing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-client" = callPackage
        ({ mkDerivation, base, bytestring, cardano-sl, cardano-sl-block
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-infra, cardano-sl-networking, cardano-sl-ssc
         , cardano-sl-txp, cardano-sl-update, cardano-sl-util, containers
         , cpphs, data-default, ether, formatting, hspec, lens, log-warper
         , monad-control, MonadRandom, mtl, QuickCheck, safe-exceptions
         , serokell-util, stdenv, stm, text-format, transformers, universum
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "cardano-sl-client";
           version = "1.1.0";
           src = ./../client;
           libraryHaskellDepends = [
             base cardano-sl cardano-sl-block cardano-sl-core cardano-sl-crypto
             cardano-sl-db cardano-sl-infra cardano-sl-networking cardano-sl-txp
             cardano-sl-update cardano-sl-util containers data-default ether
             formatting lens log-warper monad-control mtl QuickCheck
             serokell-util stm text-format transformers universum
             unordered-containers vector
           ];
           libraryToolDepends = [ cpphs ];
           testHaskellDepends = [
             base bytestring cardano-sl cardano-sl-core cardano-sl-crypto
             cardano-sl-db cardano-sl-infra cardano-sl-ssc cardano-sl-txp
             cardano-sl-update cardano-sl-util containers formatting hspec
             MonadRandom QuickCheck safe-exceptions universum
             unordered-containers
           ];
           testToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL client modules";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-core" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, autoexporter, base
         , base58-bytestring, binary, bytestring, Cabal, canonical-json
         , cardano-sl-binary, cardano-sl-crypto, cardano-sl-networking
         , cardano-sl-util, cborg, containers, cpphs, cryptonite
         , cryptonite-openssl, data-default, deepseq, deriving-compat
         , digest, directory, exceptions, extra, filepath, fmt, formatting
         , generic-arbitrary, hashable, lens, log-warper, memory, mtl
         , parsec, plutus-prototype, QuickCheck, quickcheck-instances
         , random, reflection, safe-exceptions, scrypt, serokell-util
         , stdenv, tagged, template-haskell, text, text-format
         , th-lift-instances, time, time-units, universum
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "cardano-sl-core";
           version = "1.1.0";
           src = ./../core;
           libraryHaskellDepends = [
             aeson ansi-terminal autoexporter base base58-bytestring binary
             bytestring Cabal canonical-json cardano-sl-binary cardano-sl-crypto
             cardano-sl-networking cardano-sl-util cborg containers cryptonite
             cryptonite-openssl data-default deepseq deriving-compat digest
             directory exceptions extra filepath fmt formatting
             generic-arbitrary hashable lens log-warper memory mtl parsec
             plutus-prototype QuickCheck quickcheck-instances random reflection
             safe-exceptions scrypt serokell-util tagged template-haskell text
             text-format th-lift-instances time time-units universum
             unordered-containers vector
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - core";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-crypto" = callPackage
        ({ mkDerivation, aeson, autoexporter, base, binary, bytestring
         , cardano-crypto, cardano-sl-binary, cardano-sl-util, cborg
         , containers, cpphs, cryptonite, cryptonite-openssl, data-default
         , ed25519, formatting, generic-arbitrary, hashable, lens, memory
         , mtl, pvss, QuickCheck, quickcheck-instances, reflection
         , safe-exceptions, scrypt, serokell-util, stdenv, stm, text
         , text-format, transformers, universum, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "cardano-sl-crypto";
           version = "1.1.0";
           src = ./../crypto;
           libraryHaskellDepends = [
             aeson autoexporter base binary bytestring cardano-crypto
             cardano-sl-binary cardano-sl-util cborg containers cryptonite
             cryptonite-openssl data-default ed25519 formatting
             generic-arbitrary hashable lens memory mtl pvss QuickCheck
             quickcheck-instances reflection safe-exceptions scrypt
             serokell-util stm text text-format transformers universum
             unordered-containers vector
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - cryptography primitives";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-db" = callPackage
        ({ mkDerivation, base, bytestring, cardano-sl-binary
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-util
         , concurrent-extra, conduit, containers, cpphs, data-default
         , directory, ether, filepath, formatting, lens, memory, mmorph
         , monad-control, mtl, resourcet, rocksdb-haskell-ng, serokell-util
         , stdenv, text-format, transformers, universum, unliftio
         }:
         mkDerivation {
           pname = "cardano-sl-db";
           version = "1.1.0";
           src = ./../db;
           libraryHaskellDepends = [
             base bytestring cardano-sl-binary cardano-sl-core cardano-sl-crypto
             cardano-sl-util concurrent-extra conduit containers data-default
             directory ether filepath formatting lens memory mmorph
             monad-control mtl resourcet rocksdb-haskell-ng serokell-util
             text-format transformers universum unliftio
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - basic DB interfaces";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-delegation" = callPackage
        ({ mkDerivation, aeson, base, cardano-sl-binary, cardano-sl-core
         , cardano-sl-crypto, cardano-sl-db, cardano-sl-infra
         , cardano-sl-lrc, cardano-sl-networking, cardano-sl-util, conduit
         , cpphs, ether, formatting, generic-arbitrary, lens, log-warper
         , lrucache, mmorph, mtl, QuickCheck, reflection, resourcet
         , rocksdb-haskell-ng, safe-exceptions, serokell-util, stdenv
         , text-format, time, transformers, universum, unliftio
         , unordered-containers
         }:
         mkDerivation {
           pname = "cardano-sl-delegation";
           version = "1.1.0";
           src = ./../delegation;
           libraryHaskellDepends = [
             aeson base cardano-sl-binary cardano-sl-core cardano-sl-crypto
             cardano-sl-db cardano-sl-infra cardano-sl-lrc cardano-sl-networking
             cardano-sl-util conduit ether formatting generic-arbitrary lens
             log-warper lrucache mmorph mtl QuickCheck reflection resourcet
             rocksdb-haskell-ng safe-exceptions serokell-util text-format time
             transformers universum unliftio unordered-containers
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - delegation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-explorer" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cardano-sl
         , cardano-sl-binary, cardano-sl-block, cardano-sl-client
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-delegation, cardano-sl-generator, cardano-sl-infra
         , cardano-sl-networking, cardano-sl-ssc, cardano-sl-txp
         , cardano-sl-update, cardano-sl-util, conduit, containers, cpphs
         , cryptonite, data-default, engine-io, engine-io-wai, ether
         , exceptions, formatting, generic-arbitrary, hspec, http-types
         , lens, log-warper, memory, MonadRandom, mtl, optparse-applicative
         , optparse-simple, purescript-bridge, QuickCheck, resourcet
         , rocksdb-haskell-ng, safe, safe-exceptions, serokell-util, servant
         , servant-generic, servant-multipart, servant-server
         , servant-swagger, socket-io, stdenv, stm, swagger2, text
         , text-format, time, time-units, transformers, universum, unliftio
         , unordered-containers, vector, wai, wai-cors, wai-extra, warp
         }:
         mkDerivation {
           pname = "cardano-sl-explorer";
           version = "1.1.0";
           src = ./../explorer;
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring cardano-sl cardano-sl-binary cardano-sl-block
             cardano-sl-client cardano-sl-core cardano-sl-crypto cardano-sl-db
             cardano-sl-delegation cardano-sl-generator cardano-sl-infra
             cardano-sl-networking cardano-sl-ssc cardano-sl-txp
             cardano-sl-update cardano-sl-util conduit containers data-default
             engine-io engine-io-wai ether exceptions formatting
             generic-arbitrary http-types lens log-warper memory mtl QuickCheck
             resourcet rocksdb-haskell-ng safe safe-exceptions serokell-util
             servant servant-generic servant-server socket-io stm text
             text-format time time-units transformers universum unliftio
             unordered-containers vector wai wai-cors wai-extra warp
           ];
           libraryToolDepends = [ cpphs ];
           executableHaskellDepends = [
             aeson base bytestring cardano-sl cardano-sl-core cardano-sl-infra
             cardano-sl-networking cardano-sl-update cardano-sl-util formatting
             lens log-warper optparse-applicative optparse-simple
             purescript-bridge servant-multipart servant-server servant-swagger
             swagger2 text universum
           ];
           executableToolDepends = [ cpphs ];
           testHaskellDepends = [
             base bytestring cardano-sl cardano-sl-block cardano-sl-core
             cardano-sl-crypto cardano-sl-txp cardano-sl-util containers
             cryptonite data-default engine-io hspec lens log-warper MonadRandom
             mtl QuickCheck universum warp
           ];
           testToolDepends = [ cpphs ];
           benchmarkToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano explorer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-generator" = callPackage
        ({ mkDerivation, base, bytestring, cardano-sl, cardano-sl-binary
         , cardano-sl-block, cardano-sl-client, cardano-sl-core
         , cardano-sl-crypto, cardano-sl-db, cardano-sl-delegation
         , cardano-sl-infra, cardano-sl-lrc, cardano-sl-networking
         , cardano-sl-ssc, cardano-sl-txp, cardano-sl-update
         , cardano-sl-util, containers, cpphs, cryptonite, data-default
         , ether, exceptions, formatting, hspec, lens, log-warper
         , monad-control, MonadRandom, QuickCheck, random, safe-exceptions
         , serokell-util, stdenv, text, text-format, time-units
         , transformers-base, universum, unliftio, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "cardano-sl-generator";
           version = "1.1.0";
           src = ./../generator;
           libraryHaskellDepends = [
             base bytestring cardano-sl cardano-sl-block cardano-sl-client
             cardano-sl-core cardano-sl-crypto cardano-sl-db
             cardano-sl-delegation cardano-sl-infra cardano-sl-lrc
             cardano-sl-networking cardano-sl-ssc cardano-sl-txp
             cardano-sl-update cardano-sl-util containers cryptonite
             data-default ether exceptions formatting lens log-warper
             monad-control MonadRandom QuickCheck random safe-exceptions
             serokell-util text text-format time-units transformers-base
             universum unliftio unordered-containers vector
           ];
           libraryToolDepends = [ cpphs ];
           testHaskellDepends = [
             base cardano-sl cardano-sl-binary cardano-sl-block cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-delegation
             cardano-sl-ssc cardano-sl-txp cardano-sl-update cardano-sl-util
             data-default formatting hspec lens MonadRandom QuickCheck
             safe-exceptions serokell-util universum unordered-containers
           ];
           testToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - arbitrary data generation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-infra" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , cardano-report-server, cardano-sl-binary, cardano-sl-core
         , cardano-sl-crypto, cardano-sl-db, cardano-sl-networking
         , cardano-sl-util, containers, cpphs, directory, dns, ekg-core
         , ekg-statsd, ekg-wai, ether, exceptions, filepath, formatting
         , generic-arbitrary, hashable, http-client, http-client-tls
         , iproute, kademlia, lens, log-warper, lzma, monad-control, mtl
         , network-info, network-transport, network-transport-tcp
         , optparse-applicative, parsec, QuickCheck, reflection
         , safe-exceptions, serokell-util, stdenv, stm, tagged, tar, text
         , text-format, time, time-units, transformers, universum, unix
         , unordered-containers, yaml
         }:
         mkDerivation {
           pname = "cardano-sl-infra";
           version = "1.1.0";
           src = ./../infra;
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring cardano-report-server
             cardano-sl-binary cardano-sl-core cardano-sl-crypto cardano-sl-db
             cardano-sl-networking cardano-sl-util containers directory dns
             ekg-core ekg-statsd ekg-wai ether exceptions filepath formatting
             generic-arbitrary hashable http-client http-client-tls iproute
             kademlia lens log-warper lzma monad-control mtl network-info
             network-transport network-transport-tcp optparse-applicative parsec
             QuickCheck reflection safe-exceptions serokell-util stm tagged tar
             text text-format time time-units transformers universum unix
             unordered-containers yaml
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - infrastructural";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-lrc" = callPackage
        ({ mkDerivation, base, bytestring, cardano-sl-binary
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-networking, cardano-sl-util, conduit, cpphs, ether
         , formatting, generic-arbitrary, lens, log-warper, QuickCheck
         , reflection, rocksdb-haskell-ng, stdenv, text-format, universum
         , unliftio, unordered-containers
         }:
         mkDerivation {
           pname = "cardano-sl-lrc";
           version = "1.1.0";
           src = ./../lrc;
           libraryHaskellDepends = [
             base bytestring cardano-sl-binary cardano-sl-core cardano-sl-crypto
             cardano-sl-db cardano-sl-networking cardano-sl-util conduit ether
             formatting generic-arbitrary lens log-warper QuickCheck reflection
             rocksdb-haskell-ng text-format universum unliftio
             unordered-containers
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - Leaders and Richmen computation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-networking" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
         , conduit, conduit-extra, containers, cryptonite, data-default
         , ekg-core, exceptions, formatting, hashable, hspec, kademlia, lens
         , log-warper, mmorph, monad-control, MonadRandom, mtl, network
         , network-transport, network-transport-inmemory
         , network-transport-tcp, o-clock, optparse-simple, QuickCheck
         , random, resourcet, safe-exceptions, serokell-util, statistics
         , stdenv, stm, text, text-format, time, time-units, transformers
         , transformers-base, transformers-lift, universum, unliftio-core
         }:
         mkDerivation {
           pname = "cardano-sl-networking";
           version = "1.1.0";
           src = ./../networking;
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async attoparsec base binary bytestring containers cryptonite
             data-default ekg-core exceptions formatting hashable kademlia lens
             log-warper mmorph monad-control mtl network network-transport
             network-transport-tcp o-clock QuickCheck random resourcet
             safe-exceptions serokell-util statistics stm text text-format time
             time-units transformers transformers-base transformers-lift
             universum unliftio-core
           ];
           executableHaskellDepends = [
             attoparsec base binary bytestring conduit conduit-extra containers
             exceptions formatting lens log-warper MonadRandom mtl
             network-transport-tcp optparse-simple random resourcet
             safe-exceptions serokell-util text text-format time-units
           ];
           testHaskellDepends = [
             base binary bytestring containers hspec lens log-warper mtl
             network-transport network-transport-inmemory network-transport-tcp
             QuickCheck random safe-exceptions serokell-util stm time-units
           ];
           doHaddock = false;
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-node" = callPackage
        ({ mkDerivation, base, cardano-sl, cardano-sl-core
         , cardano-sl-infra, cardano-sl-networking, cardano-sl-ssc
         , cardano-sl-update, cardano-sl-util, cpphs, formatting, log-warper
         , stdenv, universum
         }:
         mkDerivation {
           pname = "cardano-sl-node";
           version = "1.1.0";
           src = ./../node;
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base cardano-sl cardano-sl-core cardano-sl-infra
             cardano-sl-networking cardano-sl-ssc cardano-sl-update
             cardano-sl-util formatting log-warper universum
           ];
           executableToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL simple node executable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-ssc" = callPackage
        ({ mkDerivation, aeson, array, base, bytestring, cardano-sl-binary
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-infra, cardano-sl-lrc, cardano-sl-networking
         , cardano-sl-util, containers, cpphs, cryptonite, data-default
         , ekg-core, ether, exceptions, formatting, generic-arbitrary, lens
         , log-warper, memory, mmorph, mono-traversable, mtl, parsec
         , QuickCheck, reflection, rocksdb-haskell-ng, safe-exceptions
         , serokell-util, stdenv, stm, tagged, text, text-format, time-units
         , transformers, universum, unordered-containers
         }:
         mkDerivation {
           pname = "cardano-sl-ssc";
           version = "1.1.0";
           src = ./../ssc;
           libraryHaskellDepends = [
             aeson array base bytestring cardano-sl-binary cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-infra cardano-sl-lrc
             cardano-sl-networking cardano-sl-util containers cryptonite
             data-default ekg-core ether exceptions formatting generic-arbitrary
             lens log-warper memory mmorph mono-traversable mtl parsec
             QuickCheck reflection rocksdb-haskell-ng safe-exceptions
             serokell-util stm tagged text text-format time-units transformers
             universum unordered-containers
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - shared seed computation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-tools" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, array, async, attoparsec
         , base, base58-bytestring, bytestring, canonical-json
         , cardano-report-server, cardano-sl, cardano-sl-binary
         , cardano-sl-block, cardano-sl-core, cardano-sl-crypto
         , cardano-sl-db, cardano-sl-infra, cardano-sl-lrc
         , cardano-sl-networking, cardano-sl-txp, cardano-sl-update
         , cardano-sl-util, Chart, Chart-diagrams, containers, cpphs
         , cryptonite, data-default, directory, ed25519, fgl, filepath
         , foldl, formatting, Glob, graphviz, kademlia, lens, lifted-async
         , log-warper, MonadRandom, mtl, neat-interpolation
         , optparse-applicative, parsec, pipes, pipes-bytestring
         , pipes-interleave, pipes-safe, process, QuickCheck, random
         , random-shuffle, safe-exceptions, serokell-util, silently, stdenv
         , stm, tabl, tar, text, time, time-units, universum, unix
         , unix-compat, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "cardano-sl-tools";
           version = "1.1.0";
           src = ./../tools;
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson ansi-wl-pprint array async attoparsec base base58-bytestring
             bytestring canonical-json cardano-report-server cardano-sl
             cardano-sl-binary cardano-sl-block cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-infra cardano-sl-lrc
             cardano-sl-networking cardano-sl-txp cardano-sl-update
             cardano-sl-util Chart Chart-diagrams containers cryptonite
             data-default directory ed25519 fgl filepath foldl formatting Glob
             graphviz kademlia lens lifted-async log-warper MonadRandom mtl
             neat-interpolation optparse-applicative parsec pipes
             pipes-bytestring pipes-interleave pipes-safe process QuickCheck
             random random-shuffle safe-exceptions serokell-util silently stm
             tabl tar text time time-units universum unix unix-compat
             unordered-containers vector yaml
           ];
           executableToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - Tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-txp" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cardano-sl-binary
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-infra, cardano-sl-networking, cardano-sl-util, conduit
         , containers, cpphs, data-default, ekg-core, ether, exceptions, fmt
         , formatting, generic-arbitrary, hashable, lens, log-warper, memory
         , mmorph, mtl, neat-interpolation, plutus-prototype, QuickCheck
         , reflection, resourcet, rocksdb-haskell-ng, safe-exceptions
         , serokell-util, stdenv, stm, tagged, template-haskell, text
         , text-format, transformers, universum, unliftio
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "cardano-sl-txp";
           version = "1.1.0";
           src = ./../txp;
           libraryHaskellDepends = [
             aeson base bytestring cardano-sl-binary cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-infra
             cardano-sl-networking cardano-sl-util conduit containers
             data-default ekg-core ether exceptions fmt formatting
             generic-arbitrary hashable lens log-warper memory mmorph mtl
             neat-interpolation plutus-prototype QuickCheck reflection resourcet
             rocksdb-haskell-ng safe-exceptions serokell-util stm tagged
             template-haskell text text-format transformers universum unliftio
             unordered-containers vector
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - transaction processing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-update" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, cardano-sl-binary
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-infra, cardano-sl-lrc, cardano-sl-networking
         , cardano-sl-util, conduit, containers, cpphs, data-default
         , directory, ether, exceptions, formatting, generic-arbitrary
         , hashable, http-client, http-client-tls, http-conduit, lens
         , log-warper, memory, mtl, QuickCheck, reflection, resourcet
         , rocksdb-haskell-ng, safe-exceptions, serokell-util, stdenv, stm
         , tagged, template-haskell, text, text-format, time-units
         , transformers, universum, unliftio, unordered-containers
         }:
         mkDerivation {
           pname = "cardano-sl-update";
           version = "1.1.0";
           src = ./../update;
           libraryHaskellDepends = [
             aeson base bytestring Cabal cardano-sl-binary cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-infra cardano-sl-lrc
             cardano-sl-networking cardano-sl-util conduit containers
             data-default directory ether exceptions formatting
             generic-arbitrary hashable http-client http-client-tls http-conduit
             lens log-warper memory mtl QuickCheck reflection resourcet
             rocksdb-haskell-ng safe-exceptions serokell-util stm tagged
             template-haskell text text-format time-units transformers universum
             unliftio unordered-containers
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - update";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-util" = callPackage
        ({ mkDerivation, aeson, autoexporter, base, bytestring
         , cardano-sl-networking, cborg, cereal, concurrent-extra
         , containers, cpphs, cryptonite, data-default, deepseq, directory
         , ether, exceptions, filepath, formatting, hashable, hspec, lens
         , log-warper, lrucache, megaparsec, mmorph, mtl
         , optparse-applicative, parsec, process, QuickCheck
         , quickcheck-instances, random, reflection, resourcet
         , safe-exceptions, semigroups, serokell-util, stdenv, stm, tagged
         , template-haskell, text, text-format, th-lift-instances, time
         , time-units, transformers, transformers-base, transformers-lift
         , universum, unliftio-core, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cardano-sl-util";
           version = "1.1.0";
           src = ./../util;
           libraryHaskellDepends = [
             aeson autoexporter base bytestring cardano-sl-networking cborg
             cereal concurrent-extra containers cryptonite data-default deepseq
             directory ether exceptions filepath formatting hashable hspec lens
             log-warper lrucache megaparsec mmorph mtl optparse-applicative
             parsec process QuickCheck quickcheck-instances random reflection
             resourcet safe-exceptions semigroups serokell-util stm tagged
             template-haskell text text-format th-lift-instances time time-units
             transformers transformers-base transformers-lift universum
             unliftio-core unordered-containers vector
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - general utilities";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cardano-sl-wallet" = callPackage
        ({ mkDerivation, acid-state, aeson, async, base, base58-bytestring
         , bytestring, cardano-sl, cardano-sl-block, cardano-sl-client
         , cardano-sl-core, cardano-sl-crypto, cardano-sl-db
         , cardano-sl-delegation, cardano-sl-generator, cardano-sl-infra
         , cardano-sl-lrc, cardano-sl-networking, cardano-sl-ssc
         , cardano-sl-txp, cardano-sl-update, cardano-sl-util, containers
         , cpphs, cryptonite, data-default, directory, dlist, ether
         , exceptions, filepath, formatting, hashable, hspec, lens
         , log-warper, memory, monad-control, MonadRandom, mtl, o-clock
         , QuickCheck, quickcheck-instances, random, reflection
         , safe-exceptions, safecopy, semver, serokell-util, servant
         , servant-generic, servant-multipart, servant-server
         , servant-swagger, servant-swagger-ui, stdenv, stm, swagger2, text
         , text-format, time, time-units, transformers, universum, unix
         , unliftio, unordered-containers, wai, wai-websockets, websockets
         }:
         mkDerivation {
           pname = "cardano-sl-wallet";
           version = "1.1.0";
           src = ./../wallet;
           libraryHaskellDepends = [
             acid-state aeson async base base58-bytestring bytestring cardano-sl
             cardano-sl-block cardano-sl-client cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-delegation
             cardano-sl-generator cardano-sl-infra cardano-sl-networking
             cardano-sl-ssc cardano-sl-txp cardano-sl-update cardano-sl-util
             containers cryptonite data-default directory dlist ether exceptions
             filepath formatting hashable hspec lens log-warper memory
             monad-control mtl o-clock QuickCheck quickcheck-instances random
             reflection safe-exceptions safecopy semver serokell-util servant
             servant-generic servant-multipart servant-server servant-swagger
             servant-swagger-ui stm swagger2 text text-format time time-units
             transformers universum unix unliftio unordered-containers wai
             wai-websockets websockets
           ];
           libraryToolDepends = [ cpphs ];
           testHaskellDepends = [
             base cardano-sl cardano-sl-block cardano-sl-client cardano-sl-core
             cardano-sl-crypto cardano-sl-db cardano-sl-delegation
             cardano-sl-generator cardano-sl-infra cardano-sl-lrc
             cardano-sl-networking cardano-sl-ssc cardano-sl-txp
             cardano-sl-update cardano-sl-util containers data-default ether
             formatting hspec lens log-warper MonadRandom mtl QuickCheck
             serokell-util stm text-format universum unordered-containers
           ];
           testToolDepends = [ cpphs ];
           doHaddock = false;
           description = "Cardano SL - wallet";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cslw" = callPackage
        ({ mkDerivation, acid-state, aeson, aeson-pretty, base, bytestring
         , cardano-crypto, cardano-sl, cardano-sl-binary, cardano-sl-block
         , cardano-sl-client, cardano-sl-core, cardano-sl-crypto
         , cardano-sl-db, cardano-sl-delegation, cardano-sl-infra
         , cardano-sl-networking, cardano-sl-ssc, cardano-sl-txp
         , cardano-sl-update, cardano-sl-util, cardano-sl-wallet
         , constraints, containers, data-default, ether, exceptions, fmt
         , formatting, generics-sop, hspec, http-api-data, http-client
         , http-types, insert-ordered-containers, ixset-typed, json-sop
         , lens, log-warper, memory, mtl, neat-interpolation, network-uri
         , optparse-applicative, QuickCheck, quickcheck-instances
         , safe-exceptions, serokell-util, servant, servant-client
         , servant-quickcheck, servant-server, servant-swagger, stdenv, stm
         , string-conv, swagger2, template-haskell, text, text-format, time
         , time-units, transformers, universum, unordered-containers, vector
         , wai, wai-cors, wai-extra, warp
         }:
         mkDerivation {
           pname = "cslw";
           version = "0.1.0.0";
           src = ./../wallet-new;
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring cardano-sl cardano-sl-block
             cardano-sl-client cardano-sl-core cardano-sl-crypto cardano-sl-db
             cardano-sl-infra cardano-sl-networking cardano-sl-ssc
             cardano-sl-txp cardano-sl-update cardano-sl-util cardano-sl-wallet
             containers data-default exceptions formatting generics-sop
             http-api-data http-client http-types ixset-typed json-sop lens
             log-warper memory mtl network-uri QuickCheck safe-exceptions
             serokell-util servant servant-client servant-quickcheck
             servant-server string-conv swagger2 template-haskell text
             text-format time transformers universum unordered-containers vector
             wai warp
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring cardano-sl cardano-sl-client
             cardano-sl-core cardano-sl-crypto cardano-sl-infra
             cardano-sl-networking cardano-sl-ssc cardano-sl-txp
             cardano-sl-update cardano-sl-util cardano-sl-wallet containers
             data-default exceptions formatting http-api-data http-types
             insert-ordered-containers ixset-typed lens log-warper memory mtl
             neat-interpolation optparse-applicative QuickCheck safe-exceptions
             serokell-util servant servant-server servant-swagger stm
             string-conv swagger2 text text-format time-units universum
             unordered-containers wai wai-cors wai-extra warp
           ];
           testHaskellDepends = [
             acid-state aeson aeson-pretty base bytestring cardano-crypto
             cardano-sl cardano-sl-binary cardano-sl-block cardano-sl-client
             cardano-sl-core cardano-sl-crypto cardano-sl-db
             cardano-sl-delegation cardano-sl-infra cardano-sl-networking
             cardano-sl-ssc cardano-sl-txp cardano-sl-update cardano-sl-util
             cardano-sl-wallet constraints containers data-default ether
             exceptions fmt formatting hspec http-client http-types
             insert-ordered-containers ixset-typed lens log-warper memory mtl
             neat-interpolation optparse-applicative QuickCheck
             quickcheck-instances safe-exceptions serokell-util servant
             servant-quickcheck servant-server servant-swagger stm string-conv
             swagger2 text text-format time-units universum unordered-containers
           ];
           doHaddock = false;
           homepage = "https://github.com/input-output-hk/cardano-sl/#readme";
           description = "The Wallet Backend for a Cardano node";
           license = stdenv.lib.licenses.mit;
         }) {};
      "carray" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, ix-shapable
         , QuickCheck, stdenv, syb
         }:
         mkDerivation {
           pname = "carray";
           version = "0.1.6.8";
           sha256 = "8f1967d54c7cf9680481c6f630eafa66f6d916b93c98f3b3c47449f682f11613";
           libraryHaskellDepends = [
             array base binary bytestring ix-shapable QuickCheck syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "A C-compatible array library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cartel" = callPackage
        ({ mkDerivation, base, directory, filepath, optparse-applicative
         , pretty-show, process, split, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "cartel";
           version = "0.18.0.2";
           sha256 = "7b27aa2cbeb73b1d5bf93214f290275025c3231fee23b32d80de104ec76ec270";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory filepath optparse-applicative pretty-show process
             split time transformers
           ];
           executableHaskellDepends = [
             base directory filepath optparse-applicative pretty-show process
             split time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/cartel";
           description = "Specify Cabal files in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "case-insensitive" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, hashable, stdenv, text
         }:
         mkDerivation {
           pname = "case-insensitive";
           version = "1.2.0.10";
           sha256 = "66321c40fffb35f3a3188ba508753b74aada53fb51c822a9752614b03765306c";
           revision = "2";
           editedCabalFile = "197c93pa4lq6rgv59s9q9m11lziyyy6jlizvqap4lz0ijfnmj1gx";
           libraryHaskellDepends = [ base bytestring deepseq hashable text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/case-insensitive";
           description = "Case insensitive string comparison";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cased" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "cased";
           version = "0.1.0.0";
           sha256 = "8394e6705ed83152875e1de1c51c54c26b04a2359919d8958d66997b2b60ad23";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/cased";
           description = "Track string casing in its type";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cases" = callPackage
        ({ mkDerivation, attoparsec, base-prelude, loch-th, stdenv, text }:
         mkDerivation {
           pname = "cases";
           version = "0.1.3.2";
           sha256 = "9ecf632f7751aac2ed7ec93407f9499237316f2eb50f331bb4969abf3359a8a9";
           libraryHaskellDepends = [ attoparsec base-prelude loch-th text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/cases";
           description = "A converter for spinal, snake and camel cases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "casing" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "casing";
           version = "0.1.2.1";
           sha256 = "a8bff2e6ed42915a472fa6f62873d78f21c2d31390845a8d3b5ea2638101a638";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           description = "Convert between various source code casing conventions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cassava" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring
         , bytestring-builder, containers, deepseq, hashable, Only
         , scientific, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cassava";
           version = "0.5.1.0";
           sha256 = "762c8aaea2cdad61f52bad1b9f1f3b32764b4b6da03371aba6e5017f69614277";
           libraryHaskellDepends = [
             array attoparsec base bytestring bytestring-builder containers
             deepseq hashable Only scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cassava";
           description = "A CSV parsing and encoding library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cassava-conduit" = callPackage
        ({ mkDerivation, array, base, bifunctors, bytestring, cassava
         , conduit, conduit-extra, containers, mtl, stdenv, text
         }:
         mkDerivation {
           pname = "cassava-conduit";
           version = "0.4.0.1";
           sha256 = "3e49fa4589f71feae0e31241c1fbd17639f22fd52a789a16829cc13141a69f78";
           libraryHaskellDepends = [
             array base bifunctors bytestring cassava conduit conduit-extra
             containers mtl text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/domdere/cassava-conduit";
           description = "Conduit interface for cassava package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cassette" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cassette";
           version = "0.1.0";
           sha256 = "fd40b3fd44eebce549216f3a4c1852f5b109edddfff3d6d7e243b64574981613";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A combinator library for simultaneously defining parsers and pretty printers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cast" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cast";
           version = "0.1.0.2";
           sha256 = "24d545e5974436b6e3ee9dfda7ed68218c9f698103adae676a60860d90d7bc91";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-patterns/cast#readme";
           description = "Abstact cast pattern";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cayley-client" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, binary, bytestring
         , exceptions, http-client, http-conduit, lens, lens-aeson, mtl
         , stdenv, text, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "cayley-client";
           version = "0.4.3";
           sha256 = "4606ace14ae4fbb895e06b5cc89fa2064fdace569175b3913a29ec6c198c3285";
           libraryHaskellDepends = [
             aeson attoparsec base binary bytestring exceptions http-client
             http-conduit lens lens-aeson mtl text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/cayley-client";
           description = "A Haskell client for the Cayley graph database";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cborg" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, fetchgit
         , ghc-prim, half, integer-gmp, primitive, stdenv, text
         }:
         mkDerivation {
           pname = "cborg";
           version = "0.2.0.0";
           src = fetchgit {
             url = "https://github.com/well-typed/cborg";
             sha256 = "0i38fzyj34cg5i6n0kk05zv255hbz2544rxknsxlvdz90cr2rk51";
             rev = "8bddf97abe613d4eb523ed6b0ff8eabbd713c744";
           };
           postUnpack = "sourceRoot+=/cborg; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             array base bytestring containers ghc-prim half integer-gmp
             primitive text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Concise Binary Object Representation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, ghc-prim
         , stdenv
         }:
         mkDerivation {
           pname = "cereal";
           version = "0.5.5.0";
           sha256 = "0b97320ffbfa6df2e5679022215dbd0fe6e3b5ae8428c2ff4310d9e1acf16822";
           libraryHaskellDepends = [
             array base bytestring containers ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GaloisInc/cereal";
           description = "A binary serialization library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-conduit" = callPackage
        ({ mkDerivation, base, bytestring, cereal, conduit, resourcet
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "cereal-conduit";
           version = "0.7.3";
           sha256 = "05bf926a6292ad6e17f2667c248c33f820266ea8a703749923cc936a824c00a2";
           libraryHaskellDepends = [
             base bytestring cereal conduit resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/conduit";
           description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-text" = callPackage
        ({ mkDerivation, base, cereal, stdenv, text }:
         mkDerivation {
           pname = "cereal-text";
           version = "0.1.0.2";
           sha256 = "3c7a15f4681fa53b66dcd5165f31f56ff9751a752ac5123ecc5bcf5c3ea0354c";
           libraryHaskellDepends = [ base cereal text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ulikoehler/cereal-text";
           description = "Data.Text instances for the cereal serialization library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "cereal-time" = callPackage
        ({ mkDerivation, base, cereal, stdenv, time }:
         mkDerivation {
           pname = "cereal-time";
           version = "0.1.0.0";
           sha256 = "bec6d5103ec45bee242825da4cf695f574f101bb1d48778bf7823175dfa43cb2";
           libraryHaskellDepends = [ base cereal time ];
           doHaddock = false;
           doCheck = false;
           description = "Serialize instances for types from `time` package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cereal-vector" = callPackage
        ({ mkDerivation, base, bytestring, cereal, stdenv, vector }:
         mkDerivation {
           pname = "cereal-vector";
           version = "0.2.0.1";
           sha256 = "ff0685a6c39e7aae32f8b4165e2ae06f284c867298ad4f7b776c1c1b2859f933";
           libraryHaskellDepends = [ base bytestring cereal vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/cereal-vector";
           description = "Serialize instances for Data.Vector types.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "charset" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, semigroups
         , stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "charset";
           version = "0.3.7.1";
           sha256 = "3d415d2883bd7bf0cc9f038e8323f19c71e07dd12a3c712f449ccb8b4daac0be";
           libraryHaskellDepends = [
             array base bytestring containers semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/charset";
           description = "Fast unicode character sets based on complemented PATRICIA tries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "charsetdetect-ae" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "charsetdetect-ae";
           version = "1.1.0.3";
           sha256 = "fed4d478a49dec246e7ac0dd989d90dc6fd6499f9bc83774409a4504ce4b6e96";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/charsetdetect-ae";
           description = "Character set detection using Mozilla's Universal Character Set Detector";
           license = "LGPL";
         }) {};
      "chart-unit" = callPackage
        ({ mkDerivation, base, colour, containers, data-default
         , diagrams-lib, diagrams-svg, foldl, formatting, lens, linear
         , mwc-probability, mwc-random, numhask, numhask-range, palette
         , primitive, protolude, scientific, stdenv, SVGFonts, tdigest, text
         }:
         mkDerivation {
           pname = "chart-unit";
           version = "0.5.5.0";
           sha256 = "f9008b6b30963a12a56f1b4f7554c0947c691e31c2a79caf7742c0131e735343";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base colour data-default diagrams-lib diagrams-svg foldl formatting
             lens linear numhask numhask-range palette scientific SVGFonts text
           ];
           executableHaskellDepends = [
             base containers diagrams-lib diagrams-svg foldl formatting lens
             mwc-probability mwc-random numhask primitive protolude tdigest text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonyday567/chart-unit#readme";
           description = "Native haskell charts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chaselev-deque" = callPackage
        ({ mkDerivation, abstract-deque, array, atomic-primops, base
         , ghc-prim, stdenv, transformers, vector
         }:
         mkDerivation {
           pname = "chaselev-deque";
           version = "0.5.0.5";
           sha256 = "4d58f8d56228e9f5bea2a65717dea65106323cb5ead9b5f39f904dac5c0043f4";
           libraryHaskellDepends = [
             abstract-deque array atomic-primops base ghc-prim transformers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "Chase & Lev work-stealing lock-free double-ended queues (deques)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "chatwork" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, bytestring, connection
         , data-default-class, http-api-data, http-client, http-client-tls
         , http-types, req, stdenv, text
         }:
         mkDerivation {
           pname = "chatwork";
           version = "0.1.3.0";
           sha256 = "247b866bd3b9a74bb67b4550776b4102606f4da7fc2e7d054d8161b2852bdaac";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-casing base bytestring connection data-default-class
             http-api-data http-client http-client-tls http-types req text
           ];
           executableHaskellDepends = [
             aeson aeson-casing base bytestring connection data-default-class
             http-api-data http-client http-client-tls http-types req text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matsubara0507/chatwork#readme";
           description = "The ChatWork API in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cheapskate" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers
         , data-default, deepseq, mtl, stdenv, syb, text, uniplate
         , xss-sanitize
         }:
         mkDerivation {
           pname = "cheapskate";
           version = "0.1.1";
           sha256 = "621041bf50cb9d94bf6a4eb90a038e0b0a6cb9794802f985fe126a73e08938c2";
           revision = "1";
           editedCabalFile = "1zrbp211ciia8j1br6krbxbqsj69kmx0rgkbvbpxdklmbgpfam3b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html containers data-default deepseq mtl syb text
             uniplate xss-sanitize
           ];
           executableHaskellDepends = [ base blaze-html bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/cheapskate";
           description = "Experimental markdown processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cheapskate-highlight" = callPackage
        ({ mkDerivation, base, blaze-html, cheapskate, highlighting-kate
         , stdenv, text
         }:
         mkDerivation {
           pname = "cheapskate-highlight";
           version = "0.1.0.0";
           sha256 = "5af7afb26b4ea80952963b44db695cbf18da34d3e8a7d32382a7dbfa4832d370";
           revision = "1";
           editedCabalFile = "1c8kxqdqf0j962xjdrrjfcbjsl0c1kax31rjykymv7w16d6hmlj4";
           libraryHaskellDepends = [
             base blaze-html cheapskate highlighting-kate text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cheapskate-highlight";
           description = "Code highlighting for cheapskate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cheapskate-lucid" = callPackage
        ({ mkDerivation, base, blaze-html, cheapskate, lucid, stdenv }:
         mkDerivation {
           pname = "cheapskate-lucid";
           version = "0.1.0.0";
           sha256 = "f582e512befd2707a7056c1d15541967de2e0ce5702bc2197a3fced58a777245";
           revision = "1";
           editedCabalFile = "197nx95xw21i7zyvgzcgnr36ab6vrk17c66iz8ndwz61vp1jf6hc";
           libraryHaskellDepends = [ base blaze-html cheapskate lucid ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cheapskate-lucid";
           description = "Use cheapskate with Lucid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "check-email" = callPackage
        ({ mkDerivation, base, bytestring, email-validate, resolv, stdenv
         }:
         mkDerivation {
           pname = "check-email";
           version = "1.0.2";
           sha256 = "1c2615fadba09a5d7aa5c68648d12218a595efb759842fb4f524cf380afa9327";
           libraryHaskellDepends = [ base bytestring email-validate ];
           librarySystemDepends = [ resolv ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qoelet/check-email#readme";
           description = "Confirm whether an email is valid and probably existant";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) resolv;};
      "checkers" = callPackage
        ({ mkDerivation, array, base, QuickCheck, random, semigroupoids
         , stdenv
         }:
         mkDerivation {
           pname = "checkers";
           version = "0.4.9.5";
           sha256 = "f184b291235ae9125b5255f9d2a0b5294847a7931f0fec23e39ae0ba41774ef5";
           libraryHaskellDepends = [
             array base QuickCheck random semigroupoids
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/conal/checkers";
           description = "Check properties on standard classes and data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "choice" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "choice";
           version = "0.2.2";
           sha256 = "d367e4321329df5913216f9746528e4526e14b5ad1f33edc82de8288ad719e61";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mboes/choice#readme";
           description = "A solution to boolean blindness";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "chunked-data" = callPackage
        ({ mkDerivation, base, bytestring, containers, semigroups, stdenv
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "chunked-data";
           version = "0.3.1";
           sha256 = "f710c581aee1f899e807fc9e6cba721b27d53dc9d56986f1922bc7ccddf1a79a";
           libraryHaskellDepends = [
             base bytestring containers semigroups text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Typeclasses for dealing with various chunked data representations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cipher-aes" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv
         }:
         mkDerivation {
           pname = "cipher-aes";
           version = "0.2.11";
           sha256 = "d3b171895698c73da24d7ce97543f725d26637f038de670c0fd4012ca7f95015";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-cipher-aes";
           description = "Fast AES cipher implementation with advanced mode of operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-aes128" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, stdenv
         , tagged
         }:
         mkDerivation {
           pname = "cipher-aes128";
           version = "0.7.0.3";
           sha256 = "6f27bea8bcd1987072fc75b6b423ae9c691574324b6a328ec1e2866f84412e3a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/cipher-aes128";
           description = "AES and common modes using AES-NI when available";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-blowfish" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv, vector
         }:
         mkDerivation {
           pname = "cipher-blowfish";
           version = "0.0.3";
           sha256 = "8f41170a851dba6d0b6f07298af3213baca09ab2a8aaf2adb733631feb3b6641";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Blowfish cipher";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-camellia" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv, vector
         }:
         mkDerivation {
           pname = "cipher-camellia";
           version = "0.0.2";
           sha256 = "8d0cd137cdb890646bb5d3bb52b20fa6d74e1b0c35d7d524d60edd9d43ace2a7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Camellia block cipher primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-des" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , securemem, stdenv
         }:
         mkDerivation {
           pname = "cipher-des";
           version = "0.0.6";
           sha256 = "85f1bccdec625a120ecf83b861afcb6478f8f899ceaa06fc083e642b54ff4ac7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "DES and 3DES primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cipher-rc4" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , stdenv
         }:
         mkDerivation {
           pname = "cipher-rc4";
           version = "0.1.4";
           sha256 = "c67e731bc9e7f3882e33609c3d9ec97b4e9bbd2f95cd882926acfb621970384d";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cipher-rc4";
           description = "Fast RC4 cipher implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "circle-packing" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "circle-packing";
           version = "0.1.0.6";
           sha256 = "64ee44a90da3e5fe20d5b78bfe6eba93102a6b52c65f8a7b99af7799798ee81b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Simple heuristic for packing discs of varying radii in a circle";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cisco-spark-api" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bitset-word8, bytestring
         , conduit-combinators, data-default, http-conduit, network-uri
         , optparse-applicative, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "cisco-spark-api";
           version = "0.1.0.0";
           sha256 = "baa1014e9091e2738dd894a0a79f99affcf6b83dfdd60298954c11b0012a3f72";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bitset-word8 bytestring conduit-combinators
             data-default http-conduit network-uri text
           ];
           executableHaskellDepends = [
             aeson base bytestring conduit-combinators data-default http-conduit
             optparse-applicative text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/cisco-spark-api#readme";
           description = "A Haskell bindings for Cisco Spark API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "clang-compilation-database" = callPackage
        ({ mkDerivation, aeson, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "clang-compilation-database";
           version = "0.1.0.0";
           sha256 = "8ab6fbf59e673598c0d08fc52f9eabec49ee896c57638d43bd7782425267cbda";
           libraryHaskellDepends = [ aeson base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lambdageek/clang-compilation-database";
           description = "JSON Compilation Database Format encoding and decoding";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude" = callPackage
        ({ mkDerivation, async, base, basic-prelude, bifunctors, bytestring
         , chunked-data, containers, deepseq, dlist, exceptions, ghc-prim
         , hashable, lifted-async, lifted-base, monad-unlift
         , mono-traversable, mono-traversable-instances, mtl
         , mutable-containers, primitive, safe-exceptions, say, semigroups
         , stdenv, stm, stm-chans, text, time, time-locale-compat
         , transformers, transformers-base, unordered-containers, vector
         , vector-instances
         }:
         mkDerivation {
           pname = "classy-prelude";
           version = "1.3.1";
           sha256 = "cd73a1246565f78c46aa77a95d8a22f26c390d4d6844e12d49f3d61b27806166";
           libraryHaskellDepends = [
             async base basic-prelude bifunctors bytestring chunked-data
             containers deepseq dlist exceptions ghc-prim hashable lifted-async
             lifted-base monad-unlift mono-traversable
             mono-traversable-instances mtl mutable-containers primitive
             safe-exceptions say semigroups stm stm-chans text time
             time-locale-compat transformers transformers-base
             unordered-containers vector vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "A typeclass-based Prelude";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude-conduit" = callPackage
        ({ mkDerivation, base, bytestring, classy-prelude, conduit
         , conduit-combinators, monad-control, resourcet, stdenv
         , transformers, void
         }:
         mkDerivation {
           pname = "classy-prelude-conduit";
           version = "1.3.1";
           sha256 = "5264705d7e1b6fe7eca93eb476141d3f92cc8ccd74b42883dfec17f29661e658";
           libraryHaskellDepends = [
             base bytestring classy-prelude conduit conduit-combinators
             monad-control resourcet transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "classy-prelude together with conduit functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "classy-prelude-yesod" = callPackage
        ({ mkDerivation, aeson, base, classy-prelude
         , classy-prelude-conduit, data-default, http-conduit, http-types
         , persistent, stdenv, yesod, yesod-newsfeed, yesod-static
         }:
         mkDerivation {
           pname = "classy-prelude-yesod";
           version = "1.3.1";
           sha256 = "3d65c6f8cec08f40c66f78b6563c4f590bf7705c7b9694d1c632d0f5c8e5f3fb";
           libraryHaskellDepends = [
             aeson base classy-prelude classy-prelude-conduit data-default
             http-conduit http-types persistent yesod yesod-newsfeed
             yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Provide a classy prelude including common Yesod functionality";
           license = stdenv.lib.licenses.mit;
         }) {};
      "clay" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "clay";
           version = "0.12.2";
           sha256 = "ea8b95a24568c8a37e2f8deda7f24c5c15a84886ad19f255d6d637e06786e98a";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://fvisser.nl/clay";
           description = "CSS preprocessor as embedded Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cli" = callPackage
        ({ mkDerivation, base, mtl, stdenv, terminfo, transformers }:
         mkDerivation {
           pname = "cli";
           version = "0.1.2";
           sha256 = "580a31fc25eb988dbb5ad3aebfb72d49f089cbee9693edf78dae722b2fde4acb";
           libraryHaskellDepends = [ base mtl terminfo transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-cli";
           description = "Command Line Interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clientsession" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cereal
         , cipher-aes, cprng-aes, crypto-api, crypto-random, directory
         , entropy, setenv, skein, stdenv, tagged
         }:
         mkDerivation {
           pname = "clientsession";
           version = "0.9.1.2";
           sha256 = "5915adc4de26d2a8b03f1a445bac0b0f5d10a5b0380a4eed71b79a20a727d068";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base64-bytestring bytestring cereal cipher-aes cprng-aes
             crypto-api crypto-random directory entropy setenv skein tagged
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/clientsession/tree/master";
           description = "Securely store session data in a client-side cookie";
           license = stdenv.lib.licenses.mit;
         }) {};
      "clock" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "clock";
           version = "0.7.2";
           sha256 = "886601978898d3a91412fef895e864576a7125d661e1f8abc49a2a08840e691f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/corsis/clock";
           description = "High-resolution clock functions: monotonic, realtime, cputime";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clock-extras" = callPackage
        ({ mkDerivation, base, clock, stdenv }:
         mkDerivation {
           pname = "clock-extras";
           version = "0.1.0.2";
           sha256 = "a9ed097aa9d48b53c6a555bc5f67e347249b08e2252dd4fc998fb4ab42edda59";
           libraryHaskellDepends = [ base clock ];
           doHaddock = false;
           doCheck = false;
           description = "A couple functions that probably should be in the 'clock' package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clr-host" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, clr-marshal, directory
         , file-embed, filepath, glib, mono, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "clr-host";
           version = "0.2.0.1";
           sha256 = "5306ea1368b922d595159f237877f5b76fb9744e082f8c286c4546dc1a6f0e96";
           setupHaskellDepends = [
             base Cabal directory filepath transformers
           ];
           libraryHaskellDepends = [
             base bytestring clr-marshal file-embed text
           ];
           librarySystemDepends = [ glib mono ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-host";
           description = "Hosting the Common Language Runtime";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) glib; inherit (pkgs) mono;};
      "clr-inline" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, case-insensitive
         , clr-host, clr-marshal, containers, directory, extra, filepath
         , here, lens, parsec, pipes, process, split, stdenv
         , template-haskell, temporary, text, transformers
         }:
         mkDerivation {
           pname = "clr-inline";
           version = "0.2.0.1";
           sha256 = "10def81e96417b4cb6f9e92fcbb3b70bafc9c8f64e59abf64453f9d62b72547d";
           libraryHaskellDepends = [
             base bytestring Cabal case-insensitive clr-host clr-marshal
             containers directory extra filepath here lens parsec pipes process
             split template-haskell temporary text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/tim-m89/clr-haskell";
           description = "Quasiquoters for inline C# and F#";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clr-marshal" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "clr-marshal";
           version = "0.2.0.0";
           sha256 = "4113651f3d10de21813b2a44b78ca19f9ab62b6c6d9df0c25a88940fabebdcd6";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/tim-m89/clr-haskell/tree/master/libs/clr-marshal";
           description = "Marshaling for the clr";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "clumpiness" = callPackage
        ({ mkDerivation, base, containers, stdenv, tree-fun }:
         mkDerivation {
           pname = "clumpiness";
           version = "0.17.0.0";
           sha256 = "fd4b303d206eaf242c779bb65c42256e42220c8497a6bcf3bc59589b9396c495";
           libraryHaskellDepends = [ base containers tree-fun ];
           doHaddock = false;
           doCheck = false;
           description = "Calculate the clumpiness of leaf properties in a tree";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "cmark" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "cmark";
           version = "0.5.6";
           sha256 = "855c4b7aca6d4e9eb076beb6cc6f74e7578fae7aa3625fd3fca5e3b4901a32b0";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/cmark-hs";
           description = "Fast, accurate CommonMark (Markdown) parser and renderer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cmark-gfm" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "cmark-gfm";
           version = "0.1.3";
           sha256 = "731cb392e4edfd18d0dae709904791610588e6770934e5112cbdd5e6f3d271ba";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kivikakk/cmark-gfm-hs";
           description = "Fast, accurate GitHub Flavored Markdown parser and renderer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cmark-highlight" = callPackage
        ({ mkDerivation, base, blaze-html, cmark, highlighting-kate, stdenv
         , text
         }:
         mkDerivation {
           pname = "cmark-highlight";
           version = "0.2.0.0";
           sha256 = "de769cd703d3fcd5d69428477184fad57019db55a71b1315a9bbb54317f0812b";
           revision = "1";
           editedCabalFile = "1zdxr3bfj9bn2yclm5m17aa7wid6zwhvg6mj245wd2y34p696znw";
           libraryHaskellDepends = [
             base blaze-html cmark highlighting-kate text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cmark-highlight";
           description = "Code highlighting for cmark";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cmark-lucid" = callPackage
        ({ mkDerivation, base, cmark, lucid, stdenv }:
         mkDerivation {
           pname = "cmark-lucid";
           version = "0.1.0.0";
           sha256 = "d2927b9fed0e32fe7afc539e7b427e0a95f8c9297bb6bc531101b476ba8a3c03";
           revision = "1";
           editedCabalFile = "1mizbv18bl8qrgz27wlz7sb6cfhblmp7p7gh7dqq8g0r4djrvqg5";
           libraryHaskellDepends = [ base cmark lucid ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/cmark-lucid";
           description = "Use cmark with Lucid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cmdargs" = callPackage
        ({ mkDerivation, base, filepath, process, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "cmdargs";
           version = "0.10.20";
           sha256 = "0e269dc48c3d4c0447c96ffd772a6fe69dfa1260c323f4cd7bf171cbf2ab7331";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base filepath process template-haskell transformers
           ];
           executableHaskellDepends = [
             base filepath process template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/cmdargs#readme";
           description = "Command line argument processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "code-builder" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "code-builder";
           version = "0.1.3";
           sha256 = "559e47a44cec85a8e95df92e5d2693cacc9761503c30be3b83eaebd95360a4ab";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Simple system for generating code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "code-page" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "code-page";
           version = "0.1.3";
           sha256 = "e65c86600e06d85f2e2c2a9df4b3d68e2dbd3adb2df9e922a4cd744966762191";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/code-page";
           description = "Windows code page library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "codec" = callPackage
        ({ mkDerivation, aeson, base, binary, binary-bits, bytestring, mtl
         , profunctors, stdenv, template-haskell, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "codec";
           version = "0.2.1";
           sha256 = "ffc261b58108c3d90c0b0b68461857d1148208d1a9645916e63241aaa3c25b28";
           libraryHaskellDepends = [
             aeson base binary binary-bits bytestring mtl profunctors
             template-haskell text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chpatrick/codec";
           description = "Simple bidirectional serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "codo-notation" = callPackage
        ({ mkDerivation, base, comonad, haskell-src-meta, parsec, stdenv
         , template-haskell, uniplate
         }:
         mkDerivation {
           pname = "codo-notation";
           version = "0.5.2";
           sha256 = "78eb57004541ed29eb4c54196b91ac2dd1028a3315f51cd4dc00debfc0938eaf";
           libraryHaskellDepends = [
             base comonad haskell-src-meta parsec template-haskell uniplate
           ];
           doHaddock = false;
           doCheck = false;
           description = "A notation for comonads, analogous to the do-notation for monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "colorful-monoids" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "colorful-monoids";
           version = "0.2.1.0";
           sha256 = "426e36c9219ebc19108f0968aee8900bad7642937b5800d6045c5085c2b06532";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/colorful-monoids#readme";
           description = "Styled console text output using ANSI escape sequences";
           license = stdenv.lib.licenses.mit;
         }) {};
      "colorize-haskell" = callPackage
        ({ mkDerivation, ansi-terminal, base, haskell-lexer, stdenv }:
         mkDerivation {
           pname = "colorize-haskell";
           version = "1.0.1";
           sha256 = "03764374bd1aed5c63e20517441ccaae7c95cb2fa9e416da952f26be8dba9aec";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ ansi-terminal base haskell-lexer ];
           executableHaskellDepends = [ ansi-terminal base haskell-lexer ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yav/colorize-haskell";
           description = "Highligt Haskell source";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "colour" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "colour";
           version = "2.3.4";
           sha256 = "0f439f00b322ce3d551f28a4dd1520aa2c91d699de4cdc6d485b9b04be0dc5eb";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Colour";
           description = "A model for human colour/color perception";
           license = stdenv.lib.licenses.mit;
         }) {};
      "colour-accelerate" = callPackage
        ({ mkDerivation, accelerate, base, stdenv }:
         mkDerivation {
           pname = "colour-accelerate";
           version = "0.2.0.0";
           sha256 = "ec7f80370e271b7cd87a2b0255cfeee63d73cbc895a346c447efc8e214332780";
           libraryHaskellDepends = [ accelerate base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcdonell/colour-accelerate";
           description = "Working with colours in Accelerate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "combinatorial" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "combinatorial";
           version = "0.0";
           sha256 = "466f2af4e7a25cec1766c55934821f16cf36bc9dfa14009a4355c53811960d6c";
           revision = "1";
           editedCabalFile = "18aykjlggxkwn3cl46i2vznvag5kkw2kslf69yxvf4sg34bi7yfz";
           libraryHaskellDepends = [
             array base containers transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/combinatorial/";
           description = "Count, enumerate, rank and unrank combinatorial objects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comfort-graph" = callPackage
        ({ mkDerivation, base, containers, QuickCheck, semigroups, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "comfort-graph";
           version = "0.0.3";
           sha256 = "b9d67c0f19e34c27fe759c149939c37d655a170482760389de07cca9cb534387";
           libraryHaskellDepends = [
             base containers QuickCheck semigroups transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/comfort-graph";
           description = "Graph structure with type parameters for nodes and edges";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "commutative" = callPackage
        ({ mkDerivation, base, random, semigroups, stdenv }:
         mkDerivation {
           pname = "commutative";
           version = "0.0.1.4";
           sha256 = "0de746012c73543b5dcf649434046e36d5e158e0967e8e2ae122e85d5457c9cf";
           libraryHaskellDepends = [ base random semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Commutative binary operations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "comonad" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, containers
         , contravariant, distributive, semigroups, stdenv, tagged
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "comonad";
           version = "5.0.3";
           sha256 = "a7f4584d634051123c547f0d10f88eaf23d99229dbd01dfdcd98cddd41e54df6";
           revision = "1";
           editedCabalFile = "1i72zgxjkbldkwz0g2awf44cm9466ahll89j5kl45vszx4iz0anl";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base containers contravariant distributive semigroups tagged
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/comonad/";
           description = "Comonads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comonad-transformers" = callPackage
        ({ mkDerivation, base, comonad, stdenv }:
         mkDerivation {
           pname = "comonad-transformers";
           version = "4.0";
           sha256 = "dfec0c4ce1eccd34c228951454a8f2ebab0bfbdf1cde68a70688196db2b9ff8f";
           libraryHaskellDepends = [ base comonad ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/comonad-transformers/";
           description = "This package has been merged into comonad 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "comonads-fd" = callPackage
        ({ mkDerivation, base, comonad, stdenv }:
         mkDerivation {
           pname = "comonads-fd";
           version = "4.0";
           sha256 = "3a70386e2ef3d6f444585f082de42e842a47dfe7bdbd807550839faf1bd8b7a7";
           libraryHaskellDepends = [ base comonad ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/comonads-fd/";
           description = "This package has been merged into comonad 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compact" = callPackage
        ({ mkDerivation, base, binary, bytestring, ghc-compact, stdenv }:
         mkDerivation {
           pname = "compact";
           version = "0.1.0.1";
           sha256 = "ee8533e16b94bbbf3519ccad26f3e569d60d33a5a9d2e3636e0764aff7b2d653";
           libraryHaskellDepends = [ base binary bytestring ghc-compact ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ezyang/compact";
           description = "Non-GC'd, contiguous storage for immutable data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compactmap" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "compactmap";
           version = "0.1.4.2.1";
           sha256 = "22166e0a2a78bf2b7cff49448ed9fcb145dece4f034de9afc8ce5b692fd0f774";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           description = "A read-only memory-efficient key-value store";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compensated" = callPackage
        ({ mkDerivation, base, bifunctors, binary, bytes, Cabal
         , cabal-doctest, cereal, comonad, deepseq, distributive, hashable
         , lens, log-domain, safecopy, semigroupoids, semigroups, stdenv
         , vector
         }:
         mkDerivation {
           pname = "compensated";
           version = "0.7.2";
           sha256 = "c7f9bf47a586720deda33b82ddc633d3507c8bc199eb5555c80931f6c323cae2";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bifunctors binary bytes cereal comonad deepseq distributive
             hashable lens log-domain safecopy semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/compensated/";
           description = "Compensated floating-point arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "compiler-warnings" = callPackage
        ({ mkDerivation, base, binary, parsec, stdenv, text }:
         mkDerivation {
           pname = "compiler-warnings";
           version = "0.1.0";
           sha256 = "8cf4c57e1b4d61b1163969faa6e9f2cb8f22073fa75bf982d9b8a328225f5ce3";
           libraryHaskellDepends = [ base binary parsec text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/compiler-warnings#readme";
           description = "Parser for common compiler warning formats";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "composable-associations" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "composable-associations";
           version = "0.1.0.0";
           sha256 = "9d1a10bc7ee1b514221bd8d0fc71f43f8d2338b1faebe6722f1d4db3bc29800e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/SamProtas/composable-associations#readme";
           description = "Types and helpers for composing types into a single larger key-value type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composable-associations-aeson" = callPackage
        ({ mkDerivation, aeson, base, composable-associations, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "composable-associations-aeson";
           version = "0.1.0.0";
           sha256 = "dbd754ed6d624469f16c4cd2ad51c441eeb8c62d6af66673f76034c7517c2a4f";
           libraryHaskellDepends = [
             aeson base composable-associations text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/SamProtas/composable-associations#readme";
           description = "Aeson ToJSON/FromJSON implementation for the types of composable-associations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composition" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "composition";
           version = "1.0.2.1";
           sha256 = "7123300f5eca5a7cec4eb731dc0e9c2c44aabe26b37e6579582a7267d9f7ad6a";
           doHaddock = false;
           doCheck = false;
           description = "Combinators for unorthodox function composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "composition-extra" = callPackage
        ({ mkDerivation, base, composition, contravariant, stdenv }:
         mkDerivation {
           pname = "composition-extra";
           version = "2.0.0";
           sha256 = "c998244a8fd160af3dd7ee93c417f665af51a46a04ce6b7d4623f46596ba7129";
           libraryHaskellDepends = [ base composition contravariant ];
           doHaddock = false;
           doCheck = false;
           description = "Combinators for unorthodox structure composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concise" = callPackage
        ({ mkDerivation, base, bytestring, lens, stdenv, text }:
         mkDerivation {
           pname = "concise";
           version = "0.1.0.1";
           sha256 = "5c27df5a3e1fe820548e90abc4a0e326b6d0fb286218619aa22d3af90c7b9925";
           libraryHaskellDepends = [ base bytestring lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frasertweedale/hs-concise";
           description = "Utilities for Control.Lens.Cons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrency" = callPackage
        ({ mkDerivation, array, atomic-primops, base, exceptions
         , monad-control, mtl, stdenv, stm, transformers
         }:
         mkDerivation {
           pname = "concurrency";
           version = "1.2.3.0";
           sha256 = "b835a0f66936b36b083cc6712ce4b251f9eabeab5b72b2850af881a5f0a079a9";
           libraryHaskellDepends = [
             array atomic-primops base exceptions monad-control mtl stm
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Typeclasses, functions, and data types for concurrency and STM";
           license = stdenv.lib.licenses.mit;
         }) {};
      "concurrent-extra" = callPackage
        ({ mkDerivation, base, stdenv, stm, unbounded-delays }:
         mkDerivation {
           pname = "concurrent-extra";
           version = "0.7.0.10";
           sha256 = "6f27cc0a90f5f25b3c0a1e9e3c0e3b407538908c061c5b7da34461b76e1adc12";
           libraryHaskellDepends = [ base stm unbounded-delays ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/concurrent-extra";
           description = "Extra concurrency primitives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrent-output" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, directory, exceptions
         , process, stdenv, stm, terminal-size, text, transformers, unix
         }:
         mkDerivation {
           pname = "concurrent-output";
           version = "1.10.4";
           sha256 = "5ea53fc6177232838c56fbc018dc51207a6c8393461b2e39dca5b844c703057f";
           libraryHaskellDepends = [
             ansi-terminal async base directory exceptions process stm
             terminal-size text transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "Ungarble output from several threads or commands";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "concurrent-split" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "concurrent-split";
           version = "0.0.1";
           sha256 = "60793c8eeff1fa0fe03910951d1925f3c66aec61ead64bf3f98dd6110a05b8e7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "MVars and Channels with distinguished input and output side";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "concurrent-supply" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "concurrent-supply";
           version = "0.1.8";
           sha256 = "ccf827dcd221298ae93fad6021c63a06707456de0671706b44f1f2fed867f21f";
           libraryHaskellDepends = [ base ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/concurrent-supply/";
           description = "A fast concurrent unique identifier supply with a pure API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cond" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cond";
           version = "0.4.1.1";
           sha256 = "039c76e43b5484bdc78627f50740106ae2844b3c877d92b5228de9106997ac8b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kallisti-dev/cond";
           description = "Basic conditional and boolean operators with monadic variants";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit" = callPackage
        ({ mkDerivation, base, bytestring, directory, exceptions, filepath
         , mono-traversable, mtl, primitive, resourcet, stdenv, text
         , transformers, unix, unliftio-core, vector
         }:
         mkDerivation {
           pname = "conduit";
           version = "1.3.0";
           sha256 = "d7cff0a7ee0de8661457cf7d209aa9b6ff9f24453be4abf0625c51b47cbb4094";
           libraryHaskellDepends = [
             base bytestring directory exceptions filepath mono-traversable mtl
             primitive resourcet text transformers unix unliftio-core vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Streaming data processing library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-algorithms" = callPackage
        ({ mkDerivation, async, base, bytestring, bzlib-conduit, conduit
         , conduit-combinators, conduit-extra, containers, deepseq
         , lzma-conduit, mtl, resourcet, stdenv, stm, stm-conduit
         , streaming-commons, transformers, vector
         }:
         mkDerivation {
           pname = "conduit-algorithms";
           version = "0.0.7.2";
           sha256 = "fe455b8739d924c689017fc9ae9accc27d78c7ac949fe40ea948eede9aae8aa6";
           libraryHaskellDepends = [
             async base bytestring bzlib-conduit conduit conduit-combinators
             conduit-extra containers deepseq lzma-conduit mtl resourcet stm
             stm-conduit streaming-commons transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/luispedro/conduit-algorithms#readme";
           description = "Conduit-based algorithms";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-combinators" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, chunked-data, conduit, conduit-extra, filepath
         , monad-control, mono-traversable, mwc-random, primitive, resourcet
         , stdenv, text, transformers, transformers-base, unix, unix-compat
         , vector, void
         }:
         mkDerivation {
           pname = "conduit-combinators";
           version = "1.1.2";
           sha256 = "840baed33ca32b5197817d6db1e70c4fb53eba01f86bd11c3b358cd8e08d6138";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring chunked-data
             conduit conduit-extra filepath monad-control mono-traversable
             mwc-random primitive resourcet text transformers transformers-base
             unix unix-compat vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Commonly used conduit functions, for both chunked and unchunked data";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-connection" = callPackage
        ({ mkDerivation, base, bytestring, conduit, connection, resourcet
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "conduit-connection";
           version = "0.1.0.4";
           sha256 = "5e784117f3698dc653b286fbb53d530068d0cdadbe130ec02abf42e3f2c821fc";
           libraryHaskellDepends = [
             base bytestring conduit connection resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdroege/conduit-connection";
           description = "Conduit source and sink for Network.Connection.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit-extra" = callPackage
        ({ mkDerivation, async, attoparsec, base, bytestring, conduit
         , directory, filepath, network, primitive, process, resourcet
         , stdenv, stm, streaming-commons, text, transformers, typed-process
         , unliftio-core
         }:
         mkDerivation {
           pname = "conduit-extra";
           version = "1.3.0";
           sha256 = "2c41c925fc53d9ba2e640c7cdca72c492b28c0d45f1a82e94baef8dfa65922ae";
           libraryHaskellDepends = [
             async attoparsec base bytestring conduit directory filepath network
             primitive process resourcet stm streaming-commons text transformers
             typed-process unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Batteries included conduit: adapters for common libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "conduit-iconv" = callPackage
        ({ mkDerivation, base, bytestring, conduit, stdenv }:
         mkDerivation {
           pname = "conduit-iconv";
           version = "0.1.1.3";
           sha256 = "1c71304782e4599a2987321028b50356c4982b45d9096d954e0b7c0b7ad3acb6";
           libraryHaskellDepends = [ base bytestring conduit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdroege/conduit-iconv";
           description = "Conduit for character encoding conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "conduit-parse" = callPackage
        ({ mkDerivation, base, conduit, conduit-combinators, dlist, mtl
         , parsers, safe, safe-exceptions, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "conduit-parse";
           version = "0.1.2.2";
           sha256 = "296bfb9bb3b20771fd4bc0d3e5cdb9bb27bc1050cef45a6347e8b196ed54dca7";
           libraryHaskellDepends = [
             base conduit conduit-combinators dlist mtl parsers safe
             safe-exceptions text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/conduit-parse";
           description = "Parsing framework based on conduit";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "conduit-throttle" = callPackage
        ({ mkDerivation, async, base, conduit, conduit-combinators
         , conduit-extra, monad-control, resourcet, stdenv, stm, stm-chans
         , throttle-io-stream, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "conduit-throttle";
           version = "0.3.1.0";
           sha256 = "8dd6d616f5ddce25668bb34069bfdcdfe2a866c8d708b725a9b2e450a95aa329";
           libraryHaskellDepends = [
             async base conduit conduit-combinators conduit-extra monad-control
             resourcet stm stm-chans throttle-io-stream unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/conduit-throttle#readme";
           description = "Throttle Conduit Producers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "config-ini" = callPackage
        ({ mkDerivation, base, containers, megaparsec, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "config-ini";
           version = "0.2.2.0";
           sha256 = "364d67b876abf867d97eaacac630e920521ff96478fe9869a41983893ce140a0";
           libraryHaskellDepends = [
             base containers megaparsec text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aisamanra/config-ini";
           description = "A library for simple INI-based configuration files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "configuration-tools" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
         , base-unicode-symbols, base64-bytestring, bytestring, Cabal
         , case-insensitive, connection, data-default, deepseq, directory
         , dlist, enclosed-exceptions, filepath, http-client
         , http-client-tls, http-types, monad-control, mtl, network-uri
         , optparse-applicative, process, profunctors, stdenv, text, tls
         , transformers, unordered-containers, x509, x509-system
         , x509-validation, yaml
         }:
         mkDerivation {
           pname = "configuration-tools";
           version = "0.3.0";
           sha256 = "9fa7a42f9247054f5e37eb2bb897d52ed51f3b0c9fcccf7056edefc3aaadf24e";
           libraryHaskellDepends = [
             aeson ansi-wl-pprint attoparsec base base-unicode-symbols
             base64-bytestring bytestring Cabal case-insensitive connection
             data-default deepseq directory dlist enclosed-exceptions filepath
             http-client http-client-tls http-types monad-control mtl
             network-uri optparse-applicative process profunctors text tls
             transformers unordered-containers x509 x509-system x509-validation
             yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alephcloud/hs-configuration-tools";
           description = "Tools for specifying and parsing configurations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "configurator" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, directory, hashable
         , stdenv, text, unix-compat, unordered-containers
         }:
         mkDerivation {
           pname = "configurator";
           version = "0.3.0.0";
           sha256 = "6eb9996b672e9f7112ca23482c42fa533553312c3c13f38a8a06476e67c031b4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring directory hashable text unix-compat
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/configurator";
           description = "Configuration management";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "configurator-export" = callPackage
        ({ mkDerivation, base, base-compat, configurator, pretty
         , semigroups, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "configurator-export";
           version = "0.1.0.1";
           sha256 = "9dbd62ef29c97792ccdfdb1b3b79aedfa527dce49a9ac5054f21b29a7f9b824c";
           libraryHaskellDepends = [
             base base-compat configurator pretty semigroups text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mstksg/configurator-export";
           description = "Pretty printer and exporter for configurations from the \"configurator\" library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "connection" = callPackage
        ({ mkDerivation, base, byteable, bytestring, containers
         , data-default-class, network, socks, stdenv, tls, x509, x509-store
         , x509-system, x509-validation
         }:
         mkDerivation {
           pname = "connection";
           version = "0.2.8";
           sha256 = "70b1f44e8786320c18b26fc5d4ec115fc8ac016ba1f852fa8137f55d785a93eb";
           libraryHaskellDepends = [
             base byteable bytestring containers data-default-class network
             socks tls x509 x509-store x509-system x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-connection";
           description = "Simple and easy network connections API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "connection-pool" = callPackage
        ({ mkDerivation, base, between, data-default-class, monad-control
         , network, resource-pool, stdenv, streaming-commons, time
         , transformers-base
         }:
         mkDerivation {
           pname = "connection-pool";
           version = "0.2.1";
           sha256 = "2364c5a7b5d0dbeb00478070a4e527ab019ffb86e14e726a2a9ee56f8cb884dc";
           libraryHaskellDepends = [
             base between data-default-class monad-control network resource-pool
             streaming-commons time transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/trskop/connection-pool";
           description = "Connection pool built on top of resource-pool and streaming-commons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "console-style" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "console-style";
           version = "0.0.2.1";
           sha256 = "6d818ea841d7acfe6c42cc3fc7751e324656abfd0509ce470bc8bdbf52d1bd7f";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/console-style#readme";
           description = "Styled console text output using ANSI escape sequences";
           license = stdenv.lib.licenses.mit;
         }) {};
      "constraints" = callPackage
        ({ mkDerivation, base, binary, deepseq, ghc-prim, hashable, mtl
         , stdenv, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "constraints";
           version = "0.9.1";
           sha256 = "276e012838861145fca65d065dd9839f7cbd71236032b557194389180a30a785";
           libraryHaskellDepends = [
             base binary deepseq ghc-prim hashable mtl transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/constraints/";
           description = "Constraint manipulation";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "consul-haskell" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , connection, either, exceptions, http-client, http-client-tls
         , http-types, lifted-async, lifted-base, monad-control, network
         , retry, stdenv, stm, text, transformers, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "consul-haskell";
           version = "0.4.2";
           sha256 = "b10812b70dfbce7037f9f23eda71fa2fa6fc97ed309bd63c00f226522d30d80a";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring connection either
             exceptions http-client http-client-tls http-types lifted-async
             lifted-base monad-control network retry stm text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alphaHeavy/consul-haskell";
           description = "A consul client for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "containers-unicode-symbols" = callPackage
        ({ mkDerivation, base, base-unicode-symbols, containers, stdenv }:
         mkDerivation {
           pname = "containers-unicode-symbols";
           version = "0.3.1.1";
           sha256 = "4655f286a2d116cb5f2b89f472df54df739bf904ac8e932b2fd34d3f713e9b31";
           libraryHaskellDepends = [ base base-unicode-symbols containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
           description = "Unicode alternatives for common functions and operators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "contravariant" = callPackage
        ({ mkDerivation, base, StateVar, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "contravariant";
           version = "1.4.1";
           sha256 = "c93d3d619fa378f3fdf92c53bb8b04b8f47963b88aba7cfa54b57656189ad0ed";
           libraryHaskellDepends = [
             base StateVar transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/contravariant/";
           description = "Contravariant functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "contravariant-extras" = callPackage
        ({ mkDerivation, base, base-prelude, contravariant, semigroups
         , stdenv, template-haskell, tuple-th
         }:
         mkDerivation {
           pname = "contravariant-extras";
           version = "0.3.4";
           sha256 = "36a9239d5a84bc6a418a3aa1a0df145d76ece24d00b76deb817b92441913e63d";
           libraryHaskellDepends = [
             base base-prelude contravariant semigroups template-haskell
             tuple-th
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/contravariant-extras";
           description = "Extras for the \"contravariant\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "control-bool" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "control-bool";
           version = "0.2.1";
           sha256 = "e46a85d2985a65f8d7ecbcdab0cfb12734b4d6e4c558631e6ab01fe742ed5581";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/control-bool";
           description = "Useful combinators for boolean expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "control-monad-free" = callPackage
        ({ mkDerivation, base, prelude-extras, stdenv, transformers }:
         mkDerivation {
           pname = "control-monad-free";
           version = "0.6.1";
           sha256 = "fea9173d3c29729a8e0789d654bf3b16928e0b740465bd8798ac2cfeec492286";
           revision = "1";
           editedCabalFile = "1901lm2md7flri4ms745lgla18x2k7v0xh51jbjbx6202ppcx3fh";
           libraryHaskellDepends = [ base prelude-extras transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pepeiborra/control-monad-free";
           description = "Free monads and monad transformers";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "control-monad-loop" = callPackage
        ({ mkDerivation, base, stdenv, transformers, transformers-base }:
         mkDerivation {
           pname = "control-monad-loop";
           version = "0.1";
           sha256 = "f29b08497897268daf4c547390dad69f4ee00032082e3d5305c33e6eee257300";
           libraryHaskellDepends = [ base transformers transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joeyadams/haskell-control-monad-loop";
           description = "Simple monad transformer for imperative-style loops";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "control-monad-omega" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "control-monad-omega";
           version = "0.3.1";
           sha256 = "383b98ecf5db5add42f318672af9eb1c8b9d99ec42d48c240e209a93b5cf1186";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/control-monad-omega";
           description = "A breadth-first list monad";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "convertible" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, old-locale
         , old-time, stdenv, text, time
         }:
         mkDerivation {
           pname = "convertible";
           version = "1.1.1.0";
           sha256 = "e9f9a70904b9995314c2aeb41580d654a2c76293feb955fb6bd63256c355286c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers mtl old-locale old-time text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/convertible";
           description = "Typeclasses and instances for converting between types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cookie" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring
         , data-default-class, deepseq, old-locale, stdenv, text, time
         }:
         mkDerivation {
           pname = "cookie";
           version = "0.4.3";
           sha256 = "fbfb0c4fcebe6cb85cb6b84572287a57ee7e3a380f2fe51c4885bfb460f3ed62";
           libraryHaskellDepends = [
             base blaze-builder bytestring data-default-class deepseq old-locale
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/cookie";
           description = "HTTP cookie parsing and rendering";
           license = stdenv.lib.licenses.mit;
         }) {};
      "countable" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "countable";
           version = "1.0";
           sha256 = "f9a0eb6f697a044bdf72e9c08126d4cb0f2d6de82cce07e55cb87ddbae6a0e6c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AshleyYakeley/countable";
           description = "Countable, Searchable, Finite, Empty classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "country" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, ghc-prim
         , hashable, primitive, scientific, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "country";
           version = "0.1.4";
           sha256 = "74817f19e5c41eb01a3bf5f4ccf626772e5a7b32c336eb7820317a6d9925f108";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring ghc-prim hashable primitive
             scientific text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/country#readme";
           description = "Country data type and functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "courier" = callPackage
        ({ mkDerivation, async, base, bytestring, cereal, containers
         , hslogger, network, stdenv, stm, text, uuid
         }:
         mkDerivation {
           pname = "courier";
           version = "0.1.1.5";
           sha256 = "ac9e674ff33de347b173da2892859b3807a408b341d10d6101d2a7d07ac334d3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring cereal containers hslogger network stm text
             uuid
           ];
           executableHaskellDepends = [ base cereal ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/hargettp/courier";
           description = "A message-passing library for simplifying network applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cpphs" = callPackage
        ({ mkDerivation, base, directory, old-locale, old-time, polyparse
         , stdenv
         }:
         mkDerivation {
           pname = "cpphs";
           version = "1.20.8";
           sha256 = "e56d64a7d8058e0fb63f0669397c1c861efb20a0376e0e74d86942ac151105ae";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory old-locale old-time polyparse
           ];
           executableHaskellDepends = [
             base directory old-locale old-time polyparse
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/cpphs/";
           description = "A liberalised re-implementation of cpp, the C pre-processor";
           license = "LGPL";
         }) {};
      "cprng-aes" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cipher-aes
         , crypto-random, stdenv
         }:
         mkDerivation {
           pname = "cprng-aes";
           version = "0.6.1";
           sha256 = "64592a01de8c6683c5e29f538dceee918887ffe211d87214a2e38559d72c21f3";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base byteable bytestring cipher-aes crypto-random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cprng-aes";
           description = "Crypto Pseudo Random Number Generator using AES in counter mode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cpu" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "cpu";
           version = "0.1.2";
           sha256 = "5627feb4974a3ff8499c42cc958927e88761a2e004c4000d34e9cd6a15ad2974";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cpu";
           description = "Cpu information and properties helpers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cpuinfo" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, deepseq, stdenv }:
         mkDerivation {
           pname = "cpuinfo";
           version = "0.1.0.1";
           sha256 = "d1b3e3992cc0c82edfb21f30e1684bb66e6a3cb23a26b777a079702362d05655";
           libraryHaskellDepends = [ attoparsec base bytestring deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TravisWhitaker/cpuinfo";
           description = "Haskell Library for Checking CPU Information";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cql" = callPackage
        ({ mkDerivation, base, bytestring, cereal, Decimal, iproute
         , network, stdenv, template-haskell, text, time, transformers, uuid
         , vector
         }:
         mkDerivation {
           pname = "cql";
           version = "3.1.1";
           sha256 = "45b0d9599dfb6b5df02eb17e18d45cef8abd7e175d4eb7f99ab94f9d50866da3";
           libraryHaskellDepends = [
             base bytestring cereal Decimal iproute network template-haskell
             text time transformers uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/cql/";
           description = "Cassandra CQL binary protocol";
           license = "unknown";
         }) {};
      "cql-io" = callPackage
        ({ mkDerivation, async, auto-update, base, bytestring, containers
         , cql, cryptohash, data-default-class, exceptions, hashable
         , HsOpenSSL, iproute, lens, monad-control, mtl, mwc-random, network
         , retry, semigroups, stdenv, stm, text, time, tinylog, transformers
         , transformers-base, uuid, vector
         }:
         mkDerivation {
           pname = "cql-io";
           version = "0.16.0";
           sha256 = "82e5aff9b929fd9dec92760b9d0e75ca509ce2619942628e5c7e3a66f4204004";
           libraryHaskellDepends = [
             async auto-update base bytestring containers cql cryptohash
             data-default-class exceptions hashable HsOpenSSL iproute lens
             monad-control mtl mwc-random network retry semigroups stm text time
             tinylog transformers transformers-base uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/cql-io/";
           description = "Cassandra CQL client";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "crackNum" = callPackage
        ({ mkDerivation, base, data-binary-ieee754, FloatingHex, ieee754
         , stdenv
         }:
         mkDerivation {
           pname = "crackNum";
           version = "1.9";
           sha256 = "a5a78b774e17837513b7c6048856c375457095898a59b7f3bbb7f49abb1639c5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base data-binary-ieee754 FloatingHex ieee754
           ];
           executableHaskellDepends = [
             base data-binary-ieee754 FloatingHex ieee754
           ];
           doHaddock = false;
           doCheck = false;
           description = "Crack various integer, floating-point data formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "criterion" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, base-compat, binary
         , bytestring, cassava, code-page, containers, deepseq, directory
         , exceptions, filepath, Glob, js-flot, js-jquery, microstache, mtl
         , mwc-random, optparse-applicative, parsec, semigroups, statistics
         , stdenv, text, time, transformers, transformers-compat, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "criterion";
           version = "1.3.0.0";
           sha256 = "18b9336ade26d222f360200ba9508729937f9c54178456128a43992cad994f33";
           revision = "1";
           editedCabalFile = "1yfv8c3azrdba8nsw9za3flklryn7490hgcjqxjal3m9xbh7g1pn";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base base-compat binary bytestring cassava
             code-page containers deepseq directory exceptions filepath Glob
             js-flot js-jquery microstache mtl mwc-random optparse-applicative
             parsec semigroups statistics text time transformers
             transformers-compat vector vector-algorithms
           ];
           executableHaskellDepends = [
             base base-compat optparse-applicative semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.serpentine.com/criterion";
           description = "Robust, reliable performance measurement and analysis";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cron" = callPackage
        ({ mkDerivation, attoparsec, base, data-default-class, mtl
         , mtl-compat, old-locale, semigroups, stdenv, text, time
         }:
         mkDerivation {
           pname = "cron";
           version = "0.6.1";
           sha256 = "8c1af53bde729026809b722468f6b36c4f96cb532f26a390f32f1c91fb8b3251";
           libraryHaskellDepends = [
             attoparsec base data-default-class mtl mtl-compat old-locale
             semigroups text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/michaelxavier/cron";
           description = "Cron datatypes and Attoparsec parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "crypt-sha512" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, cryptohash-sha512
         , stdenv
         }:
         mkDerivation {
           pname = "crypt-sha512";
           version = "0";
           sha256 = "c2be6252bf12f38c74950eb778039426c730e9a7cd7f034a4cc3e6965d5255f3";
           libraryHaskellDepends = [
             attoparsec base bytestring cryptohash-sha512
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/crypt-sha512";
           description = "Pure Haskell implelementation for GNU SHA512 crypt algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-api" = callPackage
        ({ mkDerivation, base, bytestring, cereal, entropy, stdenv, tagged
         , transformers
         }:
         mkDerivation {
           pname = "crypto-api";
           version = "0.13.3";
           sha256 = "298a9ea7ce97c8ccf4bfe46d4864092c3a007a56bede73560070db3bf1ac7aa5";
           revision = "1";
           editedCabalFile = "1z6n1sa5pn3iqvqjrd8hv4bc2pxzsrhm5sh0l8z7g9lbqp6w0wp5";
           libraryHaskellDepends = [
             base bytestring cereal entropy tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/crypto-api";
           description = "A generic interface for cryptographic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-api-tests" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, directory
         , filepath, HUnit, QuickCheck, stdenv, test-framework
         , test-framework-hunit, test-framework-quickcheck2
         }:
         mkDerivation {
           pname = "crypto-api-tests";
           version = "0.3";
           sha256 = "f44aecdd4ceb9da9f38330e84d9c17745a82b0611085ebb34442d2dce4207270";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal crypto-api directory filepath HUnit
             QuickCheck test-framework test-framework-hunit
             test-framework-quickcheck2
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/crypto-api/wiki";
           description = "A test framework and KATs for cryptographic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-cipher-tests" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , HUnit, mtl, QuickCheck, securemem, stdenv, test-framework
         , test-framework-hunit, test-framework-quickcheck2
         }:
         mkDerivation {
           pname = "crypto-cipher-tests";
           version = "0.0.11";
           sha256 = "dfb670b73d4091b8683634d0d4d5a40576d573ad160650d5e518244ced8b98a7";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
             securemem test-framework test-framework-hunit
             test-framework-quickcheck2
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Generic cryptography cipher tests";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-cipher-types" = callPackage
        ({ mkDerivation, base, byteable, bytestring, securemem, stdenv }:
         mkDerivation {
           pname = "crypto-cipher-types";
           version = "0.0.9";
           sha256 = "2073f6b70df7916aebe2da49d224497183662d56d19da87b76f70039430c0a0f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base byteable bytestring securemem ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Generic cryptography cipher types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-enigma" = callPackage
        ({ mkDerivation, base, containers, MissingH, mtl, split, stdenv }:
         mkDerivation {
           pname = "crypto-enigma";
           version = "0.0.2.10";
           sha256 = "e60a405a382c9fb0d15774457ced1569809af267e5f970bba314ea340f57ebb0";
           libraryHaskellDepends = [ base containers MissingH mtl split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/orome/crypto-enigma-hs";
           description = "An Enigma machine simulator with display";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-numbers" = callPackage
        ({ mkDerivation, base, bytestring, crypto-random, ghc-prim
         , integer-gmp, stdenv, vector
         }:
         mkDerivation {
           pname = "crypto-numbers";
           version = "0.2.7";
           sha256 = "420aeb17e9cdcfdf8c950c6c6f10c54503c5524d36f611aa7238e3fd65f189a6";
           revision = "1";
           editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
           libraryHaskellDepends = [
             base bytestring crypto-random ghc-prim integer-gmp vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-crypto-numbers";
           description = "Cryptographic numbers: functions and algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-pubkey" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-numbers
         , crypto-pubkey-types, crypto-random, cryptohash, stdenv
         }:
         mkDerivation {
           pname = "crypto-pubkey";
           version = "0.2.8";
           sha256 = "c0ccf2f5c38517de1f1626cb0a2542f35aefad8842f8ad5c1fac0b8c9de8b56e";
           libraryHaskellDepends = [
             base byteable bytestring crypto-numbers crypto-pubkey-types
             crypto-random cryptohash
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
           description = "Public Key cryptography";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-pubkey-types" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, stdenv }:
         mkDerivation {
           pname = "crypto-pubkey-types";
           version = "0.4.3";
           sha256 = "7ed9f52281ec4e34021a91818fe45288e33d65bff937f60334a3f45be5a71c60";
           libraryHaskellDepends = [ asn1-encoding asn1-types base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
           description = "Generic cryptography Public keys algorithm types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-random" = callPackage
        ({ mkDerivation, base, bytestring, securemem, stdenv, unix, vector
         }:
         mkDerivation {
           pname = "crypto-random";
           version = "0.0.9";
           sha256 = "170a7a18441379c2d1c19b502ee5919026a19adc6e78641cd4fb40b1d69a6904";
           libraryHaskellDepends = [ base bytestring securemem unix vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-random";
           description = "Simple cryptographic random related types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "crypto-random-api" = callPackage
        ({ mkDerivation, base, bytestring, entropy, stdenv }:
         mkDerivation {
           pname = "crypto-random-api";
           version = "0.2.0";
           sha256 = "56e9777061bd9ce553683d097ba3a11fdc371724060b62ca103f1f291f9f897c";
           libraryHaskellDepends = [ base bytestring entropy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-random-api";
           description = "Simple random generators API for cryptography related code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptocipher" = callPackage
        ({ mkDerivation, base, cipher-aes, cipher-blowfish, cipher-camellia
         , cipher-des, cipher-rc4, crypto-cipher-types, stdenv
         }:
         mkDerivation {
           pname = "cryptocipher";
           version = "0.6.2";
           sha256 = "34b9e62dee36c4019dd0c0e86576295d0bd1bb573eeb24686ec635a09550e346";
           libraryHaskellDepends = [
             base cipher-aes cipher-blowfish cipher-camellia cipher-des
             cipher-rc4 crypto-cipher-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-crypto-cipher";
           description = "Symmetrical block and stream ciphers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cryptonite, ghc-prim
         , memory, stdenv
         }:
         mkDerivation {
           pname = "cryptohash";
           version = "0.11.9";
           sha256 = "c28f847fc1fcd65b6eea2e74a100300af940919f04bb21d391f6a773968f22fb";
           libraryHaskellDepends = [
             base byteable bytestring cryptonite ghc-prim memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-cryptohash";
           description = "collection of crypto hashes, fast, pure and practical";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-cryptoapi" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, cryptonite
         , memory, stdenv, tagged
         }:
         mkDerivation {
           pname = "cryptohash-cryptoapi";
           version = "0.1.4";
           sha256 = "717a8664ebfaa1c31aaec1d78c9b7c776a5adcfdfc50ad88e21a34566f72058e";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal crypto-api cryptonite memory tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-cryptohash-cryptoapi";
           description = "Crypto-api interfaces for cryptohash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-md5" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-md5";
           version = "0.11.100.1";
           sha256 = "710bd48770fa3e9a3b05428c6dc77fb72c91956d334a1eb89ded11bb843e18f9";
           revision = "1";
           editedCabalFile = "1drxjsn5chi9zj3djj85s1d6xqlc28ji70zpyicxl5fals10n5w3";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-md5";
           description = "Fast, pure and practical MD5 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-sha1" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-sha1";
           version = "0.11.100.1";
           sha256 = "3c79af33542512442f8f87f6abb1faef7cd43bbfb2859260a33251d861eb0dab";
           revision = "1";
           editedCabalFile = "167i2mjyr18949xckzv6f782n763f6w9k114p6kq74gbmxqjvmqb";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-sha1";
           description = "Fast, pure and practical SHA-1 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-sha256" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-sha256";
           version = "0.11.101.0";
           sha256 = "52756435dbea248e344fbcbcc5df5307f60dfacf337dfd11ae30f1c7a4da05dd";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-sha256";
           description = "Fast, pure and practical SHA-256 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptohash-sha512" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "cryptohash-sha512";
           version = "0.11.100.1";
           sha256 = "10698bb9575eaa414a65d9644caa9408f9276c63447406e0a4faef91db1071a9";
           revision = "1";
           editedCabalFile = "0aj9ryzdpxz79n5bs5wx56s9rjxm25dm7agxbyzqdr93wi2rj8ny";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/cryptohash-sha512";
           description = "Fast, pure and practical SHA-512 implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, foundation, ghc-prim
         , integer-gmp, memory, stdenv
         }:
         mkDerivation {
           pname = "cryptonite";
           version = "0.24";
           sha256 = "17c3312343ef9bbfa87566d1f701d24870c2d34e015b104ff02faf1c9e1b5a86";
           libraryHaskellDepends = [
             base bytestring deepseq foundation ghc-prim integer-gmp memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite";
           description = "Cryptography Primitives sink";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , cryptonite, exceptions, memory, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "cryptonite-conduit";
           version = "0.2.2";
           sha256 = "705d69ab3f79b7b8810c7b9e7da81a1c6686b6a4323b1e78150576a25a658dae";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra cryptonite exceptions memory
             resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite-conduit";
           description = "cryptonite conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cryptonite-openssl" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, memory, openssl
         , stdenv
         }:
         mkDerivation {
           pname = "cryptonite-openssl";
           version = "0.6";
           sha256 = "a8cb97c96bfb3e7b7ff8d59629317882dbf3cea12ba978d8475c96a6c28750a6";
           libraryHaskellDepends = [ base bytestring cryptonite memory ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-crypto/cryptonite-openssl";
           description = "Crypto stuff using OpenSSL cryptographic library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "csp" = callPackage
        ({ mkDerivation, base, containers, mtl, nondeterminism, stdenv }:
         mkDerivation {
           pname = "csp";
           version = "1.3.1";
           sha256 = "d83c5e51dd32a796af8cfacac94312cb99691be30d924e159bc1c4b8cef9530b";
           libraryHaskellDepends = [ base containers mtl nondeterminism ];
           doHaddock = false;
           doCheck = false;
           description = "Discrete constraint satisfaction problem (CSP) solver";
           license = "LGPL";
         }) {};
      "css-syntax" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, scientific, stdenv
         , text
         }:
         mkDerivation {
           pname = "css-syntax";
           version = "0.0.5";
           sha256 = "3969e0bf83c81dd970cdde9bb07386071264f0f390215078eb86a5cfa1e50b9e";
           revision = "1";
           editedCabalFile = "15s7q21kahh1gmm7i3jd937d5pq5khn9a6sq8kdhs6bx11cfa5ap";
           libraryHaskellDepends = [
             attoparsec base bytestring scientific text
           ];
           doHaddock = false;
           doCheck = false;
           description = "This package implments a parser for the CSS syntax";
           license = stdenv.lib.licenses.mit;
         }) {};
      "css-text" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "css-text";
           version = "0.1.3.0";
           sha256 = "5ff507bf3863219f41e7f2d215e5511fe15ee13d1e28bd3ee64e0b0b894bcd7a";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/css-text.git#readme";
           description = "CSS parser and renderer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "csv" = callPackage
        ({ mkDerivation, base, filepath, parsec, stdenv }:
         mkDerivation {
           pname = "csv";
           version = "0.1.2";
           sha256 = "8cf43442325faa1368f9b55ad952beccf677d9980cdffa3d70a7f204a23ae600";
           libraryHaskellDepends = [ base filepath parsec ];
           doHaddock = false;
           doCheck = false;
           description = "CSV loader and dumper";
           license = stdenv.lib.licenses.mit;
         }) {};
      "csv-conduit" = callPackage
        ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
         , conduit, conduit-extra, containers, data-default, exceptions
         , ghc-prim, mmorph, monad-control, mtl, primitive, resourcet
         , stdenv, text, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "csv-conduit";
           version = "0.6.8.1";
           sha256 = "b634639b86506df353785f1d4e644dc85a99e915aa048b9a3c8f9f02c9783048";
           libraryHaskellDepends = [
             array attoparsec base blaze-builder bytestring conduit
             conduit-extra containers data-default exceptions ghc-prim mmorph
             monad-control mtl primitive resourcet text transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ozataman/csv-conduit";
           description = "A flexible, fast, conduit-based CSV parser library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ctrie" = callPackage
        ({ mkDerivation, atomic-primops, base, hashable, primitive, stdenv
         }:
         mkDerivation {
           pname = "ctrie";
           version = "0.2";
           sha256 = "20e3a6d39f65ed1663ff5ab2c5431dc12b1c601d2133a74bc7bea1596ad9c814";
           libraryHaskellDepends = [ atomic-primops base hashable primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mcschroeder/ctrie";
           description = "Non-blocking concurrent map";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cubicbezier" = callPackage
        ({ mkDerivation, base, containers, fast-math, integration, matrices
         , microlens, microlens-mtl, microlens-th, mtl, stdenv, vector
         , vector-space
         }:
         mkDerivation {
           pname = "cubicbezier";
           version = "0.6.0.5";
           sha256 = "c5c9825782d97c4059b2261dddd6471fdb270ddac0ff97d6d02d4f0d44b62758";
           libraryHaskellDepends = [
             base containers fast-math integration matrices microlens
             microlens-mtl microlens-th mtl vector vector-space
           ];
           doHaddock = false;
           doCheck = false;
           description = "Efficient manipulating of 2D cubic bezier curves";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cubicspline" = callPackage
        ({ mkDerivation, base, hmatrix, safe, stdenv }:
         mkDerivation {
           pname = "cubicspline";
           version = "0.1.2";
           sha256 = "5b6ced9ca65b0d01ddceaf18605c8f915491d8d4a6aaef73475c4e8d4b1a9b79";
           libraryHaskellDepends = [ base hmatrix safe ];
           doHaddock = false;
           doCheck = false;
           description = "Natural cubic spline interpolation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cublas" = callPackage
        ({ mkDerivation, base, c2hs, Cabal, cuda, directory, filepath, half
         , stdenv, storable-complex, template-haskell
         }:
         mkDerivation {
           pname = "cublas";
           version = "0.4.0.0";
           sha256 = "7ceee752ee0fd508f62ed9f41a97a885e3940c0c53a81f07b23fc7f874e63bf8";
           setupHaskellDepends = [ base Cabal cuda directory filepath ];
           libraryHaskellDepends = [
             base cuda half storable-complex template-haskell
           ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           description = "FFI bindings to the CUDA BLAS library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cuda" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, Cabal, directory, filepath
         , pretty, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "cuda";
           version = "0.9.0.1";
           sha256 = "087bba13183107d1ed7202ef24f95458950e0d050597ff9ae93a4e119a0cb6d1";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal directory filepath ];
           libraryHaskellDepends = [
             base bytestring filepath template-haskell
           ];
           libraryToolDepends = [ c2hs ];
           executableHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcdonell/cuda";
           description = "FFI binding to the CUDA interface for programming NVIDIA GPUs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cue-sheet" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default-class
         , exceptions, megaparsec, mtl, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "cue-sheet";
           version = "1.0.1";
           sha256 = "214a58e87a849c8311eb652ca215b4f5789d724e7499324544b3a01187577f8f";
           revision = "1";
           editedCabalFile = "05f1w3jhwk09jaknq2ipfsfdlh95rg614m1c1diwi2z9s6hwi3cx";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers data-default-class exceptions megaparsec
             mtl QuickCheck text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/cue-sheet";
           description = "Support for construction, rendering, and parsing of CUE sheets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cufft" = callPackage
        ({ mkDerivation, base, c2hs, Cabal, cuda, directory, filepath
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "cufft";
           version = "0.8.0.0";
           sha256 = "f7bdd8117b35baf630ae8b276a2dea0fd47e0cbc5e6e50802e4007d2d201dd58";
           setupHaskellDepends = [
             base Cabal cuda directory filepath template-haskell
           ];
           libraryHaskellDepends = [ base cuda ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/robeverest/cufft";
           description = "Haskell bindings for the CUFFT library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "curl" = callPackage
        ({ mkDerivation, base, bytestring, containers, curl, stdenv }:
         mkDerivation {
           pname = "curl";
           version = "1.3.8";
           sha256 = "9087c936bfcdb865bad3166baa3f12bf37acf076fa76010e3b5f82a1d485446e";
           revision = "1";
           editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
           libraryHaskellDepends = [ base bytestring containers ];
           librarySystemDepends = [ curl ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell binding to libcurl";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) curl;};
      "currencies" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "currencies";
           version = "0.1.1.1";
           sha256 = "d58e021d319917d70ea5e7069daef67788f4c2081c095d44c511fd392e3f0bf0";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alx741/currencies#readme";
           description = "Currencies representation, pretty printing and conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cusolver" = callPackage
        ({ mkDerivation, base, c2hs, Cabal, cublas, cuda, cusparse
         , directory, filepath, half, stdenv, storable-complex
         }:
         mkDerivation {
           pname = "cusolver";
           version = "0.1.0.0";
           sha256 = "a58cce0773553cfc064ad9f9922dcc55a9782c3684914bfbd294a66f34207102";
           setupHaskellDepends = [ base Cabal cuda directory filepath ];
           libraryHaskellDepends = [
             base cublas cuda cusparse half storable-complex
           ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           description = "FFI bindings to CUDA Solver, a LAPACK-like library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cusparse" = callPackage
        ({ mkDerivation, base, c2hs, Cabal, cuda, directory, filepath, half
         , stdenv, storable-complex
         }:
         mkDerivation {
           pname = "cusparse";
           version = "0.1.0.0";
           sha256 = "b6db49628dc316d1c3fd6dfb419bad1e4bb5e35572cdf769c9a06c14fc598528";
           setupHaskellDepends = [ base Cabal cuda directory filepath ];
           libraryHaskellDepends = [ base cuda half storable-complex ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           description = "FFI bindings to the CUDA Sparse BLAS library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "cutter" = callPackage
        ({ mkDerivation, base, bytestring, explicit-exception, spreadsheet
         , stdenv, utility-ht
         }:
         mkDerivation {
           pname = "cutter";
           version = "0.0";
           sha256 = "117319c36a20efea6d9edd0a8d902e37ec0386512f2eb8a6e5563411c00c6ac2";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring explicit-exception spreadsheet utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           description = "Cut files according to a position list";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "czipwith" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "czipwith";
           version = "1.0.0.0";
           sha256 = "45a2af0fd73f4cb7968c382465d8c5c6f4807d195d85e5b35bccef8f5e7c2ce1";
           revision = "1";
           editedCabalFile = "1vz6nrmxhl2rrwcg16dpp09q64pk9z9j0ka97lqhxdzpvqm0fg88";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/czipwith/";
           description = "CZipWith class and deriving via TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "data-accessor";
           version = "0.2.2.7";
           sha256 = "3465227ad5f81059a885d354e2f3c108d550287580e6939e18350fa65e78c2ed";
           libraryHaskellDepends = [ array base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Utilities for accessing and manipulating fields of records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor-mtl" = callPackage
        ({ mkDerivation, base, data-accessor, mtl, stdenv }:
         mkDerivation {
           pname = "data-accessor-mtl";
           version = "0.2.0.4";
           sha256 = "10cf9166e2e046076b7e58987718e57b31408e7cada9f26c8ff111e0379814c5";
           libraryHaskellDepends = [ base data-accessor mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Use Accessor to access state in mtl State monad class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor-template" = callPackage
        ({ mkDerivation, base, data-accessor, stdenv, template-haskell
         , utility-ht
         }:
         mkDerivation {
           pname = "data-accessor-template";
           version = "0.2.1.14";
           sha256 = "c46f0b3fffa0f7c700f69dbf1c4488fb865d5ef361047e8297e20440fe581b65";
           libraryHaskellDepends = [
             base data-accessor template-haskell utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Utilities for accessing and manipulating fields of records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-accessor-transformers" = callPackage
        ({ mkDerivation, base, data-accessor, stdenv, transformers }:
         mkDerivation {
           pname = "data-accessor-transformers";
           version = "0.2.1.7";
           sha256 = "20c8823dc16c7ca6f55c64eb5564c9aae4b5565406987a046ded2ea73618e07a";
           libraryHaskellDepends = [ base data-accessor transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Record_access";
           description = "Use Accessor to access state in transformers State monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-binary-ieee754" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "data-binary-ieee754";
           version = "0.4.4";
           sha256 = "59975abed8f4caa602f0780c10a9b2493479e6feb71ad189bb10c3ac5678df0a";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/data-binary-ieee754/";
           description = "Parser/Serialiser for IEEE-754 floating-point values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "data-bword" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "data-bword";
           version = "0.1.0.1";
           sha256 = "70f01f857865edcf1d1d20128b0202320b1635cc03b00954b6d1447cd699db7d";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-bword";
           description = "Extra operations on binary words of fixed length";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-check" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "data-check";
           version = "0.1.1";
           sha256 = "013f215d30b634ae1ac38ea6b0a87ab754aaf0c1cdace2495ff56f85bf16b101";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/data-check";
           description = "Library for checking and normalization of data (e.g. from web forms)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-checked" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "data-checked";
           version = "0.3";
           sha256 = "dc87d09c7c8587c9e6e372166e8de3b42c2cd804a493ff100c253e4d713c5676";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-checked";
           description = "Type-indexed runtime-checked properties";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-clist" = callPackage
        ({ mkDerivation, base, deepseq, QuickCheck, stdenv }:
         mkDerivation {
           pname = "data-clist";
           version = "0.1.2.0";
           sha256 = "ce3c374e8e93086020238caff3dc3ca112db308850b56fe8ba6f78a1dc211626";
           libraryHaskellDepends = [ base deepseq QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sw17ch/data-clist";
           description = "Simple functional ring type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default" = callPackage
        ({ mkDerivation, base, data-default-class
         , data-default-instances-containers, data-default-instances-dlist
         , data-default-instances-old-locale, stdenv
         }:
         mkDerivation {
           pname = "data-default";
           version = "0.7.1.1";
           sha256 = "b0f95d279cd75cacaa8152a01590dc3460f7134f6840b37052abb3ba3cb2a511";
           libraryHaskellDepends = [
             base data-default-class data-default-instances-containers
             data-default-instances-dlist data-default-instances-old-locale
           ];
           doHaddock = false;
           doCheck = false;
           description = "A class for types with a default value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-class" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-default-class";
           version = "0.1.2.0";
           sha256 = "4f01b423f000c3e069aaf52a348564a6536797f31498bb85c3db4bd2d0973e56";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A class for types with a default value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-base" = callPackage
        ({ mkDerivation, base, data-default-class, stdenv }:
         mkDerivation {
           pname = "data-default-instances-base";
           version = "0.1.0.1";
           sha256 = "844fe453f674b6b0998da804465914abce8936c5e640d8bb8bff37ad07d7a17a";
           libraryHaskellDepends = [ base data-default-class ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-containers" = callPackage
        ({ mkDerivation, base, containers, data-default-class, stdenv }:
         mkDerivation {
           pname = "data-default-instances-containers";
           version = "0.0.1";
           sha256 = "a55e07af005c9815d82f3fc95e125db82994377c9f4a769428878701d4ec081a";
           libraryHaskellDepends = [ base containers data-default-class ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in containers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-dlist" = callPackage
        ({ mkDerivation, base, data-default-class, dlist, stdenv }:
         mkDerivation {
           pname = "data-default-instances-dlist";
           version = "0.0.1";
           sha256 = "7d683711cbf08abd7adcd5ac2be825381308d220397315a5570fe61b719b5959";
           libraryHaskellDepends = [ base data-default-class dlist ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in dlist";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-default-instances-old-locale" = callPackage
        ({ mkDerivation, base, data-default-class, old-locale, stdenv }:
         mkDerivation {
           pname = "data-default-instances-old-locale";
           version = "0.0.1";
           sha256 = "60d3b02922958c4908d7bf2b24ddf61511665745f784227d206745784b0c0802";
           libraryHaskellDepends = [ base data-default-class old-locale ];
           doHaddock = false;
           doCheck = false;
           description = "Default instances for types in old-locale";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-diverse" = callPackage
        ({ mkDerivation, base, containers, deepseq, ghc-prim, stdenv
         , tagged
         }:
         mkDerivation {
           pname = "data-diverse";
           version = "2.0.1.0";
           sha256 = "ab801d352521780f39112d642bc8d626fbdf88e0b2e79dc19984baaa80ad2725";
           libraryHaskellDepends = [
             base containers deepseq ghc-prim tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/data-diverse#readme";
           description = "Extensible records and polymorphic variants";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-diverse-lens" = callPackage
        ({ mkDerivation, base, data-diverse, generic-lens, lens
         , profunctors, stdenv, tagged
         }:
         mkDerivation {
           pname = "data-diverse-lens";
           version = "1.0.0.1";
           sha256 = "a78347f99f01a975ebc631022ba4fba88da0ec8ba6fc37353452af2b6ca87947";
           libraryHaskellDepends = [
             base data-diverse generic-lens lens profunctors tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/data-diverse-lens#readme";
           description = "Isos & Lens for Data.Diverse.Many and Prisms for Data.Diverse.Which";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-dword" = callPackage
        ({ mkDerivation, base, data-bword, ghc-prim, hashable, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "data-dword";
           version = "0.3.1.2";
           sha256 = "6b677600221de86eaee21dd2d4c23c04320370c594a56f7bb3477ef4e4b69120";
           libraryHaskellDepends = [
             base data-bword ghc-prim hashable template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-dword";
           description = "Stick two binary words together to get a bigger one";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-endian" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-endian";
           version = "0.1.1";
           sha256 = "8c1d4f30374f8331d31f4d7c6b39284331b6b9436e7b50f86547417bd05f2ac0";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-endian";
           description = "Endian-sensitive data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-fix" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-fix";
           version = "0.2.0";
           sha256 = "7e5718055cb27ccac1e0bf25be70ba9bfe2b0d021cfe0a57a163355830341392";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/anton-k/data-fix";
           description = "Fixpoint data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-has" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-has";
           version = "0.3.0.0";
           sha256 = "3c25d403605ecb196df53c8c8fb7829cd7b6a88e0ea04b88038602ba7faa7379";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/data-has";
           description = "Simple extensible product";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-hash" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "data-hash";
           version = "0.2.0.1";
           sha256 = "9117dd49013ca28ff188fc71c3595ac3af23d56d301c1f39bac93d44d8c60bbe";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Combinators for building fast hashing functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-inttrie" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-inttrie";
           version = "0.1.2";
           sha256 = "8ddae7ad7d3cafdf349d93c0eed5767ab1213d854980bc28d7d935163c5f1df9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/data-inttrie";
           description = "A lazy, infinite trie of integers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-lens-light" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell }:
         mkDerivation {
           pname = "data-lens-light";
           version = "0.1.2.2";
           sha256 = "72d3e6a73bde4a32eccd2024eb58ca96da962d4b659d76baed4ab37f28dcb36e";
           libraryHaskellDepends = [ base mtl template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/data-lens-light";
           description = "Simple lenses, minimum dependencies";
           license = stdenv.lib.licenses.mit;
         }) {};
      "data-memocombinators" = callPackage
        ({ mkDerivation, array, base, data-inttrie, stdenv }:
         mkDerivation {
           pname = "data-memocombinators";
           version = "0.5.1";
           sha256 = "b4341d2024b84a43f92edc39f6d6766bf4f0f00a40fd834b9f6f8e987b606ed7";
           libraryHaskellDepends = [ array base data-inttrie ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luqui/data-memocombinators";
           description = "Combinators for building memo tables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-msgpack" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
         , data-msgpack-types, groom, stdenv, text
         }:
         mkDerivation {
           pname = "data-msgpack";
           version = "0.0.11";
           sha256 = "2904fc96617dc7885d0ebdac75149ed969f223af8a18628f72927da3832eb885";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring data-binary-ieee754 data-msgpack-types text
           ];
           executableHaskellDepends = [ base bytestring groom ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://msgpack.org/";
           description = "A Haskell implementation of MessagePack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-msgpack-types" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, hashable
         , QuickCheck, stdenv, text, unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "data-msgpack-types";
           version = "0.0.1";
           sha256 = "529f139f089643a240c6e139b76c4ca1f18bce24dd352615584ebf041e94a898";
           libraryHaskellDepends = [
             base bytestring containers deepseq hashable QuickCheck text
             unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://msgpack.org/";
           description = "A Haskell implementation of MessagePack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-or" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-or";
           version = "1.0.0.5";
           sha256 = "9defb64f1c7210460a940beb7f32ba1c79f363fbf3a5bd126feb876930c6e672";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "A data type for non-exclusive disjunction";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-ordlist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "data-ordlist";
           version = "0.4.7.0";
           sha256 = "6f6c1e7a9a9155ad78ca78cb9abd6f7e2e1c78b3e549b179dc0874e6428f490d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Set and bag operations on ordered lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-ref" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers }:
         mkDerivation {
           pname = "data-ref";
           version = "0.0.1.1";
           sha256 = "a4dabee83c7419199791d0ebf7870f926b1ca834a361ecfeb3c134f7fa64f268";
           libraryHaskellDepends = [ base stm transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Mutable_variable";
           description = "Unify STRef and IORef in plain Haskell 98";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-reify" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "data-reify";
           version = "0.6.1";
           sha256 = "61350a1e96cb1276c2b6b8b13fa1bade5d4e63c702509a3f5e90bbc19ad9b202";
           revision = "1";
           editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://ku-fpg.github.io/software/data-reify/";
           description = "Reify a recursive data structure into an explicit graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-serializer" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, data-endian
         , parsers, semigroups, split, stdenv
         }:
         mkDerivation {
           pname = "data-serializer";
           version = "0.3.2";
           sha256 = "d41023a0a507dd2fd1517c1c2c6aad448373652af5445454ea9899c7f124aa14";
           libraryHaskellDepends = [
             base binary bytestring cereal data-endian parsers semigroups split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-serializer";
           description = "Common API for serialization libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-textual" = callPackage
        ({ mkDerivation, base, bytestring, parsers, stdenv, text
         , text-latin1, text-printer
         }:
         mkDerivation {
           pname = "data-textual";
           version = "0.3.0.2";
           sha256 = "44c530b081a486c50d668004637814223d1f1890716d39f7b692c83644d29830";
           libraryHaskellDepends = [
             base bytestring parsers text text-latin1 text-printer
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/data-textual";
           description = "Human-friendly textual representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "data-tree-print" = callPackage
        ({ mkDerivation, base, pretty, stdenv, syb }:
         mkDerivation {
           pname = "data-tree-print";
           version = "0.1.0.0";
           sha256 = "655a7746891af9cf93e94d6997a13a77515b6ceb3e91da66070ea5bd8e6bd537";
           revision = "1";
           editedCabalFile = "0ilk496yh0fdw2qisappr91d1s4xwl6hqaf2bnv3l7ah4qv74436";
           libraryHaskellDepends = [ base pretty syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/data-tree-print";
           description = "Print Data instances as a nested tree";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "datasets" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, cassava
         , directory, file-embed, filepath, hashable, microlens, stdenv
         , stringsearch, text, time, vector, wreq
         }:
         mkDerivation {
           pname = "datasets";
           version = "0.2.5";
           sha256 = "9a9139130936102bbfa60324e1ed7f9fd5b9a68db096917f589e8bb07999fdba";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring cassava directory file-embed
             filepath hashable microlens stringsearch text time vector wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/diffusionkinetics/open/datasets";
           description = "Classical data sets for statistics and machine learning";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dataurl" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "dataurl";
           version = "0.1.0.0";
           sha256 = "b1e72b48dbe72520f0b43b06ae75cb025e9750213982583f527e16b605660fb2";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/dataurl#readme";
           description = "Handle data-urls";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dawg-ord" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, transformers
         , vector
         }:
         mkDerivation {
           pname = "dawg-ord";
           version = "0.5.1.0";
           sha256 = "d9129acfb71ce41b6994d2c72a040319fc85af408226122d3958d5617e8922e9";
           libraryHaskellDepends = [
             base containers mtl transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kawu/dawg-ord";
           description = "Directed acyclic word graphs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dbcleaner" = callPackage
        ({ mkDerivation, base, postgresql-simple, stdenv, text }:
         mkDerivation {
           pname = "dbcleaner";
           version = "0.1.3";
           sha256 = "0817b0e1698d8d48ac58d631f51dc6e34663f4e97af7bac3fd03e31349830f35";
           libraryHaskellDepends = [ base postgresql-simple text ];
           doHaddock = false;
           doCheck = false;
           description = "Clean database tables automatically around hspec tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dbus" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, deepseq
         , libxml-sax, network, parsec, random, stdenv, text, transformers
         , unix, vector, xml-types
         }:
         mkDerivation {
           pname = "dbus";
           version = "0.10.15";
           sha256 = "6455659dc4e2b3078887506099039dc06fdda559a9cddb3ff9df5584b792baa8";
           libraryHaskellDepends = [
             base bytestring cereal containers deepseq libxml-sax network parsec
             random text transformers unix vector xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rblaze/haskell-dbus#readme";
           description = "A client library for the D-Bus IPC system";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "debian-build" = callPackage
        ({ mkDerivation, base, directory, filepath, process, split, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "debian-build";
           version = "0.10.1.0";
           sha256 = "a41033dee53346bda2f77a4192f85b54dbe3d25ef9b1fd158fdc09b4411e90b4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory filepath process split transformers
           ];
           executableHaskellDepends = [ base filepath transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://twitter.com/khibino/";
           description = "Debian package build sequence tools";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "debug" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, containers, directory, extra
         , ghc-prim, js-jquery, open-browser, stdenv, template-haskell
         , uniplate
         }:
         mkDerivation {
           pname = "debug";
           version = "0.0.2";
           sha256 = "a3446734bcbdcaefe5a4be9d444ac4bac3c0502cd302da280e6a7de6b143bd8d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base containers directory extra ghc-prim js-jquery
             open-browser template-haskell uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/debug";
           description = "Simple trace-based debugger";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "declarative" = callPackage
        ({ mkDerivation, base, hasty-hamiltonian, kan-extensions, lens
         , mcmc-types, mighty-metropolis, mwc-probability, pipes, primitive
         , speedy-slice, stdenv, transformers
         }:
         mkDerivation {
           pname = "declarative";
           version = "0.5.1";
           sha256 = "4ed591067e741682da3f319284dbf1d77c70bdf9d5c78e32575d5018d3f4c624";
           libraryHaskellDepends = [
             base hasty-hamiltonian kan-extensions lens mcmc-types
             mighty-metropolis mwc-probability pipes primitive speedy-slice
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/declarative";
           description = "DIY Markov Chains";
           license = stdenv.lib.licenses.mit;
         }) {};
      "deepseq-generics" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, stdenv }:
         mkDerivation {
           pname = "deepseq-generics";
           version = "0.2.0.0";
           sha256 = "b0b3ef5546c0768ef9194519a90c629f8f2ba0348487e620bb89d512187c7c9d";
           revision = "1";
           editedCabalFile = "055m914q7a19jagpxh65d8m67z1nl0h7cz77y1r0zp1qmpkisg82";
           libraryHaskellDepends = [ base deepseq ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/deepseq-generics";
           description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dejafu" = callPackage
        ({ mkDerivation, base, concurrency, containers, deepseq, exceptions
         , leancheck, random, ref-fd, semigroups, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "dejafu";
           version = "0.9.1.2";
           sha256 = "5a11f4101859426a3de3580a2a08d1706af8a406cc9fa4244c753c2ea89bbab3";
           libraryHaskellDepends = [
             base concurrency containers deepseq exceptions leancheck random
             ref-fd semigroups transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Systematic testing for Haskell concurrency";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dependent-map" = callPackage
        ({ mkDerivation, base, containers, dependent-sum, stdenv }:
         mkDerivation {
           pname = "dependent-map";
           version = "0.2.4.0";
           sha256 = "5db396bdb5d156434af920c074316c3b84b4d39ba8e1cd349c7bb6679cb28246";
           libraryHaskellDepends = [ base containers dependent-sum ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/dependent-map";
           description = "Dependent finite maps (partial dependent products)";
           license = "unknown";
         }) {};
      "dependent-sum" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dependent-sum";
           version = "0.4";
           sha256 = "a8deecb4153a1878173f8d0a18de0378ab068bc15e5035b9e4cb478e8e4e1a1e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/dependent-sum";
           description = "Dependent sum type";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "dependent-sum-template" = callPackage
        ({ mkDerivation, base, dependent-sum, stdenv, template-haskell
         , th-extras
         }:
         mkDerivation {
           pname = "dependent-sum-template";
           version = "0.0.0.6";
           sha256 = "994cb4891949cad1b9ca268052377c58c174f77a469cae44742ac83727be91ad";
           libraryHaskellDepends = [
             base dependent-sum template-haskell th-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "/dev/null";
           description = "Template Haskell code to generate instances of classes in dependent-sum package";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "deque" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "deque";
           version = "0.2";
           sha256 = "86768d22492c58b35688c28592b222cb16cc996ca6576b35add9c54a470d3e56";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/deque";
           description = "Double-ended queue";
           license = stdenv.lib.licenses.mit;
         }) {};
      "derive" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , haskell-src-exts, pretty, process, stdenv, syb, template-haskell
         , transformers, uniplate
         }:
         mkDerivation {
           pname = "derive";
           version = "2.6.3";
           sha256 = "f23e08f2e51aa22bb51bead0a71a4530185591b8032d53dfb641d7ad65a8a31a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory filepath haskell-src-exts
             pretty process syb template-haskell transformers uniplate
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/derive#readme";
           description = "A program and library to derive instances for data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "deriving-compat" = callPackage
        ({ mkDerivation, base, containers, ghc-boot-th, ghc-prim, stdenv
         , template-haskell, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "deriving-compat";
           version = "0.3.6";
           sha256 = "0c1fab416505e3fabaec007828073c065db077f004dcc6955f2cd32ca139356d";
           libraryHaskellDepends = [
             base containers ghc-boot-th ghc-prim template-haskell transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/deriving-compat";
           description = "Backports of GHC deriving extensions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "descriptive" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, containers, mtl
         , scientific, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "descriptive";
           version = "0.9.4";
           sha256 = "795ec65756bf87ec6ea4c92d85a25d0eb0d8cfa1df40685ddcf74b83099bba2f";
           libraryHaskellDepends = [
             aeson base bifunctors containers mtl scientific text transformers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/descriptive";
           description = "Self-describing consumers/parsers; forms, cmd-line args, JSON, etc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, base16-bytestring
         , bytestring, case-insensitive, charset, containers, contravariant
         , cryptohash, exceptions, http-client, http-client-tls, lens
         , optparse-generic, parsers, prettyprinter, stdenv, system-fileio
         , system-filepath, text, text-format, transformers, trifecta
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "dhall";
           version = "1.8.2";
           sha256 = "520184b58a70e4ac5dc3dc0b39bee64c279b5cdebd2b178aee6934cbb30899d2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base base16-bytestring bytestring case-insensitive
             charset containers contravariant cryptohash exceptions http-client
             http-client-tls lens parsers prettyprinter system-fileio
             system-filepath text text-format transformers trifecta
             unordered-containers vector
           ];
           executableHaskellDepends = [
             base optparse-generic prettyprinter system-filepath text trifecta
           ];
           doHaddock = false;
           doCheck = false;
           description = "A configuration language guaranteed to terminate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall-bash" = callPackage
        ({ mkDerivation, base, bytestring, containers, dhall
         , neat-interpolation, optparse-generic, shell-escape, stdenv, text
         , text-format, trifecta, vector
         }:
         mkDerivation {
           pname = "dhall-bash";
           version = "1.0.6";
           sha256 = "add8f2fe325589d6a1f31c935cff5e81f4925f90bfc8d8eb6d20b59def955cf2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers dhall neat-interpolation shell-escape
             text text-format vector
           ];
           executableHaskellDepends = [
             base bytestring dhall optparse-generic text trifecta
           ];
           doHaddock = false;
           doCheck = false;
           description = "Compile Dhall to Bash";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall-json" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, dhall
         , optparse-generic, stdenv, text, trifecta, vector, yaml
         }:
         mkDerivation {
           pname = "dhall-json";
           version = "1.0.9";
           sha256 = "86a67f9eb51dc03b1ab97e7708a5bd540e4fb895e1c65603728ca98ab6deaf77";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ aeson base dhall text vector ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring dhall optparse-generic text
             trifecta yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Compile Dhall to JSON or YAML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall-nix" = callPackage
        ({ mkDerivation, base, containers, data-fix, dhall, hnix
         , neat-interpolation, optparse-generic, stdenv, text, text-format
         , trifecta, vector
         }:
         mkDerivation {
           pname = "dhall-nix";
           version = "1.0.9";
           sha256 = "3eb773e87fc64ab5a09c4158393f634ff11c125f019ff6738e1bd95ac5e4d21a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers data-fix dhall hnix neat-interpolation text
             text-format vector
           ];
           executableHaskellDepends = [
             base dhall hnix optparse-generic text trifecta
           ];
           doHaddock = false;
           doCheck = false;
           description = "Dhall to Nix compiler";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dhall-text" = callPackage
        ({ mkDerivation, base, dhall, optparse-generic, stdenv, text }:
         mkDerivation {
           pname = "dhall-text";
           version = "1.0.5";
           sha256 = "47bcd70f33b471f717d0e5f3f241db478b954917fcea2a25aa079d79a973b6a4";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base dhall optparse-generic text ];
           doHaddock = false;
           doCheck = false;
           description = "Template text using Dhall";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams" = callPackage
        ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
         , diagrams-svg, stdenv
         }:
         mkDerivation {
           pname = "diagrams";
           version = "1.4";
           sha256 = "8608f6fa682b8c43b9fbe7c42c033c7a6de0680bd7383f6a81ea8bca37999139";
           libraryHaskellDepends = [
             diagrams-contrib diagrams-core diagrams-lib diagrams-svg
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Embedded domain-specific language for declarative vector graphics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-builder" = callPackage
        ({ mkDerivation, base, base-orphans, cmdargs, diagrams-lib
         , directory, exceptions, filepath, hashable, haskell-src-exts
         , haskell-src-exts-simple, hint, lens, mtl, split, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "diagrams-builder";
           version = "0.8.0.2";
           sha256 = "c2ca077cddf7e9d83714f098c93ac3492f47d1152e2de76bc21f2ea3be4629cb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-orphans cmdargs diagrams-lib directory exceptions
             filepath hashable haskell-src-exts haskell-src-exts-simple hint
             lens mtl split transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "hint-based build service for the diagrams graphics EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-cairo" = callPackage
        ({ mkDerivation, array, base, bytestring, cairo, colour, containers
         , data-default-class, diagrams-core, diagrams-lib, filepath
         , hashable, JuicyPixels, lens, mtl, optparse-applicative, pango
         , split, statestack, stdenv, transformers, unix, vector
         }:
         mkDerivation {
           pname = "diagrams-cairo";
           version = "1.4";
           sha256 = "a94ec8bfdba325cf317368355eaa282bef3c75ed78e153ef400b8627575cea81";
           revision = "2";
           editedCabalFile = "1h21l3wa4vbl7p6n7sk949jpxvxikkhf81y2qjqgn904564w73r6";
           libraryHaskellDepends = [
             array base bytestring cairo colour containers data-default-class
             diagrams-core diagrams-lib filepath hashable JuicyPixels lens mtl
             optparse-applicative pango split statestack transformers unix
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Cairo backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-canvas" = callPackage
        ({ mkDerivation, base, blank-canvas, cmdargs, containers
         , data-default-class, diagrams-core, diagrams-lib, lens, mtl
         , NumInstances, optparse-applicative, statestack, stdenv, text
         }:
         mkDerivation {
           pname = "diagrams-canvas";
           version = "1.4";
           sha256 = "30622ff2478391caf31dd8cc6842043f33409e97a3e5fd9f9ca6ee8264b576e9";
           revision = "1";
           editedCabalFile = "174nkb6ki100zh0hbrj8p4n52031jny6683n80i602544iikvbn9";
           libraryHaskellDepends = [
             base blank-canvas cmdargs containers data-default-class
             diagrams-core diagrams-lib lens mtl NumInstances
             optparse-applicative statestack text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "HTML5 canvas backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-contrib" = callPackage
        ({ mkDerivation, base, circle-packing, colour, containers
         , cubicbezier, data-default, data-default-class, diagrams-core
         , diagrams-lib, diagrams-solve, force-layout, hashable, lens
         , linear, mfsolve, MonadRandom, monoid-extras, mtl, mtl-compat
         , parsec, random, semigroups, split, stdenv, text
         }:
         mkDerivation {
           pname = "diagrams-contrib";
           version = "1.4.1";
           sha256 = "5be8de1d66e06fc261808a920a9a7422ea637c54057228888c0a1fac587cebaa";
           revision = "1";
           editedCabalFile = "0143vrfnb5qp3m23nvh5h67b2wvkq8y27yn6jjq601cs95f3b41c";
           libraryHaskellDepends = [
             base circle-packing colour containers cubicbezier data-default
             data-default-class diagrams-core diagrams-lib diagrams-solve
             force-layout hashable lens linear mfsolve MonadRandom monoid-extras
             mtl mtl-compat parsec random semigroups split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Collection of user contributions to diagrams EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-core" = callPackage
        ({ mkDerivation, adjunctions, base, containers, distributive
         , dual-tree, lens, linear, monoid-extras, mtl, profunctors
         , semigroups, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "diagrams-core";
           version = "1.4.0.1";
           sha256 = "ce7919fe23d4232f6b7b8e33c10be762a3ca20a007552f171dc38a35e20a254d";
           libraryHaskellDepends = [
             adjunctions base containers distributive dual-tree lens linear
             monoid-extras mtl profunctors semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Core libraries for diagrams EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-lib" = callPackage
        ({ mkDerivation, active, adjunctions, array, base, bytestring
         , cereal, colour, containers, data-default-class, diagrams-core
         , diagrams-solve, directory, distributive, dual-tree, exceptions
         , filepath, fingertree, fsnotify, hashable, intervals, JuicyPixels
         , lens, linear, monoid-extras, mtl, optparse-applicative, process
         , profunctors, semigroups, stdenv, tagged, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "diagrams-lib";
           version = "1.4.2";
           sha256 = "e9d41742ed3a92b9dff847c3936746e5a95cc4e187b7e4c35c3e3068c842afe5";
           revision = "1";
           editedCabalFile = "0vz16br2gn4agi35k92qw84cja2dqj63g7q3ak64jhc8r99bd4a1";
           libraryHaskellDepends = [
             active adjunctions array base bytestring cereal colour containers
             data-default-class diagrams-core diagrams-solve directory
             distributive dual-tree exceptions filepath fingertree fsnotify
             hashable intervals JuicyPixels lens linear monoid-extras mtl
             optparse-applicative process profunctors semigroups tagged text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Embedded domain-specific language for declarative graphics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-postscript" = callPackage
        ({ mkDerivation, base, containers, data-default-class
         , diagrams-core, diagrams-lib, dlist, filepath, hashable, lens
         , monoid-extras, mtl, semigroups, split, statestack, stdenv
         }:
         mkDerivation {
           pname = "diagrams-postscript";
           version = "1.4";
           sha256 = "fe58f0010520716f66802adb0c1f70f48e77e9c4fcea5441e5343f4c1a5f8db4";
           revision = "1";
           editedCabalFile = "0vmiv3b74nml0ahb7dicq0m0vz2lahzfapln9aby0jb2saa0sf58";
           libraryHaskellDepends = [
             base containers data-default-class diagrams-core diagrams-lib dlist
             filepath hashable lens monoid-extras mtl semigroups split
             statestack
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "Postscript backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-solve" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "diagrams-solve";
           version = "0.1.1";
           sha256 = "a41f5f410b10f162b1e5c07bd4ca3305544870ff1314ae4f5824c83a31644f9d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Pure Haskell solver routines used by diagrams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diagrams-svg" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, colour
         , containers, diagrams-core, diagrams-lib, filepath, hashable
         , JuicyPixels, lens, monoid-extras, mtl, optparse-applicative
         , semigroups, split, stdenv, svg-builder, text
         }:
         mkDerivation {
           pname = "diagrams-svg";
           version = "1.4.1.1";
           sha256 = "c80668c6ac1bf62b108016d36bfe3e603897ca8e331522b0e80b77152915daaa";
           libraryHaskellDepends = [
             base base64-bytestring bytestring colour containers diagrams-core
             diagrams-lib filepath hashable JuicyPixels lens monoid-extras mtl
             optparse-applicative semigroups split svg-builder text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams/";
           description = "SVG backend for diagrams drawing EDSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dice" = callPackage
        ({ mkDerivation, base, parsec, random-fu, stdenv, transformers }:
         mkDerivation {
           pname = "dice";
           version = "0.1";
           sha256 = "e13fe7dec8394aeddb71fb0e0ac68d8750096bfcc198a80d7bc30d94e01edde5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec random-fu transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Simplistic D&D style dice-rolling system";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "dictionaries" = callPackage
        ({ mkDerivation, attoparsec, base, binary, bytestring, containers
         , criterion, data-default, deepseq, directory, exceptions, filepath
         , random, random-shuffle, stdenv, tagged, text, time, transformers
         , zlib
         }:
         mkDerivation {
           pname = "dictionaries";
           version = "0.2.0.4";
           sha256 = "fde3c3d716af4eac7fd427c07a553473bafe0d97fd393f317f2fadea000fa8d4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base binary bytestring containers data-default deepseq
             directory exceptions filepath tagged text time transformers zlib
           ];
           executableHaskellDepends = [
             base bytestring containers criterion deepseq directory exceptions
             filepath random random-shuffle tagged text transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Tools to handle StarDict dictionaries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diff3" = callPackage
        ({ mkDerivation, base, Diff, stdenv }:
         mkDerivation {
           pname = "diff3";
           version = "0.3.0";
           sha256 = "8dc57a5f7070efe7227d3afaf5cf4d084c134e2cc0426e98421cdb720cacea25";
           libraryHaskellDepends = [ base Diff ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/diff3.git";
           description = "Perform a 3-way difference of documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "digest" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "digest";
           version = "0.0.1.2";
           sha256 = "641717eb16392abf8965986a9e8dc21eebf1d97775bbb6923c7b7f8fee17fe11";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "digits" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "digits";
           version = "0.3.1";
           sha256 = "a8499c9745dcf8a4e6c48594f555e6c6276e8d91c457dcc562a370ccadcd6a2c";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Converts integers to lists of digits and back";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dimensional" = callPackage
        ({ mkDerivation, base, deepseq, exact-pi, numtype-dk, stdenv
         , vector
         }:
         mkDerivation {
           pname = "dimensional";
           version = "1.0.1.3";
           sha256 = "3bc566a59227115325caec0ea00a35e025e5ea471a3ab531cf595e5365aa93a7";
           libraryHaskellDepends = [
             base deepseq exact-pi numtype-dk vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/dimensional/";
           description = "Statically checked physical dimensions, using Type Families and Data Kinds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "direct-rocksdb" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cabal-toolkit, directory
         , filepath, safe-exceptions, stdenv
         }:
         mkDerivation {
           pname = "direct-rocksdb";
           version = "0.0.3";
           sha256 = "84358de7e6b6202336ccb038123f0b95c4e57fab6d2fd8e98ba3deb3b582058a";
           setupHaskellDepends = [
             base Cabal cabal-toolkit directory filepath
           ];
           libraryHaskellDepends = [ base bytestring safe-exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TerrorJack/direct-rocksdb#readme";
           description = "Bindings to RocksDB";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "direct-sqlite" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "direct-sqlite";
           version = "2.3.22";
           sha256 = "eabc77fdf1a65e50911ee77a26f3de7e9659b776d3f07990747b4c64aa05693b";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/IreneKnapp/direct-sqlite";
           description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "directory" = callPackage
        ({ mkDerivation, base, filepath, stdenv, time, unix }:
         mkDerivation {
           pname = "directory";
           version = "1.3.1.0";
           sha256 = "94b0d06aba8311e3b9dc8e460d4ad5b25fdfcc361eecb8e7ad68a18f171aa7f2";
           libraryHaskellDepends = [ base filepath time unix ];
           doHaddock = false;
           doCheck = false;
           description = "Platform-agnostic library for filesystem operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "directory-tree" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "directory-tree";
           version = "0.12.1";
           sha256 = "e2084495b3a226cf54d949635c86fc14e89daa09d86cce39e3c3cf898ae6e517";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://brandon.si/code/directory-tree-module-released/";
           description = "A simple directory-like tree datatype, with useful IO functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "discount" = callPackage
        ({ mkDerivation, base, bytestring, markdown, stdenv, text }:
         mkDerivation {
           pname = "discount";
           version = "0.1.1";
           sha256 = "e99cb7fdd1896dd1e525616597f936c1305a657cea1ef82cc0b3dcfe5afa34e0";
           libraryHaskellDepends = [ base bytestring text ];
           librarySystemDepends = [ markdown ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lightquake/discount";
           description = "Haskell bindings to the discount Markdown library";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) markdown;};
      "discrimination" = callPackage
        ({ mkDerivation, array, base, containers, contravariant, deepseq
         , ghc-prim, hashable, primitive, profunctors, promises, semigroups
         , stdenv, transformers, transformers-compat, vector, void
         }:
         mkDerivation {
           pname = "discrimination";
           version = "0.3";
           sha256 = "d6d4b285783e66446a8f798b3a440b1020bdc681285b05794d3ec84d96dc4ca3";
           libraryHaskellDepends = [
             array base containers contravariant deepseq ghc-prim hashable
             primitive profunctors promises semigroups transformers
             transformers-compat vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/discrimination/";
           description = "Fast generic linear-time sorting, joins and container construction";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "disk-free-space" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "disk-free-space";
           version = "0.1.0.1";
           sha256 = "f17a4f9c3b41083ccbb6c11b2debdbc705f86097b7459ff0f46cc01d2692381f";
           revision = "3";
           editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/disk-free-space";
           description = "Retrieve information about disk space usage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "disposable" = callPackage
        ({ mkDerivation, base, dlist, ghcjs-base-stub, stdenv }:
         mkDerivation {
           pname = "disposable";
           version = "0.2.0.4";
           sha256 = "c23fe12dce0aef49bcd52206fe927ac6ae1aa4af5c32028d6ceb4bc52b1fc96a";
           libraryHaskellDepends = [ base dlist ghcjs-base-stub ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/disposable#readme";
           description = "Allows storing different resource-releasing actions together";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distance" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "distance";
           version = "0.1.0.0";
           sha256 = "007cfb1c56ff8e8f905dad7c1630630162ffb8520925f028cf82e93ba7cd4a58";
           revision = "1";
           editedCabalFile = "0iysmnl4p1fsb4zd0mmr6q7zc7w90jrwcxxm7vi38658x19r8qmq";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/distance#readme";
           description = "Useful distance datatype and functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "distributed-closure" = callPackage
        ({ mkDerivation, base, binary, bytestring, constraints, stdenv, syb
         , template-haskell
         }:
         mkDerivation {
           pname = "distributed-closure";
           version = "0.3.5";
           sha256 = "709017cd3a86d945c59e22724d1a8f2e9db57ad9530c995d5c34d96128e2a356";
           libraryHaskellDepends = [
             base binary bytestring constraints syb template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tweag/distributed-closure";
           description = "Serializable closures for distributed programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-accessor, deepseq, distributed-static, exceptions, hashable
         , mtl, network-transport, random, rank1dynamic, stdenv, stm, syb
         , template-haskell, time, transformers
         }:
         mkDerivation {
           pname = "distributed-process";
           version = "0.7.3";
           sha256 = "e5e9185f37a112534bdc9e03140dde7c986f338e83f63b626079b7b1a30ee7d4";
           libraryHaskellDepends = [
             base binary bytestring containers data-accessor deepseq
             distributed-static exceptions hashable mtl network-transport random
             rank1dynamic stm syb template-haskell time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com/";
           description = "Cloud Haskell: Erlang-style concurrency in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-simplelocalnet" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-accessor, distributed-process, network, network-multicast
         , network-transport, network-transport-tcp, stdenv, transformers
         }:
         mkDerivation {
           pname = "distributed-process-simplelocalnet";
           version = "0.2.4";
           sha256 = "2eea8b33398f06c5edd94dadabfb1a39e76a95a1ac385ff9597a4d8f0815df2b";
           revision = "2";
           editedCabalFile = "1msya8gyk48yngw5znyr68f5ygvmiz6yjyhwkgxzjj56h4zh0jh4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers data-accessor distributed-process
             network network-multicast network-transport network-transport-tcp
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Simple zero-configuration backend for Cloud Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-process-tests" = callPackage
        ({ mkDerivation, ansi-terminal, base, binary, bytestring
         , distributed-process, distributed-static, HUnit, network
         , network-transport, random, rematch, setenv, stdenv, stm
         , test-framework, test-framework-hunit
         }:
         mkDerivation {
           pname = "distributed-process-tests";
           version = "0.4.11";
           sha256 = "07c255bc16f7ead7ee29dc389351cb6a438ee229739af7020e86aa35a8aff566";
           libraryHaskellDepends = [
             ansi-terminal base binary bytestring distributed-process
             distributed-static HUnit network network-transport random rematch
             setenv stm test-framework test-framework-hunit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-distributed/distributed-process/tree/master/distributed-process-tests";
           description = "Tests and test support tools for distributed-process";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributed-static" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , rank1dynamic, stdenv
         }:
         mkDerivation {
           pname = "distributed-static";
           version = "0.3.8";
           sha256 = "954bf65722b662794990c81ba31a7fdbccd9d233af9212896443aa5ab9d4ffc2";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq rank1dynamic
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Compositional, type-safe, polymorphic static values and closures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distribution" = callPackage
        ({ mkDerivation, array, base, containers, MonadRandom, random
         , stdenv
         }:
         mkDerivation {
           pname = "distribution";
           version = "1.1.1.0";
           sha256 = "fdd2f8eef65580e2248adab5a35e441180b0737ac14cb1307351a205043081b1";
           libraryHaskellDepends = [
             array base containers MonadRandom random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redelmann/haskell-distribution";
           description = "Finite discrete probability distributions";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "distribution-nixpkgs" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, containers
         , deepseq, language-nix, lens, pretty, process, split, stdenv
         }:
         mkDerivation {
           pname = "distribution-nixpkgs";
           version = "1.1";
           sha256 = "1d072e1918a494bd476f666d9665b4e14a7551f5c57cd9640f0f5f986b40a896";
           libraryHaskellDepends = [
             aeson base bytestring Cabal containers deepseq language-nix lens
             pretty process split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/distribution-nixpkgs#readme";
           description = "Types and functions to manipulate the Nixpkgs distribution";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "distributive" = callPackage
        ({ mkDerivation, base, base-orphans, Cabal, cabal-doctest, stdenv
         , tagged, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "distributive";
           version = "0.5.3";
           sha256 = "9173805b9c941bda1f37e5aeb68ae30f57a12df9b17bd2aa86db3b7d5236a678";
           revision = "4";
           editedCabalFile = "1v6b2vnharppjn6w36lxfy0dvl93jzjq7fcyq9cp71650f1g9ai5";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base base-orphans tagged transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/distributive/";
           description = "Distributive functors -- Dual to Traversable";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "diversity" = callPackage
        ({ mkDerivation, base, containers, data-ordlist, fasta
         , math-functions, MonadRandom, optparse-applicative, parsec, pipes
         , random-shuffle, scientific, semigroups, split, stdenv
         }:
         mkDerivation {
           pname = "diversity";
           version = "0.8.1.0";
           sha256 = "1bfb127ebd5c8cc9d5929222c7337d2eeecd66857875811ea9d9411227312832";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers data-ordlist fasta math-functions MonadRandom
             parsec random-shuffle scientific split
           ];
           executableHaskellDepends = [
             base containers fasta optparse-applicative pipes semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GregorySchwartz/diversity";
           description = "Quantify the diversity of a population";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "djinn-ghc" = callPackage
        ({ mkDerivation, async, base, containers, djinn-lib, ghc, mtl
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "djinn-ghc";
           version = "0.0.2.3";
           sha256 = "cb956aed69bc5c342b45ef1b1142b6555fd2865dde1a80ac6ab3ef86aca314a4";
           libraryHaskellDepends = [
             async base containers djinn-lib ghc mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "djinn-lib" = callPackage
        ({ mkDerivation, base, containers, mtl, pretty, stdenv }:
         mkDerivation {
           pname = "djinn-lib";
           version = "0.0.1.2";
           sha256 = "c0fe10b7aa5cb39f828e933925fc5bbf86c290bb7661021e4d9250ae8ed01011";
           libraryHaskellDepends = [ base containers mtl pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.augustsson.net/Darcs/Djinn/";
           description = "Generate Haskell code from a type. Library extracted from djinn package.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dlist" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "dlist";
           version = "0.8.0.4";
           sha256 = "acf1867b80cdd618b8d904e89eea33be60d3c4c3aeb80d61f29229a301cc397a";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/spl/dlist";
           description = "Difference lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dlist-instances" = callPackage
        ({ mkDerivation, base, dlist, semigroups, stdenv }:
         mkDerivation {
           pname = "dlist-instances";
           version = "0.1.1.1";
           sha256 = "d14a10c06f52fb412b2c1066d729f5534aa43204221e7ba7d81d935c44ce4f5b";
           libraryHaskellDepends = [ base dlist semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gregwebs/dlist-instances";
           description = "Difference lists instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dlist-nonempty" = callPackage
        ({ mkDerivation, base, base-compat, deepseq, dlist, semigroupoids
         , stdenv
         }:
         mkDerivation {
           pname = "dlist-nonempty";
           version = "0.1.1";
           sha256 = "40e8a64c979ca07b4f67a38878d1d13c1127fe2d1ad6b2b4daff0ee2dbd54b33";
           libraryHaskellDepends = [
             base base-compat deepseq dlist semigroupoids
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/dlist-nonempty";
           description = "Non-empty difference lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dns" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, binary
         , bytestring, bytestring-builder, conduit, conduit-extra
         , containers, fetchgit, iproute, mtl, network, random, resourcet
         , safe, stdenv
         }:
         mkDerivation {
           pname = "dns";
           version = "3.0.0";
           src = fetchgit {
             url = "https://github.com/kazu-yamamoto/dns.git";
             sha256 = "0fx57y06c6dsypbdf4820nlzfpvzb0xf0c9cjpy621acxms3wwmc";
             rev = "b106470f0a93672af22cbc7ed6564b53c0f249ed";
           };
           libraryHaskellDepends = [
             attoparsec base base64-bytestring binary bytestring
             bytestring-builder conduit conduit-extra containers iproute mtl
             network random resourcet safe
           ];
           doHaddock = false;
           doCheck = false;
           testTarget = "spec";
           description = "DNS library in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "do-list" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "do-list";
           version = "1.0.1";
           sha256 = "b377193461b0ad7a81f9e66bcf10f8838b6f1e39f4a5de3b2e2f45c749c5b694";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tserduke/do-list#readme";
           description = "Do notation for free";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "docker" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , conduit-combinators, conduit-extra, containers
         , data-default-class, directory, exceptions, filemanip, filepath
         , http-client, http-conduit, http-types, monad-control, mtl
         , network, resourcet, scientific, stdenv, tar, temporary, text
         , time, tls, transformers, transformers-base, unordered-containers
         , uuid, vector, x509, x509-store, x509-system, zlib
         }:
         mkDerivation {
           pname = "docker";
           version = "0.4.1.1";
           sha256 = "6a5e0b8818306053d20e244d66bf55d682b48e9e83f72fabfc99bba518447280";
           revision = "1";
           editedCabalFile = "1zbi904jaq2mvbxhmw2l181xz0p6q8mia843g5arsz3akckq2z72";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit conduit-combinators
             conduit-extra containers data-default-class directory exceptions
             filemanip filepath http-client http-conduit http-types
             monad-control mtl network resourcet scientific tar temporary text
             time tls transformers transformers-base unordered-containers uuid
             vector x509 x509-store x509-system zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/denibertovic/docker-hs";
           description = "An API client for docker written in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "docker-build-cacher" = callPackage
        ({ mkDerivation, base, containers, foldl, language-docker, stdenv
         , system-filepath, text, turtle
         }:
         mkDerivation {
           pname = "docker-build-cacher";
           version = "1.8.2";
           sha256 = "f195024d031b6d8f79bf610be9476c93e46f9b25f10a27b2b16cf112c13ab94e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers foldl language-docker system-filepath text turtle
           ];
           doHaddock = false;
           doCheck = false;
           description = "Builds a services with docker and caches all of its intermediate stages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dockerfile" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dockerfile";
           version = "0.1.0.1";
           sha256 = "294ac0b6c0546da15bf5453d6006979aeb6f6b36f0566be75767f5021de00025";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A simple DSL for describing and generating Dockerfile containers in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "docopt" = callPackage
        ({ mkDerivation, base, containers, parsec, stdenv, template-haskell
         , th-lift
         }:
         mkDerivation {
           pname = "docopt";
           version = "0.7.0.5";
           sha256 = "15790808a4896bbf0748c1c0f3ab63c07aea4621d95b93a39886813f829d05ee";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers parsec template-haskell th-lift
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/docopt/docopt.hs";
           description = "A command-line interface parser that will make you smile";
           license = stdenv.lib.licenses.mit;
         }) {};
      "doctemplates" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , containers, parsec, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "doctemplates";
           version = "0.2.1";
           sha256 = "d71063c4607fde69caa0a1c0938b5956777091b1eb62e20517541559e814daad";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring containers parsec
             scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/doctemplates#readme";
           description = "Pandoc-style document templates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "doctest" = callPackage
        ({ mkDerivation, base, base-compat, code-page, deepseq, directory
         , filepath, ghc, ghc-paths, process, stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "doctest";
           version = "0.13.0";
           sha256 = "4bd80a88bd569091ada73b149c31085df1a51c9cb0985612eb73d9856fb5e321";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat code-page deepseq directory filepath ghc ghc-paths
             process syb transformers
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/doctest#readme";
           description = "Test interactive Haskell examples";
           license = stdenv.lib.licenses.mit;
         }) {};
      "doctest-discover" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, doctest
         , filepath, stdenv
         }:
         mkDerivation {
           pname = "doctest-discover";
           version = "0.1.0.8";
           sha256 = "5da85b9aeb66119d3fc1c7b08454909ec65927796f6578fdc9bdb47102cb95c6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring directory doctest filepath
           ];
           executableHaskellDepends = [
             aeson base bytestring directory doctest filepath
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/karun012/doctest-discover";
           description = "Easy way to run doctests via cabal";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "doctest-driver-gen" = callPackage
        ({ mkDerivation, base, doctest, stdenv }:
         mkDerivation {
           pname = "doctest-driver-gen";
           version = "0.1.0.1";
           sha256 = "1ac3aa2f613197fa4d2f6626a08cd01bdd5895640bf8239a8e9ae48aee173b37";
           revision = "1";
           editedCabalFile = "0005s8byp2ww8y2xnmxvdh24fw5qwly4f6sbmzwbs0yi10zsbfkg";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base doctest ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Hexirp/doctest-driver-gen#readme";
           description = "Generate doctest-driver.hs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dom-parser" = callPackage
        ({ mkDerivation, base, case-insensitive, containers, lens, mtl
         , scientific, semigroups, stdenv, text, transformers, xml-conduit
         , xml-lens
         }:
         mkDerivation {
           pname = "dom-parser";
           version = "3.0.0";
           sha256 = "49d19767bafbf208380a7f1de6e5b266aa910ce40712a5801bb2b6103adb7490";
           libraryHaskellDepends = [
             base case-insensitive containers lens mtl scientific semigroups
             text transformers xml-conduit xml-lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeable/dom-parser";
           description = "Simple monadic DOM parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dotenv" = callPackage
        ({ mkDerivation, base, base-compat, directory, exceptions
         , megaparsec, optparse-applicative, process, stdenv, text
         , transformers, yaml
         }:
         mkDerivation {
           pname = "dotenv";
           version = "0.5.2.3";
           sha256 = "ab48559e5bc7bff531d5ca50dc1d91c8bd14bd4daf51d55258a4e0408c938ca4";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base-compat directory exceptions megaparsec process text
             transformers yaml
           ];
           executableHaskellDepends = [
             base base-compat megaparsec optparse-applicative process text
             transformers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/dotenv-hs";
           description = "Loads environment variables from dotenv files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dotnet-timespan" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "dotnet-timespan";
           version = "0.0.1.0";
           sha256 = "d8ca8dffbc916ff5139d6f0df4a22c947ab5f996c376f1ab8c2e120789209ac3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/YoEight/dotnet-timespan";
           description = ".NET TimeSpan";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "double-conversion" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv, text }:
         mkDerivation {
           pname = "double-conversion";
           version = "2.0.2.0";
           sha256 = "44cde172395401169e844d6791b6eb0ef2c2e55a08de8dda96551cfe029ba26b";
           libraryHaskellDepends = [ base bytestring ghc-prim text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/double-conversion";
           description = "Fast conversion between double precision floating point and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "download" = callPackage
        ({ mkDerivation, base, bytestring, feed, stdenv, tagsoup, xml }:
         mkDerivation {
           pname = "download";
           version = "0.3.2.6";
           sha256 = "a06d401a2ca58b6ee494ce462c753939ef0a2d11b4d475ae40848884fb44eef2";
           libraryHaskellDepends = [ base bytestring feed tagsoup xml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/download";
           description = "High-level file download based on URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dpor" = callPackage
        ({ mkDerivation, base, containers, deepseq, random, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "dpor";
           version = "0.2.0.0";
           sha256 = "6efbcc42b845541148886ee92656bbfe6b90b1a0483180b9165d4b0b691ac8e2";
           libraryHaskellDepends = [
             base containers deepseq random semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "A generic implementation of dynamic partial-order reduction (DPOR) for testing arbitrary models of concurrency";
           license = stdenv.lib.licenses.mit;
         }) {};
      "drawille" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "drawille";
           version = "0.1.2.0";
           sha256 = "b8188ee87a06c168974c9655188450eb86c331c556decb31cf084efa846237df";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-drawille#readme";
           description = "A port of asciimoo's drawille to haskell";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "drifter" = callPackage
        ({ mkDerivation, base, containers, fgl, stdenv, text }:
         mkDerivation {
           pname = "drifter";
           version = "0.2.3";
           sha256 = "df539d47e47a6064997619079cde28cc0ae039cbda1915cec447380736d92638";
           libraryHaskellDepends = [ base containers fgl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/drifter";
           description = "Simple schema management for arbitrary databases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "drifter-postgresql" = callPackage
        ({ mkDerivation, base, containers, drifter, mtl, postgresql-simple
         , stdenv, time, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "drifter-postgresql";
           version = "0.2.1";
           sha256 = "93320177ec9aab96799623ccc274f5b069500587f002f5f415c24159dd6eed5c";
           libraryHaskellDepends = [
             base containers drifter mtl postgresql-simple time transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/michaelxavier/drifter-postgresql";
           description = "PostgreSQL support for the drifter schema migration tool";
           license = stdenv.lib.licenses.mit;
         }) {};
      "dsp" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv }:
         mkDerivation {
           pname = "dsp";
           version = "0.2.4";
           sha256 = "fee4dff51d372ae9fd7ceaa0b885b1dfdf396ebddbc56076a529ecdf95589b2f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ array base containers random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/DSP";
           description = "Haskell Digital Signal Processing";
           license = "GPL";
         }) {};
      "dual-tree" = callPackage
        ({ mkDerivation, base, monoid-extras, newtype-generics, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "dual-tree";
           version = "0.2.1";
           sha256 = "2465247dab91c799a06feccc3598c4c25a15bb17e80da102e22a45caa9605f19";
           libraryHaskellDepends = [
             base monoid-extras newtype-generics semigroups
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rose trees with cached and accumulating monoidal annotations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dublincore-xml-conduit" = callPackage
        ({ mkDerivation, base, conduit, conduit-combinators
         , safe-exceptions, stdenv, text, time, timerep, uri-bytestring
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "dublincore-xml-conduit";
           version = "0.1.0.2";
           sha256 = "d47a8dcb21d1866f0229168d11d1da136da3028a2f4252bee61d219988f45f9e";
           libraryHaskellDepends = [
             base conduit conduit-combinators safe-exceptions text time timerep
             uri-bytestring xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/dublincore-xml-conduit";
           description = "XML streaming parser/renderer for the Dublin Core standard elements";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "dvorak" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "dvorak";
           version = "0.1.0.0";
           sha256 = "afc8ba89415a01039ccdc719b875826b6b12befb4a6a97bcd7544f22eaffb6cf";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kvanberendonck/codec-dvorak";
           description = "Dvorak encoding for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "dynamic-state" = callPackage
        ({ mkDerivation, base, binary, bytestring, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "dynamic-state";
           version = "0.3";
           sha256 = "bb62799b08f981a1c8ddcbb349a2b87381439d574a9669cf0bbc829bb63f4929";
           libraryHaskellDepends = [
             base binary bytestring hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Optionally serializable dynamic state keyed by type";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "dyre" = callPackage
        ({ mkDerivation, base, binary, directory, executable-path, filepath
         , ghc-paths, io-storage, process, stdenv, time, unix, xdg-basedir
         }:
         mkDerivation {
           pname = "dyre";
           version = "0.8.12";
           sha256 = "e224305cc6b38b4143f49489931c2ea94b326915206d34eddf5b2ee2b5a71682";
           libraryHaskellDepends = [
             base binary directory executable-path filepath ghc-paths io-storage
             process time unix xdg-basedir
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/dyre";
           description = "Dynamic reconfiguration in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "easy-file" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, time, unix }:
         mkDerivation {
           pname = "easy-file";
           version = "0.2.1";
           sha256 = "ff86e1b29284499bea5f1d0ff539b3ed64fa6d1a06c2243ca61f93be0202e56c";
           libraryHaskellDepends = [ base directory filepath time unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/kazu-yamamoto/easy-file";
           description = "Cross-platform File handling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "echo" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "echo";
           version = "0.1.3";
           sha256 = "704f07310f8272d170f8ab7fb2a2c13f15d8501ef8310801e36964c8eff485ef";
           revision = "1";
           editedCabalFile = "0br8wfiybcw5hand4imiw0i5hacdmrax1dv8g95f35gazffbx42l";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base process ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/echo";
           description = "A cross-platform, cross-console way to handle echoing terminal input";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ed25519" = callPackage
        ({ mkDerivation, base, bytestring, fetchgit, ghc-prim, stdenv }:
         mkDerivation {
           pname = "ed25519";
           version = "0.0.5.0";
           src = fetchgit {
             url = "https://github.com/thoughtpolice/hs-ed25519";
             sha256 = "0fah4vkmqdkjsdh3s3x27yfaif2fbdg6049xvp54b5mh50yvxkfq";
             rev = "da4247b5b3420120e20451e6a252e2a2ca15b43c";
           };
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://thoughtpolice.github.com/hs-ed25519";
           description = "Ed25519 cryptographic signatures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ede" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, bifunctors
         , bytestring, comonad, directory, double-conversion, filepath, free
         , lens, mtl, parsers, scientific, semigroups, stdenv, text
         , text-format, text-manipulate, trifecta, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "ede";
           version = "0.2.8.7";
           sha256 = "8b6be46bb0ef2b6503124fb1ae63c26e377013686fbb19ddd0ffeec3d3365e0a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint base bifunctors bytestring comonad directory
             double-conversion filepath free lens mtl parsers scientific
             semigroups text text-format text-manipulate trifecta
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/brendanhay/ede";
           description = "Templating language with similar syntax and features to Liquid or Jinja2";
           license = "unknown";
         }) {};
      "edit-distance" = callPackage
        ({ mkDerivation, array, base, containers, random, stdenv }:
         mkDerivation {
           pname = "edit-distance";
           version = "0.2.2.1";
           sha256 = "3e8885ee2f56ad4da940f043ae8f981ee2fe336b5e8e4ba3f7436cff4f526c4a";
           revision = "1";
           editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
           libraryHaskellDepends = [ array base containers random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phadej/edit-distance";
           description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "edit-distance-vector" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "edit-distance-vector";
           version = "1.0.0.4";
           sha256 = "b7dfddd86d315ef1b0c86415f321efc04b4a1b47a7b13edafc73a6e81b620f1f";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thsutton/edit-distance-vector";
           description = "Calculate edit distances and edit scripts between vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "editor-open" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , directory, process, resourcet, stdenv, temporary, transformers
         , unix
         }:
         mkDerivation {
           pname = "editor-open";
           version = "0.6.0.0";
           sha256 = "2fc5d19bce2d477935202a5a4522671529d0352a0ee28be1307f8ab391065265";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra directory process resourcet
             temporary transformers unix
           ];
           executableHaskellDepends = [
             base bytestring conduit conduit-extra resourcet
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pharpend/editor-open";
           description = "Open the user's $VISUAL or $EDITOR for text input";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "effect-handlers" = callPackage
        ({ mkDerivation, base, free, kan-extensions, mtl, stdenv }:
         mkDerivation {
           pname = "effect-handlers";
           version = "0.1.0.8";
           sha256 = "2439a77b6ec8db236fc2809cb91219305a7071c72bfd68de795e01b3df9aa80c";
           libraryHaskellDepends = [ base free kan-extensions mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/edofic/effect-handlers";
           description = "A library for writing extensible algebraic effects and handlers. Similar to extensible-effects but with deep handlers.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "either" = callPackage
        ({ mkDerivation, base, bifunctors, exceptions, free, mmorph
         , monad-control, MonadRandom, mtl, profunctors, semigroupoids
         , semigroups, stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "either";
           version = "4.4.1.1";
           sha256 = "b087cb0fb63fec2fbdcac05fef0d03751daef5deb86cda3c732b9a6a31e634d3";
           revision = "2";
           editedCabalFile = "1n7792mcrvfh31qrbj8mpnx372s03kz83mypj7l4fm5h6zi4a3hs";
           libraryHaskellDepends = [
             base bifunctors exceptions free mmorph monad-control MonadRandom
             mtl profunctors semigroupoids semigroups transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/either/";
           description = "An either monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "either-unwrap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "either-unwrap";
           version = "1.1";
           sha256 = "ccabd6f87118abc8dcba481b316c76b8195ac9e8a8f3ddb478de5eb64e2d2e3c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gcross/either-unwrap";
           description = "Functions for probing and unwrapping values inside of Either";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg" = callPackage
        ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
         , filepath, network, snap-core, snap-server, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "ekg";
           version = "0.4.0.14";
           sha256 = "2d67d9e58dc72bc23d90efd1c38dc9f7d45545155774ceab4c96ce372f2d14d8";
           revision = "1";
           editedCabalFile = "152b4w3qld6jmwir3a06h6sc1girahla8cc1y2g23bwv6nnhxapp";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring ekg-core ekg-json filepath network snap-core
             snap-server text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg";
           description = "Remote monitoring of processes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-cloudwatch" = callPackage
        ({ mkDerivation, amazonka, amazonka-cloudwatch, amazonka-core, base
         , bytestring, ekg-core, lens, resourcet, semigroups, stdenv, text
         , time, unordered-containers
         }:
         mkDerivation {
           pname = "ekg-cloudwatch";
           version = "0.0.1.6";
           sha256 = "a9f8d9ae5b3b3336aae0db1249a9e7f0c4f373a5d9636ee4493b40644128140d";
           libraryHaskellDepends = [
             amazonka amazonka-cloudwatch amazonka-core base bytestring ekg-core
             lens resourcet semigroups text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sellerlabs/ekg-cloudwatch#readme";
           description = "An ekg backend for Amazon Cloudwatch";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-core" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ekg-core";
           version = "0.1.1.4";
           sha256 = "66d89acca05c1c91dc57a9c4b3f62d25ccd0c04bb2bfd46d5947f9b8cd8ee937";
           libraryHaskellDepends = [
             base containers ghc-prim text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-core";
           description = "Tracking of system metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-json" = callPackage
        ({ mkDerivation, aeson, base, ekg-core, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ekg-json";
           version = "0.1.0.6";
           sha256 = "1e6a80aa0a28bbf41c9c6364cbb5731160d14fa54145f27a82d0b3467a04dd47";
           libraryHaskellDepends = [
             aeson base ekg-core text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-json";
           description = "JSON encoding of ekg metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-statsd" = callPackage
        ({ mkDerivation, base, bytestring, ekg-core, network, stdenv, text
         , time, unordered-containers
         }:
         mkDerivation {
           pname = "ekg-statsd";
           version = "0.2.2.0";
           sha256 = "c2a0f4270e2e1daa2847944c8b3bf948df8c6efd4893063b069857fa7e893afc";
           libraryHaskellDepends = [
             base bytestring ekg-core network text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/ekg-statsd";
           description = "Push metrics to statsd";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ekg-wai" = callPackage
        ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
         , filepath, http-types, network, stdenv, text, time, transformers
         , unordered-containers, wai, wai-app-static, warp
         }:
         mkDerivation {
           pname = "ekg-wai";
           version = "0.1.0.2";
           sha256 = "dc42eb0c0c7be06595382dc2858cc926825fff87ab617aa47cc8513092652de6";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring ekg-core ekg-json filepath http-types network
             text time transformers unordered-containers wai wai-app-static warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tvh/ekg-wai";
           description = "Remote monitoring of processes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elerea" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "elerea";
           version = "2.9.0";
           sha256 = "901221660b32597803b20fe2e78bb6f1f60f064d04671fb3f0baa05c87446681";
           libraryHaskellDepends = [
             base containers transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "A minimalistic FRP library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eliminators" = callPackage
        ({ mkDerivation, base, extra, singleton-nats, singletons, stdenv
         , template-haskell, th-abstraction, th-desugar
         }:
         mkDerivation {
           pname = "eliminators";
           version = "0.3";
           sha256 = "b6a2352a9a0d388618c220b627484385535b6a6a8fcdabc0a785028cdba8a2f4";
           libraryHaskellDepends = [
             base extra singleton-nats singletons template-haskell
             th-abstraction th-desugar
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/eliminators";
           description = "Dependently typed elimination functions using singletons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elm-core-sources" = callPackage
        ({ mkDerivation, base, bytestring, containers, file-embed, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "elm-core-sources";
           version = "1.0.0";
           sha256 = "a403505d50cd6ff0d21243db55c6decc6dde14b88a6a393e2b6243f09f6620fb";
           libraryHaskellDepends = [
             base bytestring containers file-embed template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/JoeyEremondi/elm-build-lib";
           description = "Source files for the Elm runtime and standard libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "elm-export" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , formatting, mtl, stdenv, text, time, wl-pprint-text
         }:
         mkDerivation {
           pname = "elm-export";
           version = "0.6.0.1";
           sha256 = "bf9862015918c72b54b421efcd9d858969dcd94ef0a3d0cb92d9bc0c4363f9d5";
           libraryHaskellDepends = [
             base bytestring containers directory formatting mtl text time
             wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/krisajenkins/elm-export";
           description = "A library to generate Elm types from Haskell source";
           license = "unknown";
         }) {};
      "elm-export-persistent" = callPackage
        ({ mkDerivation, aeson, base, elm-export, persistent, scientific
         , stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "elm-export-persistent";
           version = "0.1.2";
           sha256 = "bc45ef54b7538b0c8223a1b966cbd10a69dac3879897d2a75b148dcdc7d8de9d";
           libraryHaskellDepends = [
             aeson base elm-export persistent scientific text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/elm-export-persistent";
           description = "elm-export persistent entities";
           license = stdenv.lib.licenses.mit;
         }) {};
      "email-validate" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "email-validate";
           version = "2.3.2.2";
           sha256 = "aac50c03884c5cd085221f560bacf3af2cf9e51ad9956ce655950067d9498adb";
           libraryHaskellDepends = [
             attoparsec base bytestring template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Porges/email-validate-hs";
           description = "Email address validation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "emailaddress" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, bytestring
         , email-validate, http-api-data, opaleye, path-pieces, persistent
         , postgresql-simple, product-profunctors, profunctors, stdenv, text
         }:
         mkDerivation {
           pname = "emailaddress";
           version = "0.2.0.0";
           sha256 = "390b0aaf8fa2d3a694b812ad83fc0f26ed5c7172cc318a7d46c1fc3456d9c15c";
           libraryHaskellDepends = [
             aeson base bifunctors bytestring email-validate http-api-data
             opaleye path-pieces persistent postgresql-simple
             product-profunctors profunctors text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/emailaddress#readme";
           description = "Wrapper around email-validate library adding instances for common type classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enclosed-exceptions" = callPackage
        ({ mkDerivation, base, deepseq, lifted-base, monad-control, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "enclosed-exceptions";
           version = "1.0.2";
           sha256 = "7b9beab82d219c0dd879dfdef70fb74a4a7595b4dbd0baf7adb12cdbbe8189f1";
           revision = "1";
           editedCabalFile = "0rjm8g2bm9a7qzklkp0rh5az4qh8nsl0hl119gjik671knygkdj0";
           libraryHaskellDepends = [
             base deepseq lifted-base monad-control transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jcristovao/enclosed-exceptions";
           description = "Catching all exceptions from within an enclosed computation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "engine-io" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, base64-bytestring
         , bytestring, either, free, monad-loops, mwc-random, stdenv, stm
         , stm-delay, text, transformers, unordered-containers, vector
         , websockets
         }:
         mkDerivation {
           pname = "engine-io";
           version = "1.2.17";
           sha256 = "7bedbd05bbcff85294cc062a2ba81a8e85549bbbd9c70a9b18e3963071c8b654";
           libraryHaskellDepends = [
             aeson async attoparsec base base64-bytestring bytestring either
             free monad-loops mwc-random stm stm-delay text transformers
             unordered-containers vector websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/engine.io";
           description = "A Haskell implementation of Engine.IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "engine-io-wai" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, either, engine-io
         , http-types, mtl, stdenv, text, transformers, transformers-compat
         , unordered-containers, wai, wai-websockets, websockets
         }:
         mkDerivation {
           pname = "engine-io-wai";
           version = "1.0.8";
           sha256 = "eb1fd85101d0fe23cee2af612e6277cdd6c15783c5b67128e7332039de35f056";
           libraryHaskellDepends = [
             attoparsec base bytestring either engine-io http-types mtl text
             transformers transformers-compat unordered-containers wai
             wai-websockets websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/engine.io";
           description = "An @engine-io@ @ServerAPI@ that is compatible with @Wai@";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "entropy" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath
         , process, stdenv, unix
         }:
         mkDerivation {
           pname = "entropy";
           version = "0.3.8";
           sha256 = "743a49d5e17ae9d6118ff077f2cd2d5944c0ea6cff501efeec95b68d5f7474d0";
           setupHaskellDepends = [ base Cabal directory filepath process ];
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/entropy";
           description = "A platform independent entropy source";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enummapset" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "enummapset";
           version = "0.5.2.1";
           sha256 = "0f77b5235f1ebdb423e5be2df9390edd7173f0a6531dd368b86c998ac3023805";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michalt/enummapset";
           description = "IntMap and IntSet with Enum keys/elements";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "enumset" = callPackage
        ({ mkDerivation, base, data-accessor, semigroups, stdenv
         , storable-record
         }:
         mkDerivation {
           pname = "enumset";
           version = "0.0.4.1";
           sha256 = "5f9d115f7f2b2d4dba290f9d62cd7e9f52f6f6f8235ac5ed9bbf6e982a51d054";
           libraryHaskellDepends = [
             base data-accessor semigroups storable-record
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sets of enumeration values represented by machine words";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "envelope" = callPackage
        ({ mkDerivation, aeson, base, http-api-data, mtl, stdenv, text }:
         mkDerivation {
           pname = "envelope";
           version = "0.2.2.0";
           sha256 = "cf4d6fe3f906e859ec3c16684a8dafb349e77f0fa4f21b7090ca33e707867ef9";
           libraryHaskellDepends = [ aeson base http-api-data mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/envelope#readme";
           description = "Defines generic 'Envelope' type to wrap reponses from a JSON API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "envparse" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "envparse";
           version = "0.4";
           sha256 = "bf9dd7cd0ed3c38f63ea45cbb496b58ad3d83022b5eab5a66bfeebec5982803d";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://supki.github.io/envparse";
           description = "Parse environment variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "envy" = callPackage
        ({ mkDerivation, base, bytestring, containers, mtl, stdenv, text
         , time, transformers
         }:
         mkDerivation {
           pname = "envy";
           version = "1.3.0.2";
           sha256 = "4ca0af8de7d089cf9f1e16e46a6a1300e901907f4edb3a8d393e5af11868899b";
           libraryHaskellDepends = [
             base bytestring containers mtl text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "An environmentally friendly way to deal with environment variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "epub-metadata" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , hxt, mtl, regex-compat-tdfa, stdenv, utf8-string, zip-archive
         }:
         mkDerivation {
           pname = "epub-metadata";
           version = "4.5";
           sha256 = "19ae3914df5936908c8d7264ae5f1e310262fa06bd7e4390838892840e4c0349";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory filepath hxt mtl
             regex-compat-tdfa utf8-string zip-archive
           ];
           executableHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/dino/epub-metadata";
           description = "Library for parsing epub document metadata";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eq" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "eq";
           version = "4.0.4";
           sha256 = "042f4c1e9eeb25a52c20623fc482cc00e3235198089c5b60bc36fa47ebacbde5";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/eq/";
           description = "Leibnizian equality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "equal-files" = callPackage
        ({ mkDerivation, base, bytestring, explicit-exception, filemanip
         , stdenv, transformers, utility-ht
         }:
         mkDerivation {
           pname = "equal-files";
           version = "0.0.5.3";
           sha256 = "e5b785c286c557c57dba7107d913b220781aa2549ba4b7685da494b20a0172aa";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring explicit-exception filemanip transformers
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/equal-files/";
           description = "Shell command for finding equal files";
           license = "GPL";
         }) {};
      "equivalence" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, STMonadTrans
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "equivalence";
           version = "0.3.2";
           sha256 = "7da21ed5f980caa18c995190dd527c69822050390e4237c92f1acbed7d5b0529";
           revision = "1";
           editedCabalFile = "010n0gpk2rpninggdnnx0j7fys6hzn80s789b16iw0a55h4z0gn8";
           libraryHaskellDepends = [
             base containers mtl STMonadTrans transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pa-ba/equivalence";
           description = "Maintaining an equivalence relation implemented as union-find using STT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "erf" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "erf";
           version = "2.0.0.0";
           sha256 = "24f0b79c7e1d25cb2cd44c2258d7a464bf6db8079775b50b60b54a254616b337";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "The error function, erf, and related functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "error-util" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "error-util";
           version = "0.0.1.2";
           sha256 = "df1916a2de007697b7b1a9f83eacab4588d8dc472fd0f21395dce83b085e4e06";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pmlodawski/error-util";
           description = "Set of utils and operators for error handling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "errors" = callPackage
        ({ mkDerivation, base, exceptions, safe, stdenv, text, transformers
         , transformers-compat, unexceptionalio
         }:
         mkDerivation {
           pname = "errors";
           version = "2.2.4";
           sha256 = "ea38f78cb346661df51a53d80b3268df19df7c7cd73817aad09e8f69a06cb26c";
           libraryHaskellDepends = [
             base exceptions safe text transformers transformers-compat
             unexceptionalio
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simplified error-handling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "errors-ext" = callPackage
        ({ mkDerivation, base, errors, exceptions, monad-control, mtl
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "errors-ext";
           version = "0.4.1";
           sha256 = "b0ac78b09e0d5b856e91bfc59a2d91aef487807a2bbd1f562575e235df459ef6";
           libraryHaskellDepends = [
             base errors exceptions monad-control mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/A1-Triard/errors-ext#readme";
           description = "`bracket`-like functions for `ExceptT` over `IO` monad";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "ersatz" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, Cabal
         , cabal-doctest, containers, data-default, lens, mtl, parsec
         , process, semigroups, stdenv, temporary, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "ersatz";
           version = "0.4.2";
           sha256 = "aecf2d0c0dc413b52b2eadf4f75de76f72367db699086222787f65f0b93224e7";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             array attoparsec base bytestring containers data-default lens mtl
             process semigroups temporary transformers unordered-containers
           ];
           executableHaskellDepends = [
             array base containers lens mtl parsec semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/ersatz";
           description = "A monad for expressing SAT or QSAT problems using observable sharing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "esqueleto" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, conduit
         , monad-logger, persistent, resourcet, stdenv, tagged, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "esqueleto";
           version = "2.5.3";
           sha256 = "3d997551fe9e42b39b5eb8215d5daf4c59e33d55da5bc9eff193ae8a7f4ec482";
           libraryHaskellDepends = [
             base blaze-html bytestring conduit monad-logger persistent
             resourcet tagged text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bitemyapp/esqueleto";
           description = "Type-safe EDSL for SQL queries on persistent backends";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "etcd" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-conduit, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "etcd";
           version = "1.0.5";
           sha256 = "916fc01e40cc5488f54fea8c623b31087b364432a78acffd95825f5bd1311f2f";
           revision = "1";
           editedCabalFile = "1ylq3wsl4ghjv1ib2zzfny7wdhwhwfnczl64wy18xipd5a6vrnsw";
           libraryHaskellDepends = [
             aeson base bytestring http-conduit text time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Client for etcd, a highly-available key value store";
           license = "unknown";
         }) {};
      "ether" = callPackage
        ({ mkDerivation, base, exceptions, mmorph, monad-control, mtl
         , reflection, stdenv, tagged, template-haskell, transformers
         , transformers-base, transformers-lift, writer-cps-mtl
         }:
         mkDerivation {
           pname = "ether";
           version = "0.5.1.0";
           sha256 = "36980c9598c5e8e804695da3b966416a2221296022b39be437ec35263ea10085";
           libraryHaskellDepends = [
             base exceptions mmorph monad-control mtl reflection tagged
             template-haskell transformers transformers-base transformers-lift
             writer-cps-mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://int-index.github.io/ether/";
           description = "Monad transformers and classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "event" = callPackage
        ({ mkDerivation, base, containers, semigroups, stdenv, transformers
         }:
         mkDerivation {
           pname = "event";
           version = "0.1.4";
           sha256 = "6791d1402b4d77a11407ab592f65cb61ee60c5a80b99751c5d775afcc9d1824a";
           libraryHaskellDepends = [
             base containers semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Monoidal, monadic and first-class events";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "event-list" = callPackage
        ({ mkDerivation, base, non-negative, QuickCheck, semigroups, stdenv
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "event-list";
           version = "0.1.2";
           sha256 = "624e30b876e0acdaea895efbb2000bbbec2d5be0743ecac9805655ae634af89c";
           libraryHaskellDepends = [
             base non-negative QuickCheck semigroups transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/event-list/";
           description = "Event lists with relative or absolute time stamps";
           license = "GPL";
         }) {};
      "eventful-core" = callPackage
        ({ mkDerivation, aeson, base, containers, contravariant
         , http-api-data, path-pieces, stdenv, sum-type-boilerplate
         , template-haskell, text, transformers, uuid
         }:
         mkDerivation {
           pname = "eventful-core";
           version = "0.2.0";
           sha256 = "e0f55e7498d8e48232ce2d5194c69f635beaeb322cb64753766076d7b35c9019";
           libraryHaskellDepends = [
             aeson base containers contravariant http-api-data path-pieces
             sum-type-boilerplate template-haskell text transformers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Core module for eventful";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-dynamodb" = callPackage
        ({ mkDerivation, aeson, amazonka, amazonka-dynamodb, base
         , bytestring, conduit, eventful-core, lens, safe, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "eventful-dynamodb";
           version = "0.2.0";
           sha256 = "6b1cd246ef078fe63ae57a3129c052fa4d8c14d956faf220f03f6319720b379e";
           libraryHaskellDepends = [
             aeson amazonka amazonka-dynamodb base bytestring conduit
             eventful-core lens safe text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Library for eventful DynamoDB event stores";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-memory" = callPackage
        ({ mkDerivation, base, containers, eventful-core, mtl, safe, stdenv
         , stm
         }:
         mkDerivation {
           pname = "eventful-memory";
           version = "0.2.0";
           sha256 = "6a7c3e0a12e3c4e572927929020ad92075933e5d3c66ea61ff615a3ac217adb9";
           libraryHaskellDepends = [
             base containers eventful-core mtl safe stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "In-memory implementations for eventful";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-postgresql" = callPackage
        ({ mkDerivation, aeson, base, bytestring, eventful-core
         , eventful-sql-common, mtl, persistent, stdenv, text
         }:
         mkDerivation {
           pname = "eventful-postgresql";
           version = "0.2.0";
           sha256 = "6be868f5b2aabd02c33ae90e463c1a5c938b2db14e0d1c30a1de32c83c725e17";
           libraryHaskellDepends = [
             aeson base bytestring eventful-core eventful-sql-common mtl
             persistent text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Postgres implementations for eventful";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-sql-common" = callPackage
        ({ mkDerivation, aeson, base, bytestring, eventful-core, mtl
         , persistent, persistent-template, stdenv, text, uuid
         }:
         mkDerivation {
           pname = "eventful-sql-common";
           version = "0.2.0";
           sha256 = "a46ea18cbbb5bd04b3a6846273e8161b7e4208660d0abf5a401192b07636aebc";
           libraryHaskellDepends = [
             aeson base bytestring eventful-core mtl persistent
             persistent-template text uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Common library for SQL event stores";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-sqlite" = callPackage
        ({ mkDerivation, aeson, base, bytestring, eventful-core
         , eventful-sql-common, mtl, persistent, stdenv, text, uuid
         }:
         mkDerivation {
           pname = "eventful-sqlite";
           version = "0.2.0";
           sha256 = "c0bbea0ebd1f0a4891a74b190f499caf85ac026f49b9401fc76f181b0041dfef";
           libraryHaskellDepends = [
             aeson base bytestring eventful-core eventful-sql-common mtl
             persistent text uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "SQLite implementations for eventful";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventful-test-helpers" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, eventful-core, extra
         , hspec, monad-logger, stdenv, text
         }:
         mkDerivation {
           pname = "eventful-test-helpers";
           version = "0.2.0";
           sha256 = "a99f9d0cde3926add542c4fc59e079da7d71f2b40e2251b7d79777585c4ebfe0";
           libraryHaskellDepends = [
             aeson aeson-casing base eventful-core extra hspec monad-logger text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/eventful#readme";
           description = "Common module used for eventful tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "eventsource-api" = callPackage
        ({ mkDerivation, aeson, base, containers, mtl, protolude, stdenv
         , unordered-containers, uuid
         }:
         mkDerivation {
           pname = "eventsource-api";
           version = "1.1.1";
           sha256 = "308037d5ecec8c3df2604c83db2197799fe950927b9640092b9e771e4f4dc57f";
           libraryHaskellDepends = [
             aeson base containers mtl protolude unordered-containers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoEight/eventsource-api#readme";
           description = "Provides an eventsourcing high level API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eventsource-geteventstore-store" = callPackage
        ({ mkDerivation, aeson, base, eventsource-api, eventstore, mtl
         , protolude, stdenv
         }:
         mkDerivation {
           pname = "eventsource-geteventstore-store";
           version = "1.0.4";
           sha256 = "b776985bf8f72ae584a643de8d9ff8225b1e7c36219e4d95cc56c2ac382cc73a";
           libraryHaskellDepends = [
             aeson base eventsource-api eventstore mtl protolude
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoEight/eventsource-api#readme";
           description = "GetEventStore store implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eventsource-store-specs" = callPackage
        ({ mkDerivation, aeson, base, eventsource-api, mtl, protolude
         , stdenv, tasty, tasty-hspec, uuid
         }:
         mkDerivation {
           pname = "eventsource-store-specs";
           version = "1.0.1";
           sha256 = "2d96281eace300332b950388724c82a33bbc2366ecf591648ce36e0154cde639";
           libraryHaskellDepends = [
             aeson base eventsource-api mtl protolude tasty tasty-hspec uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoEight/eventsource-api#readme";
           description = "Provides common test specification for Store implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eventsource-stub-store" = callPackage
        ({ mkDerivation, base, containers, eventsource-api, mtl, protolude
         , stdenv, stm
         }:
         mkDerivation {
           pname = "eventsource-stub-store";
           version = "1.0.2";
           sha256 = "b9458d0b398347e833db1f4e0e55c850dcc8f4e8fde32505612fa499e2288881";
           libraryHaskellDepends = [
             base containers eventsource-api mtl protolude stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoEight/eventsource-api#readme";
           description = "An in-memory stub store implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "eventstore" = callPackage
        ({ mkDerivation, aeson, array, base, bifunctors, bytestring, cereal
         , clock, connection, containers, dns, dotnet-timespan, ekg-core
         , exceptions, fast-logger, hashable, http-client, interpolate
         , lifted-async, lifted-base, machines, monad-control, monad-logger
         , mono-traversable, mtl, protobuf, random, safe-exceptions
         , semigroups, stdenv, stm, stm-chans, text, text-format, time
         , transformers-base, unordered-containers, uuid
         }:
         mkDerivation {
           pname = "eventstore";
           version = "0.15.0.2";
           sha256 = "9dcbf5189b86c9f3a1ff02d0b81a244bd45583847af7fba26e8305111cadaa02";
           libraryHaskellDepends = [
             aeson array base bifunctors bytestring cereal clock connection
             containers dns dotnet-timespan ekg-core exceptions fast-logger
             hashable http-client interpolate lifted-async lifted-base machines
             monad-control monad-logger mono-traversable mtl protobuf random
             safe-exceptions semigroups stm stm-chans text text-format time
             transformers-base unordered-containers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoEight/eventstore#readme";
           description = "EventStore TCP Client";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "x86_64-darwin" "x86_64-linux" ];
         }) {};
      "every" = callPackage
        ({ mkDerivation, async, base, stdenv, stm }:
         mkDerivation {
           pname = "every";
           version = "0.0.1";
           sha256 = "5d0ff0e4cefb094c44b55defa283146b16b925722a2eb244a5ef4364737980e5";
           libraryHaskellDepends = [ async base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/every#readme";
           description = "Run a process every so often";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exact-combinatorics" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "exact-combinatorics";
           version = "0.2.0.8";
           sha256 = "32a822b109ab6e9f62fe23d76bd5af593c20ba0e589005d3985ccda00dd4475e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Efficient exact computation of combinatoric functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exact-pi" = callPackage
        ({ mkDerivation, base, numtype-dk, semigroups, stdenv }:
         mkDerivation {
           pname = "exact-pi";
           version = "0.4.1.3";
           sha256 = "4e9e87c653aa619b92e0f7c8e7d737cdc2610f0804bf619b47786165be972ce4";
           libraryHaskellDepends = [ base numtype-dk semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmcclean/exact-pi/";
           description = "Exact rational multiples of pi (and integer powers of pi)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "exception-mtl" = callPackage
        ({ mkDerivation, base, exception-transformers, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "exception-mtl";
           version = "0.4.0.1";
           sha256 = "ec13bcbae6cdde218a7118a2bd3058493af09a330b86e28469a278c9b2cea134";
           libraryHaskellDepends = [
             base exception-transformers mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Exception monad transformer instances for mtl classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exception-transformers" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "exception-transformers";
           version = "0.4.0.5";
           sha256 = "564caaaac6c2d1759a13d2c2c8a1d7a4b0109035558c4641fa7a8a378961088b";
           libraryHaskellDepends = [
             base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Type classes and monads for unchecked extensible exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exceptional" = callPackage
        ({ mkDerivation, base, exceptions, stdenv }:
         mkDerivation {
           pname = "exceptional";
           version = "0.3.0.0";
           sha256 = "da866ed28ea14d245cc065271f4ddd6da0a91b83e8d83daddcd1ef0623e99f06";
           libraryHaskellDepends = [ base exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/";
           description = "Essentially the Maybe type with error messages";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "exceptions" = callPackage
        ({ mkDerivation, base, mtl, stdenv, stm, template-haskell
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "exceptions";
           version = "0.8.3";
           sha256 = "4d6ad97e8e3d5dc6ce9ae68a469dc2fd3f66e9d312bc6faa7ab162eddcef87be";
           revision = "5";
           editedCabalFile = "1kfgp41i6mfz9gjczp3flvqxfhnznd81rwldv8j05807n6mnqqii";
           libraryHaskellDepends = [
             base mtl stm template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/exceptions/";
           description = "Extensible optionally-pure exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "executable-hash" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cryptohash, directory
         , executable-path, file-embed, filepath, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "executable-hash";
           version = "0.2.0.4";
           sha256 = "34eaf5662d90d3b7841f66b322ac5bc54900b0e3cb06792852b08b3c05a42ba4";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [
             base bytestring Cabal cryptohash directory file-embed filepath
             template-haskell
           ];
           libraryHaskellDepends = [
             base bytestring cryptohash directory executable-path file-embed
             template-haskell
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fpco/executable-hash";
           description = "Provides the SHA1 hash of the program executable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "executable-path" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, unix }:
         mkDerivation {
           pname = "executable-path";
           version = "0.0.3.1";
           sha256 = "9cc742b6d40a487b3af38dca6852ca3b50a0db94d42fe819576c84beb5adbc6f";
           libraryHaskellDepends = [ base directory filepath unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~bkomuves/";
           description = "Finding out the full path of the executable";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "exhaustive" = callPackage
        ({ mkDerivation, base, generics-sop, stdenv, template-haskell
         , transformers
         }:
         mkDerivation {
           pname = "exhaustive";
           version = "1.1.5";
           sha256 = "09e67dedf95c917103b445e32dab56412fbe9c1fbec3764a844781db56347be2";
           libraryHaskellDepends = [
             base generics-sop template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/exhaustive";
           description = "Compile time checks that a computation considers producing data through all possible constructors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "exp-pairs" = callPackage
        ({ mkDerivation, base, containers, deepseq, ghc-prim, stdenv
         , wl-pprint
         }:
         mkDerivation {
           pname = "exp-pairs";
           version = "0.1.5.2";
           sha256 = "8dadc2dc4b4f666c9fe70068634a1eb07598943d6ace86560878ed8ec0aeac9d";
           libraryHaskellDepends = [
             base containers deepseq ghc-prim wl-pprint
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/exp-pairs";
           description = "Linear programming over exponent pairs";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "expiring-cache-map" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "expiring-cache-map";
           version = "0.0.6.1";
           sha256 = "0e3bc294978b46ee59bf0b4a7e7a5bd7ed5da7bc261ffebdb0cb1b60353c64b9";
           libraryHaskellDepends = [
             base containers hashable unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/elblake/expiring-cache-map";
           description = "General purpose simple caching";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "explicit-exception" = callPackage
        ({ mkDerivation, base, deepseq, semigroups, stdenv, transformers }:
         mkDerivation {
           pname = "explicit-exception";
           version = "0.1.9.2";
           sha256 = "60f6029777f80ec958e28cef19a15723242987a01f09f6bfef252f24207649f6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base deepseq semigroups transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Exception";
           description = "Exceptions which are explicit in the type signature";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extensible" = callPackage
        ({ mkDerivation, base, comonad, constraints, deepseq, ghc-prim
         , hashable, monad-skeleton, mtl, primitive, profunctors, QuickCheck
         , semigroups, StateVar, stdenv, tagged, template-haskell
         , transformers, vector
         }:
         mkDerivation {
           pname = "extensible";
           version = "0.4.7.1";
           sha256 = "aae40dc52f3af16f9c62bda7f65e62396424345e3be5c667352256b5150ceb11";
           libraryHaskellDepends = [
             base comonad constraints deepseq ghc-prim hashable monad-skeleton
             mtl primitive profunctors QuickCheck semigroups StateVar tagged
             template-haskell transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/extensible";
           description = "Extensible, efficient, optics-friendly data types and effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extensible-effects" = callPackage
        ({ mkDerivation, base, stdenv, transformers, transformers-base
         , type-aligned
         }:
         mkDerivation {
           pname = "extensible-effects";
           version = "2.1.0.0";
           sha256 = "2c7bb9a3b8a7cad0238c80e58c3870e60dae1f6fc15fb5b4b5baa632283e3b19";
           libraryHaskellDepends = [
             base transformers transformers-base type-aligned
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/suhailshergill/extensible-effects";
           description = "An Alternative to Monad Transformers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "extensible-exceptions" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "extensible-exceptions";
           version = "0.1.1.4";
           sha256 = "6ce5e8801760385a408dab71b53550f87629e661b260bdc2cd41c6a439b6e388";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extra" = callPackage
        ({ mkDerivation, base, clock, directory, filepath, process, stdenv
         , time, unix
         }:
         mkDerivation {
           pname = "extra";
           version = "1.6.4";
           sha256 = "1c2605fe52ee8e1a7541102303b865735ec1ac1cd29d969013d73e9eaee4240a";
           libraryHaskellDepends = [
             base clock directory filepath process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/extra#readme";
           description = "Extra functions I use";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extractable-singleton" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "extractable-singleton";
           version = "0.0.1";
           sha256 = "e8da1928d98c57ef3d1bab7deb1378f51fa496721495777233663dd0b1b2c0ad";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/extractable-singleton#readme";
           description = "A functor, where the \"stored\" value is isomorphic to Identity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "extrapolate" = callPackage
        ({ mkDerivation, base, leancheck, speculate, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "extrapolate";
           version = "0.3.1";
           sha256 = "c4aea5df7abd2d267e012e8e4fde00eb0e7fc3aa18670ff196c433ad5a1de0c3";
           libraryHaskellDepends = [
             base leancheck speculate template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/extrapolate#readme";
           description = "generalize counter-examples of test properties";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fail" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "fail";
           version = "4.9.0.0";
           sha256 = "6d5cdb1a5c539425a9665f740e364722e1d9d6ae37fbc55f30fe3dbbbb91d4a2";
           doHaddock = false;
           doCheck = false;
           homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
           description = "Forward-compatible MonadFail class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "farmhash" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "farmhash";
           version = "0.1.0.5";
           sha256 = "0e685a5445f7bce88682d209bccb47d03f06065a627475df44a8e2af8bc20fa1";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/farmhash";
           description = "Fast hash functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fast-builder" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "fast-builder";
           version = "0.0.1.0";
           sha256 = "c18abb40d416e46e7f69e609188c99f1f0646b2db62bc7df6208b2b0a3974027";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/takano-akio/fast-builder";
           description = "Fast ByteString Builder";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "fast-digits" = callPackage
        ({ mkDerivation, base, integer-gmp, stdenv }:
         mkDerivation {
           pname = "fast-digits";
           version = "0.2.1.0";
           sha256 = "ec84576e479202de8257c7c499b66e91bcf18444f7683475d74b575e166dd83b";
           libraryHaskellDepends = [ base integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Bodigrim/fast-digits";
           description = "The fast library for integer-to-digits conversion";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "fast-logger" = callPackage
        ({ mkDerivation, array, auto-update, base, bytestring, directory
         , easy-file, filepath, stdenv, text, unix, unix-time
         }:
         mkDerivation {
           pname = "fast-logger";
           version = "2.4.11";
           sha256 = "bbe5deab58f435754dbe938cf0ddf26fc21f317c35fb3431d4bdb96809dea2a9";
           libraryHaskellDepends = [
             array auto-update base bytestring directory easy-file filepath text
             unix unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kazu-yamamoto/logger";
           description = "A fast logging system";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fast-math" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fast-math";
           version = "1.0.2";
           sha256 = "45101ddc8b86402e866ec029bcfbc2662779e578e43b40acd971a9f411e2be95";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Non IEEE-754 compliant compile-time floating-point optimisations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fasta" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, foldl
         , lens, parsec, pipes, pipes-attoparsec, pipes-bytestring
         , pipes-group, pipes-text, split, stdenv, text
         }:
         mkDerivation {
           pname = "fasta";
           version = "0.10.4.2";
           sha256 = "2b760dfd5029dee94d56010f8125f4317d6fa675a84817c352311d308d1897be";
           libraryHaskellDepends = [
             attoparsec base bytestring containers foldl lens parsec pipes
             pipes-attoparsec pipes-bytestring pipes-group pipes-text split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GregorySchwartz/fasta";
           description = "A simple, mindless parser for fasta files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "fb" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
         , base64-bytestring, bytestring, cereal, conduit, conduit-extra
         , crypto-api, cryptohash, cryptohash-cryptoapi, data-default
         , http-client, http-conduit, http-types, lifted-base, monad-control
         , monad-logger, old-locale, resourcet, stdenv, text, time
         , transformers, transformers-base, unordered-containers
         }:
         mkDerivation {
           pname = "fb";
           version = "1.1.1";
           sha256 = "c8d23435144e58af8ee64dde629f072043e4800daecce1bddb0670069a657f65";
           libraryHaskellDepends = [
             aeson attoparsec base base16-bytestring base64-bytestring
             bytestring cereal conduit conduit-extra crypto-api cryptohash
             cryptohash-cryptoapi data-default http-client http-conduit
             http-types lifted-base monad-control monad-logger old-locale
             resourcet text time transformers transformers-base
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/fb";
           description = "Bindings to Facebook's API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fclabels" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell, transformers
         }:
         mkDerivation {
           pname = "fclabels";
           version = "2.0.3.3";
           sha256 = "9a9472a46dc23b5acc0545d345ecd708f7b003f72ab212e2d12125b902b9c2e0";
           libraryHaskellDepends = [ base mtl template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sebastiaanvisser/fclabels";
           description = "First class accessor labels implemented as lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fdo-notify" = callPackage
        ({ mkDerivation, base, containers, dbus, stdenv }:
         mkDerivation {
           pname = "fdo-notify";
           version = "0.3.1";
           sha256 = "7083414bb25e3057f6444722288cebf4ad3e4c2616f95f26079c8c7762989fd8";
           libraryHaskellDepends = [ base containers dbus ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://bitbucket.org/taejo/fdo-notify/";
           description = "Desktop Notifications client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "feature-flags" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "feature-flags";
           version = "0.1.0.1";
           sha256 = "0e4cf7db6791b0875975dfa001d71bf31797b2edbfd2424f6b6202ace7935ad3";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iand675/feature-flags";
           description = "A simple library for dynamically enabling and disabling functionality";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fedora-haskell-tools" = callPackage
        ({ mkDerivation, base, directory, filepath, process, stdenv, time
         , unix
         }:
         mkDerivation {
           pname = "fedora-haskell-tools";
           version = "0.4";
           sha256 = "e0e805970b15a2d50153ed9270797475d4ecd60ddbbb84d9032ee84967880504";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base directory filepath process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fedora-haskell/fedora-haskell-tools";
           description = "Building and managing tools for Fedora Haskell";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "feed" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, old-locale
         , old-time, safe, stdenv, text, time, time-locale-compat
         , utf8-string, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "feed";
           version = "1.0.0.0";
           sha256 = "9359a12d3da138ba50fecfc31eed7f92438a6417e9fc3aa17b95a014fa792f17";
           revision = "2";
           editedCabalFile = "1xrx0r63qr14vxqrsw9xmwnhna3p4gqngv46ysyv2r49raq6bz3q";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base-compat bytestring old-locale old-time safe text time
             time-locale-compat utf8-string xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bergmark/feed";
           description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fft" = callPackage
        ({ mkDerivation, array, base, carray, fftw, fftwFloat, ix-shapable
         , stdenv, storable-complex, syb, transformers
         }:
         mkDerivation {
           pname = "fft";
           version = "0.1.8.6";
           sha256 = "2ed8d8301903283c9a62eda1f1cf49db0c471c4c128fbfdef562d598401e5b42";
           libraryHaskellDepends = [
             array base carray ix-shapable storable-complex syb transformers
           ];
           libraryPkgconfigDepends = [ fftw fftwFloat ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to the FFTW library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
      "fgl" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "fgl";
           version = "5.5.4.0";
           sha256 = "5176891dc0a898a87df53e1b27db5eba7474f08207405a1ea06c988c09a97211";
           libraryHaskellDepends = [
             array base containers deepseq transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Martin Erwig's Functional Graph Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-embed" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "file-embed";
           version = "0.0.10.1";
           sha256 = "33cdeb44e8fa1ca8ade64e2b8d0924ea8c70b2b521455a0f22cde36f19314152";
           libraryHaskellDepends = [
             base bytestring directory filepath template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/file-embed";
           description = "Use Template Haskell to embed file contents directly";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "file-modules" = callPackage
        ({ mkDerivation, async, base, directory, filepath, haskell-src-exts
         , MissingH, regex-compat, regex-pcre, stdenv
         }:
         mkDerivation {
           pname = "file-modules";
           version = "0.1.2.4";
           sha256 = "ffea2dbd51f77ed76f8559d8519674a1210611a35e2dbea72dfb41d7d5f0f235";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base directory filepath haskell-src-exts MissingH
             regex-compat regex-pcre
           ];
           executableHaskellDepends = [
             async base directory filepath haskell-src-exts MissingH
             regex-compat regex-pcre
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/stack-run-auto";
           description = "Takes a Haskell source-code file and outputs its modules";
           license = stdenv.lib.licenses.mit;
         }) {};
      "filecache" = callPackage
        ({ mkDerivation, base, exceptions, hashable, hinotify, lens, mtl
         , stdenv, stm, strict-base-types, unordered-containers
         }:
         mkDerivation {
           pname = "filecache";
           version = "0.2.9";
           sha256 = "02e6cd64adeeab38b7f6425905332deb8f03824cb4f47a8b8855b846e195dd81";
           libraryHaskellDepends = [
             base exceptions hashable hinotify lens mtl stm strict-base-types
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lpuppet.banquise.net/";
           description = "A Linux-only cache system associating values to files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "filelock" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "filelock";
           version = "0.1.1.2";
           sha256 = "0ff1dcb13ec619f72496035e2a1298ef9dc6a814ba304d882cd9b145eae3203d";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/takano-akio/filelock";
           description = "Portable interface to file locking (flock / LockFileEx)";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "filemanip" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, mtl, stdenv
         , unix-compat
         }:
         mkDerivation {
           pname = "filemanip";
           version = "0.3.6.3";
           sha256 = "8836da17baaaf02ca080c9990ece4e0b0c8d6a128f458f8b64fd07b225ca9846";
           libraryHaskellDepends = [
             base bytestring directory filepath mtl unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/filemanip";
           description = "Expressive file and directory manipulation for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fileplow" = callPackage
        ({ mkDerivation, base, binary-search, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "fileplow";
           version = "0.1.0.0";
           sha256 = "9ddc7db62c97fa4413ff2435c96aac9f6f716e2f6bc7a71aa4db25c3871bee04";
           libraryHaskellDepends = [ base binary-search bytestring vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/fileplow#readme";
           description = "Library to process and search large files or a collection of files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "filter-logger" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, ansi-terminal, base
         , bytestring, data-default, fast-logger, http-types, scotty
         , semigroups, stdenv, time, wai, wai-extra, wai-logger
         }:
         mkDerivation {
           pname = "filter-logger";
           version = "0.6.0.0";
           sha256 = "7884124056950a7f7ff393ebb7d1622695f9b66f898c60aeb8bc991c73642f21";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty ansi-terminal base bytestring data-default
             fast-logger http-types semigroups time wai wai-extra wai-logger
           ];
           executableHaskellDepends = [ aeson base bytestring scotty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/filter-logger#readme";
           description = "Filterable request logging wai middleware. Change how data is logged and when.";
           license = stdenv.lib.licenses.mit;
         }) {};
      "find-clumpiness" = callPackage
        ({ mkDerivation, aeson, base, BiobaseNewick, bytestring, clumpiness
         , containers, hierarchical-clustering, listsafe, mtl
         , optparse-applicative, stdenv, text, text-show, tree-fun
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "find-clumpiness";
           version = "0.2.3.1";
           sha256 = "089e55641eedd12ab16ae5e81cbd2c6c0375801c01fc17fb2ce23354a0ec2c2a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base BiobaseNewick bytestring clumpiness containers
             hierarchical-clustering listsafe mtl text text-show tree-fun
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base BiobaseNewick bytestring clumpiness containers
             optparse-applicative text tree-fun unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/GregorySchwartz/find-clumpiness#readme";
           description = "Find the clumpiness of labels in a tree";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "fingertree" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fingertree";
           version = "0.1.3.1";
           sha256 = "974c35da68a4f2c3bf6fe7514b8057ff34c2894999071ae7d6a735db64fe9823";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Generic finger-tree structure, with example instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fingertree-psqueue" = callPackage
        ({ mkDerivation, base, fingertree, stdenv }:
         mkDerivation {
           pname = "fingertree-psqueue";
           version = "0.3";
           sha256 = "9f8c2f1965ea7a618d969db6506c8f373c95e09072b2182de40713d265046c92";
           libraryHaskellDepends = [ base fingertree ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of priority search queues as finger trees";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "finite-typelits" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "finite-typelits";
           version = "0.1.3.0";
           sha256 = "db733336de7ba5a2650f33f0b6a82dfe6699124f673b4506ffedaa4b6513489d";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mniip/finite-typelits";
           description = "A type inhabited by finitely many values, indexed by type-level naturals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fitspec" = callPackage
        ({ mkDerivation, base, cmdargs, leancheck, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "fitspec";
           version = "0.4.4";
           sha256 = "d9f3b682edb7c12f2a1cbd9e522e093e2e092070dc07263ae9e6dfc16f6c7597";
           libraryHaskellDepends = [
             base cmdargs leancheck template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/fitspec#readme";
           description = "refining property sets for testing Haskell programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fixed";
           version = "0.2.1.1";
           sha256 = "24a9e1e251998c9d06037bb771d9eab2980a91132de59a19d0166a1c51e715e2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/fixed";
           description = "Signed 15.16 precision fixed point arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-length" = callPackage
        ({ mkDerivation, base, non-empty, stdenv, tfp, utility-ht }:
         mkDerivation {
           pname = "fixed-length";
           version = "0.2";
           sha256 = "3171f2d443171a8e92733b3935805c7d5b54eae1f39f9fd729a766f887a6389b";
           libraryHaskellDepends = [ base non-empty tfp utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/fixed-length/";
           description = "Lists with statically known length based on non-empty package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-vector" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv }:
         mkDerivation {
           pname = "fixed-vector";
           version = "1.0.0.0";
           sha256 = "6ff473451a7f0e7fc7b33c66a5905da937e960a51aa77b2528a7af9f1d2842f8";
           libraryHaskellDepends = [ base deepseq primitive ];
           doHaddock = false;
           doCheck = false;
           description = "Generic vectors with statically known size";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fixed-vector-hetero" = callPackage
        ({ mkDerivation, base, deepseq, fixed-vector, primitive, stdenv }:
         mkDerivation {
           pname = "fixed-vector-hetero";
           version = "0.4.0.0";
           sha256 = "36b6487551dc4c93e22c8f5e6e38de75ed0b12884b677b2a92bda47c781f26f4";
           libraryHaskellDepends = [ base deepseq fixed-vector primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
           description = "Generic heterogeneous vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flac" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default-class
         , directory, exceptions, filepath, FLAC, mtl, stdenv, text
         , transformers, vector, wave
         }:
         mkDerivation {
           pname = "flac";
           version = "0.1.2";
           sha256 = "5692b3dfc561cbeed25b1cf9280705f58eadd8c400aa2e6a725fd5562042ac29";
           revision = "1";
           editedCabalFile = "1hl2dgf4ccbk0qk6yqdwr1qbdjp4yi25dhs595lmnf7wrhk7662f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers data-default-class directory exceptions
             filepath mtl text transformers vector wave
           ];
           librarySystemDepends = [ FLAC ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/flac";
           description = "Complete high-level binding to libFLAC";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) FLAC;};
      "flac-picture" = callPackage
        ({ mkDerivation, base, bytestring, flac, JuicyPixels, stdenv }:
         mkDerivation {
           pname = "flac-picture";
           version = "0.1.1";
           sha256 = "3c1cf80c48521370ce6351d4b544c14891442bfe47c65e5bf436fe58f6fec1ce";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring flac JuicyPixels ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/flac-picture";
           description = "Support for writing picture to FLAC metadata blocks with JuicyPixels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flat" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, cpu, deepseq
         , dlist, ghc-prim, mono-traversable, pretty, primitive, stdenv
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "flat";
           version = "0.3";
           sha256 = "7cfa8450652c16ceb58ce630512ca4019d880e716548d0df9aaef6e631407682";
           libraryHaskellDepends = [
             array base bytestring containers cpu deepseq dlist ghc-prim
             mono-traversable pretty primitive text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tittoassini/flat";
           description = "Principled and efficient bit-oriented binary serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flat-mcmc" = callPackage
        ({ mkDerivation, base, formatting, mcmc-types, monad-par
         , monad-par-extras, mwc-probability, pipes, primitive, stdenv, text
         , transformers, vector
         }:
         mkDerivation {
           pname = "flat-mcmc";
           version = "1.5.0";
           sha256 = "87cea9deac6e2d32d9984741ba222ccb2fb0d5f8c58e843684476bfe7632f1fd";
           revision = "1";
           editedCabalFile = "1pjkyvs4c6yx6jva08zw2b1qfhhv9q71sy806f5lddjsknnym2fn";
           libraryHaskellDepends = [
             base formatting mcmc-types monad-par monad-par-extras
             mwc-probability pipes primitive text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtobin/flat-mcmc";
           description = "Painless general-purpose sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "flexible-defaults" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell
         , th-extras, transformers
         }:
         mkDerivation {
           pname = "flexible-defaults";
           version = "0.0.1.2";
           sha256 = "827032cecf5e937d673f3a0b84fbbaba7c03fce6a567c15faf36865da9b76dc2";
           libraryHaskellDepends = [
             base containers template-haskell th-extras transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/flexible-defaults";
           description = "Generate default function implementations for complex type classes";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "floatshow" = callPackage
        ({ mkDerivation, array, base, integer-gmp, stdenv }:
         mkDerivation {
           pname = "floatshow";
           version = "0.2.4";
           sha256 = "0c4e9494df46120942b2078db53c16200b46eff603fca5ab85775a541f975dff";
           libraryHaskellDepends = [ array base integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dafis/floatshow";
           description = "Alternative faster String representations for Double and Float, String representations for more general numeric types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "flow" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "flow";
           version = "1.0.11";
           sha256 = "87e7f44bf6e91a1709dd8ad6ab7754e0f001a80f093e6fbaffb261cfc3528f85";
           revision = "2";
           editedCabalFile = "13gyzkk29qkq8pnfnxvq2ymag2r3f6h1hpxk7yhy1r3k9hmp5469";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/flow#readme";
           description = "Write more understandable Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fmlist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "fmlist";
           version = "0.9.2";
           sha256 = "8fc4b55d04e7f216740a01acd2f38293e3bd9409a9495e6042a162580c420609";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sjoerdvisscher/fmlist";
           description = "FoldMap lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fmt" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, containers, microlens, stdenv, text, text-format
         , time, time-locale-compat
         }:
         mkDerivation {
           pname = "fmt";
           version = "0.5.0.0";
           sha256 = "ce3e15e87c04b1dcafcea8d65f894de9427a89d296e1c26a358c625558d9d194";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring containers
             microlens text text-format time time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/fmt";
           description = "A new formatting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fn" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, directory
         , filepath, http-types, resourcet, stdenv, text
         , unordered-containers, wai, wai-extra
         }:
         mkDerivation {
           pname = "fn";
           version = "0.3.0.2";
           sha256 = "1e34b017aa13f60464ec06dfbae970c3c0f01f2160f5001a4e84c8179de7ae5f";
           libraryHaskellDepends = [
             base blaze-builder bytestring directory filepath http-types
             resourcet text unordered-containers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/positiondev/fn#readme";
           description = "A functional web framework";
           license = stdenv.lib.licenses.isc;
         }) {};
      "focus" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "focus";
           version = "0.1.5.2";
           sha256 = "c2988d48c2bc6861a00be4e02161df96abcbf6c80e801676cee39b7628715cb7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/focus";
           description = "A general abstraction for manipulating elements of container data structures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fold-debounce" = callPackage
        ({ mkDerivation, base, data-default-class, stdenv, stm, stm-delay
         , time
         }:
         mkDerivation {
           pname = "fold-debounce";
           version = "0.2.0.6";
           sha256 = "f3652bfca100e8a499722426f7b72bcb285dee9ebcec3fecfb66ee675840788c";
           libraryHaskellDepends = [
             base data-default-class stm stm-delay time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/fold-debounce";
           description = "Fold multiple events that happen in a given period of time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fold-debounce-conduit" = callPackage
        ({ mkDerivation, base, conduit, fold-debounce, resourcet, stdenv
         , stm, transformers, transformers-base
         }:
         mkDerivation {
           pname = "fold-debounce-conduit";
           version = "0.1.0.5";
           sha256 = "253e73bcf6e1cb281acce2c9e39b00b2419032e4f1e0234bd19a473d210f84cc";
           libraryHaskellDepends = [
             base conduit fold-debounce resourcet stm transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/fold-debounce-conduit";
           description = "Regulate input traffic from conduit Source with Control.FoldDebounce";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foldl" = callPackage
        ({ mkDerivation, base, bytestring, comonad, containers
         , contravariant, hashable, mwc-random, primitive, profunctors
         , semigroups, stdenv, text, transformers, unordered-containers
         , vector, vector-builder
         }:
         mkDerivation {
           pname = "foldl";
           version = "1.3.7";
           sha256 = "76225f77e5a63891ca9f50fdc053be1506b6508feec73003455286e9bf316984";
           libraryHaskellDepends = [
             base bytestring comonad containers contravariant hashable
             mwc-random primitive profunctors semigroups text transformers
             unordered-containers vector vector-builder
           ];
           doHaddock = false;
           doCheck = false;
           description = "Composable, streaming, and efficient left folds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "folds" = callPackage
        ({ mkDerivation, adjunctions, base, bifunctors, Cabal
         , cabal-doctest, comonad, constraints, contravariant, data-reify
         , distributive, lens, mtl, pointed, profunctors, reflection
         , semigroupoids, stdenv, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "folds";
           version = "0.7.4";
           sha256 = "5c6e6f7c9c852cbe3d5372f93ed99f82400d15ae99ecf8e9e005481647734572";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             adjunctions base bifunctors comonad constraints contravariant
             data-reify distributive lens mtl pointed profunctors reflection
             semigroupoids transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/folds";
           description = "Beautiful Folding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "follow-file" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-path, base, bytestring
         , conduit, conduit-combinators, directory, exceptions, hinotify
         , monad-control, mtl, path, stdenv, text, unix, utf8-string
         }:
         mkDerivation {
           pname = "follow-file";
           version = "0.0.2";
           sha256 = "13922046769351aaeee80cce67d2fce07eca94a3a762033859fe15f7ce75c118";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec attoparsec-path base bytestring conduit directory
             exceptions hinotify monad-control mtl path text unix utf8-string
           ];
           executableHaskellDepends = [
             attoparsec attoparsec-path base bytestring conduit
             conduit-combinators directory hinotify path text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Be notified when a file gets appended, solely with what was added";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "force-layout" = callPackage
        ({ mkDerivation, base, containers, data-default-class, lens, linear
         , stdenv
         }:
         mkDerivation {
           pname = "force-layout";
           version = "0.4.0.6";
           sha256 = "f7729855b1b14e0b255325faaca9f4834004e02bd21def6a865d2c55c734259d";
           revision = "2";
           editedCabalFile = "1dj785ih5bla68yzxkpsilwj1p1xv6a8rh76rz799aap5injda0z";
           libraryHaskellDepends = [
             base containers data-default-class lens linear
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple force-directed layout";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foreign-store" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "foreign-store";
           version = "0.2";
           sha256 = "06718a214d068eaa494cc82376f23b2059a141b01048cd7efcf2176a6c3383dc";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/foreign-store";
           description = "Store a stable pointer in a foreign context to be retrieved later";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "forma" = callPackage
        ({ mkDerivation, aeson, base, containers, data-default-class, mtl
         , stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "forma";
           version = "0.2.0";
           sha256 = "00d0a75fb7706bd06f4e47eaafbc07e92461582d8b8e5aee76b44604d2062d17";
           libraryHaskellDepends = [
             aeson base containers data-default-class mtl text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/forma";
           description = "Parse and validate forms in JSON format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "format-numbers" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "format-numbers";
           version = "0.1.0.0";
           sha256 = "0ca4561b55c888552f7bf0eb68e97b62acedcb0d5e5e1cc4afd94402d01231a6";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/format-numbers#readme";
           description = "Various number formatting functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "formatting" = callPackage
        ({ mkDerivation, base, clock, old-locale, scientific, stdenv, text
         , text-format, time
         }:
         mkDerivation {
           pname = "formatting";
           version = "6.2.5";
           sha256 = "d0a3fafe5a3e733cefc12a1031dcd76d7b9cc3552f757ae720a286d4d3429f4c";
           libraryHaskellDepends = [
             base clock old-locale scientific text text-format time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "foundation" = callPackage
        ({ mkDerivation, base, basement, ghc-prim, stdenv }:
         mkDerivation {
           pname = "foundation";
           version = "0.0.17";
           sha256 = "04d1a273c5575ffd12c822995bbe4e93bfa92571b4eb9bc792ae84030fb9c201";
           revision = "1";
           editedCabalFile = "15y38y0mj4vc694jwh3cjgnq8xv5vv7954g633f7mw5f0hb3yxkn";
           libraryHaskellDepends = [ base basement ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-foundation/foundation";
           description = "Alternative prelude with batteries and no dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "free" = callPackage
        ({ mkDerivation, base, bifunctors, comonad, containers
         , distributive, exceptions, mtl, prelude-extras, profunctors
         , semigroupoids, semigroups, stdenv, template-haskell, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "free";
           version = "4.12.4";
           sha256 = "c9fe45aae387855626ecb5a0fea6afdb207143cb00af3b1f715d1032d2d08784";
           libraryHaskellDepends = [
             base bifunctors comonad containers distributive exceptions mtl
             prelude-extras profunctors semigroupoids semigroups
             template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/free/";
           description = "Monads for free";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "free-vl" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "free-vl";
           version = "0.1.4";
           sha256 = "57f63ed35b42fc54fefb3cc183d0655e0d6c4a28d5371dba00fc9c9d3fa602bf";
           revision = "1";
           editedCabalFile = "1711k76b6w7gfqvc8z9jnylj4hhk3rvx7ap31y1mmq4g2a4s82qm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aaronlevin/free-vl";
           description = "van Laarhoven encoded Free Monad with Extensible Effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "freenect" = callPackage
        ({ mkDerivation, base, freenect, freenect_sync, libfreenect, stdenv
         , vector
         }:
         mkDerivation {
           pname = "freenect";
           version = "1.2.1";
           sha256 = "fca7aa958ec04396334b101679f8603850d7c6629770d5206d774e115cd70759";
           libraryHaskellDepends = [ base vector ];
           librarySystemDepends = [ freenect freenect_sync ];
           libraryPkgconfigDepends = [ libfreenect ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/freenect";
           description = "Interface to the Kinect device";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) freenect; inherit (pkgs) freenect_sync; 
inherit (pkgs) libfreenect;};
      "freer-simple" = callPackage
        ({ mkDerivation, base, natural-transformation, stdenv
         , transformers-base
         }:
         mkDerivation {
           pname = "freer-simple";
           version = "1.0.1.1";
           sha256 = "4b0645811635f3a9801b414229f3e7384cbadfc9a1d40c9f155422e86390bdb9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base natural-transformation transformers-base
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lexi-lambda/freer-simple#readme";
           description = "Implementation of a friendly effect system for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "freetype2" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "freetype2";
           version = "0.1.2";
           sha256 = "517e80298890e903b03134d7840d3d1a517bfdad53127ed57c2fdd18cbfae302";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell binding for FreeType 2 library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "friday" = callPackage
        ({ mkDerivation, base, containers, convertible, deepseq, primitive
         , ratio-int, stdenv, transformers, vector
         }:
         mkDerivation {
           pname = "friday";
           version = "0.2.3.1";
           sha256 = "0827492c1a6116baa5c4866539a4cfa0f6d81bf31f6573616bf5ac4484199613";
           revision = "1";
           editedCabalFile = "0n1f4plvrmad6gm8dbsi6g5ghahdwwy2fhgippmnp1ixb65x7d58";
           libraryHaskellDepends = [
             base containers convertible deepseq primitive ratio-int
             transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RaphaelJ/friday";
           description = "A functional image processing library for Haskell";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "friendly-time" = callPackage
        ({ mkDerivation, base, old-locale, stdenv, time }:
         mkDerivation {
           pname = "friendly-time";
           version = "0.4.1";
           sha256 = "9af3443227c3f271f5d11ed8c3c15c77a59de3ab82d87d93ac1f8455a54393c8";
           revision = "1";
           editedCabalFile = "096nfaqxavi6xblqh4q5dxks824liz75b4rm2la2hlkkn5mhqdgs";
           libraryHaskellDepends = [ base old-locale time ];
           doHaddock = false;
           doCheck = false;
           description = "Print time information in friendly ways";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "frisby" = callPackage
        ({ mkDerivation, array, base, containers, mtl, semigroups, stdenv
         }:
         mkDerivation {
           pname = "frisby";
           version = "0.2.2";
           sha256 = "c1b318dbf54d56e1012955cc47a1633af5fd77facc128c725353718c0663b6d5";
           libraryHaskellDepends = [ array base containers mtl semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repetae.net/computer/frisby/";
           description = "Linear time composable parser for PEG grammars";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "from-sum" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "from-sum";
           version = "0.2.1.0";
           sha256 = "a1ed8a433b98df8a70be2f9199abae3e5ed7fb4c2f2b3fb1268b6b588f326667";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/from-sum";
           description = "Canonical fromMaybeM and fromEitherM functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "frontmatter" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv, yaml }:
         mkDerivation {
           pname = "frontmatter";
           version = "0.1.0.2";
           sha256 = "66eb97b0d5097397f0238b9af764a8c6ea2bb9a4a16cd1214051719fc313b99d";
           libraryHaskellDepends = [ attoparsec base bytestring yaml ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-frontmatter";
           description = "Parses frontmatter as used in Jekyll markdown files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fsnotify" = callPackage
        ({ mkDerivation, async, base, containers, directory, filepath
         , hinotify, stdenv, text, time, unix-compat
         }:
         mkDerivation {
           pname = "fsnotify";
           version = "0.2.1.1";
           sha256 = "175a75962ad07c30c031fa8931f8d3e32abc06a96676e73e65cb7207e9d2dc90";
           libraryHaskellDepends = [
             async base containers directory filepath hinotify text time
             unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-fswatch/hfsnotify";
           description = "Cross platform library for file change notification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fsnotify-conduit" = callPackage
        ({ mkDerivation, base, conduit, directory, filepath, fsnotify
         , resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "fsnotify-conduit";
           version = "0.1.0.0";
           sha256 = "925bd952deddc9728461c8b5e32b36be57b64693757c4d2ce03a58bdca090e9f";
           libraryHaskellDepends = [
             base conduit directory filepath fsnotify resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/fsnotify-conduit#readme";
           description = "Get filesystem notifications as a stream of events";
           license = stdenv.lib.licenses.mit;
         }) {};
      "fswatch" = callPackage
        ({ mkDerivation, base, directory, fsnotify, haskeline
         , optparse-applicative, process, stdenv
         }:
         mkDerivation {
           pname = "fswatch";
           version = "0.1.0.2";
           sha256 = "f78699b2f3ffc673df385ea2044e3ff4af1df898c460f1b04264f8e8ac4865cc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory fsnotify haskeline optparse-applicative process
           ];
           executableHaskellDepends = [
             base directory fsnotify haskeline optparse-applicative process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kelemzol/watch";
           description = "File System watching tool with cli and slave functionalities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "funcmp" = callPackage
        ({ mkDerivation, base, filepath, process, stdenv }:
         mkDerivation {
           pname = "funcmp";
           version = "1.8";
           sha256 = "33fc37e8c05d665bc6a7a5b4406e433e19fe2c58421a034b76e1b412e8737526";
           revision = "1";
           editedCabalFile = "1fkjmx4mmfmf2y08w7mgw1rp6q6w9zxdj95zfydgxgkmvk9b37c4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base filepath process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/funcmp";
           description = "Functional MetaPost";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "functor-classes-compat" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "functor-classes-compat";
           version = "1";
           sha256 = "ef11f94f44a74d6657ee61dcd2cfbc6d0889d233a2fb4caae6a29d9c59a1366f";
           revision = "1";
           editedCabalFile = "04blby010250gyg0v7nwdr9hwzvkapmfy9xn5522h8jmb3yygh8l";
           libraryHaskellDepends = [
             base containers hashable unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/functor-classes-compat#readme";
           description = "Data.Functor.Classes instances for core packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fuzzcheck" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, QuickCheck
         , random, stdenv, transformers
         }:
         mkDerivation {
           pname = "fuzzcheck";
           version = "0.1.1";
           sha256 = "ecd664796e9cf5c608ca904897dd9ec18b471a86fcfb4216328382b28023d961";
           libraryHaskellDepends = [
             base lifted-base monad-control QuickCheck random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/fuzzcheck";
           description = "A simple checker for stress testing monadic code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "fuzzyset" = callPackage
        ({ mkDerivation, base, base-unicode-symbols, data-default, lens
         , stdenv, text, text-metrics, unordered-containers, vector
         }:
         mkDerivation {
           pname = "fuzzyset";
           version = "0.1.0.6";
           sha256 = "731ae813678de30bbccac03760f7bb0baed5cc8d91ed21e871b1f8d7aafe61a3";
           libraryHaskellDepends = [
             base base-unicode-symbols data-default lens text text-metrics
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/laserpants/fuzzyset-haskell";
           description = "Fuzzy set for approximate string matching";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gauge" = callPackage
        ({ mkDerivation, base, basement, deepseq, directory, process
         , stdenv, vector
         }:
         mkDerivation {
           pname = "gauge";
           version = "0.2.1";
           sha256 = "2d78584a8fdca851c60a13c79bbb8528e174ec84d6631679e76445f765590110";
           libraryHaskellDepends = [
             base basement deepseq directory process vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-gauge";
           description = "small framework for performance measurement and analysis";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gd" = callPackage
        ({ mkDerivation, base, bytestring, expat, fontconfig, freetype, gd
         , libjpeg, libpng, stdenv, zlib
         }:
         mkDerivation {
           pname = "gd";
           version = "3000.7.3";
           sha256 = "14aecb600d9a058b1905dfdef3d51a1eb11fb92f804fbaaa041103a0bfd97fb6";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [
             expat fontconfig freetype gd libjpeg libpng zlib
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Haskell binding to a subset of the GD graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) expat; inherit (pkgs) fontconfig; 
inherit (pkgs) freetype; inherit (pkgs) gd; 
inherit (pkgs) libjpeg; inherit (pkgs) libpng; inherit (pkgs) zlib;};
      "gdax" = callPackage
        ({ mkDerivation, aeson, aeson-casing, aeson-pretty, base
         , base64-bytestring, byteable, bytestring, containers, cryptohash
         , exceptions, hashable, http-client, http-client-tls, lens
         , lens-aeson, mtl, regex-tdfa, regex-tdfa-text, scientific, stdenv
         , text, time, unordered-containers, uuid, vector, websockets, wreq
         , wuss
         }:
         mkDerivation {
           pname = "gdax";
           version = "0.6.0.0";
           sha256 = "deb8efce5e4deb5b45c0d66d23eac65224c3d560d7ac67da6d3616cd5a916721";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-casing base base64-bytestring byteable bytestring
             containers cryptohash exceptions hashable http-client
             http-client-tls lens lens-aeson mtl regex-tdfa regex-tdfa-text
             scientific text time unordered-containers uuid vector websockets
             wreq wuss
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base base64-bytestring bytestring text vector
             websockets wuss
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/gdax";
           description = "API Wrapping for Coinbase's GDAX exchange";
           license = stdenv.lib.licenses.mit;
         }) {};
      "general-games" = callPackage
        ({ mkDerivation, base, monad-loops, MonadRandom, random
         , random-shuffle, stdenv
         }:
         mkDerivation {
           pname = "general-games";
           version = "1.0.5";
           sha256 = "427d0319c4aa99d8071d25bc4df7e7f1eff341b05d8f5ed85a735b1b6c032a53";
           libraryHaskellDepends = [
             base monad-loops MonadRandom random random-shuffle
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cgorski/general-games";
           description = "Library supporting simulation of a number of games";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generic-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, generic-deriving, mtl
         , stdenv, tagged, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "generic-aeson";
           version = "0.2.0.9";
           sha256 = "34c13f91ffa72a1f6d7f43b84fdd19b20db547045eb6164a4119f9a95dcd84cb";
           revision = "2";
           editedCabalFile = "05hn4bjqrx1fimlwwbv9358806m4q1dkbfw886lpkkhbflr7jmn9";
           libraryHaskellDepends = [
             aeson attoparsec base generic-deriving mtl tagged text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Derivation of Aeson instances using GHC generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-arbitrary" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "generic-arbitrary";
           version = "0.1.0";
           sha256 = "69f30a54e7a3d0a45288778e22e6d0d03cfc3b525dfe0a663cd4f559a619bcc6";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Generic implementation for QuickCheck's Arbitrary";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generic-deriving" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "generic-deriving";
           version = "1.12.1";
           sha256 = "f5fd3f733a20deee5a6e752969edac1e04a90e2ee34e005fccb5d35a5c129473";
           revision = "1";
           editedCabalFile = "1vr9lyvcrdiar6ndqnspwvhvrbnc1fvsjyx458ivpcr6j75j0l5j";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dreixel/generic-deriving";
           description = "Generic programming library for generalised deriving";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-lens" = callPackage
        ({ mkDerivation, base, profunctors, stdenv, tagged }:
         mkDerivation {
           pname = "generic-lens";
           version = "0.5.1.0";
           sha256 = "87d02379ba33a8039e641f3dc069877b84003541981e96b8f06f02b0ba1a0127";
           libraryHaskellDepends = [ base profunctors tagged ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kcsongor/generic-lens";
           description = "Generic data-structure operations exposed as lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generic-random" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "generic-random";
           version = "1.0.0.0";
           sha256 = "e71da0dc9af559bd5dfa94c37af0fca569ce13567faef09422a4145d5d75949b";
           revision = "3";
           editedCabalFile = "12l53dxv400g9fvz07jv42gn7x6825kxsyvpnhd3snsklvjrhl70";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lysxia/generic-random";
           description = "Generic random generators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "generic-xmlpickler" = callPackage
        ({ mkDerivation, base, generic-deriving, hxt, stdenv, text }:
         mkDerivation {
           pname = "generic-xmlpickler";
           version = "0.1.0.5";
           sha256 = "d51760f5650051eebe561f2b18670657e8398014fa2a623c0e0169bfeca336af";
           revision = "6";
           editedCabalFile = "0jc2rnh8kyzay8ny59ahqb9q6vmp7si4aps1a42la79735078x51";
           libraryHaskellDepends = [ base generic-deriving hxt text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/silkapp/generic-xmlpickler";
           description = "Generic generation of HXT XmlPickler instances using GHC Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generics-eot" = callPackage
        ({ mkDerivation, base, markdown-unlit, stdenv }:
         mkDerivation {
           pname = "generics-eot";
           version = "0.2.1.1";
           sha256 = "89af298dd2ad37bc86ab240f3309451a6e66dd13dbf79227eb01832c3748d0d8";
           libraryHaskellDepends = [ base markdown-unlit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/generics-eot#readme";
           description = "A library for generic programming that aims to be easy to understand";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generics-sop" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "generics-sop";
           version = "0.3.2.0";
           sha256 = "3060ecd09ccbd27ecf825bb89af0af9cfcadd16f747ce5964c501682a2301b99";
           libraryHaskellDepends = [ base deepseq ghc-prim template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Generic Programming using True Sums of Products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "generics-sop-lens" = callPackage
        ({ mkDerivation, base, generics-sop, lens, stdenv }:
         mkDerivation {
           pname = "generics-sop-lens";
           version = "0.1.2.1";
           sha256 = "4e49d4cc580d45e25e0abdeee12b1191ae75937af1c7ca03333979584a8a525c";
           revision = "3";
           editedCabalFile = "1phq0hjpgxfvb8ay9v4ix6axk07mbd266javss9nmqmqmn3vnb51";
           libraryHaskellDepends = [ base generics-sop lens ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/generics-sop-lens#readme";
           description = "Lenses for types in generics-sop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "geniplate-mirror" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell }:
         mkDerivation {
           pname = "geniplate-mirror";
           version = "0.7.6";
           sha256 = "4b6b82d0348e79ae4a5e1deac029441251ae87ec15a7667cf0a1de5ff80215f8";
           libraryHaskellDepends = [ base mtl template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/danr/geniplate";
           description = "Use Template Haskell to generate Uniplate-like functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "genvalidity" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, validity }:
         mkDerivation {
           pname = "genvalidity";
           version = "0.4.0.4";
           sha256 = "fca452fe3735be8b4fffdf1e9f9761f5220ed5582a6543a6af4d48a2b56cd63d";
           libraryHaskellDepends = [ base QuickCheck validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Testing utilities for the validity library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-aeson" = callPackage
        ({ mkDerivation, aeson, base, genvalidity, genvalidity-scientific
         , genvalidity-text, genvalidity-unordered-containers
         , genvalidity-vector, QuickCheck, stdenv, validity, validity-aeson
         }:
         mkDerivation {
           pname = "genvalidity-aeson";
           version = "0.1.0.0";
           sha256 = "4f8798118961f2c5f7986b02df2b91a1f9daa663990c70d3e1a28c9988863390";
           libraryHaskellDepends = [
             aeson base genvalidity genvalidity-scientific genvalidity-text
             genvalidity-unordered-containers genvalidity-vector QuickCheck
             validity validity-aeson
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, genvalidity, QuickCheck, stdenv
         , validity, validity-bytestring
         }:
         mkDerivation {
           pname = "genvalidity-bytestring";
           version = "0.1.0.0";
           sha256 = "4b8aa18a173740aad49964b802a150f866238973caa36549035009c7dc949cae";
           libraryHaskellDepends = [
             base bytestring genvalidity QuickCheck validity validity-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for ByteString";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-containers" = callPackage
        ({ mkDerivation, base, containers, genvalidity, QuickCheck, stdenv
         , validity, validity-containers
         }:
         mkDerivation {
           pname = "genvalidity-containers";
           version = "0.3.0.0";
           sha256 = "0c79575e61974b3bac1e294fa43e2369c76b10e3d64dafeecb35cf29c293e027";
           libraryHaskellDepends = [
             base containers genvalidity QuickCheck validity validity-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec" = callPackage
        ({ mkDerivation, base, genvalidity, genvalidity-property, hspec
         , hspec-core, QuickCheck, stdenv, validity
         }:
         mkDerivation {
           pname = "genvalidity-hspec";
           version = "0.5.0.0";
           sha256 = "b50fcae1425a5da8666d0c6f439c844f87d4406711664166b083573f2b8b0cbc";
           libraryHaskellDepends = [
             base genvalidity genvalidity-property hspec hspec-core QuickCheck
             validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard spec's for GenValidity instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-aeson" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, genvalidity
         , genvalidity-hspec, hspec, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "genvalidity-hspec-aeson";
           version = "0.1.0.1";
           sha256 = "224f77428f59159a45a208a5531e60b70d77894bea5cdd9dc4ef285fd91d8473";
           libraryHaskellDepends = [
             aeson base bytestring deepseq genvalidity genvalidity-hspec hspec
             QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://cs-syd.eu";
           description = "Standard spec's for aeson-related instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-binary" = callPackage
        ({ mkDerivation, base, binary, deepseq, genvalidity
         , genvalidity-hspec, hspec, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "genvalidity-hspec-binary";
           version = "0.1.0.0";
           sha256 = "d4f65a560e2ba34ba9fe36a08241407c235372ed830e8b5842757b9e1a1ca595";
           libraryHaskellDepends = [
             base binary deepseq genvalidity genvalidity-hspec hspec QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard spec's for binary-related Instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-cereal" = callPackage
        ({ mkDerivation, base, cereal, deepseq, genvalidity
         , genvalidity-hspec, hspec, QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "genvalidity-hspec-cereal";
           version = "0.1.0.0";
           sha256 = "f330fca068308cfd1606e6438282c3c73c849d9d65618fff4fe044361e9aed05";
           libraryHaskellDepends = [
             base cereal deepseq genvalidity genvalidity-hspec hspec QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://cs-syd.eu";
           description = "Standard spec's for cereal-related instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-hspec-hashable" = callPackage
        ({ mkDerivation, base, genvalidity, genvalidity-hspec
         , genvalidity-property, hashable, hspec, QuickCheck, stdenv
         , validity
         }:
         mkDerivation {
           pname = "genvalidity-hspec-hashable";
           version = "0.1.0.0";
           sha256 = "ce8e6131b8c793a4fcf1cf7bedc461817a91ba1ecc5d80de3641384283ae4600";
           libraryHaskellDepends = [
             base genvalidity genvalidity-hspec genvalidity-property hashable
             hspec QuickCheck validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity";
           description = "Standard spec's for Hashable instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-path" = callPackage
        ({ mkDerivation, base, genvalidity, path, stdenv, validity-path }:
         mkDerivation {
           pname = "genvalidity-path";
           version = "0.2.0.2";
           sha256 = "900c6339e8057cce0a13c0342e09a548d238c6eb7eb69eeb20b82a6174f71590";
           libraryHaskellDepends = [ base genvalidity path validity-path ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for Path";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-property" = callPackage
        ({ mkDerivation, base, genvalidity, hspec, QuickCheck, stdenv
         , validity
         }:
         mkDerivation {
           pname = "genvalidity-property";
           version = "0.1.0.0";
           sha256 = "dfd734fe9020f182c735ac0779f7f76e7d4d8e1294eabfb2f453e39259896af5";
           libraryHaskellDepends = [
             base genvalidity hspec QuickCheck validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Standard properties for functions on `Validity` types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-scientific" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, scientific, stdenv
         , validity, validity-scientific
         }:
         mkDerivation {
           pname = "genvalidity-scientific";
           version = "0.1.0.0";
           sha256 = "f231bb6a208e4b941803669f60d3121a2122f22c5686d82a027ec0f9bd3666a1";
           libraryHaskellDepends = [
             base genvalidity QuickCheck scientific validity validity-scientific
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for Scientific";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-text" = callPackage
        ({ mkDerivation, array, base, genvalidity, QuickCheck, stdenv, text
         , validity, validity-text
         }:
         mkDerivation {
           pname = "genvalidity-text";
           version = "0.4.0.0";
           sha256 = "769b3633d8770374551b49df01b29e8ef9cce1d8275715ab1cee5868430faced";
           libraryHaskellDepends = [
             array base genvalidity QuickCheck text validity validity-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for Text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-time" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, stdenv, time
         , validity-time
         }:
         mkDerivation {
           pname = "genvalidity-time";
           version = "0.1.0.1";
           sha256 = "2fb7399591faf6d53426d89f3c97a87410042269aa3e2bc9ec7f0eb4993632b5";
           libraryHaskellDepends = [
             base genvalidity QuickCheck time validity-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-unordered-containers" = callPackage
        ({ mkDerivation, base, genvalidity, hashable, QuickCheck, stdenv
         , unordered-containers, validity, validity-unordered-containers
         }:
         mkDerivation {
           pname = "genvalidity-unordered-containers";
           version = "0.1.0.0";
           sha256 = "e8fac31236806e21681fa7121a513812e54ff42133c7f82601d1af6082e7f38a";
           libraryHaskellDepends = [
             base genvalidity hashable QuickCheck unordered-containers validity
             validity-unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for unordered-containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-uuid" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, stdenv, uuid
         , validity, validity-uuid
         }:
         mkDerivation {
           pname = "genvalidity-uuid";
           version = "0.0.0.0";
           sha256 = "ab784b9bb0465fbfaa16ae9181dc1a0e6dc7000ebde7dd366f659151aa07a9b5";
           libraryHaskellDepends = [
             base genvalidity QuickCheck uuid validity validity-uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for UUID";
           license = stdenv.lib.licenses.mit;
         }) {};
      "genvalidity-vector" = callPackage
        ({ mkDerivation, base, genvalidity, QuickCheck, stdenv, validity
         , validity-vector, vector
         }:
         mkDerivation {
           pname = "genvalidity-vector";
           version = "0.1.0.0";
           sha256 = "990ec4f09d5baa30eaf76081db5247f95c2659ac213a185f3bab48d0b93f20c6";
           libraryHaskellDepends = [
             base genvalidity QuickCheck validity validity-vector vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "GenValidity support for vector";
           license = stdenv.lib.licenses.mit;
         }) {};
      "getopt-generics" = callPackage
        ({ mkDerivation, base, base-compat, base-orphans, generics-sop
         , stdenv, tagged
         }:
         mkDerivation {
           pname = "getopt-generics";
           version = "0.13.0.1";
           sha256 = "6902d7e366dea566f533be6b40ce219b010f1e9fcbc089285da3d4ecca524e83";
           libraryHaskellDepends = [
             base base-compat base-orphans generics-sop tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/getopt-generics#readme";
           description = "Create command line interfaces with ease";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-boot" = callPackage
        ({ mkDerivation, base, binary, bytestring, directory, filepath
         , ghc-boot-th, stdenv
         }:
         mkDerivation {
           pname = "ghc-boot";
           version = "8.2.2";
           sha256 = "cf38a4d878a944b100a770450f5472d167657330a906b9d56695a0d29b76973b";
           libraryHaskellDepends = [
             base binary bytestring directory filepath ghc-boot-th
           ];
           doHaddock = false;
           doCheck = false;
           description = "Shared functionality between GHC and its boot libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-compact" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "ghc-compact";
           version = "0.1.0.0";
           sha256 = "50bc40e5e5b3a17b267250136af0c04027a9d9eb699e9fee8a5a321bae424e0f";
           revision = "1";
           editedCabalFile = "1fwcfk515lv3pjzxz87bddk3kdbkaxswxrr37spdlkvyyfrbxyak";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "In memory storage of deeply evaluated data structure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-core" = callPackage
        ({ mkDerivation, base, colorize-haskell, directory, filepath
         , pcre-light, process, stdenv
         }:
         mkDerivation {
           pname = "ghc-core";
           version = "0.5.6";
           sha256 = "ec34f3e5892be7c2b52945875cd330397eca3904ae1d9574559855817b8b7e85";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base colorize-haskell directory filepath pcre-light process
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/shachaf/ghc-core";
           description = "Display GHC's core and assembly output in a pager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-events" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , stdenv, text, vector
         }:
         mkDerivation {
           pname = "ghc-events";
           version = "0.7.1";
           sha256 = "71cc8a085849c7f241da80445b353c5ca2735b8f52280cc041c2c37c4060f532";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring containers text vector
           ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Library and tool for parsing .eventlog files from GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-exactprint" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , free, ghc, ghc-boot, ghc-paths, mtl, stdenv, syb
         }:
         mkDerivation {
           pname = "ghc-exactprint";
           version = "0.5.6.0";
           sha256 = "4f2ffa9931dae98e6f01eaee1f567fb9dd21f3028d56e0fe15184f3fc53d7839";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory filepath free ghc ghc-boot
             ghc-paths mtl syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "ExactPrint for GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-paths" = callPackage
        ({ mkDerivation, base, Cabal, directory, stdenv }:
         mkDerivation {
           pname = "ghc-paths";
           version = "0.1.0.9";
           sha256 = "afa68fb86123004c37c1dc354286af2d87a9dcfb12ddcb80e8bd0cd55bc87945";
           revision = "3";
           editedCabalFile = "1gx47xbm3qviqccnbsibzkfnlzljvls33jh1ry4l506yvfnf4j10";
           setupHaskellDepends = [ base Cabal directory ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Knowledge of GHC's installation directories";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-prof" = callPackage
        ({ mkDerivation, attoparsec, base, containers, scientific, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "ghc-prof";
           version = "1.4.1";
           sha256 = "24a31e361ba788304534ab80d1d2ec0b9f96747a299daa2dc3fced33ec15eeca";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base containers scientific text time
           ];
           executableHaskellDepends = [ base containers scientific text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/ghc-prof";
           description = "Library for parsing GHC time and allocation profiling reports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-syb-utils" = callPackage
        ({ mkDerivation, base, ghc, stdenv, syb }:
         mkDerivation {
           pname = "ghc-syb-utils";
           version = "0.2.3.3";
           sha256 = "5f4276c987883b487e687a596bb2ecb67a76027b4b1817b55b53acd92666473a";
           libraryHaskellDepends = [ base ghc syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/ghc-syb";
           description = "Scrap Your Boilerplate utilities for the GHC API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghc-tcplugins-extra" = callPackage
        ({ mkDerivation, base, ghc, stdenv }:
         mkDerivation {
           pname = "ghc-tcplugins-extra";
           version = "0.2.2";
           sha256 = "9807d578a57a376d7a32a0a34ad1c0014d66cd492080e89a2f57c3d520caa2cc";
           libraryHaskellDepends = [ base ghc ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
           description = "Utilities for writing GHC type-checker plugins";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-extra" = callPackage
        ({ mkDerivation, base, ghc, ghc-prim, ghc-tcplugins-extra
         , ghc-typelits-knownnat, ghc-typelits-natnormalise, integer-gmp
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "ghc-typelits-extra";
           version = "0.2.4";
           sha256 = "afdd095ff413a40bc060c132bf298f967a393100b790d4f232040540cc39d246";
           libraryHaskellDepends = [
             base ghc ghc-prim ghc-tcplugins-extra ghc-typelits-knownnat
             ghc-typelits-natnormalise integer-gmp transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "Additional type-level operations on GHC.TypeLits.Nat";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-knownnat" = callPackage
        ({ mkDerivation, base, ghc, ghc-tcplugins-extra
         , ghc-typelits-natnormalise, stdenv, template-haskell, transformers
         }:
         mkDerivation {
           pname = "ghc-typelits-knownnat";
           version = "0.4";
           sha256 = "dbfa82c3939af306d05cbd5f88563ab25d6f71dc7e4410f3cb4ba27b25219763";
           libraryHaskellDepends = [
             base ghc ghc-tcplugins-extra ghc-typelits-natnormalise
             template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://clash-lang.org/";
           description = "Derive KnownNat constraints from other KnownNat constraints";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghc-typelits-natnormalise" = callPackage
        ({ mkDerivation, base, ghc, ghc-tcplugins-extra, integer-gmp
         , stdenv
         }:
         mkDerivation {
           pname = "ghc-typelits-natnormalise";
           version = "0.5.8";
           sha256 = "21024606874541db26e965609960c9fd12a4fbfac6d8ff2053491e3527907076";
           libraryHaskellDepends = [
             base ghc ghc-tcplugins-extra integer-gmp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.clash-lang.org/";
           description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ghci" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , deepseq, filepath, ghc-boot, ghc-boot-th, stdenv
         , template-haskell, transformers, unix
         }:
         mkDerivation {
           pname = "ghci";
           version = "8.2.2";
           sha256 = "f6978f3da79c52659d0f63c33cd763190a1bb2214c01b34abe0e6cc9b4c0ca48";
           libraryHaskellDepends = [
             array base binary bytestring containers deepseq filepath ghc-boot
             ghc-boot-th template-haskell transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "The library supporting GHC's interactive interpreter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghcid" = callPackage
        ({ mkDerivation, ansi-terminal, base, cmdargs, containers
         , directory, extra, filepath, fsnotify, process, stdenv
         , terminal-size, time, unix
         }:
         mkDerivation {
           pname = "ghcid";
           version = "0.6.10";
           sha256 = "92abe44d24072573d08a65a84c500974169502c69a2bf7e6ee8c367e53300de3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base cmdargs directory extra filepath process time
           ];
           executableHaskellDepends = [
             ansi-terminal base cmdargs containers directory extra filepath
             fsnotify process terminal-size time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/ghcid#readme";
           description = "GHCi based bare bones IDE";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghcjs-base-stub" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, containers, deepseq
         , ghc-prim, primitive, scientific, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "ghcjs-base-stub";
           version = "0.1.0.4";
           sha256 = "27ab2b99bb677b6c19813d713a22f5818b2e53062bc45d0f34648cbf26ab12a8";
           libraryHaskellDepends = [
             aeson attoparsec base containers deepseq ghc-prim primitive
             scientific text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/javascript-stub#readme";
           description = "Allow GHCJS projects to compile under GHC and develop using intero";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ghcjs-codemirror" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ghcjs-codemirror";
           version = "0.0.0.1";
           sha256 = "dcd9f5288d7624c8a2a5bf8440d9de6ab8400707d366180b13cc3f472280a513";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ghcjs/CodeMirror";
           description = "Installs CodeMirror JavaScript files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghcjs-dom" = callPackage
        ({ mkDerivation, base, ghcjs-dom-jsaddle, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "ghcjs-dom";
           version = "0.9.2.0";
           sha256 = "4a01996bb07fea34deb1ddfd049e0fd92fc2fe36ef9b3ae0182c230373b71b7a";
           libraryHaskellDepends = [
             base ghcjs-dom-jsaddle text transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "DOM library that supports both GHCJS and GHC";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghcjs-dom-jsaddle" = callPackage
        ({ mkDerivation, jsaddle-dom, stdenv }:
         mkDerivation {
           pname = "ghcjs-dom-jsaddle";
           version = "0.9.2.0";
           sha256 = "d4c8d989ed17afae5af35e98cfc253f612f87d10fa04951eb78f7e61877e3616";
           libraryHaskellDepends = [ jsaddle-dom ];
           doHaddock = false;
           doCheck = false;
           description = "DOM library that supports both GHCJS and GHC using jsaddle";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghcjs-perch" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "ghcjs-perch";
           version = "0.3.3.2";
           sha256 = "a7cee1699b51af9e0aa62dec2ab4a04f68250106da02c77bed19dd69fae5e6d9";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "GHCJS version of Perch library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ghost-buster" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ghost-buster";
           version = "0.1.1.0";
           sha256 = "02d0930ee77838e7f5a04ebc0a74f62b15218b8ace4a5b88510d9a6b56dbf6d6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Lazersmoke/ghost-buster#readme";
           description = "Existential type utilites";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gi-atk" = callPackage
        ({ mkDerivation, atk, base, bytestring, Cabal, containers, gi-glib
         , gi-gobject, haskell-gi, haskell-gi-base, haskell-gi-overloading
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "gi-atk";
           version = "2.0.14";
           sha256 = "f530c062127cb6f744a67b54ce427c620de23e146c7d9a098f9f46281cd4e53a";
           setupHaskellDepends = [ base Cabal haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers gi-glib gi-gobject haskell-gi
             haskell-gi-base haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ atk ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Atk bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) atk;};
      "gi-cairo" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cairo, containers
         , haskell-gi, haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-cairo";
           version = "1.0.14";
           sha256 = "abbb705fe4c6d0616cb625438bf3f4653005d1ebd3b29cfbdc9724f824c42410";
           setupHaskellDepends = [ base Cabal haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ cairo ];
           doHaddock = false;
           doCheck = false;
           preCompileBuildDriver = ''
             PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
             setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
           '';
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Cairo bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) cairo;};
      "gi-glib" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, glib
         , haskell-gi, haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-glib";
           version = "2.0.15";
           sha256 = "9f19b508035445676d9ba86bc001d228b38e79a063f8c1d26325962af8c6d3bd";
           setupHaskellDepends = [ base Cabal haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GLib bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-gobject" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, gi-glib, glib
         , haskell-gi, haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "gi-gobject";
           version = "2.0.15";
           sha256 = "34675989537af44b804926ef6a8d97aaf312b81c0331a00f5f0d36611aa52841";
           setupHaskellDepends = [ base Cabal haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers gi-glib haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "GObject bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "gi-javascriptcore" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, haskell-gi
         , haskell-gi-base, haskell-gi-overloading, stdenv, text
         , transformers, webkitgtk
         }:
         mkDerivation {
           pname = "gi-javascriptcore";
           version = "4.0.14";
           sha256 = "242477e291bf7eb768f06343c99f1854f725861ebf03419bf1ca6b13dbb7b402";
           setupHaskellDepends = [ base Cabal haskell-gi ];
           libraryHaskellDepends = [
             base bytestring containers haskell-gi haskell-gi-base
             haskell-gi-overloading text transformers
           ];
           libraryPkgconfigDepends = [ webkitgtk ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "JavaScriptCore bindings";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) webkitgtk;};
      "ginger" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring
         , data-default, filepath, http-types, mtl, parsec, safe, scientific
         , stdenv, text, time, transformers, unordered-containers
         , utf8-string, vector
         }:
         mkDerivation {
           pname = "ginger";
           version = "0.7.3.0";
           sha256 = "fa1d71fa484e2a96b46bc71669b2d6e8f8233e12c0b29e550867b5797b0493b0";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring data-default filepath http-types
             mtl parsec safe scientific text time transformers
             unordered-containers utf8-string vector
           ];
           executableHaskellDepends = [
             aeson base bytestring data-default text transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/tdammers/ginger";
           description = "An implementation of the Jinja2 template language in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "giphy-api" = callPackage
        ({ mkDerivation, aeson, base, containers, http-api-data
         , http-client, http-client-tls, microlens, microlens-th, mtl
         , network-uri, servant, servant-client, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "giphy-api";
           version = "0.5.2.0";
           sha256 = "447111d3fa32a76ffc50b26fbec59d9e9a097d7e2facb04a7a272cb9abd97ce9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base containers http-api-data http-client http-client-tls
             microlens microlens-th mtl network-uri servant servant-client text
             transformers
           ];
           executableHaskellDepends = [ base network-uri text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/passy/giphy-api#readme";
           description = "Giphy HTTP API wrapper and CLI search tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "git" = callPackage
        ({ mkDerivation, base, byteable, bytestring, containers, cryptonite
         , hourglass, memory, patience, random, stdenv, system-fileio
         , system-filepath, unix-compat, utf8-string, vector, zlib
         , zlib-bindings
         }:
         mkDerivation {
           pname = "git";
           version = "0.2.1";
           sha256 = "5fb7d86687262fc92faedfdb51fd99d02ef3d4bd09bc151dc2e0a1b23afd1048";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base byteable bytestring containers cryptonite hourglass memory
             patience random system-fileio system-filepath unix-compat
             utf8-string vector zlib zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-git";
           description = "Git operations in haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "git-annex" = callPackage
        ({ mkDerivation, aeson, async, aws, base, blaze-builder
         , bloomfilter, bup, byteable, bytestring, case-insensitive
         , clientsession, concurrent-output, conduit, conduit-extra
         , containers, crypto-api, cryptonite, curl, data-default, DAV, dbus
         , directory, disk-free-space, dlist, dns, edit-distance, esqueleto
         , exceptions, fdo-notify, feed, filepath, free, git, gnupg
         , hinotify, hslogger, http-client, http-conduit, http-types, IfElse
         , lsof, magic, memory, monad-control, monad-logger, mountpoints
         , mtl, network, network-info, network-multicast, network-uri
         , old-locale, openssh, optparse-applicative, path-pieces, perl
         , persistent, persistent-sqlite, persistent-template, process
         , QuickCheck, random, regex-tdfa, resourcet, rsync, SafeSemaphore
         , sandi, securemem, shakespeare, socks, split, stdenv, stm
         , stm-chans, tagsoup, tasty, tasty-hunit, tasty-quickcheck
         , tasty-rerun, template-haskell, text, time, torrent, transformers
         , unix, unix-compat, unordered-containers, utf8-string, uuid, wai
         , wai-extra, warp, warp-tls, wget, which, yesod, yesod-core
         , yesod-form, yesod-static
         }:
         mkDerivation {
           pname = "git-annex";
           version = "6.20171214";
           sha256 = "30ce0b6f7314b5e138643d6342427bfaa25d27bfbab9f95001cf867557d4d51a";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson async aws base blaze-builder bloomfilter byteable bytestring
             case-insensitive clientsession concurrent-output conduit
             conduit-extra containers crypto-api cryptonite data-default DAV
             dbus directory disk-free-space dlist dns edit-distance esqueleto
             exceptions fdo-notify feed filepath free hinotify hslogger
             http-client http-conduit http-types IfElse magic memory
             monad-control monad-logger mountpoints mtl network network-info
             network-multicast network-uri old-locale optparse-applicative
             path-pieces persistent persistent-sqlite persistent-template
             process QuickCheck random regex-tdfa resourcet SafeSemaphore sandi
             securemem shakespeare socks split stm stm-chans tagsoup tasty
             tasty-hunit tasty-quickcheck tasty-rerun template-haskell text time
             torrent transformers unix unix-compat unordered-containers
             utf8-string uuid wai wai-extra warp warp-tls yesod yesod-core
             yesod-form yesod-static
           ];
           executableSystemDepends = [
             bup curl git gnupg lsof openssh perl rsync wget which
           ];
           doHaddock = false;
           doCheck = false;
           preConfigure = "export HOME=$TEMPDIR; patchShebangs .";
           installPhase = "make PREFIX=$out BUILDER=: install";
           checkPhase = ''
             ln -sf dist/build/git-annex/git-annex git-annex
             ln -sf git-annex git-annex-shell
             export PATH+=":$PWD"
             git-annex test
           '';
           enableSharedExecutables = false;
           homepage = "http://git-annex.branchable.com/";
           description = "manage files with git, without checking their contents into git";
           license = stdenv.lib.licenses.gpl3;
           platforms = [ "i686-linux" "x86_64-linux" ];
         }) {inherit (pkgs) bup; inherit (pkgs) curl; inherit (pkgs) git; 
inherit (pkgs) gnupg; inherit (pkgs) lsof; inherit (pkgs) openssh; 
inherit (pkgs) perl; inherit (pkgs) rsync; inherit (pkgs) wget; 
inherit (pkgs) which;};
      "github" = callPackage
        ({ mkDerivation, aeson, aeson-compat, base, base-compat
         , base16-bytestring, binary, binary-orphans, byteable, bytestring
         , containers, cryptohash, deepseq, deepseq-generics, exceptions
         , hashable, http-client, http-client-tls, http-link-header
         , http-types, iso8601-time, mtl, network-uri, semigroups, stdenv
         , text, time, tls, transformers, transformers-compat
         , unordered-containers, vector, vector-instances
         }:
         mkDerivation {
           pname = "github";
           version = "0.18";
           sha256 = "31dc02d345e46b09bbc7ae7b898102630b2861b50814a13f6265c6929ad18c44";
           revision = "2";
           editedCabalFile = "1rywfb78acwh81mdnxb4q35n374k1wbxg0562biis0i0jjxfp211";
           libraryHaskellDepends = [
             aeson aeson-compat base base-compat base16-bytestring binary
             binary-orphans byteable bytestring containers cryptohash deepseq
             deepseq-generics exceptions hashable http-client http-client-tls
             http-link-header http-types iso8601-time mtl network-uri semigroups
             text time tls transformers transformers-compat unordered-containers
             vector vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/github";
           description = "Access to the GitHub API, v3";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "github-release" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, http-types, mime-types, optparse-generic, stdenv
         , text, unordered-containers, uri-templater
         }:
         mkDerivation {
           pname = "github-release";
           version = "1.1.4";
           sha256 = "6b368c519d454d0b11a0df9f7542c93274a7292bce18a1816985c964f4a6dd4a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-types
             mime-types optparse-generic text unordered-containers uri-templater
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/github-release#readme";
           description = "Upload files to GitHub releases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "github-types" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text, time }:
         mkDerivation {
           pname = "github-types";
           version = "0.2.1";
           sha256 = "cce4ea461b3ea7c92d130181244cfe7f29c10aecc7e7a980ee6722b6d6af7867";
           libraryHaskellDepends = [ aeson base text time ];
           doHaddock = false;
           doCheck = false;
           description = "Type definitions for objects used by the GitHub v3 API";
           license = "unknown";
         }) {};
      "github-webhook-handler" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cryptohash, github-types
         , stdenv, text, transformers, uuid, vector
         }:
         mkDerivation {
           pname = "github-webhook-handler";
           version = "0.0.8";
           sha256 = "1d908854606683c236720c2de3988ae723591be02b1c668bd8ba0ffa03b34fea";
           revision = "1";
           editedCabalFile = "1nhwindcplcyyffvzw0cig1p0m8165laq3hv94s596rsi3b5pgqr";
           libraryHaskellDepends = [
             aeson base bytestring cryptohash github-types text transformers
             uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "GitHub WebHook Handler";
           license = stdenv.lib.licenses.mit;
         }) {};
      "github-webhook-handler-snap" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, github-types
         , github-webhook-handler, snap-core, stdenv, uuid
         }:
         mkDerivation {
           pname = "github-webhook-handler-snap";
           version = "0.0.7";
           sha256 = "d4f526f4027a0c1cd9bdf455fbfb0c1742539eb3379b22ba59f1647133202c91";
           revision = "1";
           editedCabalFile = "1l0c2xn41pylap7vw33r67pmmcafr1fdm04l9b8h206c270bsinm";
           libraryHaskellDepends = [
             base bytestring case-insensitive github-types
             github-webhook-handler snap-core uuid
           ];
           doHaddock = false;
           doCheck = false;
           description = "GitHub WebHook Handler implementation for Snap";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, conduit
         , conduit-combinators, containers, directory, exceptions, filepath
         , hashable, lifted-async, lifted-base, monad-control, mtl
         , resourcet, semigroups, stdenv, tagged, text, time, transformers
         , unix, unordered-containers
         }:
         mkDerivation {
           pname = "gitlib";
           version = "3.1.1";
           sha256 = "dd68758b62fb0ca52f3ed851d2e68779770b1d83f2dd846528c3538aabf395ef";
           libraryHaskellDepends = [
             base base16-bytestring bytestring conduit conduit-combinators
             containers directory exceptions filepath hashable lifted-async
             lifted-base monad-control mtl resourcet semigroups tagged text time
             transformers unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "API library for working with Git repositories";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib-libgit2" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , containers, directory, exceptions, fast-logger, filepath, gitlib
         , hlibgit2, lifted-async, lifted-base, mmorph, monad-control
         , monad-loops, mtl, resourcet, stdenv, stm, stm-conduit, tagged
         , template-haskell, text, text-icu, time, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "gitlib-libgit2";
           version = "3.1.1";
           sha256 = "fc2806ebc1bb51f5043a0d5091c5045be40bf82cae3296213b353507b8c868bb";
           revision = "1";
           editedCabalFile = "0v510c4sd6zwwf6mbc6gfv5sin91ckw4v6c844wrfksi9gdq3shm";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators containers directory
             exceptions fast-logger filepath gitlib hlibgit2 lifted-async
             lifted-base mmorph monad-control monad-loops mtl resourcet stm
             stm-conduit tagged template-haskell text text-icu time transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libgit2 backend for gitlib";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib-test" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , exceptions, gitlib, hspec, hspec-expectations, HUnit
         , monad-control, stdenv, tagged, text, time, transformers
         }:
         mkDerivation {
           pname = "gitlib-test";
           version = "3.1.0.3";
           sha256 = "fe0abfa269dabd63d60f856db0a82c88d6bd059de1d4d84dccaf846a1a38291f";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators exceptions gitlib hspec
             hspec-expectations HUnit monad-control tagged text time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Test library for confirming gitlib backend compliance";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitrev" = callPackage
        ({ mkDerivation, base, base-compat, directory, filepath, process
         , stdenv, template-haskell
         }:
         mkDerivation {
           pname = "gitrev";
           version = "1.3.1";
           sha256 = "a89964db24f56727b0e7b10c98fe7c116d721d8c46f52d6e77088669aaa38332";
           libraryHaskellDepends = [
             base base-compat directory filepath process template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/gitrev";
           description = "Compile git revision info into Haskell projects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gl" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , fixed, half, hxt, mesa, stdenv, transformers
         }:
         mkDerivation {
           pname = "gl";
           version = "0.8.0";
           sha256 = "aa4d2838157c86da920bda651458a4266fccc7c291ea93a69558ab02540e1439";
           setupHaskellDepends = [
             base Cabal containers directory filepath hxt transformers
           ];
           libraryHaskellDepends = [
             base containers fixed half transformers
           ];
           librarySystemDepends = [ mesa ];
           doHaddock = false;
           doCheck = false;
           description = "Complete OpenGL raw bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mesa;};
      "glabrous" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
         , cereal, cereal-text, either, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "glabrous";
           version = "0.3.4";
           sha256 = "82e0efbd130a686c97897e78f33272557a22ae5742790bf2325abc0268a7bc01";
           libraryHaskellDepends = [
             aeson aeson-pretty attoparsec base bytestring cereal cereal-text
             either text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/glabrous";
           description = "A template DSL library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "glaze" = callPackage
        ({ mkDerivation, base, lens, stdenv }:
         mkDerivation {
           pname = "glaze";
           version = "0.3.0.1";
           sha256 = "bbb184408bcf24e8c4f89a960cf7a69ab0c51e98bf84c5fa9901aae1702e22a1";
           libraryHaskellDepends = [ base lens ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/glaze#readme";
           description = "Framework for rendering things with metadata/headers and values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "glazier" = callPackage
        ({ mkDerivation, base, lens, mmorph, mtl, semigroupoids, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "glazier";
           version = "0.11.0.1";
           sha256 = "1151031c7943140b19fc3b319f6e1c648cc75fa0fd619f17d64dfe7857b60b46";
           libraryHaskellDepends = [
             base lens mmorph mtl semigroupoids transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/glazier#readme";
           description = "Composable widgets framework with enhanced with transformers and lens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "glazier-pipes" = callPackage
        ({ mkDerivation, base, glazier, mmorph, pipes, stdenv, stm
         , stm-extras, transformers
         }:
         mkDerivation {
           pname = "glazier-pipes";
           version = "0.1.5.1";
           sha256 = "9d1d044a4d8641a0da09d6447298530a8a785bb3e29c0177a0b682f9bbf4d1ac";
           libraryHaskellDepends = [
             base glazier mmorph pipes stm stm-extras transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/glazier-pipes#readme";
           description = "A threaded rendering framework using glaizer and pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "glib" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, glib
         , gtk2hs-buildtools, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "glib";
           version = "0.13.5.0";
           sha256 = "72bdde540d09c75307e422dac63cdc084e41fd5dc24f9e1e121a018aa8a3a6ad";
           setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
           libraryHaskellDepends = [
             base bytestring containers text utf8-string
           ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the GLIB library for Gtk2Hs";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "glob-posix" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "glob-posix";
           version = "0.1.0.1";
           sha256 = "3245382c77ebaceea958ef62510d073b96e10a43bf69536cf9079d69da363caf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rdnetto/glob-posix#readme";
           description = "Haskell bindings for POSIX glob library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "gloss" = callPackage
        ({ mkDerivation, base, bmp, bytestring, containers, ghc-prim
         , gloss-rendering, GLUT, OpenGL, stdenv
         }:
         mkDerivation {
           pname = "gloss";
           version = "1.11.1.1";
           sha256 = "14e09540ba120c4d0d9153655c35602de4657aa40ad2add693ca12f825d1d653";
           revision = "1";
           editedCabalFile = "1bxdf2kmdcqndg25jgh0l1bmr39795gxrcx0rgzcich4n8l88pvb";
           libraryHaskellDepends = [
             base bmp bytestring containers ghc-prim gloss-rendering GLUT OpenGL
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://gloss.ouroborus.net";
           description = "Painless 2D vector graphics, animations and simulations";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gloss-accelerate" = callPackage
        ({ mkDerivation, accelerate, base, gloss, gloss-rendering, stdenv
         }:
         mkDerivation {
           pname = "gloss-accelerate";
           version = "2.0.0.0";
           sha256 = "2ea628c30c52a6a9600f6fd782b1aa65266a7253b6fca9968e1e1474a4f0d1c1";
           revision = "1";
           editedCabalFile = "1arsf3j8b59qr5z5sy5sxx5mdddagjginrqs3jb9lpj1s3c3672b";
           libraryHaskellDepends = [ accelerate base gloss gloss-rendering ];
           doHaddock = false;
           doCheck = false;
           description = "Extras to interface Gloss and Accelerate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gloss-algorithms" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, gloss, stdenv }:
         mkDerivation {
           pname = "gloss-algorithms";
           version = "1.11.1.1";
           sha256 = "e1a7561c87a2d105054017d1c4fd393f597ddfcf0409aad097ba7e8e7aae23f2";
           revision = "1";
           editedCabalFile = "08w84grwvl079gzjwnshfgs12kh1p2gbc5kvbw6qdxc7g292hd5m";
           libraryHaskellDepends = [ base containers ghc-prim gloss ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://gloss.ouroborus.net";
           description = "Data structures and algorithms for working with 2D graphics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gloss-raster" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, gloss, gloss-rendering
         , repa, stdenv
         }:
         mkDerivation {
           pname = "gloss-raster";
           version = "1.11.1.1";
           sha256 = "277897eb2646fb66e23391796ed9e92360467ddf3acac196f658203cd9787c46";
           revision = "1";
           editedCabalFile = "1kx0n4kwy5xdg4b5b79a815y8yqcsld8s5p784qhgg92s0cmnsjf";
           libraryHaskellDepends = [
             base containers ghc-prim gloss gloss-rendering repa
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://gloss.ouroborus.net";
           description = "Parallel rendering of raster images";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gloss-raster-accelerate" = callPackage
        ({ mkDerivation, accelerate, base, colour-accelerate, gloss
         , gloss-accelerate, stdenv
         }:
         mkDerivation {
           pname = "gloss-raster-accelerate";
           version = "2.0.0.0";
           sha256 = "2db125ba6435ee4c20ac4210a66899a063f34554e80e4b7a88c6e4e579ea18c4";
           revision = "1";
           editedCabalFile = "07c56r31akmq7hq0cyw4lc4h5370laand231wjd5ffwk369x2prg";
           libraryHaskellDepends = [
             accelerate base colour-accelerate gloss gloss-accelerate
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parallel rendering of raster images using Accelerate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gloss-rendering" = callPackage
        ({ mkDerivation, base, bmp, bytestring, containers, GLUT, OpenGL
         , stdenv
         }:
         mkDerivation {
           pname = "gloss-rendering";
           version = "1.11.1.1";
           sha256 = "1f0a9a6d2124d4cbfb30821f1654d2cd9d7c1766310cf7f9009ccc9808474af4";
           revision = "1";
           editedCabalFile = "1z580vh4idsbndjjla6gniz8cacxwj9206llyafl83brrqjhm14b";
           libraryHaskellDepends = [
             base bmp bytestring containers GLUT OpenGL
           ];
           doHaddock = false;
           doCheck = false;
           description = "Gloss picture data types and rendering functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gluturtle" = callPackage
        ({ mkDerivation, base, convertible, GLUT, stdenv, stm, yjsvg
         , yjtools
         }:
         mkDerivation {
           pname = "gluturtle";
           version = "0.0.58.1";
           sha256 = "178658ce4f76ac0a855ca9123cdc8bda0ecc5531356551c00ba6de98dcbd934b";
           libraryHaskellDepends = [
             base convertible GLUT stm yjsvg yjtools
           ];
           doHaddock = false;
           doCheck = false;
           description = "turtle like LOGO with glut";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gnuplot" = callPackage
        ({ mkDerivation, array, base, containers, data-accessor
         , data-accessor-transformers, deepseq, filepath, process
         , semigroups, stdenv, temporary, time, transformers, utility-ht
         }:
         mkDerivation {
           pname = "gnuplot";
           version = "0.5.5.1";
           sha256 = "aa36ec3fbf924f985aafe99b4baf521593c030315b051d8ea461e36966a519c4";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base containers data-accessor data-accessor-transformers
             deepseq filepath process semigroups temporary time transformers
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Gnuplot";
           description = "2D and 3D plots using gnuplot";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "goggles" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring, binary
         , bytestring, containers, cryptonite, exceptions, filepath, hspec
         , http-client, http-client-tls, http-types, memory, mtl, pem
         , QuickCheck, req, scientific, stdenv, stm, text, time
         , transformers, unix-time, x509, x509-store
         }:
         mkDerivation {
           pname = "goggles";
           version = "0.1.0.3";
           sha256 = "5f42635dff7597a37282482b0df0e164092f1924118a0e43d2ba87da7521c045";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring binary bytestring
             containers cryptonite exceptions filepath hspec http-client
             http-client-tls http-types memory mtl pem QuickCheck req scientific
             stm text time transformers unix-time x509 x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/goggles";
           description = "Interface to Google Cloud APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gogol" = callPackage
        ({ mkDerivation, aeson, base, bytestring, case-insensitive, conduit
         , conduit-extra, cryptonite, directory, exceptions, filepath
         , gogol-core, http-client, http-conduit, http-media, http-types
         , lens, memory, mime-types, monad-control, mtl, resourcet, stdenv
         , text, time, transformers, transformers-base, unordered-containers
         , x509, x509-store
         }:
         mkDerivation {
           pname = "gogol";
           version = "0.3.0";
           sha256 = "6273f96e5936a660a5d629ce210a0ef1b4a5642910f1c90144cd3fc4db9a6431";
           libraryHaskellDepends = [
             aeson base bytestring case-insensitive conduit conduit-extra
             cryptonite directory exceptions filepath gogol-core http-client
             http-conduit http-media http-types lens memory mime-types
             monad-control mtl resourcet text time transformers
             transformers-base unordered-containers x509 x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Comprehensive Google Services SDK";
           license = "unknown";
         }) {};
      "gogol-adexchange-buyer" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-adexchange-buyer";
           version = "0.3.0";
           sha256 = "a83e37a494957cb45627ef0793a49044db6cd95470600cfcdd78ca738765c2c2";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Ad Exchange Buyer SDK";
           license = "unknown";
         }) {};
      "gogol-adexchange-seller" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-adexchange-seller";
           version = "0.3.0";
           sha256 = "29d9b297d772fd0fd4bd1b1272c95174a000a4d5d13d0508d84de2009ada17e5";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Ad Exchange Seller SDK";
           license = "unknown";
         }) {};
      "gogol-admin-datatransfer" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-admin-datatransfer";
           version = "0.3.0";
           sha256 = "09072765af2d11e3ed49805a5235234ef92b61db3b7e2b681ec9bb37c98354e2";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Admin Data Transfer SDK";
           license = "unknown";
         }) {};
      "gogol-admin-directory" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-admin-directory";
           version = "0.3.0";
           sha256 = "f3d63b51daf3c02b438206138ea6e4b2ce7af6276c671e43348443d377f5635d";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Admin Directory SDK";
           license = "unknown";
         }) {};
      "gogol-admin-emailmigration" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-admin-emailmigration";
           version = "0.3.0";
           sha256 = "8a557ffd73be13583a76a478fae4b472c1a06b122ea3ee8f9295944db623fcb4";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Email Migration API v2 SDK";
           license = "unknown";
         }) {};
      "gogol-admin-reports" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-admin-reports";
           version = "0.3.0";
           sha256 = "72ecbe342560f513873a5c88e47b08a164e14e1f459697e71cd6efb31630ba3a";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Admin Reports SDK";
           license = "unknown";
         }) {};
      "gogol-adsense" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-adsense";
           version = "0.3.0";
           sha256 = "a3ecac82d34094764af2664249a1c5947c790a7584b804c88ba396c4f4bc3a36";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google AdSense Management SDK";
           license = "unknown";
         }) {};
      "gogol-adsense-host" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-adsense-host";
           version = "0.3.0";
           sha256 = "3cb3bc1c00b93df70065fc4ef3852d77b67788068aca96eda4910a45f2a76fe7";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google AdSense Host SDK";
           license = "unknown";
         }) {};
      "gogol-affiliates" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-affiliates";
           version = "0.3.0";
           sha256 = "6eefbc1a2739ff5d30bd3d9e5a70d2e70048c88d456ec9f6bbe86fa072e8f3c0";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Affiliate Network SDK";
           license = "unknown";
         }) {};
      "gogol-analytics" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-analytics";
           version = "0.3.0";
           sha256 = "dab773333e4a936eae02ed2789a75c3e57067fd9852f1df4c008e1cec27fcf57";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Analytics SDK";
           license = "unknown";
         }) {};
      "gogol-android-enterprise" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-android-enterprise";
           version = "0.3.0";
           sha256 = "95adec006e8057bf7a40b40d1ae461b9cc4f536271908732fdb14e2f088ed452";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Play EMM SDK";
           license = "unknown";
         }) {};
      "gogol-android-publisher" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-android-publisher";
           version = "0.3.0";
           sha256 = "3b6fa3d1e7f2b32d2c241c328217ec21c022f32a4261178ec2162af37f22c4b1";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Play Developer SDK";
           license = "unknown";
         }) {};
      "gogol-appengine" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-appengine";
           version = "0.3.0";
           sha256 = "198a22d5ae3fb7662f4076d3c17d5f9a701e4bbafaae26bbc84412e43024358c";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google App Engine Admin SDK";
           license = "unknown";
         }) {};
      "gogol-apps-activity" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-apps-activity";
           version = "0.3.0";
           sha256 = "a221bab93f0086c86619cb190b28ddf38fc4750fcb3acf3a9f526a40ab2f2832";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Apps Activity SDK";
           license = "unknown";
         }) {};
      "gogol-apps-calendar" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-apps-calendar";
           version = "0.3.0";
           sha256 = "7ddce2ee87d66c9ed038ab556f6067dfd48c968ec62b100b1a17ce0611a5513e";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Calendar SDK";
           license = "unknown";
         }) {};
      "gogol-apps-licensing" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-apps-licensing";
           version = "0.3.0";
           sha256 = "17ca7845a9d16a0c468cf491269106cb3e008d22a060831480583072a99dfe50";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Enterprise License Manager SDK";
           license = "unknown";
         }) {};
      "gogol-apps-reseller" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-apps-reseller";
           version = "0.3.0";
           sha256 = "c4de2625b6124caffe1fea0af87e8949072d6aea1156f66eaabe766f72a73585";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Enterprise Apps Reseller SDK";
           license = "unknown";
         }) {};
      "gogol-apps-tasks" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-apps-tasks";
           version = "0.3.0";
           sha256 = "9b9cce5138ef44469630090d25cc609e25cbfc1bf45f4f2f8e59561fb1f89655";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Tasks SDK";
           license = "unknown";
         }) {};
      "gogol-appstate" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-appstate";
           version = "0.3.0";
           sha256 = "7cca025e8c02e5dc272d731f8cc89512548159f8ad99d74c6ceb151cdb2b2e89";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google App State SDK";
           license = "unknown";
         }) {};
      "gogol-autoscaler" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-autoscaler";
           version = "0.3.0";
           sha256 = "e0c22ad86d45cc0d1e039e9f3f234cb2752b7f754c9beab047c9dacc0972da46";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Compute Engine Autoscaler SDK";
           license = "unknown";
         }) {};
      "gogol-bigquery" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-bigquery";
           version = "0.3.0";
           sha256 = "3f6d7c35e18ec32aea9b639353bd09126b0ee25e023cba603ea85dd6ef4944ff";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google BigQuery SDK";
           license = "unknown";
         }) {};
      "gogol-billing" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-billing";
           version = "0.3.0";
           sha256 = "6e61e758d8b880d83ca58d0baf0bf4a33d2166241ebcf04906390bc990704c8b";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Billing SDK";
           license = "unknown";
         }) {};
      "gogol-blogger" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-blogger";
           version = "0.3.0";
           sha256 = "8732fd8df6527da1e24002f2f4c4b057f1104fcef3c896d6da55f724aa84e122";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Blogger SDK";
           license = "unknown";
         }) {};
      "gogol-books" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-books";
           version = "0.3.0";
           sha256 = "1a16af340135b961b33d6a12152efe078e95da673c5c41d5366a4c670654e221";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Books SDK";
           license = "unknown";
         }) {};
      "gogol-civicinfo" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-civicinfo";
           version = "0.3.0";
           sha256 = "4d64778d78d90c6125002e5ae22c46b9fb2a1e725bbd989eaf96c4c99f14fc69";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Civic Information SDK";
           license = "unknown";
         }) {};
      "gogol-classroom" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-classroom";
           version = "0.3.0";
           sha256 = "b6090b9d4cb55ea13e1a98c283ad73205097d1148714dad1778cf6dcbe4632ae";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Classroom SDK";
           license = "unknown";
         }) {};
      "gogol-cloudmonitoring" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-cloudmonitoring";
           version = "0.3.0";
           sha256 = "9d3e7440779bbfae0b2291ddc2ba1fe82133958de03872532276d06d1c62ae06";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Monitoring SDK";
           license = "unknown";
         }) {};
      "gogol-cloudtrace" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-cloudtrace";
           version = "0.3.0";
           sha256 = "66b14d70e6f6da1e0ee172e2d39cd7ea42be14bb38f1ad5a7a90b7a249855ce4";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Trace SDK";
           license = "unknown";
         }) {};
      "gogol-compute" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-compute";
           version = "0.3.0";
           sha256 = "fa2476f62d7d8c241db9aaf3a3a0b697e97453097982d804711f022b5f13206d";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Compute Engine SDK";
           license = "unknown";
         }) {};
      "gogol-container" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-container";
           version = "0.3.0";
           sha256 = "11d135532c91ad9bb698e63f95de76178c2de7abb9344a6d1ed6b58ac81cb4ef";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Container Engine SDK";
           license = "unknown";
         }) {};
      "gogol-core" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bifunctors, bytestring
         , case-insensitive, conduit, dlist, exceptions, hashable
         , http-api-data, http-client, http-media, http-types, lens
         , resourcet, scientific, servant, stdenv, text, time
         , unordered-containers
         }:
         mkDerivation {
           pname = "gogol-core";
           version = "0.3.0";
           sha256 = "ffa84f391ae20af77fae17c742787b0c439ee36108a40bfc89bf8ce5c0840c90";
           libraryHaskellDepends = [
             aeson attoparsec base bifunctors bytestring case-insensitive
             conduit dlist exceptions hashable http-api-data http-client
             http-media http-types lens resourcet scientific servant text time
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Core data types and functionality for Gogol libraries";
           license = "unknown";
         }) {};
      "gogol-customsearch" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-customsearch";
           version = "0.3.0";
           sha256 = "f21fc206af0456ac283198577c7bbad90fb19a1d38db0f0d5f32c4f4893cb91c";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google CustomSearch SDK";
           license = "unknown";
         }) {};
      "gogol-dataflow" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-dataflow";
           version = "0.3.0";
           sha256 = "9de12084a7b529d24d386936d7d851d3cfac7be22d0bfe60befbca1bdd867fb3";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Dataflow SDK";
           license = "unknown";
         }) {};
      "gogol-dataproc" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-dataproc";
           version = "0.3.0";
           sha256 = "c07f74b76ce02e6205e4b6b9a7dd70854d53a38b0ff4cc561ce253dd11093aac";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Dataproc SDK";
           license = "unknown";
         }) {};
      "gogol-datastore" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-datastore";
           version = "0.3.0";
           sha256 = "45681c1c06cf5eb4dfb8bde7e4a2bbb23f12b6426863c42da80eba1aa9debd71";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Datastore SDK";
           license = "unknown";
         }) {};
      "gogol-debugger" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-debugger";
           version = "0.3.0";
           sha256 = "fbe833cb6ff9e5dc123edc29c58099178366a647c932ef8d2fac0bf3e8a11217";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Stackdriver Debugger SDK";
           license = "unknown";
         }) {};
      "gogol-deploymentmanager" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-deploymentmanager";
           version = "0.3.0";
           sha256 = "3a2d4a05cab1a044384df7644709ec0e8c46a12158fba2b94b3e3f71fb118c06";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Deployment Manager SDK";
           license = "unknown";
         }) {};
      "gogol-dfareporting" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-dfareporting";
           version = "0.3.0";
           sha256 = "27ea407b608a3a21b04d511db036e172b7715f988fbafec6914b5e1279f70a36";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google DCM/DFA Reporting And Trafficking SDK";
           license = "unknown";
         }) {};
      "gogol-discovery" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-discovery";
           version = "0.3.0";
           sha256 = "c8b57e687a2278182cb4a851f82877c1f4318cf55bf3c64069ac248cfb1f52c8";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google APIs Discovery Service SDK";
           license = "unknown";
         }) {};
      "gogol-dns" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-dns";
           version = "0.3.0";
           sha256 = "b4d4fc7228a5eb575ff440245269cf20e6eddd81d131151d5b1ef0d39d194ea1";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud DNS SDK";
           license = "unknown";
         }) {};
      "gogol-doubleclick-bids" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-doubleclick-bids";
           version = "0.3.0";
           sha256 = "0c985e054319520307981d3459d3a443dc01d9880fb4fd996a180ad76deb143f";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google DoubleClick Bid Manager SDK";
           license = "unknown";
         }) {};
      "gogol-doubleclick-search" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-doubleclick-search";
           version = "0.3.0";
           sha256 = "8d94967b535ef3f8a437a4d16e3987403ce761da12dff36b374d32bc1ed89af3";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google DoubleClick Search SDK";
           license = "unknown";
         }) {};
      "gogol-drive" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-drive";
           version = "0.3.0";
           sha256 = "9fae145cf1bf4be57b9f53aba11b26f82b1ae36b4d3e2bf61d2af009f91a65d0";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Drive SDK";
           license = "unknown";
         }) {};
      "gogol-firebase-rules" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-firebase-rules";
           version = "0.3.0";
           sha256 = "185f71924141bdcf286a1207e8b0563374879e11c17fca97a7e01c3dee0b3857";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Firebase Rules SDK";
           license = "unknown";
         }) {};
      "gogol-fitness" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-fitness";
           version = "0.3.0";
           sha256 = "bb866b003882fc932082e60898f4d6261f4ffd26833f6e1682972df2030b94ab";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Fitness SDK";
           license = "unknown";
         }) {};
      "gogol-fonts" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-fonts";
           version = "0.3.0";
           sha256 = "bb96e0afcc5cf0ae7285f49e3bf8b9d30274f1f315d0632e96f3b56c999d4c5c";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Fonts Developer SDK";
           license = "unknown";
         }) {};
      "gogol-freebasesearch" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-freebasesearch";
           version = "0.3.0";
           sha256 = "6c0b7d61a05f6ece6e9e7ca9e2653cfeb18127dc70cb37ea146d3769dc65a20a";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Freebase Search SDK";
           license = "unknown";
         }) {};
      "gogol-fusiontables" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-fusiontables";
           version = "0.3.0";
           sha256 = "47cf0cf75946f5ed25bf812e4cd677a946e79c231c70fe000afad1d5fe518a45";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Fusion Tables SDK";
           license = "unknown";
         }) {};
      "gogol-games" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-games";
           version = "0.3.0";
           sha256 = "bf99505fd85be3943ed32f71b0eec554baeb109dbc143321b1dbe0c9d10b1d64";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Play Game Services SDK";
           license = "unknown";
         }) {};
      "gogol-games-configuration" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-games-configuration";
           version = "0.3.0";
           sha256 = "cf93351629177224c8615b2a0f63ec5f3b4e02fd0f116368ffcc5bf87d9ce211";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Play Game Services Publishing SDK";
           license = "unknown";
         }) {};
      "gogol-games-management" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-games-management";
           version = "0.3.0";
           sha256 = "97acc96a19a038bcd3b232645480fbd36eea741b5a1ff706b6ca6a0b338757a4";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Play Game Services Management SDK";
           license = "unknown";
         }) {};
      "gogol-genomics" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-genomics";
           version = "0.3.0";
           sha256 = "6ef65fc936a005edfbd8ddb0544b3452b9d1ebbcbe696c7c26cc25b0a9243135";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Genomics SDK";
           license = "unknown";
         }) {};
      "gogol-gmail" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-gmail";
           version = "0.3.0";
           sha256 = "03bd9cc7bd8147901e870dbd5b8e15df85b31392bcec2f8156e0fac656293f41";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Gmail SDK";
           license = "unknown";
         }) {};
      "gogol-groups-migration" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-groups-migration";
           version = "0.3.0";
           sha256 = "b3b65424c086c42ee8e77fc90f0c18699fc662989aa36cd16e4b987e6633c730";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Groups Migration SDK";
           license = "unknown";
         }) {};
      "gogol-groups-settings" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-groups-settings";
           version = "0.3.0";
           sha256 = "681cc39a36e82ea2fdc7f084c75ad50f1ee25961f6bae3983e71b19eba31c4f7";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Groups Settings SDK";
           license = "unknown";
         }) {};
      "gogol-identity-toolkit" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-identity-toolkit";
           version = "0.3.0";
           sha256 = "9f4f3a7cf728eb5d1abb237192ebbcdfc37712d58e00698b53d4a2f54afbb3d5";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Identity Toolkit SDK";
           license = "unknown";
         }) {};
      "gogol-kgsearch" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-kgsearch";
           version = "0.3.0";
           sha256 = "566c71568fdfdd8f83e263e41511eb36ca315da777b9e62a82e80ae788e18d4e";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Knowledge Graph Search SDK";
           license = "unknown";
         }) {};
      "gogol-latencytest" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-latencytest";
           version = "0.3.0";
           sha256 = "d329a3c92505dfeb97225ae86cb5cf13ef35707782f6910071f96873d9a6b4bd";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Network Performance Monitoring SDK";
           license = "unknown";
         }) {};
      "gogol-logging" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-logging";
           version = "0.3.0";
           sha256 = "8f0058d85ebd8eaa459ea9c7ac4ff8abc5033e00c3285488ed3810903116b8c4";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Stackdriver Logging SDK";
           license = "unknown";
         }) {};
      "gogol-maps-coordinate" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-maps-coordinate";
           version = "0.3.0";
           sha256 = "76734dcea7ce6536bfd5538c3066e1da59e05ec460a1ab20ffa6299f9e704faa";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Maps Coordinate SDK";
           license = "unknown";
         }) {};
      "gogol-maps-engine" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-maps-engine";
           version = "0.3.0";
           sha256 = "7bb71e90c975d025ede3d6d185d10553f3f56ba498cf1b32f5a3a9dde7f94695";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Maps Engine SDK";
           license = "unknown";
         }) {};
      "gogol-mirror" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-mirror";
           version = "0.3.0";
           sha256 = "15bab1544b8beb41e5ecd3cd70c8ad337d601f2f49302fd8f287a126e7127032";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Mirror SDK";
           license = "unknown";
         }) {};
      "gogol-monitoring" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-monitoring";
           version = "0.3.0";
           sha256 = "ea9d36d17913aa98c9acc088a5211a03f38dc85abe79eab37ad66656c2a35a0e";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Stackdriver Monitoring SDK";
           license = "unknown";
         }) {};
      "gogol-oauth2" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-oauth2";
           version = "0.3.0";
           sha256 = "b674d7211638a76305d1ea0995f9ce17ef12657dca929744d48c00b8a7c1b239";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google OAuth2 SDK";
           license = "unknown";
         }) {};
      "gogol-pagespeed" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-pagespeed";
           version = "0.3.0";
           sha256 = "3d431c1dc6bcefc3b4a4a38e7296fb2091fcda424b69bb8af7ee9c4f3830d6cc";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google PageSpeed Insights SDK";
           license = "unknown";
         }) {};
      "gogol-partners" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-partners";
           version = "0.3.0";
           sha256 = "dbb506a04bc7a866364b7c9cce30503dd2f1ffbf2f4f0d0c8ababa4dafae1076";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Partners SDK";
           license = "unknown";
         }) {};
      "gogol-people" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-people";
           version = "0.3.0";
           sha256 = "dbe9523e3a7b5d0a2128b56a2f5a948c87c2e9bbf5ae4439d859ce940ace4e48";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google People SDK";
           license = "unknown";
         }) {};
      "gogol-play-moviespartner" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-play-moviespartner";
           version = "0.3.0";
           sha256 = "ec03c3465bd8435357f231ab227d7312b01aa6b156591288aaa492e483d02c6c";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Play Movies Partner SDK";
           license = "unknown";
         }) {};
      "gogol-plus" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-plus";
           version = "0.3.0";
           sha256 = "1b6d98a0b9d1498153fc599b37599ba30e3266f6a9b6e387a82882cde4e49a63";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google + SDK";
           license = "unknown";
         }) {};
      "gogol-plus-domains" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-plus-domains";
           version = "0.3.0";
           sha256 = "71ef298c3ec48cc9f92fcc0a7a254ddf345278ccd8686c76bee90bdab68c0a34";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google + Domains SDK";
           license = "unknown";
         }) {};
      "gogol-prediction" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-prediction";
           version = "0.3.0";
           sha256 = "cfc088e8e8837d65f4f3b3e3c2aea7491e1ae40aac30445924ff79ce29cfd28c";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Prediction SDK";
           license = "unknown";
         }) {};
      "gogol-proximitybeacon" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-proximitybeacon";
           version = "0.3.0";
           sha256 = "5b540108ac241848a83766ee5ce8100d805d368f7f6f11aea1f1d5b4499da4b8";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Proximity Beacon SDK";
           license = "unknown";
         }) {};
      "gogol-pubsub" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-pubsub";
           version = "0.3.0";
           sha256 = "335adc19c913d446c226c16c9107ee7e69d85cf7fe4e2146634eae812be658b0";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Pub/Sub SDK";
           license = "unknown";
         }) {};
      "gogol-qpxexpress" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-qpxexpress";
           version = "0.3.0";
           sha256 = "a00c993c43ca00d141590c203162b923443d9f9a3a1dfc100791d8b984136883";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google QPX Express SDK";
           license = "unknown";
         }) {};
      "gogol-replicapool" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-replicapool";
           version = "0.3.0";
           sha256 = "54861dacc5e2c299433d784bd0c8a8a6e8e6f8f7001ed9ece7e5d7e9d77153ce";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Compute Engine Instance Group Manager SDK";
           license = "unknown";
         }) {};
      "gogol-replicapool-updater" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-replicapool-updater";
           version = "0.3.0";
           sha256 = "8260d9fd9284f5aee5691118c60468177ded3a97cca561613aa015af1c2ff591";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Compute Engine Instance Group Updater SDK";
           license = "unknown";
         }) {};
      "gogol-resourcemanager" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-resourcemanager";
           version = "0.3.0";
           sha256 = "cb50c3f678c5a93d3db6a68dd2b9e06f2da8a0f802e7faa913ed97ce234d5258";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Resource Manager SDK";
           license = "unknown";
         }) {};
      "gogol-resourceviews" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-resourceviews";
           version = "0.3.0";
           sha256 = "77aa60901029f7d9be3e93acbf92a6e9d6fdc7f1bf8931571c7892fa7b938f84";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Compute Engine Instance Groups SDK";
           license = "unknown";
         }) {};
      "gogol-script" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-script";
           version = "0.3.0";
           sha256 = "01cd14a58d60422083fffe8a1ff7401808f0d930f87924fc27b136fb476a4bd0";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Apps Script Execution SDK";
           license = "unknown";
         }) {};
      "gogol-sheets" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-sheets";
           version = "0.3.0";
           sha256 = "2dd5593fb556dc62237dbec27eef6f195cc3661201df019b504d5161443a41ce";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Sheets SDK";
           license = "unknown";
         }) {};
      "gogol-shopping-content" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-shopping-content";
           version = "0.3.0";
           sha256 = "a5c4728c17ee78d63c39770d503115d13e7931fc711d7724d816be3c45470617";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Content API for Shopping SDK";
           license = "unknown";
         }) {};
      "gogol-siteverification" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-siteverification";
           version = "0.3.0";
           sha256 = "b0853d9a5cc5d1a6e18966b8b4e525487c8cac9e30a51b0297bd5c20b6a4245e";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Site Verification SDK";
           license = "unknown";
         }) {};
      "gogol-spectrum" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-spectrum";
           version = "0.3.0";
           sha256 = "ab387e91fbfb6aa4695f2785383df1991891d900d072432812f01adfa532a92c";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Spectrum Database SDK";
           license = "unknown";
         }) {};
      "gogol-sqladmin" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-sqladmin";
           version = "0.3.0";
           sha256 = "7964b65fa87ef3540dc96a9e09ea13f210e361cc7e1213b76ea196e3b1069c98";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud SQL Administration SDK";
           license = "unknown";
         }) {};
      "gogol-storage" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-storage";
           version = "0.3.0";
           sha256 = "3b95f472a42d714031d5b553707c403dedc31b86d8dc0760f5e071be567ec4a2";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Storage JSON SDK";
           license = "unknown";
         }) {};
      "gogol-storage-transfer" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-storage-transfer";
           version = "0.3.0";
           sha256 = "eb13d8452cff8e356ef40fec0d0333851a367c3a5a76c1db7a242849b5a18a47";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Storage Transfer SDK";
           license = "unknown";
         }) {};
      "gogol-tagmanager" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-tagmanager";
           version = "0.3.0";
           sha256 = "f7511a169acb4d04f86f6e7bad9a1a026a66d8642cd18bc6a6afcdedc7a45743";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Tag Manager SDK";
           license = "unknown";
         }) {};
      "gogol-taskqueue" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-taskqueue";
           version = "0.3.0";
           sha256 = "03cbed41c2add112dbddf606cd3d7ea1bc857bd93e6742c296c40a0cd0f63f47";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google TaskQueue SDK";
           license = "unknown";
         }) {};
      "gogol-translate" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-translate";
           version = "0.3.0";
           sha256 = "73b3fcc645c6bc55303dd4f5877c289815298eda93feee5c160cf2f063f5952f";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Translate SDK";
           license = "unknown";
         }) {};
      "gogol-urlshortener" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-urlshortener";
           version = "0.3.0";
           sha256 = "9bb9444e5b0a60494751ffba65b1bd887a71d8d1558e613b04dbffeeee98bcc2";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google URL Shortener SDK";
           license = "unknown";
         }) {};
      "gogol-useraccounts" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-useraccounts";
           version = "0.3.0";
           sha256 = "298efe783f4dcdab3c181ec1ca12ae3f6e9bf758b05fc010ad7b832e10c0f53b";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud User Accounts SDK";
           license = "unknown";
         }) {};
      "gogol-vision" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-vision";
           version = "0.3.0";
           sha256 = "c99525ab5beec654bbcdbf0d751869971aa915d9b28d4a04f870ecb1d9f94deb";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Cloud Vision SDK";
           license = "unknown";
         }) {};
      "gogol-webmaster-tools" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-webmaster-tools";
           version = "0.3.0";
           sha256 = "b747ffd277b136153717309d97b149c55beba77d0803698a389118b02c977766";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google Search Console SDK";
           license = "unknown";
         }) {};
      "gogol-youtube" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-youtube";
           version = "0.3.0";
           sha256 = "32e812a1d9fd447b23b6dfb3e6f93db64f62fef7ccf6c5001f769c2eb26c67eb";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google YouTube Data SDK";
           license = "unknown";
         }) {};
      "gogol-youtube-analytics" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-youtube-analytics";
           version = "0.3.0";
           sha256 = "70b5a5eac8da50986b23a1e2dcd44ebe0adb6ba394696db5e1579a1295440881";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google YouTube Analytics SDK";
           license = "unknown";
         }) {};
      "gogol-youtube-reporting" = callPackage
        ({ mkDerivation, base, gogol-core, stdenv }:
         mkDerivation {
           pname = "gogol-youtube-reporting";
           version = "0.3.0";
           sha256 = "8edc2c9f8bcc854e61a89f6dc92732dc92a197d109808f56df79c01733551d49";
           libraryHaskellDepends = [ base gogol-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/gogol";
           description = "Google YouTube Reporting SDK";
           license = "unknown";
         }) {};
      "google-cloud" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, http-types, mtl, random, scientific, stdenv, stm
         , text, time, unordered-containers
         }:
         mkDerivation {
           pname = "google-cloud";
           version = "0.0.4";
           sha256 = "09a77ce6846ea0c5f9d7e5578dcddcbaf4905437445edb45c2da35456324fb9a";
           revision = "1";
           editedCabalFile = "0512swl7ydlcjdbvcb2xm59q97yr3wxgh3sfdsz3zdm1y88qi18c";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-types mtl
             random scientific stm text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Client for the Google Cloud APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "google-oauth2-jwt" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, HsOpenSSL
         , RSA, stdenv, text, unix-time
         }:
         mkDerivation {
           pname = "google-oauth2-jwt";
           version = "0.2.2";
           sha256 = "38dc52d516d085c50c4c1771a0364417d6b79aef1caa7558af21feda35c09b2a";
           libraryHaskellDepends = [
             base base64-bytestring bytestring HsOpenSSL RSA text unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/google-oauth2-jwt";
           description = "Get a signed JWT for Google Service Accounts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "google-translate" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-api-data
         , http-client, servant, servant-client, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "google-translate";
           version = "0.4.1";
           sha256 = "b663f7fd7c72cac2b630b234074b5acf3d1dcdfccef1f87a03db32a1351ef176";
           libraryHaskellDepends = [
             aeson base bytestring http-api-data http-client servant
             servant-client text transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Google Translate API bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gpolyline" = callPackage
        ({ mkDerivation, base, split, stdenv }:
         mkDerivation {
           pname = "gpolyline";
           version = "0.1.0.1";
           sha256 = "28b3a644853ba6f0a7d6465d8d62646a10c995008a799ae67e728c8cf4a17a05";
           libraryHaskellDepends = [ base split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fegu/gpolyline";
           description = "Pure module for encoding/decoding Google Polyline";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graph-core" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, mtl, safe
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "graph-core";
           version = "0.3.0.0";
           sha256 = "378f0baa40ebbb78e8c389f79e363eb573cdf182f799684d2f3d6ac51b10e854";
           libraryHaskellDepends = [
             base containers deepseq hashable mtl safe unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/factisresearch/graph-core";
           description = "Fast, memory efficient and persistent graph implementation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "graph-wrapper" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "graph-wrapper";
           version = "0.2.5.1";
           sha256 = "8361853fca2d2251bd233e18393053dd391d21ca6f210b2bc861b0e0f4c2e113";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/graph-wrapper";
           description = "A wrapper around the standard Data.Graph with a less awkward interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graphs" = callPackage
        ({ mkDerivation, array, base, containers, stdenv, transformers
         , transformers-compat, void
         }:
         mkDerivation {
           pname = "graphs";
           version = "0.7.1";
           sha256 = "acd37a7ba5dd02f24131ac8971a5f8639cc0e9db687e7d6790a84af4af0ce209";
           libraryHaskellDepends = [
             array base containers transformers transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/graphs";
           description = "A simple monadic graph library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "graphviz" = callPackage
        ({ mkDerivation, base, bytestring, colour, containers, directory
         , dlist, fgl, filepath, polyparse, process, stdenv, temporary, text
         , transformers, wl-pprint-text
         }:
         mkDerivation {
           pname = "graphviz";
           version = "2999.19.0.0";
           sha256 = "af0a7ff197c9de3f23e6653541446f755c824083ced04b629df6d19523fe04ea";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring colour containers directory dlist fgl filepath
             polyparse process temporary text transformers wl-pprint-text
           ];
           executableHaskellDepends = [
             base bytestring directory filepath text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/graphviz/";
           description = "Bindings to Graphviz for graph visualisation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gravatar" = callPackage
        ({ mkDerivation, base, bytestring, data-default, HTTP, pureMD5
         , stdenv, text
         }:
         mkDerivation {
           pname = "gravatar";
           version = "0.8.0";
           sha256 = "6f6000acaea47f3fc8711f5a2a62d5fbe96f5bb698fcb997f9f07ffe3102f4d7";
           libraryHaskellDepends = [
             base bytestring data-default HTTP pureMD5 text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generate Gravatar image URLs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "graylog" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, bytestring, network
         , random, scientific, stdenv, text, time, vector
         }:
         mkDerivation {
           pname = "graylog";
           version = "0.1.0.1";
           sha256 = "2d8173e61da8d02c39cb95e6ccea8a167c792f682a496aed5fe4edfd0e6a0082";
           libraryHaskellDepends = [
             aeson aeson-casing base bytestring network random scientific text
             time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/haskell-graylog";
           description = "Support for graylog output";
           license = "unknown";
         }) {};
      "groom" = callPackage
        ({ mkDerivation, base, haskell-src-exts, stdenv }:
         mkDerivation {
           pname = "groom";
           version = "0.1.2.1";
           sha256 = "a6b4a4d3af1b26f63039f04bd4176493f8dd4f6a9ab281f0e33c0151c20de59d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base haskell-src-exts ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty printing for well-behaved Show instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, containers, monad-control, mtl
         , resourcet, scientific, stdenv, text, time, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "groundhog";
           version = "0.8";
           sha256 = "16955dfe46737481400b1accd9e2b4ef3e7318e296c8b4838ba0651f7d51af1c";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-builder bytestring
             containers monad-control mtl resourcet scientific text time
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lykahb/groundhog";
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-inspector" = callPackage
        ({ mkDerivation, aeson-pretty, base, bytestring, cmdargs
         , containers, groundhog, groundhog-sqlite, groundhog-th, mtl
         , regex-compat, stdenv, syb, template-haskell, text, time
         , transformers
         }:
         mkDerivation {
           pname = "groundhog-inspector";
           version = "0.8.0.2";
           sha256 = "bfbad62b62174e24f8fe29ce7d3d232392a23221107a32397d91c22531e87af1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson-pretty base bytestring containers groundhog groundhog-th
             regex-compat syb template-haskell text time transformers
           ];
           executableHaskellDepends = [
             base bytestring cmdargs containers groundhog groundhog-sqlite
             groundhog-th mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lykahb/groundhog";
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-mysql" = callPackage
        ({ mkDerivation, base, bytestring, containers, groundhog
         , monad-control, monad-logger, mysql, mysql-simple, resource-pool
         , resourcet, stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "groundhog-mysql";
           version = "0.8";
           sha256 = "51ad8be513110081fff4333ae532b35e7ac5b35c4673e4c982bc0eca6c485666";
           libraryHaskellDepends = [
             base bytestring containers groundhog monad-control monad-logger
             mysql mysql-simple resource-pool resourcet text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "MySQL backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-postgresql" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
         , containers, groundhog, monad-control, postgresql-libpq
         , postgresql-simple, resource-pool, resourcet, stdenv, text, time
         , transformers, vector
         }:
         mkDerivation {
           pname = "groundhog-postgresql";
           version = "0.8.0.1";
           sha256 = "ad8ef33fb170dc63f97ef2add891d2e20f279f12495a2f56c7086d49c20b95e8";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder bytestring containers groundhog
             monad-control postgresql-libpq postgresql-simple resource-pool
             resourcet text time transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "PostgreSQL backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-sqlite" = callPackage
        ({ mkDerivation, base, bytestring, containers, direct-sqlite
         , groundhog, monad-control, resource-pool, resourcet, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "groundhog-sqlite";
           version = "0.8";
           sha256 = "7dcbbd4bcf9b38408bc29608a514a2b535c85490e4649090c342603c91283092";
           libraryHaskellDepends = [
             base bytestring containers direct-sqlite groundhog monad-control
             resource-pool resourcet text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sqlite3 backend for the groundhog library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groundhog-th" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, groundhog
         , stdenv, template-haskell, text, time, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "groundhog-th";
           version = "0.8.0.2";
           sha256 = "26958d982f2dd17aeacdf22386fd87bf81a5acdc93b28e80b93beaba6c6d3d8f";
           libraryHaskellDepends = [
             aeson base bytestring containers groundhog template-haskell text
             time unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "Type-safe datatype-database mapping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "group-by-date" = callPackage
        ({ mkDerivation, base, explicit-exception, filemanip, hsshellscript
         , pathtype, stdenv, time, transformers, unix-compat, utility-ht
         }:
         mkDerivation {
           pname = "group-by-date";
           version = "0.1.0.2";
           sha256 = "b0b863add81e83c817dba93a8ab22c0f4b7e57643fafc630ac73190d9ee2a527";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base explicit-exception filemanip hsshellscript pathtype time
             transformers unix-compat utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/group-by-date/";
           description = "Shell command for grouping files by dates into folders";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "grouped-list" = callPackage
        ({ mkDerivation, base, containers, deepseq, pointed, stdenv }:
         mkDerivation {
           pname = "grouped-list";
           version = "0.2.1.4";
           sha256 = "309d8b5409ef785bd8720658e4fecc233c65f56002741f1e9b5d0f7f584d369c";
           libraryHaskellDepends = [ base containers deepseq pointed ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/grouped-list/blob/master/README.md";
           description = "Grouped lists. Equal consecutive elements are grouped.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groupoids" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "groupoids";
           version = "4.0";
           sha256 = "6671953fa0970c13ac8014278fcd6227b4c07e1a69d5a23965e2df1418218a22";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/groupoids/";
           description = "This package has been absorbed into semigroupoids 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "groups" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "groups";
           version = "0.4.1.0";
           sha256 = "dd4588b71dfff42b9a30cb40304912742b95db964b20f51951aff0eee7f3f33d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell 98 groups";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "gtk2hs-buildtools" = callPackage
        ({ mkDerivation, alex, array, base, Cabal, containers, directory
         , filepath, happy, hashtables, pretty, process, random, stdenv
         }:
         mkDerivation {
           pname = "gtk2hs-buildtools";
           version = "0.13.3.1";
           sha256 = "220f2f4aa1e01b8585fddf35bfc9f3a9dd300f2308d3c2b800c621cdd2ce7154";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base Cabal containers directory filepath hashtables pretty
             process random
           ];
           libraryToolDepends = [ alex happy ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Tools to build the Gtk2Hs suite of User Interface libraries";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "gym-http-api" = callPackage
        ({ mkDerivation, aeson, base, exceptions, http-client, servant
         , servant-client, servant-lucid, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "gym-http-api";
           version = "0.1.0.0";
           sha256 = "1708df8beba2df0cd2d4dfd34f1a138a96930f9713bb22415d11c79ff8b5a845";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base servant servant-client servant-lucid text
             unordered-containers
           ];
           executableHaskellDepends = [
             base exceptions http-client servant-client
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stites/gym-http-api#readme";
           description = "REST client to the gym-http-api project";
           license = stdenv.lib.licenses.mit;
         }) {};
      "h2c" = callPackage
        ({ mkDerivation, base, bytestring, mtl, resourcet, stdenv }:
         mkDerivation {
           pname = "h2c";
           version = "1.0.0";
           sha256 = "4be2c9d54084175777624770640850aba33d7e4a31e2dc8096c122f737965499";
           libraryHaskellDepends = [ base bytestring mtl resourcet ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/fmapE/h2c";
           description = "Bindings to Linux I2C with support for repeated-start transactions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hOpenPGP" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
         , base64-bytestring, bifunctors, binary, binary-conduit, byteable
         , bytestring, bzlib, conduit, conduit-extra, containers
         , crypto-cipher-types, cryptonite, data-default-class, errors
         , hashable, incremental-parser, ixset-typed, lens, memory
         , monad-loops, nettle, network, network-uri, newtype
         , openpgp-asciiarmor, resourcet, securemem, semigroups, split
         , stdenv, text, time, time-locale-compat, transformers
         , unordered-containers, wl-pprint-extras, zlib
         }:
         mkDerivation {
           pname = "hOpenPGP";
           version = "2.5.5";
           sha256 = "1801efa965085572197253eb77bfaf2fc2a20c18d93c43c436d506237871ad54";
           libraryHaskellDepends = [
             aeson attoparsec base base16-bytestring base64-bytestring
             bifunctors binary binary-conduit byteable bytestring bzlib conduit
             conduit-extra containers crypto-cipher-types cryptonite
             data-default-class errors hashable incremental-parser ixset-typed
             lens memory monad-loops nettle network network-uri newtype
             openpgp-asciiarmor resourcet securemem semigroups split text time
             time-locale-compat transformers unordered-containers
             wl-pprint-extras zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hOpenPGP/";
           description = "native Haskell implementation of OpenPGP (RFC4880)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hackage-db" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, containers
         , directory, filepath, stdenv, tar, time, utf8-string
         }:
         mkDerivation {
           pname = "hackage-db";
           version = "2.0";
           sha256 = "f8390ab421f89bd8b03df9c3d34c86a82ea26d150dfb5cfb1bdb16f20452bf27";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal containers directory filepath tar time
             utf8-string
           ];
           executableHaskellDepends = [
             base bytestring Cabal containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hackage-db#readme";
           description = "Access Hackage's package database via Data.Map";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hackage-security" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, Cabal, containers, cryptohash-sha256, directory
         , ed25519, filepath, ghc-prim, mtl, network, network-uri, parsec
         , pretty, stdenv, tar, template-haskell, time, transformers, zlib
         }:
         mkDerivation {
           pname = "hackage-security";
           version = "0.5.2.2";
           sha256 = "507a837851264a774c8f4d400f798c3dac5be11dc428fe72d33ef594ca533c41";
           revision = "5";
           editedCabalFile = "0f1ml7dvwk4xrz3gsf133n67cbxzf0sz5frxfsx9i79x1yrg9zdj";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring Cabal
             containers cryptohash-sha256 directory ed25519 filepath ghc-prim
             mtl network network-uri parsec pretty tar template-haskell time
             transformers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/well-typed/hackage-security";
           description = "Hackage security library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hackernews" = callPackage
        ({ mkDerivation, aeson, base, http-client, http-client-tls
         , http-types, QuickCheck, quickcheck-instances, servant
         , servant-client, stdenv, string-conversions, text
         }:
         mkDerivation {
           pname = "hackernews";
           version = "1.3.0.0";
           sha256 = "65944d0feb940d967c6b9823d28550f797cb6bc85f0b5bb06fe588cbe97090a0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base http-client http-types QuickCheck quickcheck-instances
             servant servant-client string-conversions text
           ];
           executableHaskellDepends = [ base http-client http-client-tls ];
           doHaddock = false;
           doCheck = false;
           description = "API for Hacker News";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haddock-library" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, stdenv, transformers }:
         mkDerivation {
           pname = "haddock-library";
           version = "1.4.3";
           sha256 = "f764763f8004715431a184a981493781b8380e13fd89ca0075ac426edc5d445b";
           libraryHaskellDepends = [ base bytestring deepseq transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haddock/";
           description = "Library exposing some functionality of Haddock";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hailgun" = callPackage
        ({ mkDerivation, aeson, base, bytestring, email-validate
         , exceptions, filepath, http-client, http-client-tls, http-types
         , stdenv, tagsoup, text, time, transformers
         }:
         mkDerivation {
           pname = "hailgun";
           version = "0.4.1.6";
           sha256 = "066c4a4e6362420d7cd60315c3be561ea8ac06058682dda79d5180b68d317f42";
           libraryHaskellDepends = [
             aeson base bytestring email-validate exceptions filepath
             http-client http-client-tls http-types tagsoup text time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/robertmassaioli/hailgun";
           description = "Mailgun REST api interface for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hailgun-simple" = callPackage
        ({ mkDerivation, base, email-validate, hailgun, mtl, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "hailgun-simple";
           version = "0.1.0.0";
           sha256 = "30526e6b7ec6083b090e880ef6fe942cc8425d3b2700bac565e4fc6629ec2954";
           libraryHaskellDepends = [
             base email-validate hailgun mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/hailgun-simple";
           description = "Easy-to-use wrapper for the hailgun package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hakyll" = callPackage
        ({ mkDerivation, base, binary, blaze-html, blaze-markup, bytestring
         , containers, cryptohash, data-default, deepseq, directory
         , filepath, fsnotify, http-conduit, http-types, lrucache, mtl
         , network, network-uri, optparse-applicative, pandoc
         , pandoc-citeproc, parsec, process, random, regex-base, regex-tdfa
         , resourcet, scientific, stdenv, system-filepath, tagsoup, text
         , time, time-locale-compat, unordered-containers, vector, wai
         , wai-app-static, warp, yaml
         }:
         mkDerivation {
           pname = "hakyll";
           version = "4.10.0.0";
           sha256 = "82b7b84c5a45bcac95ba9652205a24c03418c7761d8ac0597816c646237ae57f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary blaze-html blaze-markup bytestring containers
             cryptohash data-default deepseq directory filepath fsnotify
             http-conduit http-types lrucache mtl network network-uri
             optparse-applicative pandoc pandoc-citeproc parsec process random
             regex-base regex-tdfa resourcet scientific system-filepath tagsoup
             text time time-locale-compat unordered-containers vector wai
             wai-app-static warp yaml
           ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/hakyll";
           description = "A static website compiler library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "half" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "half";
           version = "0.2.2.3";
           sha256 = "85c244c80d1c889a3d79073a6f5a99d9e769dbe3c574ca11d992b2b4f7599a5c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/half";
           description = "Half-precision floating-point";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hamilton" = callPackage
        ({ mkDerivation, ad, ansi-wl-pprint, base, comonad, containers
         , free, hmatrix, hmatrix-gsl, optparse-applicative, stdenv
         , typelits-witnesses, vector, vector-sized, vty
         }:
         mkDerivation {
           pname = "hamilton";
           version = "0.1.0.2";
           sha256 = "15acc8563f60448621cffc58acf880487cc997e682e8cbc79032d5886bdc1cba";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ad base comonad free hmatrix hmatrix-gsl typelits-witnesses
             vector-sized
           ];
           executableHaskellDepends = [
             ansi-wl-pprint base containers hmatrix optparse-applicative vector
             vector-sized vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/hamilton";
           description = "Physics on generalized coordinate systems using Hamiltonian Mechanics and AD";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hamlet" = callPackage
        ({ mkDerivation, base, shakespeare, stdenv }:
         mkDerivation {
           pname = "hamlet";
           version = "1.2.0";
           sha256 = "d1c94b259163cb37f5c02ef3418ebf4caf8d95c8ee00588d4493aa3aae1a8a66";
           libraryHaskellDepends = [ base shakespeare ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/shakespearean-templates";
           description = "Haml-like template files that are compile-time checked (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "handwriting" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , filepath, lens, lens-aeson, random, split, stdenv, text
         , transformers, wreq
         }:
         mkDerivation {
           pname = "handwriting";
           version = "0.1.0.3";
           sha256 = "7e1b406d19b2f39b34910462dce214c7ca91bb9d78bf9fafb9f906dd44d5beaa";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers lens lens-aeson split text
             transformers wreq
           ];
           executableHaskellDepends = [
             base bytestring directory filepath random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ismailmustafa/handwriting-haskell#readme";
           description = "API Client for the handwriting.io API.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hapistrano" = callPackage
        ({ mkDerivation, aeson, async, base, filepath, formatting, gitrev
         , mtl, optparse-applicative, path, path-io, process, stdenv, stm
         , time, transformers, yaml
         }:
         mkDerivation {
           pname = "hapistrano";
           version = "0.3.5.2";
           sha256 = "845fed8a507e3d1b646f7b93d15d29842add5a142f034572ac1cd191face4b61";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base filepath formatting gitrev mtl path process time transformers
           ];
           executableHaskellDepends = [
             aeson async base formatting gitrev optparse-applicative path
             path-io stm yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/hapistrano";
           description = "A deployment library for Haskell applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "happstack-hsp" = callPackage
        ({ mkDerivation, base, bytestring, happstack-server, harp, hsp
         , hsx2hs, mtl, stdenv, syb, text, utf8-string
         }:
         mkDerivation {
           pname = "happstack-hsp";
           version = "7.3.7.3";
           sha256 = "63185f6d991acf2bca3a060a40f4ba153e9cbbf8bd0d0db58c7d8cd74cd3f754";
           libraryHaskellDepends = [
             base bytestring happstack-server harp hsp hsx2hs mtl syb text
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Support for using HSP templates in Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-jmacro" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cereal
         , digest, happstack-server, jmacro, stdenv, text, utf8-string
         , wl-pprint-text
         }:
         mkDerivation {
           pname = "happstack-jmacro";
           version = "7.0.12";
           sha256 = "bab4b4197373cb674c6fcbfe48a7a5d34ec31967b6e3c771f0049d885b74aeae";
           libraryHaskellDepends = [
             base base64-bytestring bytestring cereal digest happstack-server
             jmacro text utf8-string wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Support for using JMacro with Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-server" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
         , containers, directory, exceptions, extensible-exceptions
         , filepath, hslogger, html, monad-control, mtl, network
         , network-uri, old-locale, parsec, process, sendfile, stdenv, syb
         , system-filepath, template-haskell, text, threads, time
         , time-compat, transformers, transformers-base, transformers-compat
         , unix, utf8-string, xhtml, zlib
         }:
         mkDerivation {
           pname = "happstack-server";
           version = "7.5.0.1";
           sha256 = "8075f6b4e8e1a88365989e64e2ace2dfd9b948b572af394b3eda632233108b15";
           libraryHaskellDepends = [
             base base64-bytestring blaze-html bytestring containers directory
             exceptions extensible-exceptions filepath hslogger html
             monad-control mtl network network-uri old-locale parsec process
             sendfile syb system-filepath template-haskell text threads time
             time-compat transformers transformers-base transformers-compat unix
             utf8-string xhtml zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://happstack.com";
           description = "Web related tools and services";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "happstack-server-tls" = callPackage
        ({ mkDerivation, base, bytestring, extensible-exceptions
         , happstack-server, hslogger, HsOpenSSL, network, openssl, sendfile
         , stdenv, time, unix
         }:
         mkDerivation {
           pname = "happstack-server-tls";
           version = "7.1.6.5";
           sha256 = "782fb8d8bf6b2f63c337a1308710f1611d789f42cedf7571a346c3a73a1fe142";
           libraryHaskellDepends = [
             base bytestring extensible-exceptions happstack-server hslogger
             HsOpenSSL network sendfile time unix
           ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "extend happstack-server with https:// support (TLS/SSL)";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "happy" = callPackage
        ({ mkDerivation, array, base, Cabal, containers, directory
         , filepath, mtl, stdenv
         }:
         mkDerivation {
           pname = "happy";
           version = "1.19.9";
           sha256 = "3e81a3e813acca3aae52721c412cde18b7b7c71ecbacfaeaa5c2f4b35abf1d8d";
           revision = "1";
           editedCabalFile = "1lm706nv64cvfi3ccg7hc3217642sg0z9f9xz2ivbpzvzwwn8gj6";
           isLibrary = false;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal directory filepath ];
           executableHaskellDepends = [ array base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.haskell.org/happy/";
           description = "Happy is a parser generator for Haskell";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "harp" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "harp";
           version = "0.4.3";
           sha256 = "4749146989a144c430f9aa52b4502570828080adb5b52117f335efc69f8ea99d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/harp";
           description = "HaRP allows pattern-matching with regular expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hasbolt" = callPackage
        ({ mkDerivation, base, binary, bytestring, connection, containers
         , data-binary-ieee754, data-default, hex, network, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "hasbolt";
           version = "0.1.3.0";
           sha256 = "fd6fc49f57e8c03087103f733c130739a046398b5118b078aad2def31059665d";
           revision = "1";
           editedCabalFile = "0420drijspw73092rh3mhyrz4i7pph1fz3m0hcshs1zmngqibvv2";
           libraryHaskellDepends = [
             base binary bytestring connection containers data-binary-ieee754
             data-default hex network text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/zmactep/hasbolt#readme";
           description = "Haskell driver for Neo4j 3+ (BOLT protocol)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashable" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, ghc-prim, integer-gmp
         , stdenv, text
         }:
         mkDerivation {
           pname = "hashable";
           version = "1.2.6.1";
           sha256 = "94ca8789e13bc05c1582c46b709f3b0f5aeec2092be634b8606dbd9c5915bb7a";
           revision = "2";
           editedCabalFile = "0w4756sa04nk2bw3vnysb0y9d09zzg3c77aydkjfxz1hnl1dvnjn";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring deepseq ghc-prim integer-gmp text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tibbe/hashable";
           description = "A class for types that can be converted to a hash value";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashable-time" = callPackage
        ({ mkDerivation, base, hashable, stdenv, time }:
         mkDerivation {
           pname = "hashable-time";
           version = "0.2.0.1";
           sha256 = "b5752bb9b91d7cb98b01aa68c27d6a9338e1af39763c0157ef8322d0bc15234d";
           libraryHaskellDepends = [ base hashable time ];
           doHaddock = false;
           doCheck = false;
           description = "Hashable instances for Data.Time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashids" = callPackage
        ({ mkDerivation, base, bytestring, containers, split, stdenv }:
         mkDerivation {
           pname = "hashids";
           version = "1.0.2.4";
           sha256 = "27991fc8a6debe76a086af80f6b72a5d451e7f1466b79cb0df973b98a2f5f3cf";
           libraryHaskellDepends = [ base bytestring containers split ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hashids.org/";
           description = "Hashids generates short, unique, non-sequential ids from numbers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hashmap" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, stdenv }:
         mkDerivation {
           pname = "hashmap";
           version = "1.3.3";
           sha256 = "dc06b57cd1bcd656d4602df7705a3f11a54ae65f664e9be472d42a9bdcd64755";
           libraryHaskellDepends = [ base containers deepseq hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/foxik/hashmap";
           description = "Persistent containers Map and Set based on hashing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hashtables" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, primitive, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hashtables";
           version = "1.2.2.1";
           sha256 = "7aad530a9acca57ebe58774876c5a32e13f9c4ea37e80aa50c9be9ca88dcf6bc";
           revision = "1";
           editedCabalFile = "0wcjkd8imgx3j4ygj3r2cdfzknk1bbq0745axy7kbm2sckz1xqcz";
           libraryHaskellDepends = [
             base ghc-prim hashable primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gregorycollins/hashtables";
           description = "Mutable hash tables in the ST monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskeline" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , process, stdenv, stm, terminfo, transformers, unix
         }:
         mkDerivation {
           pname = "haskeline";
           version = "0.7.4.2";
           sha256 = "5543ec8cd932396360a5c707bf0958b39bb99a559fb4fd80ed366a953c6cb0eb";
           libraryHaskellDepends = [
             base bytestring containers directory filepath process stm terminfo
             transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/judah/haskeline";
           description = "A command-line interface for user input, written in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-gi" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, Cabal, containers
         , directory, filepath, glib, gobjectIntrospection, haskell-gi-base
         , mtl, pretty-show, process, regex-tdfa, safe, stdenv, text
         , transformers, xdg-basedir, xml-conduit
         }:
         mkDerivation {
           pname = "haskell-gi";
           version = "0.20.3";
           sha256 = "18d9289daa6d5fb7b52463f58f18339791e18644a131d4f3b28926dbc66f4910";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base bytestring Cabal containers directory filepath
             haskell-gi-base mtl pretty-show process regex-tdfa safe text
             transformers xdg-basedir xml-conduit
           ];
           libraryPkgconfigDepends = [ glib gobjectIntrospection ];
           executableHaskellDepends = [
             base containers directory filepath haskell-gi-base pretty-show text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Generate Haskell bindings for GObject Introspection capable libraries";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib; inherit (pkgs) gobjectIntrospection;};
      "haskell-gi-base" = callPackage
        ({ mkDerivation, base, bytestring, containers, glib, stdenv, text
         }:
         mkDerivation {
           pname = "haskell-gi-base";
           version = "0.20.8";
           sha256 = "91a82f170b92ed8374e1f7835c50434568702448f21ba32f0c87a15fb2fed3e1";
           libraryHaskellDepends = [ base bytestring containers text ];
           libraryPkgconfigDepends = [ glib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi-base";
           description = "Foundation for libraries generated by haskell-gi";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) glib;};
      "haskell-gi-overloading" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "haskell-gi-overloading";
           version = "1.0";
           sha256 = "3ed797f8dd8d3535640b1ca99851bbc5968817c25a80fc499af42715d371682a";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-gi/haskell-gi";
           description = "Overloading support for haskell-gi";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-import-graph" = callPackage
        ({ mkDerivation, base, classy-prelude, ghc, graphviz, process
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "haskell-import-graph";
           version = "1.0.3";
           sha256 = "6284909ac8edd0eb3e9ac3fcc606846c3531fbf49dfe5007a346320c89b503ba";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base classy-prelude ghc graphviz process text transformers
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/haskell-import-graph#readme";
           description = "create haskell import graph for graphviz";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-lexer" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "haskell-lexer";
           version = "1.0.1";
           sha256 = "d7d42ab3c4bc2f0232ede8b005fb9de57f862ee4c1c83aa61e1022346fc84366";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A fully compliant Haskell 98 lexer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-lsp" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, data-default
         , directory, filepath, hashable, hslogger, lens, mtl, parsec
         , sorted-list, stdenv, stm, text, time, transformers
         , unordered-containers, vector, yi-rope
         }:
         mkDerivation {
           pname = "haskell-lsp";
           version = "0.2.0.1";
           sha256 = "1ed5ce34cf5ddd86ad7babdde239fc81455a1ebc07b8445270be7c3767a86f77";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers data-default directory filepath
             hashable hslogger lens mtl parsec sorted-list stm text time
             unordered-containers yi-rope
           ];
           executableHaskellDepends = [
             aeson base bytestring containers data-default directory filepath
             hslogger lens mtl parsec stm text time transformers
             unordered-containers vector yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alanz/haskell-lsp";
           description = "Haskell library for the Microsoft Language Server Protocol";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-lsp-client" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , haskell-lsp, lens, process, stdenv, text, unix
         }:
         mkDerivation {
           pname = "haskell-lsp-client";
           version = "1.0.0.1";
           sha256 = "1c9b131e405bd1aec6e98e43f3926061fbe4e5ef4ac64cd08cae38082d40fd1b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers haskell-lsp lens process text
           ];
           executableHaskellDepends = [
             base directory haskell-lsp lens process text unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/noughtmare/haskell-lsp-client#readme";
           description = "A haskell package to build your own Language Server client";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "haskell-names" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , data-lens-light, filepath, haskell-src-exts, mtl, stdenv
         , transformers, traverse-with-class, uniplate
         }:
         mkDerivation {
           pname = "haskell-names";
           version = "0.9.0";
           sha256 = "bd202a3ea66f0ad3ce85fb79eac4ea4aae613b762b965d6708dd20171bf7f684";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring containers data-lens-light filepath
             haskell-src-exts mtl transformers traverse-with-class uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/haskell-suite/haskell-names";
           description = "Name resolution library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-neo4j-client" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, data-default
         , hashable, HTTP, http-client, http-client-tls, http-conduit
         , http-types, lifted-base, mtl, network-uri, resourcet, scientific
         , stdenv, text, transformers, transformers-base
         , transformers-compat, unordered-containers, vector
         }:
         mkDerivation {
           pname = "haskell-neo4j-client";
           version = "0.3.2.4";
           sha256 = "30eea529b6d8bd4b887cec7a6b210dd80223d97811bb26042b0c1ccfc8c381c2";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default hashable HTTP
             http-client http-client-tls http-conduit http-types lifted-base mtl
             network-uri resourcet scientific text transformers
             transformers-base transformers-compat unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/asilvestre/haskell-neo4j-rest-client";
           description = "A Haskell neo4j client";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-spacegoo" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , mtl, pretty, pretty-show, stdenv, text, vector, vector-space
         }:
         mkDerivation {
           pname = "haskell-spacegoo";
           version = "0.2.0.1";
           sha256 = "1eb3faa9a7f6a5870337eeb0bb3ad915f58987dfe4643fe95c91cbb2738ddd3c";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra mtl pretty pretty-show
             text vector vector-space
           ];
           doHaddock = false;
           doCheck = false;
           description = "Client API for Rocket Scissor Spacegoo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-src" = callPackage
        ({ mkDerivation, array, base, happy, pretty, stdenv, syb }:
         mkDerivation {
           pname = "haskell-src";
           version = "1.0.2.0";
           sha256 = "2a25ee5729230edddb94af8d9881efbc1d8798bd316097f4646749cb2fa491a6";
           libraryHaskellDepends = [ array base pretty syb ];
           libraryToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           description = "Support for manipulating Haskell source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-exts" = callPackage
        ({ mkDerivation, array, base, cpphs, ghc-prim, happy, pretty
         , stdenv
         }:
         mkDerivation {
           pname = "haskell-src-exts";
           version = "1.19.1";
           sha256 = "f0f5b2867673d654c7cce8a5fcc69222ea09af460c29a819c23cccf6311ba971";
           libraryHaskellDepends = [ array base cpphs ghc-prim pretty ];
           libraryToolDepends = [ happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-suite/haskell-src-exts";
           description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-exts-simple" = callPackage
        ({ mkDerivation, base, haskell-src-exts, stdenv }:
         mkDerivation {
           pname = "haskell-src-exts-simple";
           version = "1.19.0.0";
           sha256 = "41bc9166e7d08bb18b5309eb2af00ce122c70eeffd047da47e9e2d9db89a2406";
           libraryHaskellDepends = [ base haskell-src-exts ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/int-e/haskell-src-exts-simple";
           description = "A simplified view on the haskell-src-exts AST";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haskell-src-exts-util" = callPackage
        ({ mkDerivation, base, containers, data-default, haskell-src-exts
         , semigroups, stdenv, transformers, uniplate
         }:
         mkDerivation {
           pname = "haskell-src-exts-util";
           version = "0.2.2";
           sha256 = "8f325e89da8b2856d22ddf5199a5ba961fbafc441613c392596e8edf32e33093";
           libraryHaskellDepends = [
             base containers data-default haskell-src-exts semigroups
             transformers uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/haskell-src-exts-util";
           description = "Helper functions for working with haskell-src-exts trees";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-src-meta" = callPackage
        ({ mkDerivation, base, haskell-src-exts, pretty, stdenv, syb
         , template-haskell, th-orphans
         }:
         mkDerivation {
           pname = "haskell-src-meta";
           version = "0.8.0.2";
           sha256 = "4b7b143b94fcf147b96bb34822c2feeae29daadd3a22796ee36cadd5ca262c8b";
           libraryHaskellDepends = [
             base haskell-src-exts pretty syb template-haskell th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parse source to template-haskell abstract syntax";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-ast" = callPackage
        ({ mkDerivation, base, ghc, mtl, references, stdenv
         , template-haskell, uniplate
         }:
         mkDerivation {
           pname = "haskell-tools-ast";
           version = "1.0.0.4";
           sha256 = "a9bd5a15b850ed7d4d9c28506bb43b8ed22ec0af71eaeefc3584552cfe570d00";
           libraryHaskellDepends = [
             base ghc mtl references template-haskell uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nboldi/haskell-tools";
           description = "Haskell AST for efficient tooling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-backend-ghc" = callPackage
        ({ mkDerivation, base, bytestring, containers, ghc, ghc-boot-th
         , haskell-tools-ast, mtl, references, safe, split, stdenv
         , template-haskell, transformers, uniplate
         }:
         mkDerivation {
           pname = "haskell-tools-backend-ghc";
           version = "1.0.0.4";
           sha256 = "4f78531f87fec816c64e925bf0a40cfff91c5fe99331523143029365674f2031";
           libraryHaskellDepends = [
             base bytestring containers ghc ghc-boot-th haskell-tools-ast mtl
             references safe split template-haskell transformers uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nboldi/haskell-tools";
           description = "Creating the Haskell-Tools AST from GHC's representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-builtin-refactorings" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath, ghc
         , ghc-paths, haskell-tools-ast, haskell-tools-backend-ghc
         , haskell-tools-prettyprint, haskell-tools-refactor
         , haskell-tools-rewrite, mtl, references, split, stdenv
         , template-haskell, transformers, uniplate
         }:
         mkDerivation {
           pname = "haskell-tools-builtin-refactorings";
           version = "1.0.0.4";
           sha256 = "9141196c58f6797729ce5becb31789d74ba89784defdd5792a6ed8699144b4c3";
           libraryHaskellDepends = [
             base Cabal containers directory filepath ghc ghc-paths
             haskell-tools-ast haskell-tools-backend-ghc
             haskell-tools-prettyprint haskell-tools-refactor
             haskell-tools-rewrite mtl references split template-haskell
             transformers uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "Refactoring Tool for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-cli" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, ghc
         , ghc-paths, Glob, haskell-tools-builtin-refactorings
         , haskell-tools-daemon, haskell-tools-refactor, mtl
         , optparse-applicative, process, references, split, stdenv, strict
         }:
         mkDerivation {
           pname = "haskell-tools-cli";
           version = "1.0.0.4";
           sha256 = "d878d8095429711f8426d85a7683e352a93ab781c2fb6ff44a924a109b4f3888";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory filepath ghc ghc-paths
             haskell-tools-builtin-refactorings haskell-tools-daemon
             haskell-tools-refactor mtl references split strict
           ];
           executableHaskellDepends = [
             base directory filepath Glob haskell-tools-builtin-refactorings
             haskell-tools-daemon mtl optparse-applicative process split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "Command-line frontend for Haskell-tools Refact";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-daemon" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, containers
         , deepseq, Diff, directory, filepath, fswatch, ghc, ghc-paths
         , haskell-tools-builtin-refactorings, haskell-tools-prettyprint
         , haskell-tools-refactor, mtl, network, optparse-applicative
         , pretty, process, references, split, stdenv, strict
         , template-haskell
         }:
         mkDerivation {
           pname = "haskell-tools-daemon";
           version = "1.0.0.4";
           sha256 = "9b2c32d9659b7b0db4fce768c1b432af91c22fd5807e2ac4b102d783ac4d1dbf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal containers deepseq Diff directory
             filepath fswatch ghc ghc-paths haskell-tools-builtin-refactorings
             haskell-tools-prettyprint haskell-tools-refactor mtl network
             optparse-applicative pretty process references split strict
             template-haskell
           ];
           executableHaskellDepends = [
             base directory filepath haskell-tools-builtin-refactorings
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "Background process for Haskell-tools that editors can connect to";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-debug" = callPackage
        ({ mkDerivation, base, filepath, ghc, ghc-paths, haskell-tools-ast
         , haskell-tools-backend-ghc, haskell-tools-builtin-refactorings
         , haskell-tools-prettyprint, haskell-tools-refactor, references
         , split, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "haskell-tools-debug";
           version = "1.0.0.4";
           sha256 = "402ce6c2cf22297a7f8c31f19c90735001de8d0d897eb5c5d4f2b228dd420452";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base filepath ghc ghc-paths haskell-tools-ast
             haskell-tools-backend-ghc haskell-tools-builtin-refactorings
             haskell-tools-prettyprint haskell-tools-refactor references split
             template-haskell
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "Debugging Tools for Haskell-tools";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-demo" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , filepath, ghc, ghc-paths, haskell-tools-ast
         , haskell-tools-backend-ghc, haskell-tools-builtin-refactorings
         , haskell-tools-prettyprint, haskell-tools-refactor, http-types
         , mtl, references, stdenv, transformers, wai, wai-websockets, warp
         , websockets
         }:
         mkDerivation {
           pname = "haskell-tools-demo";
           version = "1.0.0.4";
           sha256 = "d87af00c4f15567ac3f2b1a29bac35337a0b9dda6e7a68e2904cc99739d1126f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers directory filepath ghc ghc-paths
             haskell-tools-ast haskell-tools-backend-ghc
             haskell-tools-builtin-refactorings haskell-tools-prettyprint
             haskell-tools-refactor http-types mtl references transformers wai
             wai-websockets warp websockets
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "A web-based demo for Haskell-tools Refactor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-prettyprint" = callPackage
        ({ mkDerivation, base, containers, ghc, haskell-tools-ast, mtl
         , references, split, stdenv, text, uniplate
         }:
         mkDerivation {
           pname = "haskell-tools-prettyprint";
           version = "1.0.0.4";
           sha256 = "8905a72281f09927cff4e3426f535ab3201d402231f0a1118d06d0de1c9a3500";
           libraryHaskellDepends = [
             base containers ghc haskell-tools-ast mtl references split text
             uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "Pretty printing of Haskell-Tools AST";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-refactor" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath, ghc
         , ghc-paths, haskell-tools-ast, haskell-tools-backend-ghc
         , haskell-tools-prettyprint, haskell-tools-rewrite, mtl, references
         , split, stdenv, template-haskell, transformers, uniplate
         }:
         mkDerivation {
           pname = "haskell-tools-refactor";
           version = "1.0.0.4";
           sha256 = "6989c55c56547a9bf876bedcde7440a054e431356f05413bdc05e4e19d5456a4";
           libraryHaskellDepends = [
             base Cabal containers directory filepath ghc ghc-paths
             haskell-tools-ast haskell-tools-backend-ghc
             haskell-tools-prettyprint haskell-tools-rewrite mtl references
             split template-haskell transformers uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "Refactoring Tool for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskell-tools-rewrite" = callPackage
        ({ mkDerivation, base, containers, ghc, haskell-tools-ast
         , haskell-tools-prettyprint, mtl, references, stdenv
         }:
         mkDerivation {
           pname = "haskell-tools-rewrite";
           version = "1.0.0.4";
           sha256 = "4fba9235f33e47728fb6a21673778fb452af9ea8f69343e1f9d252a904374fca";
           libraryHaskellDepends = [
             base containers ghc haskell-tools-ast haskell-tools-prettyprint mtl
             references
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-tools/haskell-tools";
           description = "Facilities for generating new parts of the Haskell-Tools AST";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haskintex" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , filepath, haskell-src-exts, HaTeX, hint, parsec, process, stdenv
         , text, transformers
         }:
         mkDerivation {
           pname = "haskintex";
           version = "0.8.0.0";
           sha256 = "9d4974112f33baf47124a56f87b96892a0a37c10587098f851c71256d15cddd8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers directory filepath
             haskell-src-exts HaTeX hint parsec process text transformers
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://daniel-diaz.github.io/projects/haskintex";
           description = "Haskell Evaluation inside of LaTeX code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hasmin" = callPackage
        ({ mkDerivation, attoparsec, base, bifunctors, bytestring
         , containers, gitrev, hopfli, matrix, mtl, numbers
         , optparse-applicative, parsers, stdenv, text
         }:
         mkDerivation {
           pname = "hasmin";
           version = "1.0.1";
           sha256 = "53ae47c97b56590dd7b80c2d72a7c30d14c4bfa810a2b21c86abfe8a137dbec0";
           revision = "3";
           editedCabalFile = "0v410xlx9riyhzxbqi2fx8qnw9i3k9cc6q24f0cz2ympl86f4019";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base bifunctors containers matrix mtl numbers parsers
             text
           ];
           executableHaskellDepends = [
             base bytestring gitrev hopfli optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/contivero/hasmin#readme";
           description = "CSS Minifier";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hasql" = callPackage
        ({ mkDerivation, attoparsec, base, base-prelude, bytestring
         , bytestring-strict-builder, contravariant, contravariant-extras
         , data-default-class, dlist, hashable, hashtables, loch-th, mtl
         , placeholders, postgresql-binary, postgresql-libpq, profunctors
         , semigroups, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "hasql";
           version = "1.1.1";
           sha256 = "262514375a08afac2445e725ebb2d749537ce676984c2ae74f737aea931d088b";
           libraryHaskellDepends = [
             attoparsec base base-prelude bytestring bytestring-strict-builder
             contravariant contravariant-extras data-default-class dlist
             hashable hashtables loch-th mtl placeholders postgresql-binary
             postgresql-libpq profunctors semigroups text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/hasql";
           description = "An efficient PostgreSQL driver and a flexible mapping API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hasql-migration" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, contravariant
         , cryptohash, data-default-class, directory, hasql
         , hasql-transaction, stdenv, text, time
         }:
         mkDerivation {
           pname = "hasql-migration";
           version = "0.1.3";
           sha256 = "2d49e3b7a5ed775150abf2164795b10d087d2e1c714b0a8320f0c0094df068b3";
           revision = "1";
           editedCabalFile = "156s0y5yfc3y0mgv95gcs6n3pv9nd0mgy06x0xriwsf68wjb07ap";
           libraryHaskellDepends = [
             base base64-bytestring bytestring contravariant cryptohash
             data-default-class directory hasql hasql-transaction text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tvh/hasql-migration";
           description = "PostgreSQL Schema Migrations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hasql-optparse-applicative" = callPackage
        ({ mkDerivation, base-prelude, hasql, hasql-pool
         , optparse-applicative, stdenv
         }:
         mkDerivation {
           pname = "hasql-optparse-applicative";
           version = "0.2.4";
           sha256 = "796b6522469fe0d7f437c82b1f833b87591572b26e16a8bcc0314bc73ee4ab3d";
           libraryHaskellDepends = [
             base-prelude hasql hasql-pool optparse-applicative
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sannsyn/hasql-optparse-applicative";
           description = "\"optparse-applicative\" parsers for \"hasql\"";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hasql-pool" = callPackage
        ({ mkDerivation, base-prelude, hasql, resource-pool, stdenv, time
         }:
         mkDerivation {
           pname = "hasql-pool";
           version = "0.4.3";
           sha256 = "124481643c6ba9a6150d1cc7ba9b9393b5a1a14cd70815d1a55a75163c80df21";
           libraryHaskellDepends = [ base-prelude hasql resource-pool time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/hasql-pool";
           description = "A pool of connections for Hasql";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hasql-transaction" = callPackage
        ({ mkDerivation, base, base-prelude, bytestring
         , bytestring-tree-builder, contravariant, contravariant-extras
         , hasql, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "hasql-transaction";
           version = "0.5.2";
           sha256 = "d557161241449e9743e2a13fa2b5bdcc68b5fe97e9c6db8d9997b08777319e70";
           libraryHaskellDepends = [
             base base-prelude bytestring bytestring-tree-builder contravariant
             contravariant-extras hasql mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/hasql-transaction";
           description = "A composable abstraction over the retryable transactions for Hasql";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hastache" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , directory, filepath, ieee754, mtl, process, stdenv, syb, text
         , transformers
         }:
         mkDerivation {
           pname = "hastache";
           version = "0.6.1";
           sha256 = "8c8f89669d6125201d7163385ea9055ab8027a69d1513259f8fbdd53c244b464";
           revision = "5";
           editedCabalFile = "0fwd1jd6sqkscmy2yq1w3dcl4va4w9n8mhs6ldrilh1cj6b54r3f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring containers directory filepath ieee754
             mtl syb text transformers
           ];
           executableHaskellDepends = [
             base blaze-builder bytestring containers directory filepath ieee754
             mtl process syb text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lymar/hastache";
           description = "Haskell implementation of Mustache templates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hasty-hamiltonian" = callPackage
        ({ mkDerivation, base, kan-extensions, lens, mcmc-types
         , mwc-probability, pipes, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "hasty-hamiltonian";
           version = "1.3.0";
           sha256 = "15f713bc72cda97a5efad2c75d38915f3b765966142710f069db72ff49eefb31";
           libraryHaskellDepends = [
             base kan-extensions lens mcmc-types mwc-probability pipes primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/hasty-hamiltonian";
           description = "Speedy traversal through parameter space";
           license = stdenv.lib.licenses.mit;
         }) {};
      "haxl" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , deepseq, exceptions, filepath, ghc-prim, hashable, HUnit, pretty
         , stdenv, text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "haxl";
           version = "0.5.1.0";
           sha256 = "49d485041646d3210385c312d34b0cc0c61d130e95ad935e06a695515f24a827";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base binary bytestring containers deepseq exceptions filepath
             ghc-prim hashable HUnit pretty text time transformers
             unordered-containers vector
           ];
           executableHaskellDepends = [ base hashable time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/facebook/Haxl";
           description = "A Haskell library for efficient, concurrent, and concise data access";
           license = "unknown";
         }) {};
      "haxl-amazonka" = callPackage
        ({ mkDerivation, amazonka, amazonka-core, async, base, conduit
         , hashable, haxl, stdenv, transformers
         }:
         mkDerivation {
           pname = "haxl-amazonka";
           version = "0.1.1";
           sha256 = "3cdf3ee6bd46ee461e4ae640d300533229c1d4f9ab0489f613a1ec387fa270c6";
           libraryHaskellDepends = [
             amazonka amazonka-core async base conduit hashable haxl
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tvh/haxl-amazonka#readme";
           description = "Haxl data source for accessing AWS services through amazonka";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "haxr" = callPackage
        ({ mkDerivation, array, base, base-compat, base64-bytestring
         , blaze-builder, bytestring, HaXml, HsOpenSSL, http-streams
         , http-types, io-streams, mtl, mtl-compat, network, network-uri
         , old-locale, old-time, stdenv, template-haskell, text, time
         , utf8-string
         }:
         mkDerivation {
           pname = "haxr";
           version = "3000.11.2";
           sha256 = "ebcda06d7ee79d5e635a7ec34f86400dd54ddd2434eda082aac6d3c8fd6e8b47";
           libraryHaskellDepends = [
             array base base-compat base64-bytestring blaze-builder bytestring
             HaXml HsOpenSSL http-streams http-types io-streams mtl mtl-compat
             network network-uri old-locale old-time template-haskell text time
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/HaXR";
           description = "XML-RPC client and server library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hbeanstalk" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , containers, network, stdenv
         }:
         mkDerivation {
           pname = "hbeanstalk";
           version = "0.2.4";
           sha256 = "feaf97fd18fedb3e5abf337e61c98a03108d917d9f87f885c8d02b6b838aac8f";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring containers network
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/scsibug/hbeanstalk/";
           description = "Client for the beanstalkd workqueue service";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hdaemonize" = callPackage
        ({ mkDerivation, base, bytestring, extensible-exceptions, filepath
         , hsyslog, mtl, stdenv, unix
         }:
         mkDerivation {
           pname = "hdaemonize";
           version = "0.5.5";
           sha256 = "d250cb0c066ec45aa9b8e9e0df094677f9e7788b01eaf51ab5bc9bbd52fe029f";
           libraryHaskellDepends = [
             base bytestring extensible-exceptions filepath hsyslog mtl unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/greydot/hdaemonize";
           description = "Library to handle the details of writing daemons for UNIX";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hdevtools" = callPackage
        ({ mkDerivation, base, Cabal, cmdargs, directory, filepath, ghc
         , ghc-boot, ghc-paths, network, process, stdenv, syb, time
         , transformers, unix
         }:
         mkDerivation {
           pname = "hdevtools";
           version = "0.1.6.1";
           sha256 = "e7e46acf4a6567159e431739f4c4103b91eae257394560e4b1aaa8e427393440";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal cmdargs directory filepath ghc ghc-boot ghc-paths
             network process syb time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hdevtools/hdevtools/";
           description = "Persistent GHC powered background server for FAST haskell development tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "heap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "heap";
           version = "1.0.3";
           sha256 = "9bd57e9ca3480d4322ccc5ec094767ee2a64425b2d4022065a8f36b44aabf402";
           revision = "1";
           editedCabalFile = "0j1f0xl3y2vqiyh3m9w5vssxyi62s6qic3zmpkm429vawyh4yad5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Heaps in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heaps" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, stdenv }:
         mkDerivation {
           pname = "heaps";
           version = "0.3.6";
           sha256 = "181c3cd7f2be698f903dc9649e5ec9311245ad2b9fed91b61f05d0dd7b7dddb2";
           revision = "1";
           editedCabalFile = "0k505k86zwfw1wmj5gr2qab7cq9q26f9nbf9jzfgw9qxwb17j284";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/heaps/";
           description = "Asymptotically optimal Brodal/Okasaki heaps";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heatshrink" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, cereal, stdenv }:
         mkDerivation {
           pname = "heatshrink";
           version = "0.1.0.0";
           sha256 = "59dd111b2deb207b606d6615a3e5ca7ea3ddead77ea7b525e10e0cf26e4df37f";
           libraryHaskellDepends = [ base bytestring cereal ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpinsight/heatshrink#readme";
           description = "Compression and decompression using heatshrink";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hebrew-time" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "hebrew-time";
           version = "0.1.1";
           sha256 = "c7997ee86df43d5d734df63c5e091543bb7fd75a93d530c1857067e27a8b7932";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/hebrew-time";
           description = "Hebrew dates and prayer times";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hedgehog" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, bytestring
         , concurrent-output, containers, directory, exceptions
         , lifted-async, mmorph, monad-control, mtl, pretty-show, primitive
         , random, resourcet, semigroups, stdenv, stm, template-haskell
         , text, th-lift, time, transformers, transformers-base, unix
         , wl-pprint-annotated
         }:
         mkDerivation {
           pname = "hedgehog";
           version = "0.5.2";
           sha256 = "902e278108a7cf4ac728e9e6a7c8f81e8fe81b34ed723fa6c47c614d21c186da";
           libraryHaskellDepends = [
             ansi-terminal async base bytestring concurrent-output containers
             directory exceptions lifted-async mmorph monad-control mtl
             pretty-show primitive random resourcet semigroups stm
             template-haskell text th-lift time transformers transformers-base
             unix wl-pprint-annotated
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://hedgehog.qa";
           description = "Hedgehog will eat all your bugs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hedgehog-quickcheck" = callPackage
        ({ mkDerivation, base, hedgehog, QuickCheck, stdenv, transformers
         }:
         mkDerivation {
           pname = "hedgehog-quickcheck";
           version = "0.1";
           sha256 = "610a5ccdfcdb4d657f5b25da622ad62562d1854ddb2e7381328e0b63a66f8412";
           libraryHaskellDepends = [ base hedgehog QuickCheck transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://hedgehog.qa";
           description = "Use QuickCheck generators in Hedgehog and vice versa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hedis" = callPackage
        ({ mkDerivation, async, base, bytestring, bytestring-lexing
         , deepseq, mtl, network, resource-pool, scanner, stdenv, stm, text
         , time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hedis";
           version = "0.9.12";
           sha256 = "4a15475fcd7d9173c8808247d30607f6ddb12260246a6758709da4e142032d7d";
           libraryHaskellDepends = [
             async base bytestring bytestring-lexing deepseq mtl network
             resource-pool scanner stm text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/informatikr/hedis";
           description = "Client library for the Redis datastore: supports full command set, pipelining";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "here" = callPackage
        ({ mkDerivation, base, haskell-src-meta, mtl, parsec, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "here";
           version = "1.2.13";
           sha256 = "406f9c27ba1e59cd662d078d81dcf2908840a77df15aed31d75dd017b7773c00";
           libraryHaskellDepends = [
             base haskell-src-meta mtl parsec template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmhedberg/here";
           description = "Here docs & interpolated strings via quasiquotation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "heredoc" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "heredoc";
           version = "0.2.0.0";
           sha256 = "c90d9fc61cb8cd812be510845493b6a6eddcc4b772581fd40a9433ed8f130f40";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/heredoc";
           description = "multi-line string / here document using QuasiQuotes";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "heterocephalus" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, containers, dlist
         , mtl, parsec, shakespeare, stdenv, template-haskell, text
         , transformers
         }:
         mkDerivation {
           pname = "heterocephalus";
           version = "1.0.5.1";
           sha256 = "97a4868ba4923f8d8d6048cd687476a734d891abe077e5c1d86ac5ca4dee7406";
           libraryHaskellDepends = [
             base blaze-html blaze-markup containers dlist mtl parsec
             shakespeare template-haskell text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arowM/heterocephalus#readme";
           description = "A type-safe template engine for working with popular front end development tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hex" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "hex";
           version = "0.1.2";
           sha256 = "12ee1243edd80570a486521565fb0c9b5e39374f21a12f050636e71d55ec61ec";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Convert strings into hexadecimal and back";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexml" = callPackage
        ({ mkDerivation, base, bytestring, extra, stdenv }:
         mkDerivation {
           pname = "hexml";
           version = "0.3.3";
           sha256 = "c4edcc6087df13ad9d9c30de9c1e8be527add3835cb94d59c32b1c5dce861cd2";
           libraryHaskellDepends = [ base bytestring extra ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/hexml#readme";
           description = "XML subset DOM parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexml-lens" = callPackage
        ({ mkDerivation, base, bytestring, contravariant, foundation, hexml
         , lens, profunctors, stdenv, text
         }:
         mkDerivation {
           pname = "hexml-lens";
           version = "0.2.1";
           sha256 = "baa34ef7206ff924b2559a83da8f8f07bf970e9993a171c956b8de7b70cc496b";
           libraryHaskellDepends = [
             base bytestring contravariant foundation hexml lens profunctors
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/hexml-lens#readme";
           description = "Lenses for the hexml package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hexpat" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, expat, List
         , stdenv, text, transformers, utf8-string
         }:
         mkDerivation {
           pname = "hexpat";
           version = "0.20.13";
           sha256 = "46e1a0e651c1603c1f064c6ca8d4c66cb27e7a66974bfb45ecaa8f9ccc753fd1";
           libraryHaskellDepends = [
             base bytestring containers deepseq List text transformers
             utf8-string
           ];
           librarySystemDepends = [ expat ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Hexpat/";
           description = "XML parser/formatter based on expat";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) expat;};
      "hexstring" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, binary, bytestring
         , stdenv, text
         }:
         mkDerivation {
           pname = "hexstring";
           version = "0.11.1";
           sha256 = "40d8dbfe22f572ffdb73f28c448b228a75008e83cc3bf78e939add0c9d800914";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base16-bytestring binary bytestring text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Fast and safe representation of a hex string";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hformat" = callPackage
        ({ mkDerivation, ansi-terminal, base, base-unicode-symbols, stdenv
         , text
         }:
         mkDerivation {
           pname = "hformat";
           version = "0.3.1.0";
           sha256 = "0d6a72b70434858e9a858499bbc218b31fb6264265ccd0a2f5bbcb803ceac6d1";
           libraryHaskellDepends = [
             ansi-terminal base base-unicode-symbols text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mvoidex/hformat";
           description = "Simple Haskell formatting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hfsevents" = callPackage
        ({ mkDerivation, base, bytestring, cereal, Cocoa, CoreServices, mtl
         , stdenv, text, unix
         }:
         mkDerivation {
           pname = "hfsevents";
           version = "0.1.6";
           sha256 = "74c3f3f3a5e55fff320c352a2d481069ff915860a0ab970864c6a0e6b65d3f05";
           libraryHaskellDepends = [ base bytestring cereal mtl text unix ];
           librarySystemDepends = [ Cocoa ];
           libraryToolDepends = [ CoreServices ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/luite/hfsevents";
           description = "File/folder watching for OS X";
           license = stdenv.lib.licenses.bsd3;
           platforms = [ "x86_64-darwin" ];
         }) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;};
      "hid" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, hidapi, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "hid";
           version = "0.2.2";
           sha256 = "0dd5c562b871626cfad11846d0d3b788823adc12fe009403a42e5f56108773d2";
           libraryHaskellDepends = [ base bytestring transformers ];
           libraryPkgconfigDepends = [ hidapi ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/hid";
           description = "Interface to hidapi library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) hidapi;};
      "hidapi" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, deepseq-generics
         , stdenv, systemd
         }:
         mkDerivation {
           pname = "hidapi";
           version = "0.1.4";
           sha256 = "fc40ea58320f9f1459a8da6463419bb15930d2e6d8273d5592cde509d4c96a75";
           libraryHaskellDepends = [
             base bytestring deepseq deepseq-generics
           ];
           librarySystemDepends = [ systemd ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vahokif/haskell-hidapi";
           description = "Haskell bindings to HIDAPI";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) systemd;};
      "hidden-char" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hidden-char";
           version = "0.1.0.2";
           sha256 = "ea909372a7cc06cda7ee8e9c1a6a5c16be19fef256ad4bd2c0b39e61d940f498";
           revision = "2";
           editedCabalFile = "1d0k297hxff31k0x5xbli6l7c151d2y9wq4w0x0prgagjc0l7z5n";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rcook/hidden-char#readme";
           description = "Provides cross-platform getHiddenChar function";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hierarchical-clustering" = callPackage
        ({ mkDerivation, array, base, containers, stdenv }:
         mkDerivation {
           pname = "hierarchical-clustering";
           version = "0.4.6";
           sha256 = "75f17f09b9c38d51a208edee10da2f4706ee784b5cdfe8efc31f7f86bbcdccb1";
           libraryHaskellDepends = [ array base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "higher-leveldb" = callPackage
        ({ mkDerivation, base, bytestring, cereal, data-default, exceptions
         , leveldb-haskell, lifted-base, monad-control, mtl, resourcet
         , stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "higher-leveldb";
           version = "0.4.0.1";
           sha256 = "a1987fb0b1527c282a808e9534d6697934a488526afe47d6c6920492bbd64345";
           libraryHaskellDepends = [
             base bytestring cereal data-default exceptions leveldb-haskell
             lifted-base monad-control mtl resourcet transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jeremyjh/higher-leveldb";
           description = "A rich monadic API for working with leveldb databases";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "highjson" = callPackage
        ({ mkDerivation, aeson, base, hvect, lens, stdenv, text }:
         mkDerivation {
           pname = "highjson";
           version = "0.4.0.0";
           sha256 = "c3eb05ed1abd9dd59eedcd22bd60b326059d0c3dcaee2a9f8238b0ac08a26962";
           libraryHaskellDepends = [ aeson base hvect lens text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/highjson";
           description = "Spec based JSON parsing/serialisation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "highjson-swagger" = callPackage
        ({ mkDerivation, base, highjson, hvect, insert-ordered-containers
         , lens, stdenv, swagger2, text
         }:
         mkDerivation {
           pname = "highjson-swagger";
           version = "0.4.0.0";
           sha256 = "2df02d2fd764fd5386094de59e181314ba152bd87dc2905d9869fefd4cb87e1f";
           libraryHaskellDepends = [
             base highjson hvect insert-ordered-containers lens swagger2 text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/highjson";
           description = "Derive swagger instances from highjson specs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "highjson-th" = callPackage
        ({ mkDerivation, aeson, base, highjson, highjson-swagger, stdenv
         , swagger2, template-haskell, text
         }:
         mkDerivation {
           pname = "highjson-th";
           version = "0.4.0.0";
           sha256 = "f30c4937a9db6eb1cea8b9efef76855af3b4745e3a620798681b8cf3c73202c5";
           libraryHaskellDepends = [
             aeson base highjson highjson-swagger swagger2 template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/highjson";
           description = "Template Haskell helpers for highjson specs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "highlighting-kate" = callPackage
        ({ mkDerivation, base, blaze-html, containers, filepath, mtl
         , parsec, regex-pcre-builtin, stdenv, utf8-string
         }:
         mkDerivation {
           pname = "highlighting-kate";
           version = "0.6.4";
           sha256 = "d8b83385f5da2ea7aa59f28eb860fd7eba0d35a4c36192a5044ee7ea1e001baf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html containers mtl parsec regex-pcre-builtin
             utf8-string
           ];
           executableHaskellDepends = [ base blaze-html containers filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/highlighting-kate";
           description = "Syntax highlighting";
           license = "GPL";
         }) {};
      "hindent" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, descriptive
         , directory, exceptions, ghc-prim, haskell-src-exts, monad-loops
         , mtl, path, path-io, stdenv, text, transformers, unix-compat
         , utf8-string, yaml
         }:
         mkDerivation {
           pname = "hindent";
           version = "5.2.4.1";
           sha256 = "ce5137546afa9ef3449454464d9f31ff1699157a02cd647557962592457b6554";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers exceptions haskell-src-exts monad-loops
             mtl text transformers utf8-string yaml
           ];
           executableHaskellDepends = [
             base bytestring deepseq descriptive directory exceptions ghc-prim
             haskell-src-exts path path-io text transformers unix-compat
             utf8-string yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/commercialhaskell/hindent";
           description = "Extensible Haskell pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hinotify" = callPackage
        ({ mkDerivation, async, base, containers, directory, stdenv, unix
         }:
         mkDerivation {
           pname = "hinotify";
           version = "0.3.9";
           sha256 = "f2480e4c08a516831c2221eebc6a9d3242e892932d9315c34cbe92a101c5df99";
           libraryHaskellDepends = [ async base containers directory unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kolmodin/hinotify.git";
           description = "Haskell binding to inotify";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hint" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, ghc
         , ghc-paths, mtl, random, stdenv, unix
         }:
         mkDerivation {
           pname = "hint";
           version = "0.7.0";
           sha256 = "299a735848bd6b2e0bdeeee4b47d9d52f865198fbb9403df3f6571801b3e8155";
           revision = "2";
           editedCabalFile = "1w96sfg6vlrw5q7cjdg1rz9jf2yl47fyas9qg3jfa9bcfmvs8cg2";
           libraryHaskellDepends = [
             base directory exceptions filepath ghc ghc-paths mtl random unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvdan/hint";
           description = "Runtime Haskell interpreter (GHC API wrapper)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hip" = callPackage
        ({ mkDerivation, base, bytestring, Chart, Chart-diagrams, colour
         , deepseq, directory, filepath, JuicyPixels, netpbm, primitive
         , process, repa, stdenv, temporary, vector
         }:
         mkDerivation {
           pname = "hip";
           version = "1.5.3.0";
           sha256 = "f9c7a34e9fbbb208adcf15d8ea76c44a8a13ec852261f0bb4913a3dfcac74f1e";
           libraryHaskellDepends = [
             base bytestring Chart Chart-diagrams colour deepseq directory
             filepath JuicyPixels netpbm primitive process repa temporary vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lehins/hip";
           description = "Haskell Image Processing (HIP) Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "histogram-fill" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "histogram-fill";
           version = "0.8.5.0";
           sha256 = "fbdd167d6f27c0d88f9aa8647ae95a313101c63a827275ac8d016d6028975133";
           libraryHaskellDepends = [ base deepseq ghc-prim primitive vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Shimuuar/histogram-fill/";
           description = "Library for histograms creation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hit" = callPackage
        ({ mkDerivation, attoparsec, base, byteable, bytestring, containers
         , cryptohash, hourglass, mtl, parsec, patience, random, stdenv
         , system-fileio, system-filepath, unix-compat, utf8-string, vector
         , zlib, zlib-bindings
         }:
         mkDerivation {
           pname = "hit";
           version = "0.6.3";
           sha256 = "db86b3712029a4e40d1306dd6cc9ca2c9f4c77fe65a2b74106f1cbd2de26e471";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base byteable bytestring containers cryptohash hourglass
             mtl parsec patience random system-fileio system-filepath
             unix-compat utf8-string vector zlib zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hit";
           description = "Git operations in haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hjsmin" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , language-javascript, optparse-applicative, stdenv, text
         }:
         mkDerivation {
           pname = "hjsmin";
           version = "0.2.0.2";
           sha256 = "bec153d2396962c63998eb12d0a2c7c9f7df6f774cb00e41b6cdb1f5a4905484";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring containers language-javascript text
           ];
           executableHaskellDepends = [
             base blaze-builder bytestring containers language-javascript
             optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/erikd/hjsmin";
           description = "Haskell implementation of a javascript minifier";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hjsonpointer" = callPackage
        ({ mkDerivation, aeson, base, hashable, QuickCheck, semigroups
         , stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hjsonpointer";
           version = "1.3.0";
           sha256 = "445b496c6408ed0a84b8f4df9cc96f5faa10b437d2ba26ef850171ce3335d831";
           revision = "1";
           editedCabalFile = "053x0iy7kzmf8b9mqr94lapv95d2rm2zm14lvvviyccqsd3k5gjd";
           libraryHaskellDepends = [
             aeson base hashable QuickCheck semigroups text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seagreen/hjsonpointer";
           description = "JSON Pointer library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hjsonschema" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, file-embed
         , filepath, hashable, hjsonpointer, http-client, http-types
         , pcre-heavy, profunctors, protolude, QuickCheck, scientific
         , semigroups, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hjsonschema";
           version = "1.7.2";
           sha256 = "0381b49800e1928b28f7abf626af0b0ba3eae3d418f58206eafd1f0a1d77fdb3";
           libraryHaskellDepends = [
             aeson base bytestring containers file-embed filepath hashable
             hjsonpointer http-client http-types pcre-heavy profunctors
             protolude QuickCheck scientific semigroups text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seagreen/hjsonschema";
           description = "JSON Schema library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hledger" = callPackage
        ({ mkDerivation, ansi-terminal, base, base-compat, bytestring
         , cmdargs, containers, csv, data-default, Diff, directory
         , file-embed, filepath, hashable, haskeline, here, hledger-lib
         , HUnit, megaparsec, mtl, mtl-compat, old-time, parsec, pretty-show
         , process, regex-tdfa, safe, shakespeare, split, stdenv, tabular
         , temporary, terminfo, text, time, transformers
         , unordered-containers, utf8-string, utility-ht, wizards
         }:
         mkDerivation {
           pname = "hledger";
           version = "1.4";
           sha256 = "e544cf4fbf7b1c25299d365ed3b891064bcf1aa1a431ecd8888ac978e9a7d490";
           revision = "2";
           editedCabalFile = "0yksk4ckbr84s3ksvhx9miy8r5w7v0b0kmxj688f5gd1857n6vrx";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             ansi-terminal base base-compat bytestring cmdargs containers csv
             data-default Diff directory file-embed filepath hashable haskeline
             here hledger-lib HUnit megaparsec mtl mtl-compat old-time
             pretty-show process regex-tdfa safe shakespeare split tabular
             temporary terminfo text time transformers unordered-containers
             utf8-string utility-ht wizards
           ];
           executableHaskellDepends = [
             ansi-terminal base base-compat bytestring cmdargs containers csv
             data-default directory file-embed filepath haskeline here
             hledger-lib HUnit mtl mtl-compat old-time parsec pretty-show
             process regex-tdfa safe shakespeare split tabular temporary
             terminfo text time unordered-containers utf8-string utility-ht
             wizards
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Command-line interface for the hledger accounting tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger-api" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, Decimal
         , docopt, either, hledger, hledger-lib, microlens
         , microlens-platform, safe, servant-server, servant-swagger, stdenv
         , swagger2, text, transformers, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "hledger-api";
           version = "1.4";
           sha256 = "4739ae5cd753abd5711fe9ca61dded8c9dfa9bbec27ae4cf7000ed0059a07703";
           revision = "1";
           editedCabalFile = "1q3fvasxg32xza2pgf725x0j5dsz4rklng3blyw0kq70bccgdaka";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             aeson base bytestring containers Decimal docopt either hledger
             hledger-lib microlens microlens-platform safe servant-server
             servant-swagger swagger2 text transformers wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Web API server for the hledger accounting tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger-iadd" = callPackage
        ({ mkDerivation, base, brick, containers, directory, free
         , hledger-lib, megaparsec, microlens, microlens-th
         , optparse-applicative, semigroups, stdenv, text, text-format
         , text-zipper, time, transformers, unordered-containers, vector
         , vty, xdg-basedir
         }:
         mkDerivation {
           pname = "hledger-iadd";
           version = "1.2.6";
           sha256 = "66341ac68c67cca5301d15fc52cd956c21ed6d053e924307d30616e53dfcbbd0";
           revision = "8";
           editedCabalFile = "0fjlyb3pbn5dfkns8hlb696aawmw6gkm1ad2la0aiy2kyzhvl838";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base brick containers directory free hledger-lib megaparsec
             microlens microlens-th optparse-applicative semigroups text
             text-format text-zipper time transformers unordered-containers
             vector vty xdg-basedir
           ];
           executableHaskellDepends = [
             base brick directory free hledger-lib megaparsec microlens
             optparse-applicative text text-format text-zipper time transformers
             unordered-containers vector vty xdg-basedir
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hpdeifel/hledger-iadd#readme";
           description = "A terminal UI as drop-in replacement for hledger add";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hledger-interest" = callPackage
        ({ mkDerivation, base, Cabal, Decimal, hledger-lib, mtl, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "hledger-interest";
           version = "1.5.1";
           sha256 = "0a02354f4e8d53e75817e05b140c4760220ac4e414fbf9772abe4f20a9f90da6";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             base Cabal Decimal hledger-lib mtl text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hledger-interest";
           description = "computes interest for a given account";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hledger-lib" = callPackage
        ({ mkDerivation, ansi-terminal, array, base, base-compat
         , blaze-markup, bytestring, cmdargs, containers, csv, data-default
         , Decimal, deepseq, directory, filepath, hashtables, HUnit
         , megaparsec, mtl, mtl-compat, old-time, parsec, pretty-show
         , regex-tdfa, safe, semigroups, split, stdenv, text, time
         , transformers, uglymemo, utf8-string
         }:
         mkDerivation {
           pname = "hledger-lib";
           version = "1.4";
           sha256 = "b8e310190791aae4fbb73e5b5e2e9a5e82df436df23d2844279dbb08eccd1e96";
           revision = "2";
           editedCabalFile = "1ckwjx3k4xfwj1vdrp5hsf1m0bpyax3nr1xyiyn8745w89vqrf0q";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             ansi-terminal array base base-compat blaze-markup bytestring
             cmdargs containers csv data-default Decimal deepseq directory
             filepath hashtables HUnit megaparsec mtl mtl-compat old-time parsec
             pretty-show regex-tdfa safe semigroups split text time transformers
             uglymemo utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Core data types, parsers and functionality for the hledger accounting tools";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger-ui" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, base-compat, brick
         , cmdargs, containers, data-default, directory, filepath, fsnotify
         , hledger, hledger-lib, HUnit, megaparsec, microlens
         , microlens-platform, pretty-show, process, safe, split, stdenv
         , text, text-zipper, time, transformers, vector, vty
         }:
         mkDerivation {
           pname = "hledger-ui";
           version = "1.4";
           sha256 = "636078c9eafea22b7705cb3a5c85f0f428345e19af91334d84325e6a4302a666";
           revision = "8";
           editedCabalFile = "0xk0iqjy5vr674xl565wip8h2hfkxpfymw3jlfgc984a5vjwan44";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             ansi-terminal async base base-compat brick cmdargs containers
             data-default directory filepath fsnotify hledger hledger-lib HUnit
             megaparsec microlens microlens-platform pretty-show process safe
             split text text-zipper time transformers vector vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Curses-style user interface for the hledger accounting tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hledger-web" = callPackage
        ({ mkDerivation, base, base-compat, blaze-html, blaze-markup
         , bytestring, clientsession, cmdargs, conduit-extra, data-default
         , directory, filepath, hjsmin, hledger, hledger-lib, http-client
         , http-conduit, HUnit, json, megaparsec, mtl, parsec, safe
         , shakespeare, stdenv, template-haskell, text, time, transformers
         , wai, wai-extra, wai-handler-launch, warp, yaml, yesod, yesod-core
         , yesod-form, yesod-static
         }:
         mkDerivation {
           pname = "hledger-web";
           version = "1.4";
           sha256 = "f0f02f4a5f6b836cbd96f58da0b74dc108a4736d13579c740b78d8fde0eeb5d0";
           revision = "3";
           editedCabalFile = "1xvycx1s54pz6rmjip9lxsg7p6anksi1pjqfjjs94yw977dcwm46";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base base-compat blaze-html blaze-markup bytestring clientsession
             cmdargs conduit-extra data-default directory filepath hjsmin
             hledger hledger-lib http-client http-conduit HUnit json megaparsec
             mtl parsec safe shakespeare template-haskell text time transformers
             wai wai-extra wai-handler-launch warp yaml yesod yesod-core
             yesod-form yesod-static
           ];
           executableHaskellDepends = [
             base base-compat blaze-html blaze-markup bytestring clientsession
             cmdargs conduit-extra data-default directory filepath hjsmin
             hledger hledger-lib http-client http-conduit HUnit json megaparsec
             mtl parsec safe shakespeare template-haskell text time transformers
             wai wai-extra wai-handler-launch warp yaml yesod yesod-core
             yesod-form yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hledger.org";
           description = "Web interface for the hledger accounting tool";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "hlibgit2" = callPackage
        ({ mkDerivation, base, bindings-DSL, openssl, stdenv, zlib }:
         mkDerivation {
           pname = "hlibgit2";
           version = "0.18.0.16";
           sha256 = "199e4027faafe0a39d18ca3168923d44c57b386b960c72398df1c0fb7eff8e5e";
           libraryHaskellDepends = [ base bindings-DSL zlib ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           description = "Low-level bindings to libgit2";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) openssl;};
      "hlibsass" = callPackage
        ({ mkDerivation, base, Cabal, directory, libsass, stdenv }:
         mkDerivation {
           pname = "hlibsass";
           version = "0.1.6.1";
           sha256 = "3e120a4f266445f50299a0009c24bd0a69a7af4c88376de0e1882a505d580849";
           setupHaskellDepends = [ base Cabal directory ];
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ libsass ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jakubfijalkowski/hlibsass";
           description = "Low-level bindings to Libsass";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) libsass;};
      "hlint" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, bytestring, cmdargs
         , containers, cpphs, data-default, directory, extra, filepath
         , haskell-src-exts, haskell-src-exts-util, hscolour, process
         , refact, stdenv, text, transformers, uniplate
         , unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "hlint";
           version = "2.0.11";
           sha256 = "cb1897115c929e9c66b2e5e9c958ca476d8c459e7ca7214c04244b7972261710";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base bytestring cmdargs containers cpphs
             data-default directory extra filepath haskell-src-exts
             haskell-src-exts-util hscolour process refact text transformers
             uniplate unordered-containers vector yaml
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/hlint#readme";
           description = "Source code suggestions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hmatrix" = callPackage
        ({ mkDerivation, array, base, binary, blas, bytestring, deepseq
         , liblapack, random, semigroups, split, stdenv, storable-complex
         , vector
         }:
         mkDerivation {
           pname = "hmatrix";
           version = "0.18.2.0";
           sha256 = "960cdc81143d68841a036f7c642a06c5303bf8ded9737bcfc560755fef138560";
           libraryHaskellDepends = [
             array base binary bytestring deepseq random semigroups split
             storable-complex vector
           ];
           librarySystemDepends = [ blas liblapack ];
           doHaddock = false;
           doCheck = false;
           preConfigure = "sed -i hmatrix.cabal -e '/\\/usr\\//D'";
           homepage = "https://github.com/albertoruiz/hmatrix";
           description = "Numeric Linear Algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
      "hmatrix-gsl" = callPackage
        ({ mkDerivation, array, base, gsl, hmatrix, process, random, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hmatrix-gsl";
           version = "0.18.2.0";
           sha256 = "dac92397269deaa2ecd2b2175a85eb35c5634c269e6323100268d2adfc826f3f";
           libraryHaskellDepends = [
             array base hmatrix process random vector
           ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/albertoruiz/hmatrix";
           description = "Numerical computation";
           license = "GPL";
         }) {inherit (pkgs) gsl;};
      "hmatrix-gsl-stats" = callPackage
        ({ mkDerivation, base, binary, gsl, hmatrix, stdenv
         , storable-complex, vector
         }:
         mkDerivation {
           pname = "hmatrix-gsl-stats";
           version = "0.4.1.7";
           sha256 = "4a0f8b6ea1caefebd30f1e726c94f238d96c0f873bdeb5d920367e8aca7c54bf";
           libraryHaskellDepends = [
             base binary hmatrix storable-complex vector
           ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hmatrix-gsl-stats";
           description = "GSL Statistics interface";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) gsl;};
      "hmatrix-morpheus" = callPackage
        ({ mkDerivation, base, blas, hmatrix, liblapack, stdenv }:
         mkDerivation {
           pname = "hmatrix-morpheus";
           version = "0.1.1.1";
           sha256 = "729b81f4b434e0132e13508e02e688a9af182390120c0ba2144702b11f9fecf8";
           libraryHaskellDepends = [ base hmatrix ];
           librarySystemDepends = [ blas liblapack ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Alexander-Ignatyev/morpheus/tree/master/hmatrix-morpheus";
           description = "Low-level machine learning auxiliary functions";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
      "hmatrix-repa" = callPackage
        ({ mkDerivation, base, hmatrix, repa, stdenv, vector }:
         mkDerivation {
           pname = "hmatrix-repa";
           version = "0.1.2.2";
           sha256 = "51c3a46800aea072258b05047cb0c6f24999bbb626268ce32809c5872e0e71be";
           libraryHaskellDepends = [ base hmatrix repa vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hmatrix-repa";
           description = "Adaptors for interoperability between hmatrix and repa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hmatrix-special" = callPackage
        ({ mkDerivation, base, hmatrix, hmatrix-gsl, stdenv }:
         mkDerivation {
           pname = "hmatrix-special";
           version = "0.4.0.1";
           sha256 = "72a9c9c559da6b6314e6042ddfd53d638fdf1b819978a630fc339e0859c3ec4e";
           libraryHaskellDepends = [ base hmatrix hmatrix-gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/albertoruiz/hmatrix";
           description = "Interface to GSL special functions";
           license = "GPL";
         }) {};
      "hmpfr" = callPackage
        ({ mkDerivation, base, integer-gmp, mpfr, stdenv }:
         mkDerivation {
           pname = "hmpfr";
           version = "0.4.4";
           sha256 = "2badebf032a24f6ab3bde068d5246bc9cc00bf5a8ac17da8cc0bd45c882816f5";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base integer-gmp ];
           librarySystemDepends = [ mpfr ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michalkonecny/hmpfr";
           description = "Haskell binding to the MPFR library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mpfr;};
      "hnix" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, containers, data-fix
         , deepseq, deriving-compat, parsers, semigroups, stdenv, text
         , transformers, trifecta, unordered-containers
         }:
         mkDerivation {
           pname = "hnix";
           version = "0.3.4";
           sha256 = "ec890845cc8a782ff8a2e7a2dcbaf763d5ddb3ff202293f701828d04a85adbf2";
           revision = "1";
           editedCabalFile = "01svkjznkz51742k3hcc0ssz5m0kymk53ydrdwg4a24ygvb408iw";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base containers data-fix deepseq deriving-compat
             parsers semigroups text transformers trifecta unordered-containers
           ];
           executableHaskellDepends = [
             ansi-wl-pprint base containers data-fix deepseq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jwiegley/hnix";
           description = "Haskell implementation of the Nix language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hoauth2" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, exceptions
         , http-conduit, http-types, microlens, stdenv, text
         , unordered-containers, uri-bytestring, uri-bytestring-aeson, wai
         , warp
         }:
         mkDerivation {
           pname = "hoauth2";
           version = "1.5.1";
           sha256 = "6abf67d54ba3b6c455ea9056b817d63debe65cb19bb3c7189c5c2848103067d1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring exceptions http-conduit http-types microlens
             text unordered-containers uri-bytestring uri-bytestring-aeson
           ];
           executableHaskellDepends = [
             aeson base bytestring containers http-conduit http-types text
             uri-bytestring wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/freizl/hoauth2";
           description = "Haskell OAuth2 authentication client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hocilib" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, containers, inline-c
         , ocilib, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "hocilib";
           version = "0.2.0";
           sha256 = "7c29cc84e7ac320cd1ddfb9d387d19c7c03fea3eedfb41713115d0e94aeafb78";
           libraryHaskellDepends = [
             base bytestring containers inline-c template-haskell
           ];
           librarySystemDepends = [ ocilib ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpinsight/hocilib";
           description = "FFI binding to OCILIB";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) ocilib;};
      "holy-project" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, bytestring, Cabal
         , directory, filepath, hastache, http-conduit, HUnit, lens
         , lens-aeson, process, QuickCheck, random, smallcheck, split
         , stdenv, syb, tasty, tasty-hunit, tasty-quickcheck
         , tasty-smallcheck, text, time, unix
         }:
         mkDerivation {
           pname = "holy-project";
           version = "0.2.0.1";
           sha256 = "b0f60f48377986212ee45a7ab360f4ef32578d4fa4b65cc21132f9c1e90a2814";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base bytestring directory filepath hastache
             http-conduit lens lens-aeson process random split syb text time
             unix
           ];
           executableHaskellDepends = [
             aeson ansi-terminal base bytestring Cabal directory filepath
             hastache http-conduit HUnit lens lens-aeson process QuickCheck
             random smallcheck split syb tasty tasty-hunit tasty-quickcheck
             tasty-smallcheck text time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/holy-project";
           description = "Start your Haskell project with cabal, git and tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hoogle" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, cmdargs, conduit
         , conduit-extra, connection, containers, deepseq, directory, extra
         , filepath, haskell-src-exts, http-conduit, http-types, js-flot
         , js-jquery, mmap, network, network-uri, old-locale, process
         , process-extras, QuickCheck, resourcet, stdenv, storable-tuple
         , tar, template-haskell, text, time, transformers, uniplate
         , utf8-string, vector, wai, wai-logger, warp, warp-tls, zlib
         }:
         mkDerivation {
           pname = "hoogle";
           version = "5.0.14";
           sha256 = "e7cfa9ca7496d7a30b476f3502c0dfa38671d4235042bb46806568602e97bbf8";
           revision = "3";
           editedCabalFile = "14973295rif9gsyaxfrw7y5p59sxnz4znki3jm3bk73y0b3j1l5d";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base binary bytestring cmdargs conduit conduit-extra
             connection containers deepseq directory extra filepath
             haskell-src-exts http-conduit http-types js-flot js-jquery mmap
             network network-uri old-locale process process-extras QuickCheck
             resourcet storable-tuple tar template-haskell text time
             transformers uniplate utf8-string vector wai wai-logger warp
             warp-tls zlib
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           testTarget = "--test-option=--no-net";
           homepage = "http://hoogle.haskell.org/";
           description = "Haskell API Search";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hopenpgp-tools" = callPackage
        ({ mkDerivation, aeson, alex, ansi-wl-pprint, array, attoparsec
         , base, base16-bytestring, binary, binary-conduit, bytestring
         , conduit, conduit-extra, containers, crypto-pubkey, cryptohash
         , directory, errors, fgl, graphviz, happy, hOpenPGP, http-client
         , http-client-tls, http-types, ixset-typed, lens, monad-loops
         , openpgp-asciiarmor, optparse-applicative, resourcet, stdenv, text
         , time, time-locale-compat, transformers, unordered-containers
         , wl-pprint-extras, wl-pprint-terminfo, yaml
         }:
         mkDerivation {
           pname = "hopenpgp-tools";
           version = "0.19.5";
           sha256 = "e0630a90c0565923b4244eb1df5ba034bcc8a7d092854d197cf47c783bd566f9";
           revision = "2";
           editedCabalFile = "1w9ban4w6zm7cknfnlzhgx649xg2j0vsrhqdlnd5g8qzcbbhh0si";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson ansi-wl-pprint array attoparsec base base16-bytestring binary
             binary-conduit bytestring conduit conduit-extra containers
             crypto-pubkey cryptohash directory errors fgl graphviz hOpenPGP
             http-client http-client-tls http-types ixset-typed lens monad-loops
             openpgp-asciiarmor optparse-applicative resourcet text time
             time-locale-compat transformers unordered-containers
             wl-pprint-extras wl-pprint-terminfo yaml
           ];
           executableToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/hopenpgp-tools";
           description = "hOpenPGP-based command-line tools";
           license = "unknown";
         }) {};
      "hopenssl" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cabal-doctest, openssl
         , stdenv
         }:
         mkDerivation {
           pname = "hopenssl";
           version = "2.2.1";
           sha256 = "7031aac15f132057f8013f819774081cd8fc4a14fb076bc3dffb478d66d0abdf";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ openssl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hopenssl";
           description = "FFI Bindings to OpenSSL's EVP Digest Interface";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) openssl;};
      "hopfli" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "hopfli";
           version = "0.2.2.1";
           sha256 = "4d71dc0f599c87445c22403b447ce310bf8567d6b10cc82efbdd00a4d4d12a18";
           revision = "1";
           editedCabalFile = "116jns5im51sb9xiwpx308wz3pr67335633anrf8f704pz8vwjka";
           libraryHaskellDepends = [ base bytestring zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ananthakumaran/hopfli";
           description = "Bidings to Google's Zopfli compression library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "hosc" = callPackage
        ({ mkDerivation, base, binary, blaze-builder, bytestring
         , data-binary-ieee754, network, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "hosc";
           version = "0.16";
           sha256 = "72ed7430ca8b3121cb59325973c4dd75fe9df27c4023618d888eff3fef9c45f6";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary blaze-builder bytestring data-binary-ieee754 network
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://rd.slavepianos.org/t/hosc";
           description = "Haskell Open Sound Control";
           license = "GPL";
         }) {};
      "hostname" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hostname";
           version = "1.0";
           sha256 = "9b43dab1b6da521f35685b20555da00738c8e136eb972458c786242406a9cf5c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A very simple package providing a cross-platform means of determining the hostname";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hostname-validate" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "hostname-validate";
           version = "1.0.0";
           sha256 = "7fafb1e0cfe19d453030754962e74cdb8f3e791ec5b974623cbf26872779c857";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Validate hostnames e.g. localhost or foo.co.uk.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hourglass" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "hourglass";
           version = "0.2.11";
           sha256 = "18a6bb303fc055275cca45aaffc17b6a04b2e9d7509aa5aa5bb9d9239f4e4f51";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-hourglass";
           description = "simple performant time related library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hourglass-orphans" = callPackage
        ({ mkDerivation, aeson, base, hourglass, stdenv }:
         mkDerivation {
           pname = "hourglass-orphans";
           version = "0.1.0.0";
           sha256 = "9f0ba9f3b3cdd391b26daf3dce0bac44ab1f9dd883eaff063af9ebfb0b373d64";
           libraryHaskellDepends = [ aeson base hourglass ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/hourglass-orphans#readme";
           description = "Orphan Aeson instances to hourglass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hp2pretty" = callPackage
        ({ mkDerivation, array, attoparsec, base, containers, filepath
         , floatshow, mtl, optparse-applicative, semigroups, stdenv, text
         }:
         mkDerivation {
           pname = "hp2pretty";
           version = "0.8.0.2";
           sha256 = "2fd19796845be73b605ee8830704a6f1f23a80f43731cd36a216fb2b3bb179c8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array attoparsec base containers filepath floatshow mtl
             optparse-applicative semigroups text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://code.mathr.co.uk/hp2pretty";
           description = "generate pretty graphs from heap profiles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpack" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, bytestring, Cabal
         , containers, cryptonite, deepseq, directory, filepath, Glob
         , pretty, scientific, stdenv, text, transformers
         , unordered-containers, yaml
         }:
         mkDerivation {
           pname = "hpack";
           version = "0.21.2";
           sha256 = "0c547729a2b6a49dd4a2cf32b737667ab94b8745e8648b375b827c1488c83abf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bifunctors bytestring Cabal containers cryptonite
             deepseq directory filepath Glob pretty scientific text transformers
             unordered-containers yaml
           ];
           executableHaskellDepends = [
             aeson base bifunctors bytestring Cabal containers cryptonite
             deepseq directory filepath Glob pretty scientific text transformers
             unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/hpack#readme";
           description = "An alternative format for Haskell packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hpc" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, stdenv
         , time
         }:
         mkDerivation {
           pname = "hpc";
           version = "0.6.0.3";
           sha256 = "16dac73e55899815a32715c35fa5986da077d7e7887ce8ef1c72b4f33a73a2aa";
           revision = "1";
           editedCabalFile = "1bddfsgn48kh8qa72asgmx7z4ym00zkh09g3hqp6l6yl919drn2i";
           libraryHaskellDepends = [
             base containers directory filepath time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Code Coverage Library for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpc-coveralls" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, Cabal, cmdargs
         , containers, curl, directory, directory-tree, hpc, process
         , pureMD5, regex-posix, retry, safe, split, stdenv, transformers
         }:
         mkDerivation {
           pname = "hpc-coveralls";
           version = "1.0.10";
           sha256 = "e222c0d36a6d266205957d0c71e1baeb1581847e79b0b5b9d883a4ef7381d0d9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal cmdargs containers curl directory
             directory-tree hpc process pureMD5 retry safe split transformers
           ];
           executableHaskellDepends = [
             aeson async base bytestring Cabal cmdargs containers curl directory
             directory-tree hpc process pureMD5 regex-posix retry safe split
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
           description = "Coveralls.io support for Haskell.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpio" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, directory
         , exceptions, filepath, monad-control, monad-logger, mtl
         , optparse-applicative, protolude, QuickCheck, stdenv, text
         , transformers, transformers-base, unix, unix-bytestring
         }:
         mkDerivation {
           pname = "hpio";
           version = "0.9.0.5";
           sha256 = "118df7aaf296d59989b24c68a614f12f45a16260504890ed088d16761415364c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers directory exceptions filepath
             monad-control monad-logger mtl protolude QuickCheck text
             transformers transformers-base unix unix-bytestring
           ];
           executableHaskellDepends = [
             async base exceptions mtl optparse-applicative protolude text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/quixoftic/hpio#readme";
           description = "Monads for GPIO in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpp" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-trie, directory
         , filepath, ghc-prim, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "hpp";
           version = "0.5.1";
           sha256 = "2be18288e29e7191a06bcddbe988330faa06960ed18574272f8b25966641bd2d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring bytestring-trie directory filepath ghc-prim time
             transformers
           ];
           executableHaskellDepends = [ base directory filepath time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acowley/hpp";
           description = "A Haskell pre-processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hpqtypes" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , data-default-class, exceptions, lifted-base, monad-control, mtl
         , postgresql, resource-pool, stdenv, text, text-show, time
         , transformers, transformers-base, vector
         }:
         mkDerivation {
           pname = "hpqtypes";
           version = "1.5.1.1";
           sha256 = "b99c214d7cc83573f5bf295837b42a13a4057dc9cab701b25798086f0d54795a";
           revision = "1";
           editedCabalFile = "0k255rbvzinwrav3k7f3n2hssiv9p3bb51fg4vp2mhnm9igfy5b9";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default-class exceptions
             lifted-base monad-control mtl resource-pool text text-show time
             transformers transformers-base vector
           ];
           librarySystemDepends = [ postgresql ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/hpqtypes";
           description = "Haskell bindings to libpqtypes";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) postgresql;};
      "hprotoc" = callPackage
        ({ mkDerivation, alex, array, base, binary, bytestring, containers
         , directory, filepath, haskell-src-exts, mtl, parsec
         , protocol-buffers, protocol-buffers-descriptor, stdenv
         , utf8-string
         }:
         mkDerivation {
           pname = "hprotoc";
           version = "2.4.7";
           sha256 = "455f038e7513f6b310bd0f6bcee83e1b3781c1adb33d8e265c626d61c5757165";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base binary bytestring containers directory filepath
             haskell-src-exts mtl parsec protocol-buffers
             protocol-buffers-descriptor utf8-string
           ];
           libraryToolDepends = [ alex ];
           executableHaskellDepends = [
             array base binary bytestring containers directory filepath
             haskell-src-exts mtl parsec protocol-buffers
             protocol-buffers-descriptor utf8-string
           ];
           executableToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Parse Google Protocol Buffer specifications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hquantlib" = callPackage
        ({ mkDerivation, base, containers, hmatrix, hmatrix-gsl
         , hmatrix-special, mersenne-random-pure64, parallel, random
         , statistics, stdenv, time, vector, vector-algorithms
         }:
         mkDerivation {
           pname = "hquantlib";
           version = "0.0.4.0";
           sha256 = "b7b2b9ce5e8113dd2d54a1dfce34b661620bd5e0dd43516604395276d7c44474";
           revision = "1";
           editedCabalFile = "02wp531cckdgj11sjamyafnij0cri7svrg4ddbvak9yki0xpm286";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers hmatrix hmatrix-gsl hmatrix-special
             mersenne-random-pure64 parallel random statistics time vector
             vector-algorithms
           ];
           executableHaskellDepends = [
             base containers mersenne-random-pure64 parallel time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/paulrzcz/hquantlib.git";
           description = "HQuantLib is a port of essencial parts of QuantLib to Haskell";
           license = "LGPL";
         }) {};
      "hreader" = callPackage
        ({ mkDerivation, base, exceptions, hset, mmorph, monad-control, mtl
         , stdenv, tagged, transformers, transformers-base
         }:
         mkDerivation {
           pname = "hreader";
           version = "1.1.0";
           sha256 = "2a2b02c059b343ab7ff0d340b6545a003b0d563fb8a1ad2d53d6c2f4759a7d3a";
           libraryHaskellDepends = [
             base exceptions hset mmorph monad-control mtl tagged transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/s9gf4ult/hreader";
           description = "Generalization of MonadReader and ReaderT using hset";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hreader-lens" = callPackage
        ({ mkDerivation, base, comonad, hreader, hset, lens, lens-action
         , profunctors, stdenv
         }:
         mkDerivation {
           pname = "hreader-lens";
           version = "0.1.3.0";
           sha256 = "408f0a2c6ce4bc5c00746947262f43f421f0e8fb9cc29c0cd2563ee1e87502d0";
           libraryHaskellDepends = [
             base comonad hreader hset lens lens-action profunctors
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dredozubov/hreader-lens";
           description = "Optics for hreader package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hruby" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, ruby
         , scientific, stdenv, stm, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hruby";
           version = "0.3.5.1";
           sha256 = "969b829f28d369a3a99960e3890427470459425b3434576e54f8fd3ca13fef3f";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring scientific stm text
             unordered-containers vector
           ];
           librarySystemDepends = [ ruby ];
           doHaddock = false;
           doCheck = false;
           description = "Embed a Ruby intepreter in your Haskell program !";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) ruby;};
      "hs-GeoIP" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, GeoIP, stdenv }:
         mkDerivation {
           pname = "hs-GeoIP";
           version = "0.3";
           sha256 = "8e5ff6a132d8944336f10dcaa69d8852cdd7953a5ff18248ae06cb2819a1ab8c";
           libraryHaskellDepends = [ base bytestring deepseq ];
           librarySystemDepends = [ GeoIP ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ozataman/hs-GeoIP";
           description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) GeoIP;};
      "hs-bibutils" = callPackage
        ({ mkDerivation, base, stdenv, syb }:
         mkDerivation {
           pname = "hs-bibutils";
           version = "6.2.0.1";
           sha256 = "4b668090049bf67f107b8bcd39a4664c00b78ff596de9ccb63720af49ed4a630";
           libraryHaskellDepends = [ base syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wilx/hs-bibutils";
           description = "Haskell bindings to bibutils, the bibliography conversion utilities";
           license = "GPL";
         }) {};
      "hsass" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, filepath
         , hlibsass, monad-loops, stdenv, transformers
         }:
         mkDerivation {
           pname = "hsass";
           version = "0.5.0";
           sha256 = "8dc4c6a7455a1182ec2dba36c489f89d7e5c1053388b2c63c4ddba6080b7501e";
           libraryHaskellDepends = [
             base bytestring data-default-class filepath hlibsass monad-loops
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jakubfijalkowski/hsass";
           description = "Integrating Sass into Haskell applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsb2hs" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , preprocessor-tools, stdenv
         }:
         mkDerivation {
           pname = "hsb2hs";
           version = "0.3.1";
           sha256 = "8ad800820554f273ada083dfce2f463d920fb1ceb053255023a4c883b090f9d8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring containers directory filepath preprocessor-tools
           ];
           doHaddock = false;
           doCheck = false;
           description = "Preprocesses a file, adding blobs from files as string literals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hscolour" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "hscolour";
           version = "1.24.2";
           sha256 = "55fb86bafdcad9613c25910b1cbca4b071c1ddc6365538c3b3d4e350cb30cf22";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~malcolm/hscolour/";
           description = "Colourise Haskell code";
           license = "LGPL";
         }) {};
      "hsdns" = callPackage
        ({ mkDerivation, adns, base, containers, network, stdenv }:
         mkDerivation {
           pname = "hsdns";
           version = "1.7.1";
           sha256 = "4fcd00e85cde989652ab5c6b179610c9514180a00cd7b161ea33ebfec3b8a044";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers network ];
           librarySystemDepends = [ adns ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hsdns";
           description = "Asynchronous DNS Resolver";
           license = stdenv.lib.licenses.lgpl3;
         }) {inherit (pkgs) adns;};
      "hse-cpp" = callPackage
        ({ mkDerivation, base, cpphs, haskell-src-exts, stdenv }:
         mkDerivation {
           pname = "hse-cpp";
           version = "0.2";
           sha256 = "eeb0168c00bf5dd2975faf3f5915035c73b40063b1f315ce3fd58f66a6ae4b4c";
           libraryHaskellDepends = [ base cpphs haskell-src-exts ];
           doHaddock = false;
           doCheck = false;
           description = "Preprocess+parse haskell code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsebaysdk" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client, http-types
         , stdenv, text, time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "hsebaysdk";
           version = "0.4.0.0";
           sha256 = "0738d0df113b15bb9148ecbe02f0a34562c557d8f64b65065122925e29df8901";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-types text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/creichert/hsebaysdk";
           description = "Haskell eBay SDK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsemail" = callPackage
        ({ mkDerivation, base, mtl, old-time, parsec, stdenv }:
         mkDerivation {
           pname = "hsemail";
           version = "2";
           sha256 = "f5f08a879444abd1f9a8a3e620d7fc83bc632ae3ba9b545bebdf58d5f4bfa8d9";
           libraryHaskellDepends = [ base mtl old-time parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/hsemail#readme";
           description = "Parsec parsers for the RFC2822 Internet Message format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hset" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, tagged, type-fun }:
         mkDerivation {
           pname = "hset";
           version = "2.2.0";
           sha256 = "b8747a0826aeaca2ca814e7a334f9de5a02f36ac83faea5e1c32c8f6040bf130";
           libraryHaskellDepends = [ base deepseq tagged type-fun ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/s9gf4ult/hset";
           description = "Primitive list with elements of unique types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsexif" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, iconv
         , stdenv, text, time
         }:
         mkDerivation {
           pname = "hsexif";
           version = "0.6.1.5";
           sha256 = "2f12ea1060adb46c9afb74d32b82989b3883968403e21ff125f5cf9da869b06e";
           libraryHaskellDepends = [
             base binary bytestring containers iconv text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/emmanueltouzery/hsexif";
           description = "EXIF handling library in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsignal" = callPackage
        ({ mkDerivation, array, base, binary, blas, bytestring, gsl
         , hmatrix, hmatrix-gsl, hmatrix-gsl-stats, hstatistics, liblapack
         , mtl, stdenv, storable-complex, vector
         }:
         mkDerivation {
           pname = "hsignal";
           version = "0.2.7.5";
           sha256 = "0f61f820556c431c3811643cc40e49a6d6c68075da1be0b39298a41c1c7119ac";
           libraryHaskellDepends = [
             array base binary bytestring hmatrix hmatrix-gsl hmatrix-gsl-stats
             hstatistics mtl storable-complex vector
           ];
           librarySystemDepends = [ blas liblapack ];
           libraryPkgconfigDepends = [ gsl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hsignal";
           description = "Signal processing and EEG data analysis";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) blas; inherit (pkgs) gsl; inherit (pkgs) liblapack;};
      "hsinstall" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "hsinstall";
           version = "1.6";
           sha256 = "061090c68bdcdad5efef879c4fc0e4c67c26d34221c333fe4c9880216635c811";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base directory filepath ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           description = "Install Haskell software";
           license = stdenv.lib.licenses.isc;
         }) {};
      "hslogger" = callPackage
        ({ mkDerivation, base, containers, directory, mtl, network
         , old-locale, process, stdenv, time, unix
         }:
         mkDerivation {
           pname = "hslogger";
           version = "1.2.10";
           sha256 = "d7ca6e94a4aacb47a8dc30e3960ab8deff482d2ec9dca9a87b225e03e97e452b";
           libraryHaskellDepends = [
             base containers directory mtl network old-locale process time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://software.complete.org/hslogger";
           description = "Versatile logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hslua" = callPackage
        ({ mkDerivation, base, bytestring, containers, exceptions, fail
         , mtl, stdenv, text
         }:
         mkDerivation {
           pname = "hslua";
           version = "0.9.5.1";
           sha256 = "681ffb1775e948143c0dd4be3086259f2eda8a9f7b09ce94016150c57e9d74d0";
           libraryHaskellDepends = [
             base bytestring containers exceptions fail mtl text
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Lua language interpreter embedding in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hslua-aeson" = callPackage
        ({ mkDerivation, aeson, base, hashable, hslua, scientific, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "hslua-aeson";
           version = "0.3.0.1";
           sha256 = "5c90d514239f8764ebeb6697dc35fe0c6133244c3bdf684c236d9ea7161a9440";
           libraryHaskellDepends = [
             aeson base hashable hslua scientific text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tarleb/hslua-aeson#readme";
           description = "Allow aeson data types to be used with lua";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hslua-module-text" = callPackage
        ({ mkDerivation, base, hslua, stdenv, text }:
         mkDerivation {
           pname = "hslua-module-text";
           version = "0.1.2.1";
           sha256 = "aeb384f9743b76360f3779e44065fe297fb60f27519933f203b75bd8c2ba8e2d";
           libraryHaskellDepends = [ base hslua text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hslua/hslua-module-test";
           description = "Lua module for text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsndfile" = callPackage
        ({ mkDerivation, base, c2hs, libsndfile, stdenv }:
         mkDerivation {
           pname = "hsndfile";
           version = "0.8.0";
           sha256 = "e97e7ef4c26b0dba9400d9a77d3d5001735f64094b93f9733443f58f7f568efb";
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ libsndfile ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Hsndfile";
           description = "Haskell bindings for libsndfile";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) libsndfile;};
      "hsndfile-vector" = callPackage
        ({ mkDerivation, base, hsndfile, stdenv, vector }:
         mkDerivation {
           pname = "hsndfile-vector";
           version = "0.5.2";
           sha256 = "2ffe11eb9a3e63aae24e8e06d2e04e8ca4a617ccf1238843cc71517a905b2895";
           libraryHaskellDepends = [ base hsndfile vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.org/haskellwiki/Hsndfile";
           description = "Haskell bindings for libsndfile (Data.Vector interface)";
           license = stdenv.lib.licenses.lgpl2;
         }) {};
      "hsp" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "hsp";
           version = "0.10.0";
           sha256 = "4ed3905a9db91001bde09f060290833af462e87e35476ab0def1579a1ff7ceab";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/nibro/hsp";
           description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec" = callPackage
        ({ mkDerivation, base, call-stack, hspec-core, hspec-discover
         , hspec-expectations, HUnit, QuickCheck, stdenv, transformers
         }:
         mkDerivation {
           pname = "hspec";
           version = "2.4.4";
           sha256 = "b01a3245da9c597608befddc4fc3cae35e5bc753235877076f11ae8e0647cf21";
           libraryHaskellDepends = [
             base call-stack hspec-core hspec-discover hspec-expectations HUnit
             QuickCheck transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "A Testing Framework for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, hspec-expectations
         , stdenv, text
         }:
         mkDerivation {
           pname = "hspec-attoparsec";
           version = "0.1.0.2";
           sha256 = "ea7a8b3f2989abde8c8537cec1a2ae312e88df80086b9b01ed12e5324137fb64";
           libraryHaskellDepends = [
             attoparsec base bytestring hspec-expectations text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alpmestan/hspec-attoparsec";
           description = "Utility functions for testing your attoparsec parsers with hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-checkers" = callPackage
        ({ mkDerivation, base, checkers, hspec, stdenv }:
         mkDerivation {
           pname = "hspec-checkers";
           version = "0.1.0.2";
           sha256 = "e7db79dc527cf5b806723bbe3d511a074297976a0c7042968b9abc57f8337e99";
           libraryHaskellDepends = [ base checkers hspec ];
           doHaddock = false;
           doCheck = false;
           description = "Allows to use checkers properties from hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-contrib" = callPackage
        ({ mkDerivation, base, hspec-core, HUnit, stdenv }:
         mkDerivation {
           pname = "hspec-contrib";
           version = "0.4.0";
           sha256 = "6f9e2201ee176c723f91ee932b7fc8b677e0d54376f897f52c133c8ca9860c16";
           revision = "2";
           editedCabalFile = "029h7dl49vlrhn62v8kgk8zdavjjc80ga1m8fwhl0pnmvnfkn7sq";
           libraryHaskellDepends = [ base hspec-core HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "Contributed functionality for Hspec";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-core" = callPackage
        ({ mkDerivation, ansi-terminal, array, async, base, call-stack
         , deepseq, directory, filepath, hspec-expectations, HUnit
         , QuickCheck, quickcheck-io, random, setenv, stdenv, tf-random
         , time, transformers
         }:
         mkDerivation {
           pname = "hspec-core";
           version = "2.4.4";
           sha256 = "601d321cdf7f2685880ee80c31154763884cb90dc512906005c4a485e8c8bfdf";
           revision = "1";
           editedCabalFile = "0m4bmclgs7as957wdnq1y4zh49hrwpslgz5m9430myl4dc14r81l";
           libraryHaskellDepends = [
             ansi-terminal array async base call-stack deepseq directory
             filepath hspec-expectations HUnit QuickCheck quickcheck-io random
             setenv tf-random time transformers
           ];
           doHaddock = false;
           doCheck = false;
           testTarget = "--test-option=--skip --test-option='Test.Hspec.Core.Runner.hspecResult runs specs in parallel'";
           homepage = "http://hspec.github.io/";
           description = "A Testing Framework for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-discover" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "hspec-discover";
           version = "2.4.4";
           sha256 = "76423bc72f3ed0a80ccefb26fbf3fb16c3d74a69d69b4ce0bc88db54984d5d47";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory filepath ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "Automatically discover and run Hspec tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations" = callPackage
        ({ mkDerivation, base, call-stack, HUnit, stdenv }:
         mkDerivation {
           pname = "hspec-expectations";
           version = "0.8.2";
           sha256 = "819607ea1faf35ce5be34be61c6f50f3389ea43892d56fb28c57a9f5d54fb4ef";
           libraryHaskellDepends = [ base call-stack HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-expectations#readme";
           description = "Catchy combinators for HUnit";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations-lifted" = callPackage
        ({ mkDerivation, base, hspec-expectations, stdenv, transformers }:
         mkDerivation {
           pname = "hspec-expectations-lifted";
           version = "0.10.0";
           sha256 = "22cdf1509b396fea2f53a0bb88dec3552f540d58cc60962a82970264c1e73828";
           libraryHaskellDepends = [ base hspec-expectations transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A version of hspec-expectations generalized to MonadIO";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-expectations-pretty-diff" = callPackage
        ({ mkDerivation, ansi-terminal, base, Diff, hscolour, HUnit
         , nicify-lib, stdenv, text
         }:
         mkDerivation {
           pname = "hspec-expectations-pretty-diff";
           version = "0.7.2.4";
           sha256 = "1bbfd524330be3cb0b27945556d01f48e3005e042ee475cdf6e441ba21b51b0a";
           libraryHaskellDepends = [
             ansi-terminal base Diff hscolour HUnit nicify-lib text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
           description = "Catchy combinators for HUnit";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-golden-aeson" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, directory
         , filepath, hspec, QuickCheck, quickcheck-arbitrary-adt, random
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "hspec-golden-aeson";
           version = "0.4.0.0";
           sha256 = "f3057e3fc151be53bd6aa06392fc0da79120ceefe9410a77915cceaa64e2fa0d";
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring directory filepath hspec
             QuickCheck quickcheck-arbitrary-adt random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/plow-technologies/hspec-golden-aeson#readme";
           description = "Use tests to monitor changes in Aeson serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-megaparsec" = callPackage
        ({ mkDerivation, base, containers, hspec-expectations, megaparsec
         , stdenv
         }:
         mkDerivation {
           pname = "hspec-megaparsec";
           version = "1.0.0";
           sha256 = "14961ae19fde7104f5099624195d0f21b4759e5e635e79d9e63f9f2affca4eb5";
           libraryHaskellDepends = [
             base containers hspec-expectations megaparsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/hspec-megaparsec";
           description = "Utility functions for testing Megaparsec parsers with Hspec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-meta" = callPackage
        ({ mkDerivation, ansi-terminal, array, async, base, call-stack
         , deepseq, directory, filepath, hspec-expectations, HUnit
         , QuickCheck, quickcheck-io, random, setenv, stdenv, time
         , transformers
         }:
         mkDerivation {
           pname = "hspec-meta";
           version = "2.4.6";
           sha256 = "2b31671bfbfe5df0604516278bb1051db42b1e55dfe474ecd446a6630398bb62";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal array async base call-stack deepseq directory
             filepath hspec-expectations HUnit QuickCheck quickcheck-io random
             setenv time transformers
           ];
           executableHaskellDepends = [
             ansi-terminal array async base call-stack deepseq directory
             filepath hspec-expectations HUnit QuickCheck quickcheck-io random
             setenv time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "A version of Hspec which is used to test Hspec itself";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-pg-transact" = callPackage
        ({ mkDerivation, base, bytestring, hspec, pg-transact
         , postgresql-simple, resource-pool, stdenv, text, tmp-postgres
         }:
         mkDerivation {
           pname = "hspec-pg-transact";
           version = "0.1.0.2";
           sha256 = "a5ec2a978a730500f03c15d16eff7e207a4135ebc63afe4cbca7392ad5f01c0c";
           libraryHaskellDepends = [
             base bytestring hspec pg-transact postgresql-simple resource-pool
             text tmp-postgres
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/pg-transact-hspec#readme";
           description = "Helpers for creating database tests with hspec and pg-transact";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hspec-smallcheck" = callPackage
        ({ mkDerivation, base, hspec-core, smallcheck, stdenv }:
         mkDerivation {
           pname = "hspec-smallcheck";
           version = "0.4.2";
           sha256 = "ba09d4b2eb1c6ff2d680aa09b36eb6c0b395cc258ae716b8d1db511073385ed3";
           revision = "1";
           editedCabalFile = "19fp4xandn3jn1hzs1bkjbncyv74908wzcqkvk7xf0dfmm0wpmqw";
           libraryHaskellDepends = [ base hspec-core smallcheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hspec.github.io/";
           description = "SmallCheck support for the Hspec testing framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-wai" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , hspec-core, hspec-expectations, http-types, QuickCheck, stdenv
         , text, transformers, wai, wai-extra
         }:
         mkDerivation {
           pname = "hspec-wai";
           version = "0.9.0";
           sha256 = "c8fe9ed0a1b77d6ad09b3d9c34e4dc65a2e5f1f0bbc6f7b8e2106d3d7556dfba";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive hspec-core
             hspec-expectations http-types QuickCheck text transformers wai
             wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-wai#readme";
           description = "Experimental Hspec support for testing WAI applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-wai-json" = callPackage
        ({ mkDerivation, aeson, aeson-qq, base, bytestring
         , case-insensitive, hspec-wai, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "hspec-wai-json";
           version = "0.9.0";
           sha256 = "a1c5401fa7fc7ffc46950274702a0ef30045568c2d2f5bc528cd6bf26ae28085";
           libraryHaskellDepends = [
             aeson aeson-qq base bytestring case-insensitive hspec-wai
             template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/hspec-wai#readme";
           description = "Testing JSON APIs with hspec-wai";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hspec-webdriver" = callPackage
        ({ mkDerivation, aeson, base, data-default, hashable, hspec
         , hspec-core, HUnit, lifted-base, stdenv, stm, text, transformers
         , unordered-containers, webdriver
         }:
         mkDerivation {
           pname = "hspec-webdriver";
           version = "1.2.0";
           sha256 = "05d0f818de7f21e3dcb10860f60fe53b393fad75892ec1c520815dd53a0385c8";
           libraryHaskellDepends = [
             aeson base data-default hashable hspec hspec-core HUnit lifted-base
             stm text transformers unordered-containers webdriver
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
           description = "Write end2end web application tests using webdriver and hspec";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hsshellscript" = callPackage
        ({ mkDerivation, base, c2hs, directory, parsec, random, stdenv
         , unix
         }:
         mkDerivation {
           pname = "hsshellscript";
           version = "3.4.5";
           sha256 = "7dbfd595832e4ecd7d12d8b36ce8a82192d79a764631c98071440a7daa7ec634";
           libraryHaskellDepends = [ base directory parsec random unix ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.volker-wysk.de/hsshellscript/";
           description = "Haskell for Unix shell scripting tasks";
           license = "LGPL";
         }) {};
      "hstatistics" = callPackage
        ({ mkDerivation, array, base, hmatrix, hmatrix-gsl-stats, random
         , stdenv, vector
         }:
         mkDerivation {
           pname = "hstatistics";
           version = "0.3";
           sha256 = "7af3f698d1bded8690b1ec05017ae05310fad1f2d25ec138fb72994b0812eeec";
           libraryHaskellDepends = [
             array base hmatrix hmatrix-gsl-stats random vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/hstatistics";
           description = "Statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hstatsd" = callPackage
        ({ mkDerivation, base, bytestring, mtl, network, stdenv, text }:
         mkDerivation {
           pname = "hstatsd";
           version = "0.1";
           sha256 = "446779594257c0fa02d5271c997ee0c22f74f7636d89e34394ad87e5bd285824";
           libraryHaskellDepends = [ base bytestring mtl network text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/hstatsd";
           description = "Quick and dirty statsd interface";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "hsx-jmacro" = callPackage
        ({ mkDerivation, base, hsp, jmacro, mtl, stdenv, text
         , wl-pprint-text
         }:
         mkDerivation {
           pname = "hsx-jmacro";
           version = "7.3.8";
           sha256 = "97c7efa3f8acc5159d697e080fb9ed7abddfca64e4f03d67cb66583fd7114495";
           libraryHaskellDepends = [
             base hsp jmacro mtl text wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "hsp+jmacro support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsx2hs" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-exts
         , haskell-src-meta, mtl, stdenv, template-haskell, utf8-string
         }:
         mkDerivation {
           pname = "hsx2hs";
           version = "0.14.1.2";
           sha256 = "ab3c3af38c6171be61489846d10a175c48674ecddd2bc1c6bd48a1e705b3421a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring haskell-src-exts haskell-src-meta mtl
             template-haskell utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/hsx2hs";
           description = "HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsyslog" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, stdenv }:
         mkDerivation {
           pname = "hsyslog";
           version = "5.0.1";
           sha256 = "86de0d8820a6cb7fe166e046ae00c1bbe37d27885cd3aa701deaca8fdf646016";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/hsyslog";
           description = "FFI interface to syslog(3) from POSIX.1-2001";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hsyslog-udp" = callPackage
        ({ mkDerivation, base, bytestring, hsyslog, network, stdenv, text
         , time, unix
         }:
         mkDerivation {
           pname = "hsyslog-udp";
           version = "0.2.0";
           sha256 = "94bff17a34cd34efc4ce5be6905f973d0d114fef9cab5ef8bf2eaf72dbbb927c";
           libraryHaskellDepends = [
             base bytestring hsyslog network text time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ThoughtLeadr/hsyslog-udp";
           description = "Log to syslog over a network via UDP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "htaglib" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, taglib, text
         , transformers
         }:
         mkDerivation {
           pname = "htaglib";
           version = "1.1.1";
           sha256 = "238f11b9018946760a1a22cb7bfab5abe332e4798b20dfeaecf10f3202ff9928";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring text transformers ];
           librarySystemDepends = [ taglib ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/htaglib";
           description = "Bindings to TagLib, audio meta-data library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) taglib;};
      "html" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "html";
           version = "1.0.1.2";
           sha256 = "0c35495ea33d65e69c69bc7441ec8e1af69fbb43433c2aa3406c0a13a3ab3061";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "HTML combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "html-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , containers, resourcet, stdenv, tagstream-conduit, text
         , transformers, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "html-conduit";
           version = "1.2.1.2";
           sha256 = "536e04c9f35ab60cdb6ba62b44d903c9e55eb31d50c82cffadc30b3b33b9519c";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra containers resourcet
             tagstream-conduit text transformers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/xml";
           description = "Parse HTML documents using xml-conduit datatypes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "html-email-validate" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "html-email-validate";
           version = "0.2.0.0";
           sha256 = "3d2a3ec75b638cec71df57512473052d485dc118aec4662d5a8dae5e95aa6daf";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           description = "Validating an email address against HTML standard";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "html-entity-map" = callPackage
        ({ mkDerivation, base, stdenv, text, unordered-containers }:
         mkDerivation {
           pname = "html-entity-map";
           version = "0.1.0.0";
           sha256 = "983600c33e8515e6ca31742d25490fb5a7be02503331963621b0ba5cd70d344c";
           revision = "1";
           editedCabalFile = "1y2w3jmdxwa8lfj1gr4ln98v1474bw1cjsdfpmbaphcjj9bjg0sg";
           libraryHaskellDepends = [ base text unordered-containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/html-entity-map";
           description = "Map from HTML5 entity names to the corresponding Unicode text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "htoml" = callPackage
        ({ mkDerivation, aeson, base, containers, old-locale, parsec
         , stdenv, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "htoml";
           version = "1.0.0.3";
           sha256 = "08f8d88a326f80fb55c0abb9431941c3a2a30f2d58f49c94349961ceeb4c856f";
           libraryHaskellDepends = [
             aeson base containers old-locale parsec text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cies/htoml";
           description = "Parser for TOML files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-api-data" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-iso8601, base, bytestring
         , Cabal, cabal-doctest, containers, hashable, http-types, stdenv
         , text, time, time-locale-compat, unordered-containers
         , uri-bytestring, uuid-types
         }:
         mkDerivation {
           pname = "http-api-data";
           version = "0.3.7.2";
           sha256 = "68516edab1c01d083a9f08baa9cb78adb60cb3f6e645f1096d02879a68bf6c82";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             attoparsec attoparsec-iso8601 base bytestring containers hashable
             http-types text time time-locale-compat unordered-containers
             uri-bytestring uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fizruk/http-api-data";
           description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-client" = callPackage
        ({ mkDerivation, array, base, base64-bytestring, blaze-builder
         , bytestring, case-insensitive, containers, cookie, deepseq
         , exceptions, filepath, ghc-prim, http-types, mime-types, network
         , network-uri, random, stdenv, stm, streaming-commons, text, time
         , transformers
         }:
         mkDerivation {
           pname = "http-client";
           version = "0.5.10";
           sha256 = "f5f9696ed632f945f113ff23c98656aec4bcc77ed3653286c72f567d9286bac2";
           libraryHaskellDepends = [
             array base base64-bytestring blaze-builder bytestring
             case-insensitive containers cookie deepseq exceptions filepath
             ghc-prim http-types mime-types network network-uri random stm
             streaming-commons text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "An HTTP client engine";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-client-openssl" = callPackage
        ({ mkDerivation, base, HsOpenSSL, http-client, network, stdenv }:
         mkDerivation {
           pname = "http-client-openssl";
           version = "0.2.1.1";
           sha256 = "24ee231322d25ea17ad9503c9460f5b9c20e3ff11320e3abcac6b13e4e157a9c";
           libraryHaskellDepends = [ base HsOpenSSL http-client network ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "http-client backend using the OpenSSL library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-client-tls" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, connection
         , containers, cryptonite, data-default-class, exceptions
         , http-client, http-types, memory, network, network-uri, stdenv
         , text, tls, transformers
         }:
         mkDerivation {
           pname = "http-client-tls";
           version = "0.3.5.3";
           sha256 = "471abf8f29a909f40b21eab26a410c0e120ae12ce337512a61dae9f52ebb4362";
           libraryHaskellDepends = [
             base bytestring case-insensitive connection containers cryptonite
             data-default-class exceptions http-client http-types memory network
             network-uri text tls transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/http-client";
           description = "http-client backend using the connection package and tls library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-common" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , case-insensitive, directory, mtl, network, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "http-common";
           version = "0.8.2.0";
           sha256 = "2915e77b0d000a617d4c1304fdc46f45b70acc0942670066a95b2c8d4e504593";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring case-insensitive
             directory mtl network text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://research.operationaldynamics.com/projects/http-streams/";
           description = "Common types for HTTP clients and servers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-conduit" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
         , http-client, http-client-tls, http-types, mtl, resourcet, stdenv
         , transformers, unliftio-core
         }:
         mkDerivation {
           pname = "http-conduit";
           version = "2.3.0";
           sha256 = "a43b401a2bf072037d79cf450de958ff71b158343c4eb8f679d3bc23142a217d";
           libraryHaskellDepends = [
             aeson base bytestring conduit conduit-extra http-client
             http-client-tls http-types mtl resourcet transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/http-conduit";
           description = "HTTP client package with conduit interface and HTTPS support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-date" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "http-date";
           version = "0.0.6.1";
           sha256 = "f2e106603e2b3f710f1189e478f6c20067d9a9d21a20a633fe362b3f91807636";
           libraryHaskellDepends = [ array attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "HTTP Date parser/formatter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-link-header" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, errors, http-api-data, network-uri, stdenv
         , text
         }:
         mkDerivation {
           pname = "http-link-header";
           version = "1.0.3";
           sha256 = "59bd2db4e7d14b6f7ce86848af5e38b4bd2e9963e9ffe5068c7b1a710dbdd7fe";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion errors
             http-api-data network-uri text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/http-link-header";
           description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "http-media" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , stdenv, utf8-string
         }:
         mkDerivation {
           pname = "http-media";
           version = "0.7.1.2";
           sha256 = "fe93d57a5bfcaf3acf6a0b6f643c179afb69a91f81057f149c5e89e54dcb7b07";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/zmthy/http-media";
           description = "Processing HTTP Content-Type and Accept headers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "http-reverse-proxy" = callPackage
        ({ mkDerivation, async, base, blaze-builder, bytestring
         , case-insensitive, conduit, conduit-extra, containers
         , data-default-class, http-client, http-types, lifted-base
         , monad-control, network, resourcet, stdenv, streaming-commons
         , text, transformers, wai, wai-logger, word8
         }:
         mkDerivation {
           pname = "http-reverse-proxy";
           version = "0.4.5";
           sha256 = "5676add3b73e5c140418bd5018416dd5c87fb526d7c25efbd2a1b0fac60f2e6c";
           libraryHaskellDepends = [
             async base blaze-builder bytestring case-insensitive conduit
             conduit-extra containers data-default-class http-client http-types
             lifted-base monad-control network resourcet streaming-commons text
             transformers wai wai-logger word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/http-reverse-proxy";
           description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-streams" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, Cabal, case-insensitive, directory
         , HsOpenSSL, http-common, io-streams, mtl, network, network-uri
         , openssl-streams, stdenv, text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "http-streams";
           version = "0.8.5.5";
           sha256 = "0e422240e61f5837e4736eff3172184678c8f3e403e1e2da10a90bec7c7f5ebc";
           revision = "1";
           editedCabalFile = "0mgj62khq2abq53y03qww66k74pxhnid8yiqrlhggj9cjv7m2my5";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-builder bytestring
             case-insensitive directory HsOpenSSL http-common io-streams mtl
             network network-uri openssl-streams text transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/afcowie/http-streams/";
           description = "An HTTP client using io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http-types" = callPackage
        ({ mkDerivation, array, base, blaze-builder, bytestring
         , case-insensitive, stdenv, text
         }:
         mkDerivation {
           pname = "http-types";
           version = "0.9.1";
           sha256 = "7bed648cdc1c69e76bf039763dbe1074b55fd2704911dd0cb6b7dfebf1b6f550";
           libraryHaskellDepends = [
             array base blaze-builder bytestring case-insensitive text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aristidb/http-types";
           description = "Generic HTTP types for Haskell (for both client and server code)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "http2" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, array, base, bytestring
         , bytestring-builder, case-insensitive, containers, directory
         , filepath, hex, psqueues, stdenv, stm, text, unordered-containers
         , vector, word8
         }:
         mkDerivation {
           pname = "http2";
           version = "1.6.3";
           sha256 = "61620eca0f57875a6a9bd24f9cc04c301b5c3c668bf98f85e9989aad5d069c43";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base bytestring bytestring-builder case-insensitive
             containers psqueues stm
           ];
           executableHaskellDepends = [
             aeson aeson-pretty array base bytestring bytestring-builder
             case-insensitive containers directory filepath hex text
             unordered-containers vector word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kazu-yamamoto/http2";
           description = "HTTP/2 library including frames, priority queues and HPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "human-readable-duration" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "human-readable-duration";
           version = "0.2.0.3";
           sha256 = "93f3a91a2994588728ae757dcca5104e18a570b3591773aa7f03c524c97599da";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/human-readable-duration#readme";
           description = "Provide duration helper";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hunit-dejafu" = callPackage
        ({ mkDerivation, base, dejafu, exceptions, HUnit, stdenv }:
         mkDerivation {
           pname = "hunit-dejafu";
           version = "0.7.1.1";
           sha256 = "de0bb118abdaaeada2ed759cbb0e05b15916ab36038ff01642347f27d0262cad";
           libraryHaskellDepends = [ base dejafu exceptions HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Deja Fu support for the HUnit test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hvect" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hvect";
           version = "0.4.0.0";
           sha256 = "cb50ef1a7f189f8c217a7d0d55b5568b2fa9bbe415b14ce114a93d2e1d5e30b6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/hvect";
           description = "Simple strict heterogeneous lists";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hw-balancedparens" = callPackage
        ({ mkDerivation, base, hw-bits, hw-excess, hw-prim
         , hw-rankselect-base, stdenv, storable-tuple, vector
         }:
         mkDerivation {
           pname = "hw-balancedparens";
           version = "0.2.0.1";
           sha256 = "99d164e1f5b1fc50bfdcc887b1ef5f6cdfc42f702b847d06f31db5dd04b5e8cd";
           libraryHaskellDepends = [
             base hw-bits hw-excess hw-prim hw-rankselect-base storable-tuple
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-balancedparens#readme";
           description = "Balanced parentheses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-bits" = callPackage
        ({ mkDerivation, base, bytestring, hw-int, hw-prim, hw-string-parse
         , safe, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-bits";
           version = "0.7.0.2";
           sha256 = "38621e0166bac49c1f68f85122c3fbfcadc6a3c447dd7f48ff1020151ad10ae8";
           libraryHaskellDepends = [
             base bytestring hw-int hw-prim hw-string-parse safe vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-bits#readme";
           description = "Bit manipulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-conduit" = callPackage
        ({ mkDerivation, array, base, bytestring, conduit
         , conduit-combinators, stdenv, time, word8
         }:
         mkDerivation {
           pname = "hw-conduit";
           version = "0.2.0.3";
           sha256 = "6a20170fff38bb940121ecc922aa4cdb979b7869cfab6a0b18f00476eda3dca5";
           libraryHaskellDepends = [
             array base bytestring conduit conduit-combinators time word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-conduit#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hw-diagnostics" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hw-diagnostics";
           version = "0.0.0.5";
           sha256 = "5ceaec01c446c5a507e889f514201e4739ea6f1cc22a4c68894bb023257bd931";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-diagnostics#readme";
           description = "Diagnostics library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-excess" = callPackage
        ({ mkDerivation, base, hw-bits, hw-prim, hw-rankselect-base, safe
         , stdenv, storable-record, vector
         }:
         mkDerivation {
           pname = "hw-excess";
           version = "0.2.0.0";
           sha256 = "f17a4b6098f5b0337d00d77025bbcbf2c0736576bcb36eeeec1aff3b00b561a9";
           libraryHaskellDepends = [
             base hw-bits hw-prim hw-rankselect-base safe storable-record vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-excess#readme";
           description = "Excess";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-hedgehog" = callPackage
        ({ mkDerivation, base, hedgehog, stdenv, vector }:
         mkDerivation {
           pname = "hw-hedgehog";
           version = "0.1.0.1";
           sha256 = "26177ea0748f5d85e70e1759ea6a88af15e5bfdbf0a174a80e7f28607addcf3a";
           libraryHaskellDepends = [ base hedgehog vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/githubuser/hw-hedgehog#readme";
           description = "Extra hedgehog functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-hspec-hedgehog" = callPackage
        ({ mkDerivation, base, call-stack, hedgehog, hspec, HUnit, stdenv
         }:
         mkDerivation {
           pname = "hw-hspec-hedgehog";
           version = "0.1.0.2";
           sha256 = "c77c2586fb7e43485e494412d31b6cf28e604bf1e958b58161f890a1fdcd4ee5";
           libraryHaskellDepends = [ base call-stack hedgehog hspec HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/githubuser/hw-hspec-hedgehog#readme";
           description = "Interoperability between hspec and hedgehog";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-int" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hw-int";
           version = "0.0.0.3";
           sha256 = "8336a5111638d3298266c9a1458233a09798bfa6d558219d4fe3bdd35d8d4a3f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-int#readme";
           description = "Integers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-json" = callPackage
        ({ mkDerivation, ansi-wl-pprint, array, attoparsec, base
         , bytestring, conduit, containers, criterion, dlist
         , hw-balancedparens, hw-bits, hw-conduit, hw-diagnostics, hw-mquery
         , hw-parser, hw-prim, hw-rankselect, hw-rankselect-base, mmap
         , mono-traversable, resourcet, stdenv, text, vector, word8
         }:
         mkDerivation {
           pname = "hw-json";
           version = "0.6.0.0";
           sha256 = "bb8e20e8a035279ee398c6d9162cda3f965d4f96e39c1d363be2456b1feb41d9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint array attoparsec base bytestring conduit containers
             dlist hw-balancedparens hw-bits hw-conduit hw-mquery hw-parser
             hw-prim hw-rankselect hw-rankselect-base mmap mono-traversable
             resourcet text vector word8
           ];
           executableHaskellDepends = [
             ansi-wl-pprint array attoparsec base bytestring conduit containers
             criterion dlist hw-balancedparens hw-bits hw-conduit hw-diagnostics
             hw-mquery hw-parser hw-prim hw-rankselect hw-rankselect-base mmap
             mono-traversable resourcet text vector word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-json#readme";
           description = "Memory efficient JSON parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-mquery" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, dlist, stdenv }:
         mkDerivation {
           pname = "hw-mquery";
           version = "0.1.0.1";
           sha256 = "724aa5b0490b57a89fb71b7042a3770f7978a4c975aa3d1b671576b0e83e113d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ ansi-wl-pprint base dlist ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-mquery#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hw-parser" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, hw-prim
         , mono-traversable, stdenv, text
         }:
         mkDerivation {
           pname = "hw-parser";
           version = "0.0.0.3";
           sha256 = "dd8417c76ef5da89df2842b42767d825815ec3594c8e80e28e96570d8046c6f2";
           libraryHaskellDepends = [
             attoparsec base bytestring hw-prim mono-traversable text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-parser#readme";
           description = "Simple parser support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-prim" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "hw-prim";
           version = "0.5.0.0";
           sha256 = "32dddccbe58eedf215bc4544d05720883b47f5eb5a048faf530a9e1782df5103";
           libraryHaskellDepends = [ base bytestring vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-prim#readme";
           description = "Primitive functions and data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-rankselect" = callPackage
        ({ mkDerivation, base, deepseq, directory, hw-balancedparens
         , hw-bits, hw-prim, hw-rankselect-base, mmap, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-rankselect";
           version = "0.10.0.3";
           sha256 = "aa1d079f56064c649bc820219b55ae16d723faed663283ab73760db4f2f514cb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base deepseq hw-balancedparens hw-bits hw-prim hw-rankselect-base
             vector
           ];
           executableHaskellDepends = [
             base directory hw-bits hw-prim hw-rankselect-base mmap vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-rankselect#readme";
           description = "Rank-select";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-rankselect-base" = callPackage
        ({ mkDerivation, base, hw-bits, hw-int, hw-prim, hw-string-parse
         , safe, stdenv, vector
         }:
         mkDerivation {
           pname = "hw-rankselect-base";
           version = "0.2.0.2";
           sha256 = "de4f88db97ae2f477c3ca1ec18947a086b10a6f4815f0de0a2686d190fbae27a";
           libraryHaskellDepends = [
             base hw-bits hw-int hw-prim hw-string-parse safe vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-rankselect-base#readme";
           description = "Rank-select base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-string-parse" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hw-string-parse";
           version = "0.0.0.4";
           sha256 = "64a1ebf8d311e255f293c40febfb346da23a55a454b67f2d5e33de1cb7e9f2b7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-string-parse#readme";
           description = "String parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hw-succinct" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, conduit, containers
         , hw-balancedparens, hw-bits, hw-prim, hw-rankselect
         , hw-rankselect-base, mmap, mono-traversable, stdenv, text, vector
         , word8
         }:
         mkDerivation {
           pname = "hw-succinct";
           version = "0.1.0.1";
           sha256 = "002c578c1ff7a33cbef089b2a943218777c14125629f6bf63dea9e7c8e3749db";
           libraryHaskellDepends = [
             attoparsec base bytestring conduit containers hw-balancedparens
             hw-bits hw-prim hw-rankselect hw-rankselect-base mmap
             mono-traversable text vector word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-succinct#readme";
           description = "Succint datastructures";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hw-xml" = callPackage
        ({ mkDerivation, ansi-wl-pprint, array, attoparsec, base
         , bytestring, cereal, conduit, containers, ghc-prim
         , hw-balancedparens, hw-bits, hw-conduit, hw-parser, hw-prim
         , hw-rankselect, hw-rankselect-base, lens, mtl, resourcet, stdenv
         , transformers, vector, word8
         }:
         mkDerivation {
           pname = "hw-xml";
           version = "0.1.0.1";
           sha256 = "6dd9567dcbbebf105eeef83628840747bc967443d52f389f3932d7fb0d050e3a";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             ansi-wl-pprint array attoparsec base bytestring cereal conduit
             containers ghc-prim hw-balancedparens hw-bits hw-conduit hw-parser
             hw-prim hw-rankselect hw-rankselect-base lens mtl resourcet
             transformers vector word8
           ];
           executableHaskellDepends = [
             base bytestring hw-balancedparens hw-bits hw-prim hw-rankselect
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell-works/hw-xml#readme";
           description = "Conduits for tokenizing streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hweblib" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, mtl
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "hweblib";
           version = "0.6.3";
           sha256 = "1e8ee12baac496d56831935a60e78f54eb43d2b7268bf7d31acb6b9a63e9b50d";
           libraryHaskellDepends = [
             attoparsec base bytestring containers mtl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aycanirican/hweblib";
           description = "Haskell Web Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hworker" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, hedis, stdenv
         , text, time, uuid
         }:
         mkDerivation {
           pname = "hworker";
           version = "0.1.0.1";
           sha256 = "34cbcc4db8f190ab0dc02a072adcf1fc75b7beab7e545982872bf265a1223f1d";
           revision = "1";
           editedCabalFile = "0w2bpvfr68n2qipvr8gc5096dain3g2536m4n9kqx1fahf12mwy5";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring hedis text time uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dbp/hworker";
           description = "A reliable at-least-once job queue built on top of redis";
           license = stdenv.lib.licenses.isc;
         }) {};
      "hxt" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , directory, filepath, hxt-charproperties, hxt-regex-xmlschema
         , hxt-unicode, mtl, network-uri, parsec, stdenv
         }:
         mkDerivation {
           pname = "hxt";
           version = "9.3.1.16";
           sha256 = "0d55e35cc718891d0987b7c8e6c43499efa727c68bc92e88e8b99461dff403e3";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq directory filepath
             hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
             parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "A collection of tools for processing XML with Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-charproperties" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "hxt-charproperties";
           version = "9.2.0.1";
           sha256 = "e46614d6bf0390b2a6a1aeeb0771e6d366944da40fb21c12c2f8a94d1f47b4d6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Character properties and classes for XML and Unicode";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-css" = callPackage
        ({ mkDerivation, base, hxt, parsec, split, stdenv }:
         mkDerivation {
           pname = "hxt-css";
           version = "0.1.0.3";
           sha256 = "0244fc145d5923df0522ad80949e9b221b01a028c755ebfc4740339881ef65b7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base hxt parsec split ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hxt-css";
           description = "CSS selectors for HXT";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hxt-curl" = callPackage
        ({ mkDerivation, base, bytestring, curl, hxt, parsec, stdenv }:
         mkDerivation {
           pname = "hxt-curl";
           version = "9.1.1.1";
           sha256 = "cdc1cc8bf9b8699cabdee965c9737d497c199b5cf82eabc66a5fe3f2ffb3c5ea";
           libraryHaskellDepends = [ base bytestring curl hxt parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "LibCurl interface for HXT";
           license = "unknown";
         }) {};
      "hxt-expat" = callPackage
        ({ mkDerivation, base, bytestring, hexpat, hxt, stdenv }:
         mkDerivation {
           pname = "hxt-expat";
           version = "9.1.1";
           sha256 = "10d9c43c20c82e879fbc06944fcfed373f8b43bd3e0a44f9c712db30a27022d6";
           libraryHaskellDepends = [ base bytestring hexpat hxt ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
           description = "Expat parser for HXT";
           license = "unknown";
         }) {};
      "hxt-http" = callPackage
        ({ mkDerivation, base, bytestring, HTTP, hxt, network, network-uri
         , parsec, stdenv
         }:
         mkDerivation {
           pname = "hxt-http";
           version = "9.1.5.2";
           sha256 = "6fa19d03991d53c34f4525a4fdfaafde56dd48459093b4502832a1fdd9dfdd0b";
           libraryHaskellDepends = [
             base bytestring HTTP hxt network network-uri parsec
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Interface to native Haskell HTTP package HTTP";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-pickle-utils" = callPackage
        ({ mkDerivation, base, hxt, mtl, stdenv }:
         mkDerivation {
           pname = "hxt-pickle-utils";
           version = "0.1.0.3";
           sha256 = "9ddba19f27d9d8c155012da4dd9598fb318cab862da10f14ee4bc3eb5321a9c5";
           revision = "2";
           editedCabalFile = "109jh2iibhnllkwpqpiyfwdqjn3v06ap58fhyzikjdqzz0rzwgh5";
           libraryHaskellDepends = [ base hxt mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/silkapp/hxt-pickle-utils";
           description = "Utility functions for using HXT picklers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hxt-regex-xmlschema" = callPackage
        ({ mkDerivation, base, bytestring, hxt-charproperties, parsec
         , stdenv, text
         }:
         mkDerivation {
           pname = "hxt-regex-xmlschema";
           version = "9.2.0.3";
           sha256 = "f4743ba65498d6001cdfcf5cbc3317d4bc43941be5c7030b60beb83408c892b0";
           libraryHaskellDepends = [
             base bytestring hxt-charproperties parsec text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
           description = "A regular expression library for W3C XML Schema regular expressions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hxt-tagsoup" = callPackage
        ({ mkDerivation, base, hxt, hxt-charproperties, hxt-unicode, stdenv
         , tagsoup
         }:
         mkDerivation {
           pname = "hxt-tagsoup";
           version = "9.1.4";
           sha256 = "d77b290d63acf0ac8e5a07c5c69753f9984b97e0c9d2c0befadd7dd5b144b283";
           libraryHaskellDepends = [
             base hxt hxt-charproperties hxt-unicode tagsoup
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "TagSoup parser for HXT";
           license = "unknown";
         }) {};
      "hxt-unicode" = callPackage
        ({ mkDerivation, base, hxt-charproperties, stdenv }:
         mkDerivation {
           pname = "hxt-unicode";
           version = "9.0.2.4";
           sha256 = "7b5823f3bd94b57022d9d84ab3555303653c5121eaaef2ee1fd4918f3c434466";
           libraryHaskellDepends = [ base hxt-charproperties ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/UweSchmidt/hxt";
           description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "hybrid-vectors" = callPackage
        ({ mkDerivation, base, deepseq, primitive, semigroups, stdenv
         , vector
         }:
         mkDerivation {
           pname = "hybrid-vectors";
           version = "0.2.2";
           sha256 = "41c6c371df64b9083354e66101ad8c92f87458474fed2a149e4632db644f86d7";
           libraryHaskellDepends = [
             base deepseq primitive semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/hybrid-vectors";
           description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hyperloglog" = callPackage
        ({ mkDerivation, approximate, base, binary, bits, bytes, Cabal
         , cabal-doctest, cereal, cereal-vector, comonad, deepseq
         , distributive, hashable, lens, reflection, safecopy, semigroupoids
         , semigroups, siphash, stdenv, tagged, vector
         }:
         mkDerivation {
           pname = "hyperloglog";
           version = "0.4.2";
           sha256 = "f5b83cfcc2c9d1e40e04bbc9724428b2655c3b54b26beef714c98dabee5f1048";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             approximate base binary bits bytes cereal cereal-vector comonad
             deepseq distributive hashable lens reflection safecopy
             semigroupoids semigroups siphash tagged vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/analytics/hyperloglog";
           description = "An approximate streaming (constant space) unique object counter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "hyphenation" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cabal-doctest, containers
         , stdenv, unordered-containers, zlib
         }:
         mkDerivation {
           pname = "hyphenation";
           version = "0.7.1";
           sha256 = "a25c5073f42896ccf81ff5936f3a42f290730f61da7f225b126ad22ff601b1c0";
           revision = "1";
           editedCabalFile = "04kn5pdb1f6yz959qjv3bcbqi3zs88fn6rwxv45m95lx6pzywhln";
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base bytestring containers unordered-containers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/hyphenation";
           description = "Configurable Knuth-Liang hyphenation";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "ical" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, containers, either, mtl
         , stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "ical";
           version = "0.0.1";
           sha256 = "f5e45df4249aa90a87080ef6714d77d8e961c5ba50e6813062379fcdaea7d882";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base containers either mtl text time transformers
           ];
           executableHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chrisdone/ical#readme";
           description = "iCalendar format parser and org-mode converter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iconv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "iconv";
           version = "0.4.1.3";
           sha256 = "36425168e3314bc83ba5ee95152872d52e94ee0f9503f3591f84d458e005b554";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "String encoding conversion";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "identicon" = callPackage
        ({ mkDerivation, base, bytestring, JuicyPixels, stdenv }:
         mkDerivation {
           pname = "identicon";
           version = "0.2.2";
           sha256 = "3679b4fcc0a5bcc93b6ed2009f43e3ec87bf9549aee3eef182f7403d0c10f263";
           revision = "2";
           editedCabalFile = "0shj211pvba5cfgs1vy9f8jd84by8j4mprk4yvhv4ia1kl6dq4mr";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring JuicyPixels ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/identicon";
           description = "Flexible generation of identicons";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "idris" = callPackage
        ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal
         , ansi-wl-pprint, array, async, base, base64-bytestring, binary
         , blaze-html, blaze-markup, bytestring, Cabal, cheapskate
         , code-page, containers, deepseq, directory, filepath, fingertree
         , fsnotify, haskeline, ieee754, megaparsec, mtl, network
         , optparse-applicative, pretty, process, regex-tdfa, safe, split
         , stdenv, terminal-size, text, time, transformers, uniplate, unix
         , unordered-containers, utf8-string, vector
         , vector-binary-instances, zip-archive
         }:
         mkDerivation {
           pname = "idris";
           version = "1.2.0";
           sha256 = "b32f5ebcb379ceb4ea30a38f70a5ca0863a13af25d15690bd303f2902b2d352e";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal directory filepath process ];
           libraryHaskellDepends = [
             aeson annotated-wl-pprint ansi-terminal ansi-wl-pprint array async
             base base64-bytestring binary blaze-html blaze-markup bytestring
             cheapskate code-page containers deepseq directory filepath
             fingertree fsnotify haskeline ieee754 megaparsec mtl network
             optparse-applicative pretty process regex-tdfa safe split
             terminal-size text time transformers uniplate unix
             unordered-containers utf8-string vector vector-binary-instances
             zip-archive
           ];
           executableHaskellDepends = [
             base directory filepath haskeline transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.idris-lang.org/";
           description = "Functional Programming Language with Dependent Types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ieee754" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ieee754";
           version = "0.8.0";
           sha256 = "0e2dff9c37f59acf5c64f978ec320005e9830f276f9f314e4bfed3f482289ad1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/patperry/hs-ieee754";
           description = "Utilities for dealing with IEEE floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "if" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "if";
           version = "0.1.0.0";
           sha256 = "28f673e867dbe0f51324d97fcb7884673a34912593746520a470116b167a141d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/if";
           description = "(?) and (?>) conditional operator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iff" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv }:
         mkDerivation {
           pname = "iff";
           version = "0.0.6";
           sha256 = "6b8845808481307e2d374fd8d17e82a5de1284e612cf8ade27db8785e9e12837";
           libraryHaskellDepends = [ base binary bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/iff/";
           description = "Constructing and dissecting IFF files";
           license = "GPL";
         }) {};
      "ignore" = callPackage
        ({ mkDerivation, base, directory, Glob, mtl, path, pcre-heavy
         , stdenv, text
         }:
         mkDerivation {
           pname = "ignore";
           version = "0.1.1.0";
           sha256 = "aaf481fdab8bdc5a506e4726eadf56697726f82086a3cd0439526b9442c73575";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base directory Glob mtl path pcre-heavy text
           ];
           executableHaskellDepends = [ base directory path ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/ignore";
           description = "Handle ignore files of different VCSes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ihs" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "ihs";
           version = "0.1.0.2";
           sha256 = "98477e742e5f131c8ceae4f2ca451bee3de7135340005252d107fc791edaf932";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/ihs";
           description = "Interpolated Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "ilist" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ilist";
           version = "0.3.1.0";
           sha256 = "e898e1dd1077e5a268f66e2de15f15ef64eddac94133954c9e054d59092afe97";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/ilist";
           description = "Optimised list functions for doing index-related things";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "imagesize-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , exceptions, stdenv
         }:
         mkDerivation {
           pname = "imagesize-conduit";
           version = "1.1";
           sha256 = "31c5784578b305921b89f7ab6fca35747e5a35f12884770b78c31e3a0a01ac19";
           revision = "3";
           editedCabalFile = "0p4zmizr01pg3d7gb0q88j1alvvlzbdvzyf1wbgajng68a4g0li9";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra exceptions
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/silkapp/imagesize-conduit";
           description = "Determine the size of some common image formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "immortal" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, stdenv, stm
         , transformers-base
         }:
         mkDerivation {
           pname = "immortal";
           version = "0.2.2.1";
           sha256 = "ed4aa1a2883a693a73fec47c8c2d5332d61a0626a2013403e1a8fb25cc6c8d8e";
           libraryHaskellDepends = [
             base lifted-base monad-control stm transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/immortal";
           description = "Spawn threads that never die (unless told to do so)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "importify" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, autoexporter, base
         , bytestring, Cabal, containers, filepath, fmt, foldl, hashable
         , haskell-names, haskell-src-exts, hse-cpp, log-warper
         , microlens-platform, optparse-applicative, path, path-io
         , pretty-simple, stdenv, syb, template-haskell, text, text-format
         , turtle, universum, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "importify";
           version = "1.0.1";
           sha256 = "c34736871d15e77f25402902de44bd20bf13167dd8e8882993db8e3b6e39d5ea";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty autoexporter base bytestring Cabal containers
             filepath fmt foldl hashable haskell-names haskell-src-exts hse-cpp
             log-warper microlens-platform path path-io pretty-simple syb
             template-haskell text text-format turtle universum
             unordered-containers yaml
           ];
           executableHaskellDepends = [
             base log-warper optparse-applicative path path-io text universum
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/serokell/importify";
           description = "Tool for haskell imports refactoring";
           license = stdenv.lib.licenses.mit;
         }) {};
      "include-file" = callPackage
        ({ mkDerivation, base, bytestring, random, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "include-file";
           version = "0.1.0.3";
           sha256 = "208f1f3bdc717f5f953cb7c9935c84d6a6291b7cd5ed8a22fa8567184be33d29";
           libraryHaskellDepends = [
             base bytestring random template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Inclusion of files in executables at compile-time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "incremental-parser" = callPackage
        ({ mkDerivation, base, monoid-subclasses, stdenv }:
         mkDerivation {
           pname = "incremental-parser";
           version = "0.2.5.3";
           sha256 = "ea508d2acdd7a2ce5c0ce33d98527b409ca2fa32b7ada59cab1716d164878618";
           libraryHaskellDepends = [ base monoid-subclasses ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blamario/incremental-parser";
           description = "Generic parser library capable of providing partial results from partial input";
           license = "GPL";
         }) {};
      "indentation-core" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "indentation-core";
           version = "0.0.0.1";
           sha256 = "21b78035e8933dddc15a8e90244c89daebea3043957b10a3f37a6775879dda8c";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/adamsmd/indentation";
           description = "Indentation sensitive parsing combinators core library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "indentation-parsec" = callPackage
        ({ mkDerivation, base, indentation-core, mtl, parsec, stdenv }:
         mkDerivation {
           pname = "indentation-parsec";
           version = "0.0.0.1";
           sha256 = "9716e5f757891a8ae07f9e67dd18952c151da66160a9ffed3c4fd013118b478b";
           libraryHaskellDepends = [ base indentation-core mtl parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/adamsmd/indentation";
           description = "Indentation sensitive parsing combinators for Parsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "indents" = callPackage
        ({ mkDerivation, base, mtl, parsec, stdenv }:
         mkDerivation {
           pname = "indents";
           version = "0.4.0.1";
           sha256 = "14cfec09c5f54b47c9905b897cd29acdb5f7975ae3512aea938e846cecaf687f";
           libraryHaskellDepends = [ base mtl parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/indents";
           description = "indentation sensitive parser-combinators for parsec";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inflections" = callPackage
        ({ mkDerivation, base, exceptions, megaparsec, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "inflections";
           version = "0.4.0.1";
           sha256 = "e2c9d1063ca39147f42b7cc24be00805203bab6cc65da2732b70d3729d2280ed";
           libraryHaskellDepends = [
             base exceptions megaparsec text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/inflections-hs";
           description = "Inflections library for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "influxdb" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, clock
         , containers, foldl, http-client, http-types, lens, mwc-random
         , network, optional-args, scientific, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "influxdb";
           version = "1.2.2.3";
           sha256 = "31549eb36d0f19af4259ec9f90e8c4bcf5d63f9b5b43ee8f687ed24d88218590";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring clock containers foldl http-client
             http-types lens network optional-args scientific text time
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring containers foldl http-client lens mwc-random
             network optional-args text time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/influxdb-haskell";
           description = "Haskell client library for InfluxDB";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ini" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "ini";
           version = "0.3.5";
           sha256 = "bfd3836dfe38440987ce53f7eeffee00b54e3b7e4c0cd81ba315932cd7562cc6";
           libraryHaskellDepends = [
             attoparsec base text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chrisdone/ini";
           description = "Quick and easy configuration files in the INI format";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inline-c" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, bytestring, containers, gsl
         , gslcblas, hashable, mtl, parsec, parsers, stdenv
         , template-haskell, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "inline-c";
           version = "0.6.0.5";
           sha256 = "87fc915d9acc2b7a39f12dbeb66b475311a6550605c4a7e684df7793c74fc13b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base bytestring containers hashable mtl parsec
             parsers template-haskell transformers unordered-containers vector
           ];
           executableSystemDepends = [ gsl gslcblas ];
           doHaddock = false;
           doCheck = false;
           description = "Write Haskell source files including C code inline. No FFI required.";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) gsl; inherit (pkgs) gslcblas;};
      "inline-c-cpp" = callPackage
        ({ mkDerivation, base, inline-c, safe-exceptions, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "inline-c-cpp";
           version = "0.2.1.0";
           sha256 = "37a690b7d1d798f16b81f6634d9597811dbf057be2d21b6d8ed6cb9cece0a70a";
           libraryHaskellDepends = [
             base inline-c safe-exceptions template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lets you embed C++ code into Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "inline-java" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, directory, filepath, ghc
         , jni, jvm, language-java, mtl, process, stdenv, template-haskell
         , temporary, text
         }:
         mkDerivation {
           pname = "inline-java";
           version = "0.7.2";
           sha256 = "ab004724fc50760ea747c5fd1058860566fa3ce66ccad325fc23428df67cd241";
           libraryHaskellDepends = [
             base bytestring Cabal directory filepath ghc jni jvm language-java
             mtl process template-haskell temporary text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tweag/inline-java#readme";
           description = "Java interop via inline Java code in Haskell modules";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inline-r" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , data-default-class, deepseq, exceptions, inline-c, mtl, pretty
         , primitive, process, R, reflection, setenv, singletons, stdenv
         , template-haskell, text, th-lift, th-orphans, transformers, unix
         , vector
         }:
         mkDerivation {
           pname = "inline-r";
           version = "0.9.1";
           sha256 = "5a65cf0ebc8c1b7647e9f690f518b10e9328e823461dae769fd29bc29ef2fbf2";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default-class deepseq
             exceptions inline-c mtl pretty primitive process reflection setenv
             singletons template-haskell text th-lift th-orphans transformers
             unix vector
           ];
           libraryPkgconfigDepends = [ R ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://tweag.github.io/HaskellR";
           description = "Seamlessly call R from Haskell and vice versa. No FFI required.";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) R;};
      "insert-ordered-containers" = callPackage
        ({ mkDerivation, aeson, base, base-compat, hashable, lens
         , semigroupoids, semigroups, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "insert-ordered-containers";
           version = "0.2.1.0";
           sha256 = "d71d126bf455898492e1d2ba18b2ad04453f8b0e4daff3926a67f0560a712298";
           revision = "4";
           editedCabalFile = "0ls5rm5hg2lqp2m6bfssa30y72x8xyyl7izvwr3w804dpa9fvwrm";
           libraryHaskellDepends = [
             aeson base base-compat hashable lens semigroupoids semigroups text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/insert-ordered-containers#readme";
           description = "Associative containers retaining insertion order for traversals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "inspection-testing" = callPackage
        ({ mkDerivation, base, containers, ghc, mtl, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "inspection-testing";
           version = "0.1.2";
           sha256 = "3289a12f6684475b6c18877b13b63bf4edb55488df57a811e2f830a6cb4a28ea";
           libraryHaskellDepends = [
             base containers ghc mtl template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nomeata/inspection-testing";
           description = "GHC plugin to do inspection testing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "instance-control" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "instance-control";
           version = "0.1.2.0";
           sha256 = "7d6dd381d8fb449584cdb016464cd02794e3ccc527c0589aab16d8a2221c6b73";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lazac/instance-control";
           description = "Controls how the compiler searches for instances using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "integer-logarithms" = callPackage
        ({ mkDerivation, array, base, ghc-prim, integer-gmp, stdenv }:
         mkDerivation {
           pname = "integer-logarithms";
           version = "1.0.2";
           sha256 = "31069ccbff489baf6c4a93cb7475640aabea9366eb0b583236f10714a682b570";
           revision = "1";
           editedCabalFile = "0sccd0d6qrcm3a7nni5lqv40g5m5knf965z4skkgbyyhb3z6qsq8";
           libraryHaskellDepends = [ array base ghc-prim integer-gmp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/integer-logarithms";
           description = "Integer logarithms";
           license = stdenv.lib.licenses.mit;
         }) {};
      "integration" = callPackage
        ({ mkDerivation, base, parallel, stdenv }:
         mkDerivation {
           pname = "integration";
           version = "0.2.1";
           sha256 = "0c27385eadc10a580e78f7b7d4bc919c346b2c9b1e73aea7e7804d824d53582f";
           libraryHaskellDepends = [ base parallel ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ekmett/integration";
           description = "Fast robust numeric integration via tanh-sinh quadrature";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "intern" = callPackage
        ({ mkDerivation, array, base, bytestring, hashable, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "intern";
           version = "0.9.2";
           sha256 = "93a3b20e96dad8d83c9145dfc68bd9d2a6a72c9f64e4a7bc257d330070f42e20";
           libraryHaskellDepends = [
             array base bytestring hashable text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/intern/";
           description = "Efficient hash-consing for arbitrary data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "interpolate" = callPackage
        ({ mkDerivation, base, haskell-src-meta, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "interpolate";
           version = "0.1.1";
           sha256 = "4b08483ab481ea25aa47a6b41c1e852d62cf16ba68a7dc0f6352bb8d747f1e88";
           libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/interpolate#readme";
           description = "String interpolation done right";
           license = stdenv.lib.licenses.mit;
         }) {};
      "interpolatedstring-perl6" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-meta, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "interpolatedstring-perl6";
           version = "1.0.0";
           sha256 = "65e0b2ad2d7482755570637212417b84d1db3bcc3cd1aa348b6b37f57911a1d3";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring haskell-src-meta template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "interpolation" = callPackage
        ({ mkDerivation, base, stdenv, utility-ht }:
         mkDerivation {
           pname = "interpolation";
           version = "0.1.0.2";
           sha256 = "18839b5b8a55bc7844c3d9839eaace933bad160a1879151b403df46eba0450e2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/interpolation/";
           description = "piecewise linear and cubic Hermite interpolation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "intervals" = callPackage
        ({ mkDerivation, array, base, Cabal, cabal-doctest, distributive
         , ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "intervals";
           version = "0.8.1";
           sha256 = "9ce3bf9d31b9ab2296fccc25031fd52e1c3e4abeca5d3bb452a725b586eb7e03";
           revision = "2";
           editedCabalFile = "0ia6pig8g2hg1nr0p46s3npv0gvd2cn9mkgm232slwynyb63qjkn";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ array base distributive ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/intervals";
           description = "Interval Arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "intro" = callPackage
        ({ mkDerivation, base, bifunctors, binary, bytestring, containers
         , deepseq, dlist, extra, hashable, mtl, safe, stdenv, text
         , transformers, unordered-containers, writer-cps-mtl
         }:
         mkDerivation {
           pname = "intro";
           version = "0.3.1.0";
           sha256 = "da5e5e2c1a44d935271ad97b921e97be121f85a923152b5d0a756261ba357492";
           libraryHaskellDepends = [
             base bifunctors binary bytestring containers deepseq dlist extra
             hashable mtl safe text transformers unordered-containers
             writer-cps-mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/intro#readme";
           description = "\"Fixed Prelude\" - Mostly total and safe, provides Text and Monad transformers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "invariant" = callPackage
        ({ mkDerivation, array, base, bifunctors, comonad, containers
         , contravariant, ghc-prim, profunctors, semigroups, StateVar
         , stdenv, stm, tagged, template-haskell, th-abstraction
         , transformers, transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "invariant";
           version = "0.5";
           sha256 = "80bbcaeaeeeb69dfbb28648d7737b48e1d1d6cc4e7ee0d192eaade9a6351e9ff";
           libraryHaskellDepends = [
             array base bifunctors comonad containers contravariant ghc-prim
             profunctors semigroups StateVar stm tagged template-haskell
             th-abstraction transformers transformers-compat
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nfrisby/invariant-functors";
           description = "Haskell98 invariant functors";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "invertible" = callPackage
        ({ mkDerivation, base, haskell-src-meta, invariant, lens
         , partial-isomorphisms, semigroupoids, stdenv, template-haskell
         , transformers, TypeCompose
         }:
         mkDerivation {
           pname = "invertible";
           version = "0.2.0.3";
           sha256 = "8ee341f897bf33dd4e9d7d3033f9ba59d05f175f01274ac734869b6d0385935d";
           libraryHaskellDepends = [
             base haskell-src-meta invariant lens partial-isomorphisms
             semigroupoids template-haskell transformers TypeCompose
           ];
           doHaddock = false;
           doCheck = false;
           description = "bidirectional arrows, bijective functions, and invariant functors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-choice" = callPackage
        ({ mkDerivation, base, lifted-base, monad-control, stdenv
         , template-haskell, transformers, transformers-base
         }:
         mkDerivation {
           pname = "io-choice";
           version = "0.0.6";
           sha256 = "612b281110d18615000704f24fdb54a3b4401f7a39dcfe358433d7b4c22e1cef";
           libraryHaskellDepends = [
             base lifted-base monad-control template-haskell transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Choice for IO and lifted IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-machine" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "io-machine";
           version = "0.2.0.0";
           sha256 = "05dcc8d5fcbb6f0d7f3519488ebf743eaa776bc93c2f8b0d4bbd866ac1331ccb";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoshikuniJujo/io-machine#readme";
           description = "Easy I/O model to learn IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-manager" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "io-manager";
           version = "0.1.0.2";
           sha256 = "bf0aa7740a8aaf31fc4f2570a47957365ae7d9248edd309e694053f1cd804138";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Skeleton library around the IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-memoize" = callPackage
        ({ mkDerivation, async, base, stdenv }:
         mkDerivation {
           pname = "io-memoize";
           version = "1.1.1.0";
           sha256 = "c753a1b1a2fb286bf608d6467e6e7599cde8e641c619885197f298bf1b2f483d";
           libraryHaskellDepends = [ async base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/io-memoize";
           description = "Memoize IO actions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-region" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "io-region";
           version = "0.1.1";
           sha256 = "ee303f66c2b3d33fae877b0dbb7c64624109fc759dffa669ca182e387f1015f1";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/io-region/wiki";
           description = "Exception safe resource management with dynamic regions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-storage" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "io-storage";
           version = "0.3";
           sha256 = "9a0df5cc7ff2eeef11e29e1362fea284f535bc2fe67469bba6dbc41c4f5b49bd";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/io-storage";
           description = "A key-value store in the IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-streams" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
         , network, primitive, process, stdenv, text, time, transformers
         , vector, zlib-bindings
         }:
         mkDerivation {
           pname = "io-streams";
           version = "1.5.0.1";
           sha256 = "5dcb3717933197a84f31be74abf545126b3d25eb0e0d64f722c480d3c46b2c8b";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-builder network primitive
             process text time transformers vector zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple, composable, and easy-to-use stream I/O";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "io-streams-haproxy" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, io-streams, network
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "io-streams-haproxy";
           version = "1.0.0.2";
           sha256 = "77814f8258b5c32707a13e0d30ab2e144e7ad073aee821d6def65554024ed086";
           libraryHaskellDepends = [
             attoparsec base bytestring io-streams network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "HAProxy protocol 1.5 support for io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ip" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, hashable
         , primitive, stdenv, text, vector
         }:
         mkDerivation {
           pname = "ip";
           version = "1.1.2";
           sha256 = "5201cba09422ea754cb7128332f3669bce79616963929c10e444ef2b335b729b";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring hashable primitive text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/haskell-ip#readme";
           description = "Library for IP and MAC addresses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ip6addr" = callPackage
        ({ mkDerivation, base, cmdargs, IPv6Addr, stdenv, text }:
         mkDerivation {
           pname = "ip6addr";
           version = "0.5.3";
           sha256 = "1ff90994e691785a6eb4bc080d71556761f0ef6f91f0a3a1452c58a8b06e03c6";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base cmdargs IPv6Addr text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/MichelBoucey/ip6addr";
           description = "Commandline tool to generate IPv6 address text representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iproute" = callPackage
        ({ mkDerivation, appar, base, byteorder, containers, network
         , stdenv
         }:
         mkDerivation {
           pname = "iproute";
           version = "1.7.2";
           sha256 = "97b62050a67906b136c9d3435852181e64a991a16b99d06ac30b82a362338597";
           libraryHaskellDepends = [
             appar base byteorder containers network
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.mew.org/~kazu/proj/iproute/";
           description = "IP Routing Table";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ipython-kernel" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cereal, containers
         , directory, filepath, mtl, parsec, process, SHA, stdenv, temporary
         , text, transformers, unordered-containers, uuid, zeromq4-haskell
         }:
         mkDerivation {
           pname = "ipython-kernel";
           version = "0.9.0.1";
           sha256 = "478f11fe74c1c7e80e91427ab7a19598188b88b94cb76828b88d0d40d92ff45b";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring cereal containers directory filepath mtl
             process SHA temporary text transformers unordered-containers uuid
             zeromq4-haskell
           ];
           executableHaskellDepends = [
             base filepath mtl parsec text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/gibiansky/IHaskell";
           description = "A library for creating kernels for IPython frontends";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, stdenv }:
         mkDerivation {
           pname = "irc";
           version = "0.6.1.0";
           sha256 = "3816ead4dfb32d61c03265e3a2a45053508cb27ca3132595773a27ef381637e1";
           libraryHaskellDepends = [ attoparsec base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A small library for parsing IRC messages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "irc-client" = callPackage
        ({ mkDerivation, base, bytestring, conduit, connection, containers
         , contravariant, exceptions, irc-conduit, irc-ctcp, mtl
         , network-conduit-tls, old-locale, profunctors, stdenv, stm
         , stm-chans, text, time, tls, transformers, x509, x509-store
         , x509-validation
         }:
         mkDerivation {
           pname = "irc-client";
           version = "1.0.1.1";
           sha256 = "dd920760a32252d9e610d410a20b88ac9793f911dcd7d44c24d6cf5bb0f0bdb4";
           libraryHaskellDepends = [
             base bytestring conduit connection containers contravariant
             exceptions irc-conduit irc-ctcp mtl network-conduit-tls old-locale
             profunctors stm stm-chans text time tls transformers x509
             x509-store x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-client";
           description = "An IRC client library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-conduit" = callPackage
        ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
         , connection, irc, irc-ctcp, network-conduit-tls, profunctors
         , stdenv, text, time, tls, transformers, x509-validation
         }:
         mkDerivation {
           pname = "irc-conduit";
           version = "0.2.2.5";
           sha256 = "52cf916205a17be32b12d8cc844043f23a37ea81a9de7694a89e97f089de2db9";
           libraryHaskellDepends = [
             async base bytestring conduit conduit-extra connection irc irc-ctcp
             network-conduit-tls profunctors text time tls transformers
             x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-conduit";
           description = "Streaming IRC message library using conduits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-ctcp" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "irc-ctcp";
           version = "0.1.3.0";
           sha256 = "d67cd91a5521173565033777cea76636e4d2be6e6224f681392d9e726f4bb79a";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/irc-ctcp";
           description = "A CTCP encoding and decoding library for IRC clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "irc-dcc" = callPackage
        ({ mkDerivation, attoparsec, base, binary, bytestring, io-streams
         , iproute, irc-ctcp, mtl, network, path, safe-exceptions, stdenv
         , transformers, utf8-string
         }:
         mkDerivation {
           pname = "irc-dcc";
           version = "2.0.1";
           sha256 = "6408a28733743d3463664677c5e3ad72e46c168799dad458988067039f25d2df";
           revision = "6";
           editedCabalFile = "0fcgif6mcmp97plvvf1daiizwg2h9bniya50ldfd6ya932yh8b3c";
           libraryHaskellDepends = [
             attoparsec base binary bytestring io-streams iproute irc-ctcp mtl
             network path safe-exceptions transformers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/JanGe/irc-dcc";
           description = "A DCC message parsing and helper library for IRC clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "islink" = callPackage
        ({ mkDerivation, base, stdenv, unordered-containers }:
         mkDerivation {
           pname = "islink";
           version = "0.1.0.0";
           sha256 = "cfbf9c1a6dc46327b7ed7bf9336e245a255626c9d04aeba3d887d90f26d2aed7";
           libraryHaskellDepends = [ base unordered-containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/islink";
           description = "Check if an HTML element is a link";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iso3166-country-codes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "iso3166-country-codes";
           version = "0.20140203.8";
           sha256 = "b4d6e01cd61bcaef9a8e455c331a8e7a2298531cb587ef6f23675eae7a6b0a36";
           revision = "1";
           editedCabalFile = "0n01pmvkqi0w9l203i1v7kb6bb867plv4h5hmzlkpnhrf5abf0zf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A datatype for ISO 3166 country codes";
           license = "LGPL";
         }) {};
      "iso639" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "iso639";
           version = "0.1.0.3";
           sha256 = "124b8322fabaedb4de3dbc39880b36d0eab0e28d5775954aadb6630bc0da25e8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HugoDaniel/iso639";
           description = "ISO-639-1 language codes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "iso8601-time" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "iso8601-time";
           version = "0.1.4";
           sha256 = "761d737ea0841ee8fd3660cfe20041e9458be8ab424de8b3b661bb249b930126";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/iso8601-time";
           description = "Convert to/from the ISO 8601 time format";
           license = stdenv.lib.licenses.mit;
         }) {};
      "iterable" = callPackage
        ({ mkDerivation, base, mtl, stdenv, tagged, template-haskell
         , vector
         }:
         mkDerivation {
           pname = "iterable";
           version = "3.0";
           sha256 = "6cd13d621144e937cc88acfed1663bd2e208dcbe54be4bad1f7b7279250a87a4";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base mtl tagged template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BioHaskell/iterable";
           description = "API for hierarchical multilevel collections";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ix-shapable" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "ix-shapable";
           version = "0.1.0";
           sha256 = "5007ffb6a8a7bb490f962cedceed5ceb7c435126d09bc565441070cbfda79222";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           description = "Reshape multi-dimensional arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ixset" = callPackage
        ({ mkDerivation, base, containers, safecopy, stdenv, syb
         , syb-with-class, template-haskell
         }:
         mkDerivation {
           pname = "ixset";
           version = "1.0.7";
           sha256 = "2f0e5a581b1d3c5e4685da8b109b2089177632fe8931ae68f5973fba687b42d1";
           libraryHaskellDepends = [
             base containers safecopy syb syb-with-class template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://happstack.com";
           description = "Efficient relational queries on Haskell sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ixset-typed" = callPackage
        ({ mkDerivation, base, containers, deepseq, safecopy, stdenv, syb
         , template-haskell
         }:
         mkDerivation {
           pname = "ixset-typed";
           version = "0.3.1.1";
           sha256 = "d06b466c2cc56df15035d0b79f3a3eb6e7d39d878ae27dea3a7fbb9c78addc12";
           libraryHaskellDepends = [
             base containers deepseq safecopy syb template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Efficient relational queries on Haskell sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jack" = callPackage
        ({ mkDerivation, array, base, bytestring, enumset, event-list
         , explicit-exception, libjack2, midi, non-negative, semigroups
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "jack";
           version = "0.7.1.3";
           sha256 = "8cbc488ebfdb359d55f89b2ace9ea233c3875b359bee300f6171233ca6b51fd8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base bytestring enumset event-list explicit-exception midi
             non-negative semigroups transformers
           ];
           libraryPkgconfigDepends = [ libjack2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/JACK";
           description = "Bindings for the JACK Audio Connection Kit";
           license = "GPL";
         }) {inherit (pkgs) libjack2;};
      "jailbreak-cabal" = callPackage
        ({ mkDerivation, base, Cabal, stdenv }:
         mkDerivation {
           pname = "jailbreak-cabal";
           version = "1.3.2";
           sha256 = "212a8bbc3dfc748c4063282414a2726709d651322f3984c9989179d2352950f4";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base Cabal ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/jailbreak-cabal#readme";
           description = "Strip version restrictions from build dependencies in Cabal files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "javascript-extras" = callPackage
        ({ mkDerivation, base, deepseq, ghcjs-base-stub, parallel, stdenv
         , text
         }:
         mkDerivation {
           pname = "javascript-extras";
           version = "0.3.2.0";
           sha256 = "6820e8a2b33f88a10b2836d69d03bd8697d094ea7e13046c4ce09437d9640c79";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base deepseq ghcjs-base-stub parallel text
           ];
           executableHaskellDepends = [ base ghcjs-base-stub ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/javascript-extras#readme";
           description = "Extra javascript functions when using GHCJS";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers
         , haskell-src-exts, haskell-src-meta, mtl, parseargs, parsec
         , regex-posix, safe, stdenv, syb, template-haskell, text
         , unordered-containers, vector, wl-pprint-text
         }:
         mkDerivation {
           pname = "jmacro";
           version = "0.6.14";
           sha256 = "acb9411ab79f192a4ae0cd67cb45abbacef19c7a59d3199db36348b015df9920";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers haskell-src-exts haskell-src-meta
             mtl parsec regex-posix safe syb template-haskell text
             unordered-containers vector wl-pprint-text
           ];
           executableHaskellDepends = [
             aeson base bytestring containers haskell-src-exts haskell-src-meta
             mtl parseargs parsec regex-posix safe syb template-haskell text
             unordered-containers vector wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuotation library for programmatic generation of Javascript code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro-rpc" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-html, bytestring
         , containers, contravariant, jmacro, mtl, scientific, split, stdenv
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "jmacro-rpc";
           version = "0.3.2";
           sha256 = "a32f53b97bc84e79834df4c4630745c6b07ae46b45bc2ca2d43d91a38571c5d9";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-html bytestring containers
             contravariant jmacro mtl scientific split text unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/gershomb/jmacro";
           description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro-rpc-happstack" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, bytestring, containers
         , happstack-server, jmacro, jmacro-rpc, mtl, stdenv
         }:
         mkDerivation {
           pname = "jmacro-rpc-happstack";
           version = "0.3.2";
           sha256 = "99cdee3c1a5bd4499acf8decb2e76af48e7da7ccba01d51b86f65ea92944b064";
           libraryHaskellDepends = [
             aeson base blaze-html bytestring containers happstack-server jmacro
             jmacro-rpc mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
           description = "Happstack backend for jmacro-rpc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jmacro-rpc-snap" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, jmacro
         , jmacro-rpc, mtl, snap-core, stdenv
         }:
         mkDerivation {
           pname = "jmacro-rpc-snap";
           version = "0.3";
           sha256 = "48aea4a4ba90532ca105b6b274060a47a1c509b8346e0db1b61365c2a9e8dfeb";
           libraryHaskellDepends = [
             aeson base bytestring containers jmacro jmacro-rpc mtl snap-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
           description = "Snap backend for jmacro-rpc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jni" = callPackage
        ({ mkDerivation, base, bytestring, choice, constraints, containers
         , cpphs, deepseq, inline-c, jdk, singletons, stdenv
         }:
         mkDerivation {
           pname = "jni";
           version = "0.5.1";
           sha256 = "8a606e511d1ee5e28424ab6e2203ec3624f8c0eb58bfc3e5afea58d85b912f53";
           libraryHaskellDepends = [
             base bytestring choice constraints containers deepseq inline-c
             singletons
           ];
           librarySystemDepends = [ jdk ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tweag/inline-java/tree/master/jni#readme";
           description = "Complete JNI raw bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) jdk;};
      "jose" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bytestring, concise, containers, cryptonite, lens, memory
         , monad-time, mtl, network-uri, QuickCheck, quickcheck-instances
         , safe, semigroups, stdenv, template-haskell, text, time
         , unordered-containers, vector, x509
         }:
         mkDerivation {
           pname = "jose";
           version = "0.6.0.3";
           sha256 = "bd8b5bd4b2bd5a81c1a3d71f2be1fe2b8978ba2641ebd05c35b1951d0c17cdb4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bytestring concise
             containers cryptonite lens memory monad-time mtl network-uri
             QuickCheck quickcheck-instances safe semigroups template-haskell
             text time unordered-containers vector x509
           ];
           executableHaskellDepends = [ aeson base bytestring lens mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frasertweedale/hs-jose";
           description = "Javascript Object Signing and Encryption and JSON Web Token library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "jose-jwt" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, cereal
         , containers, cryptonite, either, memory, mtl, stdenv, text, time
         , transformers, transformers-compat, unordered-containers, vector
         }:
         mkDerivation {
           pname = "jose-jwt";
           version = "0.7.8";
           sha256 = "d3e1693e28d2de4914011a4f573070b02a71c8e40c142c9ab8b00c8629c5f32b";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring cereal containers cryptonite
             either memory mtl text time transformers transformers-compat
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tekul/jose-jwt";
           description = "JSON Object Signing and Encryption Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "js-flot" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "js-flot";
           version = "0.8.3";
           sha256 = "1ba2f2a6b8d85da76c41f526c98903cbb107f8642e506c072c1e7e3c20fe5e7a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/js-flot#readme";
           description = "Obtain minified flot code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "js-jquery" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "js-jquery";
           version = "3.2.1";
           sha256 = "60503d82d0a601291cf0aa495edecbdb749dcf8982502bf18b9a886979ac1e0f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/js-jquery#readme";
           description = "Obtain minified jQuery code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "jsaddle" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bytestring, containers, deepseq, filepath, ghc-prim, http-types
         , lens, primitive, process, random, ref-tf, scientific, stdenv, stm
         , text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "jsaddle";
           version = "0.9.4.0";
           sha256 = "01af1f5c54a4c6e43913a152dc12693b543e78b74cc2040e637f5841f7626452";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bytestring containers
             deepseq filepath ghc-prim http-types lens primitive process random
             ref-tf scientific stm text time transformers unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Interface for JavaScript that works with GHCJS and GHC";
           license = stdenv.lib.licenses.mit;
         }) {};
      "jsaddle-dom" = callPackage
        ({ mkDerivation, base, base-compat, jsaddle, lens, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "jsaddle-dom";
           version = "0.9.2.0";
           sha256 = "18c8a1a9020d3001ce6fae663887330339693d0f3ffec580e2ed5222b728a792";
           libraryHaskellDepends = [
             base base-compat jsaddle lens text transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "DOM library that uses jsaddle to support both GHCJS and GHC";
           license = stdenv.lib.licenses.mit;
         }) {};
      "json" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, mtl, parsec
         , pretty, stdenv, syb, text
         }:
         mkDerivation {
           pname = "json";
           version = "0.9.1";
           sha256 = "96b57e4d167e45dc80aeff872a922ae9cdb953a1ded29ebbb51019b68f0085a2";
           libraryHaskellDepends = [
             array base bytestring containers mtl parsec pretty syb text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support for serialising Haskell to and from JSON";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-autotype" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, filepath
         , GenericPretty, hashable, lens, mtl, optparse-applicative, pretty
         , process, scientific, stdenv, text, uniplate, unordered-containers
         , vector, yaml
         }:
         mkDerivation {
           pname = "json-autotype";
           version = "1.0.18";
           sha256 = "f0f09112c9e329f7dda2a67276d0009129b70d8ae7c85c03e25868330f8e4a40";
           revision = "1";
           editedCabalFile = "0f67frvi5jsn47w02kqi834mkjy4kz451fic5m4i24lyykw19kvm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers filepath GenericPretty hashable
             lens mtl optparse-applicative pretty process scientific text
             uniplate unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring containers filepath GenericPretty hashable
             lens mtl optparse-applicative pretty process scientific text
             uniplate unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgajda/json-autotype";
           description = "Automatic type declaration for JSON input data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-builder" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-textual, bytestring
         , containers, stdenv, text, unordered-containers, utf8-string
         , vector
         }:
         mkDerivation {
           pname = "json-builder";
           version = "0.3";
           sha256 = "b5ef217d5432e8e962fac45f5a266993a0ea26d29c2580b93d0c9988d7480b4d";
           libraryHaskellDepends = [
             base blaze-builder blaze-textual bytestring containers text
             unordered-containers utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lpsmith/json-builder";
           description = "Data structure agnostic JSON serialization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-rpc-generic" = callPackage
        ({ mkDerivation, aeson, aeson-generic-compat, base, bytestring
         , containers, dlist, scientific, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "json-rpc-generic";
           version = "0.2.1.3";
           sha256 = "ca4ee53106eff161467fd067b6d9ec74ed12acafa7baba96dd6841104c07bb80";
           libraryHaskellDepends = [
             aeson aeson-generic-compat base bytestring containers dlist
             scientific text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/khibino/haskell-json-rpc-generic";
           description = "Generic encoder and decode for JSON-RPC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-schema" = callPackage
        ({ mkDerivation, aeson, base, containers, generic-aeson
         , generic-deriving, mtl, scientific, stdenv, text, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "json-schema";
           version = "0.7.4.1";
           sha256 = "560d6a17d6eab734f43d329e51967e3ed62f8df2a6fea4a92d06359fe77d7c96";
           revision = "12";
           editedCabalFile = "0x3cvndfshy4sd66m2xilyp876kvmgw5flagawamwis6hs8pfdi2";
           libraryHaskellDepends = [
             aeson base containers generic-aeson generic-deriving mtl scientific
             text time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Types and type classes for defining JSON schemas";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-sop" = callPackage
        ({ mkDerivation, aeson, base, generics-sop, lens-sop, stdenv
         , tagged, text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "json-sop";
           version = "0.2.0.3";
           sha256 = "3065f11df636f9b72d988247bcc1273de9155255d8b31ed9105929e2ab67c22b";
           revision = "1";
           editedCabalFile = "1bvmfl6fqdr8fklv8zai5jgzlnv1jf9xy8i656lfz1ys95q9yr48";
           libraryHaskellDepends = [
             aeson base generics-sop lens-sop tagged text time transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generics JSON (de)serialization using generics-sop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "json-stream" = callPackage
        ({ mkDerivation, aeson, base, bytestring, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "json-stream";
           version = "0.4.1.5";
           sha256 = "304e2b7f5e95c277d3f68e7bdefc42290c57fe6d1eb65e778bc044989f39af40";
           libraryHaskellDepends = [
             aeson base bytestring scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ondrap/json-stream";
           description = "Incremental applicative JSON parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "justified-containers" = callPackage
        ({ mkDerivation, base, containers, roles, stdenv }:
         mkDerivation {
           pname = "justified-containers";
           version = "0.2.0.1";
           sha256 = "82d71f25b7fa4d9d456be92e9421d9b5527cb484a2f469d09172c2331ae25b4c";
           libraryHaskellDepends = [ base containers roles ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matt-noonan/justified-containers";
           description = "Keyed container types with type-checked proofs of key presence";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "jvm" = callPackage
        ({ mkDerivation, base, bytestring, choice, constraints
         , distributed-closure, exceptions, jni, singletons, stdenv, text
         , vector
         }:
         mkDerivation {
           pname = "jvm";
           version = "0.4.2";
           sha256 = "70f1d6ecec95fc31e633158fd3e467c92d9165f54e8c4de44211d6759c9874fc";
           libraryHaskellDepends = [
             base bytestring choice constraints distributed-closure exceptions
             jni singletons text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tweag/inline-java/tree/master/jvm#readme";
           description = "Call JVM methods from Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "jwt" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, cryptonite
         , data-default, http-types, memory, network-uri, scientific
         , semigroups, stdenv, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "jwt";
           version = "0.7.2";
           sha256 = "17967413d21399596a236bc8169d9e030bb85e2b1c349c6e470543767cc20a31";
           revision = "1";
           editedCabalFile = "1q8h94yslw6k6zcjbwx94pnji8dcr2w5n1wzgzfb8hb78w2qr1dm";
           libraryHaskellDepends = [
             aeson base bytestring containers cryptonite data-default http-types
             memory network-uri scientific semigroups text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
           description = "JSON Web Token (JWT) decoding and encoding";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kademlia" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , contravariant, cryptonite, data-default, extra, fetchgit, memory
         , MonadRandom, mtl, network, random, random-shuffle, stdenv, stm
         , time, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "kademlia";
           version = "1.1.0.1";
           src = fetchgit {
             url = "https://github.com/serokell/kademlia.git";
             sha256 = "1k1wp9dwhzzqfivxc28vhxfqplnyh916crr7bhsiv829d6qifhw1";
             rev = "7120bb4d28e708acd52dfd61d3dca7914fac7d7f";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers contravariant cryptonite extra memory
             MonadRandom mtl network random random-shuffle stm time transformers
           ];
           executableHaskellDepends = [
             base binary bytestring containers data-default extra MonadRandom
             mtl network random random-shuffle transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/serokell/kademlia";
           description = "An implementation of the Kademlia DHT Protocol";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kan-extensions" = callPackage
        ({ mkDerivation, adjunctions, array, base, comonad, containers
         , contravariant, distributive, fail, free, mtl, semigroupoids
         , stdenv, tagged, transformers
         }:
         mkDerivation {
           pname = "kan-extensions";
           version = "5.0.2";
           sha256 = "1c9ede8595424209944e59fd46c1d2edb654758be9a45c1c48a4d3cedf42482e";
           libraryHaskellDepends = [
             adjunctions array base comonad containers contravariant
             distributive fail free mtl semigroupoids tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/kan-extensions/";
           description = "Kan extensions, Kan lifts, various forms of the Yoneda lemma, and (co)density (co)monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kanji" = callPackage
        ({ mkDerivation, base, bytestring, containers, microlens, stdenv
         , text
         }:
         mkDerivation {
           pname = "kanji";
           version = "3.0.2";
           sha256 = "cba892f927b7f50a44a3dcf771797b345c3989575373835c1ee9c58ab445f8cd";
           libraryHaskellDepends = [
             base bytestring containers microlens text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fosskers/nanq";
           description = "Perform 漢字検定 (Japan Kanji Aptitude Test) level analysis on Japanese Kanji";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "kansas-comet" = callPackage
        ({ mkDerivation, aeson, base, containers, data-default-class
         , scotty, stdenv, stm, text, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "kansas-comet";
           version = "0.4";
           sha256 = "1f1a4565f2e955b8947bafcb9611789b0ccdf9efdfed8aaa2a2aa162a07339e1";
           revision = "11";
           editedCabalFile = "0l56snbdxbcwrmh7gna4237873d366dfbwp59a4wq1s51clhmb4z";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base containers data-default-class scotty stm text time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/kansas-comet/";
           description = "A JavaScript push mechanism based on the comet idiom";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "katip" = callPackage
        ({ mkDerivation, aeson, async, auto-update, base, bytestring
         , containers, either, hostname, microlens, microlens-th
         , monad-control, mtl, old-locale, resourcet, safe-exceptions
         , scientific, semigroups, stdenv, stm, string-conv
         , template-haskell, text, time, transformers, transformers-base
         , transformers-compat, unix, unliftio-core, unordered-containers
         }:
         mkDerivation {
           pname = "katip";
           version = "0.5.3.0";
           sha256 = "4b74e6f404a7572baa21383e5ca3c8e86a9ea03f1998f2c0ffdb92d0c5f4cfec";
           libraryHaskellDepends = [
             aeson async auto-update base bytestring containers either hostname
             microlens microlens-th monad-control mtl old-locale resourcet
             safe-exceptions scientific semigroups stm string-conv
             template-haskell text time transformers transformers-base
             transformers-compat unix unliftio-core unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/katip";
           description = "A structured logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "katip-elasticsearch" = callPackage
        ({ mkDerivation, aeson, async, base, bloodhound, bytestring
         , enclosed-exceptions, exceptions, http-client, http-types, katip
         , retry, scientific, stdenv, stm, stm-chans, text, time
         , transformers, unordered-containers, uuid
         }:
         mkDerivation {
           pname = "katip-elasticsearch";
           version = "0.4.0.4";
           sha256 = "72f92f81ac48160907f97b718203a0f9c7daeb42464e9b41fbc939fc5971e07d";
           libraryHaskellDepends = [
             aeson async base bloodhound bytestring enclosed-exceptions
             exceptions http-client http-types katip retry scientific stm
             stm-chans text time transformers unordered-containers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/katip";
           description = "ElasticSearch scribe for the Katip logging framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "katydid" = callPackage
        ({ mkDerivation, base, containers, hxt, json, mtl, parsec
         , regex-tdfa, stdenv
         }:
         mkDerivation {
           pname = "katydid";
           version = "0.1.1.0";
           sha256 = "7c7bdea56f41bea000b1b0f0985e890e53529f85ed5fa6b2ff4af99ee76934c8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers hxt json mtl parsec regex-tdfa
           ];
           executableHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/katydid/katydid-haskell";
           description = "A haskell implementation of Katydid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kawhi" = callPackage
        ({ mkDerivation, aeson, base, bytestring, exceptions, http-client
         , http-conduit, http-types, mtl, safe, scientific, stdenv, text
         }:
         mkDerivation {
           pname = "kawhi";
           version = "0.3.0";
           sha256 = "2321387a3ddaa17c09db3a8e7a41a39f8e211467bd80bccd73791de8fca2a44f";
           libraryHaskellDepends = [
             aeson base bytestring exceptions http-client http-conduit
             http-types mtl safe scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/thunky-monk/kawhi";
           description = "stats.NBA.com library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kdt" = callPackage
        ({ mkDerivation, base, deepseq, deepseq-generics, heap, stdenv }:
         mkDerivation {
           pname = "kdt";
           version = "0.2.4";
           sha256 = "bc0f8f9ac0cb01466273171f47b627abe170d1130bd59657fb9198b4f9479f9a";
           libraryHaskellDepends = [ base deepseq deepseq-generics heap ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/giogadi/kdt";
           description = "Fast and flexible k-d trees for various types of point queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "keycode" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "keycode";
           version = "0.2.2";
           sha256 = "56f9407cf182b01e5f0fda80f569ff629f37d894f75ef28b6b8af3024343d310";
           revision = "1";
           editedCabalFile = "0pyh8cadgw8pn9xdg8lbvsh108i84iaynia8j42qmgmls2zakvja";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/keycode";
           description = "Maps web browser keycodes to their corresponding keyboard keys";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "keys" = callPackage
        ({ mkDerivation, array, base, comonad, containers, free, hashable
         , semigroupoids, semigroups, stdenv, transformers
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "keys";
           version = "3.11";
           sha256 = "0cf397b7e6eb8cda930a02118c0bf262f9ef80c5a2f91822238b7778042cc4b2";
           revision = "1";
           editedCabalFile = "1lyg4wyi7mkqvbfl9lvfln3j4vys47jih56zyjba7nx36kbw185i";
           libraryHaskellDepends = [
             array base comonad containers free hashable semigroupoids
             semigroups transformers transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/keys/";
           description = "Keyed functors and containers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "kmeans" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "kmeans";
           version = "0.1.3";
           sha256 = "3d9e24a12ce01354c2a731ee079144c3bea2c9f011ffd51db82e5c26da1a2c0b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "K-means clustering algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "knob" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, transformers }:
         mkDerivation {
           pname = "knob";
           version = "0.1.1";
           sha256 = "8c2c84cfa20f3a2d7ca0636d2b3f2822c62501358075bfa356eb964b803e1217";
           libraryHaskellDepends = [ base bytestring transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/knob/";
           description = "Memory-backed handles";
           license = stdenv.lib.licenses.mit;
         }) {};
      "koofr-client" = callPackage
        ({ mkDerivation, aeson, base, bytestring, filepath, http-client
         , http-client-tls, http-types, mtl, stdenv
         }:
         mkDerivation {
           pname = "koofr-client";
           version = "1.0.0.3";
           sha256 = "2ab6f0af8be4f1912ad06ad860db993f9c33c8f0206f87ff0b566b7dda54e7af";
           revision = "1";
           editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
           libraryHaskellDepends = [
             aeson base bytestring filepath http-client http-client-tls
             http-types mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/edofic/koofr-api-hs";
           description = "Client to Koofr API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "kraken" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, mtl, stdenv
         }:
         mkDerivation {
           pname = "kraken";
           version = "0.1.0";
           sha256 = "335ce7cb85f7d3ed71eb067ad9642d13d2ca1d62ce8670596c8b69aacc27828a";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls mtl
           ];
           doHaddock = false;
           doCheck = false;
           description = "Kraken.io API client";
           license = stdenv.lib.licenses.mit;
         }) {};
      "l10n" = callPackage
        ({ mkDerivation, base, stdenv, text, time }:
         mkDerivation {
           pname = "l10n";
           version = "0.1.0.1";
           sha256 = "0a7032476d257981eb7c274600bef809b4a515ab162a1772a7887f0113455ca0";
           libraryHaskellDepends = [ base text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/l10n#readme";
           description = "Enables providing localization as typeclass instances in separate files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "labels" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "labels";
           version = "0.3.3";
           sha256 = "e6b4c02b5340c68b911fd2df157766260e06939ad2919f555339356613433013";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/labels#readme";
           description = "Anonymous records via named tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lackey" = callPackage
        ({ mkDerivation, base, servant, servant-foreign, stdenv, text }:
         mkDerivation {
           pname = "lackey";
           version = "0.4.7";
           sha256 = "280d505bcc90edf6872096a91986d12d771bf4b0ad9a5e4d3ae985f32b3fdc08";
           libraryHaskellDepends = [ base servant servant-foreign text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/lackey#readme";
           description = "Generate Ruby clients from Servant APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lame" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, directory
         , exceptions, filepath, mp3lame, stdenv, text, transformers, wave
         }:
         mkDerivation {
           pname = "lame";
           version = "0.1.1";
           sha256 = "b36009a35c02f7f18b4ba91d9ead7e5b47aef4eb5c0d014d4d60dd0bddfd6548";
           revision = "1";
           editedCabalFile = "0p7nwbn22bmk2p7vpcpqs89dxxshjg3cbdx1qc1h8pczgaz3c1dl";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring data-default-class directory exceptions filepath
             text transformers wave
           ];
           librarySystemDepends = [ mp3lame ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/lame";
           description = "Fairly complete high-level binding to LAME encoder";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mp3lame;};
      "language-c" = callPackage
        ({ mkDerivation, alex, array, base, bytestring, containers
         , directory, filepath, happy, pretty, process, stdenv, syb
         }:
         mkDerivation {
           pname = "language-c";
           version = "0.7.2";
           sha256 = "63ad22ddd8e51747c8d64239029cf4afd3e7d4060c9b9478145479f5d4d549e5";
           libraryHaskellDepends = [
             array base bytestring containers directory filepath pretty process
             syb
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://visq.github.io/language-c/";
           description = "Analysis and generation of C code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-c-quote" = callPackage
        ({ mkDerivation, alex, array, base, bytestring, containers
         , exception-mtl, exception-transformers, filepath, happy
         , haskell-src-meta, mainland-pretty, mtl, srcloc, stdenv, syb
         , symbol, template-haskell
         }:
         mkDerivation {
           pname = "language-c-quote";
           version = "0.12.1";
           sha256 = "ec3537f5764068890b9e9a12ec94e42f33b9d0ae2549af7eb916d59457dd3584";
           libraryHaskellDepends = [
             array base bytestring containers exception-mtl
             exception-transformers filepath haskell-src-meta mainland-pretty
             mtl srcloc syb symbol template-haskell
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mainland/language-c-quote";
           description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-docker" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, filepath, free
         , Glob, mtl, parsec, pretty, split, stdenv, template-haskell, text
         , th-lift, th-lift-instances, transformers, unordered-containers
         , yaml
         }:
         mkDerivation {
           pname = "language-docker";
           version = "1.0.0";
           sha256 = "01391b51258ec4cf5de2dc918d876042ad1c3d81074def0678f908cf3a546f08";
           libraryHaskellDepends = [
             aeson base bytestring directory filepath free Glob mtl parsec
             pretty split template-haskell text th-lift th-lift-instances
             transformers unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hadolint/language-docker#readme";
           description = "Dockerfile parser, pretty-printer and embedded DSL";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "language-fortran" = callPackage
        ({ mkDerivation, alex, array, base, happy, haskell-src, parsec
         , stdenv, syb
         }:
         mkDerivation {
           pname = "language-fortran";
           version = "0.5.1";
           sha256 = "44cd3f3e76dc627cce8f442dbaf4f1d54b1db633c313868c8ad1d5dbe16e7f9a";
           libraryHaskellDepends = [ array base haskell-src parsec syb ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           description = "Fortran lexer and parser, language support, and extensions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-glsl" = callPackage
        ({ mkDerivation, base, parsec, prettyclass, stdenv }:
         mkDerivation {
           pname = "language-glsl";
           version = "0.2.1";
           sha256 = "0012116b0a164831906386205df7136bc8810bcf12ea766d300a108374a21922";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec prettyclass ];
           executableHaskellDepends = [ base parsec prettyclass ];
           doHaddock = false;
           doCheck = false;
           description = "GLSL abstract syntax tree, parser, and pretty-printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-haskell-extract" = callPackage
        ({ mkDerivation, base, regex-posix, stdenv, template-haskell }:
         mkDerivation {
           pname = "language-haskell-extract";
           version = "0.2.4";
           sha256 = "14da16e56665bf971723e0c5fd06dbb7cc30b4918cf8fb5748570785ded1acdb";
           libraryHaskellDepends = [ base regex-posix template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/finnsson/template-helper";
           description = "Module to automatically extract functions from the local code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-java" = callPackage
        ({ mkDerivation, alex, array, base, cpphs, parsec, pretty, stdenv
         }:
         mkDerivation {
           pname = "language-java";
           version = "0.2.8";
           sha256 = "0b789e089e4b18bf6248c2a1a9f3eff23cc19548899899f912597a1c33e9c367";
           libraryHaskellDepends = [ array base cpphs parsec pretty ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/language-java";
           description = "Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-javascript" = callPackage
        ({ mkDerivation, alex, array, base, blaze-builder, bytestring
         , containers, happy, mtl, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "language-javascript";
           version = "0.6.0.10";
           sha256 = "caf14c410bf4463fda497af2b9ea750eddff34e55bc1cfc696f2fb4a36983e54";
           libraryHaskellDepends = [
             array base blaze-builder bytestring containers mtl text utf8-string
           ];
           libraryToolDepends = [ alex happy ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erikd/language-javascript";
           description = "Parser for JavaScript";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-nix" = callPackage
        ({ mkDerivation, base, base-compat, Cabal, deepseq, lens, pretty
         , QuickCheck, stdenv
         }:
         mkDerivation {
           pname = "language-nix";
           version = "2.1.0.1";
           sha256 = "f0147300724ac39ce388cd6cd717ac3ccc6ed1884ffaafebb18d0f3021e01acf";
           revision = "1";
           editedCabalFile = "1zv12p4ralrks0517zs52rzmzmsxxkcxkqz7zijfgcsvh6bsmafi";
           libraryHaskellDepends = [
             base base-compat Cabal deepseq lens pretty QuickCheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/language-nix#readme";
           description = "Data types and useful functions to represent and manipulate the Nix language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "language-puppet" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
         , base16-bytestring, bytestring, case-insensitive, containers
         , cryptonite, directory, exceptions, filecache, filepath
         , formatting, Glob, hashable, hruby, hslogger, hspec, http-api-data
         , http-client, lens, lens-aeson, megaparsec, memory, mtl
         , operational, optparse-applicative, parallel-io, parsec
         , pcre-utils, process, protolude, random, regex-pcre-builtin
         , scientific, servant, servant-client, split, stdenv, stm
         , strict-base-types, text, time, transformers, unix
         , unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "language-puppet";
           version = "1.3.16";
           sha256 = "d0724527e398352a6eb4b67294fe8d0aafa88b69f414807c735f49aac8871958";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson ansi-wl-pprint attoparsec base base16-bytestring bytestring
             case-insensitive containers cryptonite directory exceptions
             filecache filepath formatting hashable hruby hslogger hspec
             http-api-data http-client lens lens-aeson megaparsec memory mtl
             operational parsec pcre-utils process protolude random
             regex-pcre-builtin scientific servant servant-client split stm
             strict-base-types text time transformers unix unordered-containers
             vector yaml
           ];
           executableHaskellDepends = [
             aeson ansi-wl-pprint base bytestring containers Glob hslogger
             http-client lens megaparsec mtl optparse-applicative parallel-io
             regex-pcre-builtin strict-base-types text transformers
             unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lpuppet.banquise.net/";
           description = "Tools to parse and evaluate the Puppet DSL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lapack-carray" = callPackage
        ({ mkDerivation, base, carray, lapack-ffi, netlib-carray
         , netlib-ffi, stdenv, storable-complex, transformers
         }:
         mkDerivation {
           pname = "lapack-carray";
           version = "0.0";
           sha256 = "3418f45efa2d3d4fbfb2c741ad0516763732f9a2d2a5f4f347b19a0d8fe203a4";
           libraryHaskellDepends = [
             base carray lapack-ffi netlib-carray netlib-ffi storable-complex
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack-carray/";
           description = "Auto-generated interface to Fortran LAPACK via CArrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lapack-ffi" = callPackage
        ({ mkDerivation, base, liblapack, netlib-ffi, stdenv }:
         mkDerivation {
           pname = "lapack-ffi";
           version = "0.0";
           sha256 = "03edba5267725a411784bfbbe1fe5732ff8e06c47f1f40fb437e9a13691146e4";
           libraryHaskellDepends = [ base netlib-ffi ];
           libraryPkgconfigDepends = [ liblapack ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack-ffi/";
           description = "Auto-generated interface to Fortran LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) liblapack;};
      "lapack-ffi-tools" = callPackage
        ({ mkDerivation, base, bytestring, cassava, containers
         , explicit-exception, filepath, non-empty, optparse-applicative
         , parsec, pathtype, stdenv, transformers, unordered-containers
         , utility-ht, vector
         }:
         mkDerivation {
           pname = "lapack-ffi-tools";
           version = "0.0.0.1";
           sha256 = "48bf4761d014674e1118a68812d1059a70822fd72343835b7a813d93644a2724";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             base bytestring cassava containers explicit-exception filepath
             non-empty optparse-applicative parsec pathtype transformers
             unordered-containers utility-ht vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/lapack-ffi-tools/";
           description = "Generator for Haskell interface to Fortran LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "large-hashable" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytes, bytestring
         , containers, scientific, stdenv, strict, template-haskell, text
         , time, transformers, unordered-containers, utf8-light, vector
         , void
         }:
         mkDerivation {
           pname = "large-hashable";
           version = "0.1.0.4";
           sha256 = "e9c3345d9fa0161f1b809f2c57e00b4c687ebd48ea42623fe480cc85339a628e";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytes bytestring containers scientific
             strict template-haskell text time transformers unordered-containers
             utf8-light vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/factisresearch/large-hashable";
           description = "Efficiently hash (large) Haskell values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "largeword" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "largeword";
           version = "1.2.5";
           sha256 = "00b3b06d846649bf404f52a725c88349a38bc8c810e16c99f3100c4e1e9d7d46";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/idontgetoutmuch/largeword";
           description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "latex" = callPackage
        ({ mkDerivation, base, containers, stdenv, utility-ht }:
         mkDerivation {
           pname = "latex";
           version = "0.1.0.3";
           sha256 = "b742ff5c83f6019469e55d2f3559d8efbc7ce62607e5de76485a7cb314e636d2";
           libraryHaskellDepends = [ base containers utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/LaTeX";
           description = "Parse, format and process LaTeX files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lattices" = callPackage
        ({ mkDerivation, base, base-compat, containers, deepseq, hashable
         , semigroupoids, stdenv, tagged, universe-base
         , universe-reverse-instances, unordered-containers
         }:
         mkDerivation {
           pname = "lattices";
           version = "1.7";
           sha256 = "cc062bf2b8dc0668153ff2e76343c20c6d19cc47c0ffa639595141a446c6abdc";
           revision = "1";
           editedCabalFile = "1nsc77nnh8cvfw8f58g0w5mjamy4iivkadyyaj3yzawfr8jbxi53";
           libraryHaskellDepends = [
             base base-compat containers deepseq hashable semigroupoids tagged
             universe-base universe-reverse-instances unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phadej/lattices/";
           description = "Fine-grained library for constructing and manipulating lattices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lazyio" = callPackage
        ({ mkDerivation, base, stdenv, transformers, unsafe }:
         mkDerivation {
           pname = "lazyio";
           version = "0.1.0.4";
           sha256 = "8b54f0bccdc1c836393ce667ea0f1ad069d52c04762e61fad633d4d44916cf6c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base transformers unsafe ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Lazy_IO";
           description = "Run IO actions lazily while respecting their order";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lazysmallcheck" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "lazysmallcheck";
           version = "0.6";
           sha256 = "9dd4dfb590c77e4f6aff68296602de58422eed5e7148fc29190d875a4e7d0f53";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.york.ac.uk/~mfn/lazysmallcheck/";
           description = "A library for demand-driven testing of Haskell programs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lca" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, stdenv }:
         mkDerivation {
           pname = "lca";
           version = "0.3.1";
           sha256 = "8a8d045ae00d82ddb491e873cc36f1ca89e91556a183c343b99f4df6abfe434e";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lca/";
           description = "O(log n) persistent online lowest common ancestor search without preprocessing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "leancheck" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "leancheck";
           version = "0.7.0";
           sha256 = "6e5c30ca628077921adb7195a68b01e7d9b00901b046124a7793af3c2077e6d7";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/leancheck#readme";
           description = "Cholesterol-free property-based testing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "leapseconds-announced" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "leapseconds-announced";
           version = "2017.1.0.1";
           sha256 = "cd3bb27caf704a975ef5718a9a8e641cd9cf9a9f2df27153f7cf80405292a8d6";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/leapseconds-announced";
           description = "Leap seconds announced at library release time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens" = callPackage
        ({ mkDerivation, array, base, base-orphans, bifunctors, bytestring
         , Cabal, cabal-doctest, call-stack, comonad, containers
         , contravariant, distributive, exceptions, filepath, free, ghc-prim
         , hashable, kan-extensions, mtl, parallel, profunctors, reflection
         , semigroupoids, semigroups, stdenv, tagged, template-haskell, text
         , th-abstraction, transformers, transformers-compat
         , unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "lens";
           version = "4.15.4";
           sha256 = "742e7b87d7945e3d9c1d39d3f8440094c0a31cd098f06a08f8dabefba0a57cd2";
           setupHaskellDepends = [ base Cabal cabal-doctest filepath ];
           libraryHaskellDepends = [
             array base base-orphans bifunctors bytestring call-stack comonad
             containers contravariant distributive exceptions filepath free
             ghc-prim hashable kan-extensions mtl parallel profunctors
             reflection semigroupoids semigroups tagged template-haskell text
             th-abstraction transformers transformers-compat
             unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lens/";
           description = "Lenses, Folds and Traversals";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "lens-accelerate" = callPackage
        ({ mkDerivation, accelerate, base, lens, stdenv }:
         mkDerivation {
           pname = "lens-accelerate";
           version = "0.1.0.0";
           sha256 = "e4a736962342c116960425a32a17f4eaccc03bf583c09d2a619779deee5c9548";
           revision = "1";
           editedCabalFile = "0mgh4px2gpbny3fnbxv91ml5anvq3gmxs3w3q0zgsbnhaw73w4cf";
           libraryHaskellDepends = [ accelerate base lens ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcdonell/lens-accelerate";
           description = "Instances to mix lens with accelerate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-action" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, comonad, contravariant
         , lens, mtl, profunctors, semigroupoids, semigroups, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lens-action";
           version = "0.2.3";
           sha256 = "06848a6c7f217c3dd3228633bedc9a73b2cce139c1a6dff61af0994d410a98e0";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base comonad contravariant lens mtl profunctors semigroupoids
             semigroups transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/lens-action/";
           description = "Monadic Getters and Folds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
         , cabal-doctest, lens, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "lens-aeson";
           version = "1.0.2";
           sha256 = "4311f035caa39db3a70915a165bcbfb55ad22376085d95a9b4f57c58994702cc";
           revision = "2";
           editedCabalFile = "1nynlx0jyn5hfsjmzdd9pdj95hnfc6r7gfb3isdqs05ma8dihaws";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec base bytestring lens scientific text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lens/lens-aeson/";
           description = "Law-abiding lenses for aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lens-datetime" = callPackage
        ({ mkDerivation, base, lens, stdenv, time }:
         mkDerivation {
           pname = "lens-datetime";
           version = "0.3";
           sha256 = "bb1f8d7bf71c9ef8901bc39e2a2d629b1101307115c0c4d844fcbd8e86b6ccd4";
           libraryHaskellDepends = [ base lens time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nilcons/lens-datetime";
           description = "Lenses for Data.Time.* types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family" = callPackage
        ({ mkDerivation, base, containers, lens-family-core, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lens-family";
           version = "1.2.2";
           sha256 = "dda24de579550daa56c49d2d4fbe59deac18e5fbcbbe6a9b0196ba0a1b27433b";
           libraryHaskellDepends = [
             base containers lens-family-core mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Lens Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family-core" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "lens-family-core";
           version = "1.2.2";
           sha256 = "95fe891b61f2d2a7c9ff86f56e40866534a947f87ccf2fcaa5e727ccdfca4628";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell 98 Lens Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-family-th" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "lens-family-th";
           version = "0.5.0.1";
           sha256 = "fa37572374dc69fc859c023864654704d490160b579a51434ae22208cbe93703";
           revision = "1";
           editedCabalFile = "190jxqskd61irc97zb95h08zlkszlhpik4zmb7y4vk7x06zz00m6";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/DanBurton/lens-family-th#readme";
           description = "Generate lens-family style lenses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-labels" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "lens-labels";
           version = "0.1.0.2";
           sha256 = "01ef26c8a59e720d8dff21658cffac91f1b6535b2e9defb25cfe81262d6efc86";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens";
           description = "Integration of lenses with OverloadedLabels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-regex" = callPackage
        ({ mkDerivation, array, base, lens, regex-base, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "lens-regex";
           version = "0.1.0";
           sha256 = "4954b3ae395661e916c536bfe837c42a1cd8223ea81ffd86b1fdd9b6abfc5142";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base lens regex-base template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/lens-regex";
           description = "Lens powered regular expression";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-simple" = callPackage
        ({ mkDerivation, base, lens-family, lens-family-core
         , lens-family-th, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "lens-simple";
           version = "0.1.0.9";
           sha256 = "613d99b8074197f8a026a641a9940dd188e0d81e808169f420981a9ca15b832a";
           libraryHaskellDepends = [
             base lens-family lens-family-core lens-family-th mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelt/lens-simple";
           description = "simplified import of elementary lens-family combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lens-sop" = callPackage
        ({ mkDerivation, base, fclabels, generics-sop, stdenv, transformers
         }:
         mkDerivation {
           pname = "lens-sop";
           version = "0.2.0.2";
           sha256 = "7f6800088634aeb6788c1bc65dcdaeb7f0c8cdaee288a24bf9f946cc59496d99";
           libraryHaskellDepends = [
             base fclabels generics-sop transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Computing lenses generically using generics-sop";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lentil" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, csv, directory, filemanip
         , filepath, natural-sort, optparse-applicative, parsec, pipes
         , regex-tdfa, semigroups, stdenv, terminal-progress-bar, text
         , transformers
         }:
         mkDerivation {
           pname = "lentil";
           version = "1.0.9.1";
           sha256 = "3998153cde9222a81c5b04e0d6bb8ab9244987e64c5f0567b31159612cf04081";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             ansi-wl-pprint base csv directory filemanip filepath natural-sort
             optparse-applicative parsec pipes regex-tdfa semigroups
             terminal-progress-bar text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.ariis.it/static/articles/lentil/page.html";
           description = "frugal issue tracker";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "leveldb-haskell" = callPackage
        ({ mkDerivation, async, base, bytestring, data-default, exceptions
         , filepath, leveldb, resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "leveldb-haskell";
           version = "0.6.5";
           sha256 = "a417b088068deba73a77936c1345302bac7ce06019fb10254857cafad1d76c28";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring data-default exceptions filepath resourcet
             transformers
           ];
           librarySystemDepends = [ leveldb ];
           executableHaskellDepends = [
             async base bytestring data-default resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/kim/leveldb-haskell";
           description = "Haskell bindings to LevelDB";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) leveldb;};
      "lexer-applicative" = callPackage
        ({ mkDerivation, base, regex-applicative, srcloc, stdenv }:
         mkDerivation {
           pname = "lexer-applicative";
           version = "2.1.0.1";
           sha256 = "3e9612800e7d70f997e0d3396628b91133568b9e85e2c160834d1eb96acca49c";
           libraryHaskellDepends = [ base regex-applicative srcloc ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/lexer-applicative";
           description = "Simple lexer based on applicative regular expressions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "libffi" = callPackage
        ({ mkDerivation, base, bytestring, ffi, libffi, stdenv }:
         mkDerivation {
           pname = "libffi";
           version = "0.1";
           sha256 = "48387067c0f33bcfadf7a3bebbf48a55294202500f2b754229ffc8f12cb4f23c";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ ffi ];
           libraryPkgconfigDepends = [ libffi ];
           doHaddock = false;
           doCheck = false;
           description = "A binding to libffi";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) ffi; inherit (pkgs) libffi;};
      "libgit" = callPackage
        ({ mkDerivation, base, mtl, process, stdenv }:
         mkDerivation {
           pname = "libgit";
           version = "0.3.1";
           sha256 = "1d4c60dd987c363d77c4be947678d01a51ab4b568964c30a33827ccc854f7522";
           libraryHaskellDepends = [ base mtl process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-libgit";
           description = "Simple Git Wrapper";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "libgraph" = callPackage
        ({ mkDerivation, array, base, containers, monads-tf, process
         , stdenv, union-find
         }:
         mkDerivation {
           pname = "libgraph";
           version = "1.14";
           sha256 = "b7978be50d6182101ca79fb3ea83d0621f5394d483d1fa1eb7d590e45f8d3f3f";
           libraryHaskellDepends = [
             array base containers monads-tf process union-find
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://maartenfaddegon.nl";
           description = "Store and manipulate data in a graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "libinfluxdb" = callPackage
        ({ mkDerivation, base, bytestring, clock, containers, http-client
         , http-client-tls, http-types, resource-pool, stdenv, stm, text
         }:
         mkDerivation {
           pname = "libinfluxdb";
           version = "0.0.4";
           sha256 = "25b5bbc274c9e18bc46ea0271805adfcaaec6d46caa69eb465e0cbc03f63ef3f";
           revision = "1";
           editedCabalFile = "17ddlql04hgah7pr0zi8zvpza17ig7a0m27wr2c47gdzy7k0nr2v";
           libraryHaskellDepends = [
             base bytestring clock containers http-client http-client-tls
             http-types resource-pool stm text
           ];
           doHaddock = false;
           doCheck = false;
           description = "libinfluxdb";
           license = stdenv.lib.licenses.mit;
         }) {};
      "libmpd" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , data-default-class, filepath, mtl, network, old-locale, stdenv
         , text, time, utf8-string
         }:
         mkDerivation {
           pname = "libmpd";
           version = "0.9.0.7";
           sha256 = "17f0f200227ee74999e70fb2c45a590efc73af80187bc0c9de60af8e22d92622";
           libraryHaskellDepends = [
             attoparsec base bytestring containers data-default-class filepath
             mtl network old-locale text time utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vimus/libmpd-haskell#readme";
           description = "An MPD client library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "liboath-hs" = callPackage
        ({ mkDerivation, base, bytestring, inline-c, liboath, oath
         , safe-exceptions, stdenv, time
         }:
         mkDerivation {
           pname = "liboath-hs";
           version = "0.0.1.0";
           sha256 = "cf2a2763d43b59747e2e35429fa4f5f09af803c4744a8aaec924d27240caafb2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring inline-c safe-exceptions time
           ];
           librarySystemDepends = [ oath ];
           libraryPkgconfigDepends = [ liboath ];
           executableHaskellDepends = [ base bytestring time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/parsonsmatt/liboath-hs#readme";
           description = "Bindings to liboath";
           license = stdenv.lib.licenses.gpl3;
         }) {inherit (pkgs) liboath; inherit (pkgs) oath;};
      "libsystemd-journal" = callPackage
        ({ mkDerivation, base, bytestring, hashable, hsyslog, pipes
         , pipes-safe, stdenv, systemd, text, transformers, uniplate
         , unix-bytestring, unordered-containers, uuid, vector
         }:
         mkDerivation {
           pname = "libsystemd-journal";
           version = "1.4.2";
           sha256 = "f3f900d329d0daa1e927ebb5da89636587e489fda8d9c17a3f9854e7ae26ab5d";
           libraryHaskellDepends = [
             base bytestring hashable hsyslog pipes pipes-safe text transformers
             uniplate unix-bytestring unordered-containers uuid vector
           ];
           libraryPkgconfigDepends = [ systemd ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/libsystemd-journal";
           description = "Haskell bindings to libsystemd-journal";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) systemd;};
      "libxml-sax" = callPackage
        ({ mkDerivation, base, bytestring, libxml2, stdenv, text, xml-types
         }:
         mkDerivation {
           pname = "libxml-sax";
           version = "0.7.5";
           sha256 = "99141784cc0d6c5749f0df618b2d46922391eede09f4f9ccfc36fb58a9c16d51";
           libraryHaskellDepends = [ base bytestring text xml-types ];
           librarySystemDepends = [ libxml2 ];
           libraryPkgconfigDepends = [ libxml2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-libxml/";
           description = "Bindings for the libXML2 SAX interface";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) libxml2;};
      "licensor" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, cmdargs, containers
         , directory, http-conduit, process, stdenv
         }:
         mkDerivation {
           pname = "licensor";
           version = "0.2.2";
           sha256 = "9f7e0d24279553b79af2152d04f652d0f569ce67dc2e58f5550827dd02d7ac4f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal containers directory http-conduit process
           ];
           executableHaskellDepends = [
             base Cabal cmdargs containers directory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jpvillaisaza/licensor";
           description = "A license compatibility helper";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lift-generics" = callPackage
        ({ mkDerivation, base, generic-deriving, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "lift-generics";
           version = "0.1.2";
           sha256 = "0e9fbd17cd3e1af6ef1e994e7c14cfd42896e56499864e707f72246b6e2b604e";
           libraryHaskellDepends = [
             base generic-deriving ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/lift-generics";
           description = "GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lifted-async" = callPackage
        ({ mkDerivation, async, base, constraints, lifted-base
         , monad-control, stdenv, transformers-base
         }:
         mkDerivation {
           pname = "lifted-async";
           version = "0.9.3.3";
           sha256 = "ae37d9cab3dd21aa65e4722c5268585d2d555fea1e8870920e7e567160240dbf";
           libraryHaskellDepends = [
             async base constraints lifted-base monad-control transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/lifted-async";
           description = "Run lifted IO operations asynchronously and wait for their results";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lifted-base" = callPackage
        ({ mkDerivation, base, monad-control, stdenv, transformers-base }:
         mkDerivation {
           pname = "lifted-base";
           version = "0.2.3.11";
           sha256 = "8ec47a9fce7cf5913766a5c53e1b2cf254be733fa9d62e6e2f3f24e538005aab";
           revision = "1";
           editedCabalFile = "0vrik0j1xv2yp759ffa7jb7q838z4wglnbgsrja97mx0dwsbavnx";
           libraryHaskellDepends = [ base monad-control transformers-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/lifted-base";
           description = "lifted IO operations from the base library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "line" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , cryptohash-sha256, http-conduit, http-types, scotty, stdenv, text
         , time, transformers, wai
         }:
         mkDerivation {
           pname = "line";
           version = "4.0.1";
           sha256 = "a1dfab5dcd078747920fc61a024eb096a554f465d57c8bc642c155150f41667c";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring cryptohash-sha256
             http-conduit http-types scotty text time transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/utatti/line";
           description = "Haskell SDK for the LINE API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linear" = callPackage
        ({ mkDerivation, adjunctions, base, base-orphans, binary, bytes
         , Cabal, cabal-doctest, cereal, containers, deepseq, distributive
         , ghc-prim, hashable, lens, reflection, semigroupoids, semigroups
         , stdenv, tagged, template-haskell, transformers
         , transformers-compat, unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "linear";
           version = "1.20.7";
           sha256 = "4b88b6268d327220a296b6790c82db8ebab52973735af0a9de1c734cdc07cab6";
           revision = "2";
           editedCabalFile = "1w5194k2sqr508942xr9acfzk80avc4bwax347blw4js4vl5adwn";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             adjunctions base base-orphans binary bytes cereal containers
             deepseq distributive ghc-prim hashable lens reflection
             semigroupoids semigroups tagged template-haskell transformers
             transformers-compat unordered-containers vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/linear/";
           description = "Linear Algebra";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linear-accelerate" = callPackage
        ({ mkDerivation, accelerate, base, Cabal, cabal-doctest
         , distributive, lens, linear, stdenv
         }:
         mkDerivation {
           pname = "linear-accelerate";
           version = "0.5.0.1";
           sha256 = "3444712b29b06f8412d1f34fbe4252f81e4d3704e546e7b914fb2232be810b4e";
           revision = "1";
           editedCabalFile = "1r0h6mk2ai11f9grcwfbq4a5j7s9zn32m4finrigar4q22xkxf2j";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             accelerate base distributive lens linear
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/linear-accelerate/";
           description = "Lifting linear vector spaces into Accelerate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linked-list-with-iterator" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "linked-list-with-iterator";
           version = "0.1.1.0";
           sha256 = "c6ae37cc9d123afcb92f28fef9c5dae6d3713489bdf7f73ac9af420bb3f11b89";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/CindyLinz/Haskell-linked-list-with-iterator#readme";
           description = "A pure linked list which is mutable through iterators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linux-file-extents" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "linux-file-extents";
           version = "0.2.0.0";
           sha256 = "6c7cd9e700f666f774736d31a0e6aa7bfe9bd1e075c11eed701ba95095fd9bd0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/linux-file-extents";
           description = "Retrieve file fragmentation information under Linux";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "linux-namespaces" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "linux-namespaces";
           version = "0.1.2.0";
           sha256 = "585c69130dfcc499cfba00385ae7facc8ab9f2c26bdf746a6e25fc96d3b5f67b";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/redneb/hs-linux-namespaces";
           description = "Create new or enter an existing linux namespaces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "list-t" = callPackage
        ({ mkDerivation, base, base-prelude, mmorph, monad-control, mtl
         , stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "list-t";
           version = "1.0.0.1";
           sha256 = "4a4929b3733e692dd8072cc8521691dcc5e207f2218fe0201b9285641df8f701";
           libraryHaskellDepends = [
             base base-prelude mmorph monad-control mtl transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/list-t";
           description = "ListT done right";
           license = stdenv.lib.licenses.mit;
         }) {};
      "listsafe" = callPackage
        ({ mkDerivation, base, exceptions, stdenv }:
         mkDerivation {
           pname = "listsafe";
           version = "0.1.0.1";
           sha256 = "1a073247edfbea7dd7b7f9629fc64ddd3bce67fa61695da23ff43fb31d398d69";
           libraryHaskellDepends = [ base exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ombocomp/listsafe";
           description = "Safe wrappers for partial list functions, supporting MonadThrow";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "llvm-hs" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, Cabal
         , containers, exceptions, llvm-config, llvm-hs-pure, mtl, stdenv
         , template-haskell, transformers, utf8-string
         }:
         mkDerivation {
           pname = "llvm-hs";
           version = "5.1.3";
           sha256 = "ccdac4683f56135ba83ed0883231f686d1784e9bc7f072a34fcf041e0661976b";
           revision = "1";
           editedCabalFile = "0r8xgz6r2miw1l3az343jwz8f9jgzqywxnzl2xhanv05g3i462yh";
           setupHaskellDepends = [ base Cabal containers ];
           libraryHaskellDepends = [
             array attoparsec base bytestring containers exceptions llvm-hs-pure
             mtl template-haskell transformers utf8-string
           ];
           libraryToolDepends = [ llvm-config ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/llvm-hs/llvm-hs/";
           description = "General purpose LLVM bindings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "llvm-hs-pure" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, fail
         , mtl, stdenv, template-haskell, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "llvm-hs-pure";
           version = "5.1.2";
           sha256 = "c4d0993aacda72107e6d34865421f128b8c27b586b95a68e2a3e94700645d954";
           libraryHaskellDepends = [
             attoparsec base bytestring containers fail mtl template-haskell
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/llvm-hs/llvm-hs/";
           description = "Pure Haskell LLVM functionality (no FFI)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lmdb" = callPackage
        ({ mkDerivation, array, base, lmdb, stdenv }:
         mkDerivation {
           pname = "lmdb";
           version = "0.2.5";
           sha256 = "80552856211cdce06b808685d621bdd9c33a5ac5540a4dafe120c6b20c901c7d";
           libraryHaskellDepends = [ array base ];
           librarySystemDepends = [ lmdb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dmbarbour/haskell-lmdb";
           description = "Lightning MDB bindings";
           license = stdenv.lib.licenses.bsd2;
         }) {inherit (pkgs) lmdb;};
      "load-env" = callPackage
        ({ mkDerivation, base, directory, parsec, stdenv }:
         mkDerivation {
           pname = "load-env";
           version = "0.1.2";
           sha256 = "062cdaed7fc6d8958b60de1e0e7192896981fe231b0f397c0e3c998489aebdb4";
           libraryHaskellDepends = [ base directory parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pbrisbin/load-env#readme";
           description = "Load environment variables from a file";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "loc" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "loc";
           version = "0.1.3.2";
           sha256 = "d3aa6c3b1873a1be9b739201f008059836651c8eef2b52661daab6e625720ddd";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chris-martin/loc";
           description = "Types representing line and column positions and ranges in text files";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "loch-th" = callPackage
        ({ mkDerivation, base, pretty, stdenv, template-haskell }:
         mkDerivation {
           pname = "loch-th";
           version = "0.2.1";
           sha256 = "77541dcb8fb0ae2c7984fc704e53635dbec83974a172611339941bfc9f96d9cd";
           libraryHaskellDepends = [ base pretty template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liskin/loch-th";
           description = "Support for precise error locations in source files (Template Haskell version)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lockfree-queue" = callPackage
        ({ mkDerivation, abstract-deque, atomic-primops, base, bytestring
         , ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "lockfree-queue";
           version = "0.2.3.1";
           sha256 = "2a576a54bae8eabde01ebe901c9fd26a11bebb30516841de4525b5b60c0f3a8c";
           libraryHaskellDepends = [
             abstract-deque atomic-primops base bytestring ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
           description = "Michael and Scott lock-free queues";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log" = callPackage
        ({ mkDerivation, base, log-base, log-elasticsearch, log-postgres
         , stdenv
         }:
         mkDerivation {
           pname = "log";
           version = "0.9.0.1";
           sha256 = "c32bd5eabc0f37d0a410aac44bda615f2c880bb39358fb0283e26021411c50be";
           libraryHaskellDepends = [
             base log-base log-elasticsearch log-postgres
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/log";
           description = "Structured logging solution with multiple backends";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-base" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, deepseq
         , exceptions, mmorph, monad-control, monad-time, mtl, semigroups
         , stdenv, stm, text, time, transformers-base, unordered-containers
         }:
         mkDerivation {
           pname = "log-base";
           version = "0.7.4.0";
           sha256 = "4067eba80db49eb4509c10770959d0350f9eb9df5e0bde2fbf9024f106dc3f1b";
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring deepseq exceptions mmorph
             monad-control monad-time mtl semigroups stm text time
             transformers-base unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/log";
           description = "Structured logging solution (base package)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-domain" = callPackage
        ({ mkDerivation, base, binary, bytes, Cabal, cabal-doctest, cereal
         , comonad, deepseq, distributive, hashable, semigroupoids
         , semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "log-domain";
           version = "0.12";
           sha256 = "7191cba40b9b348c54171f2b86caabb75a30e52b6d7e4c57321bf5dcdf1f367e";
           revision = "1";
           editedCabalFile = "0p2cmr9lpbakh4ml4mxgh4fhqmxdk78xpcnqblag1cllx9jrmk5b";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base binary bytes cereal comonad deepseq distributive hashable
             semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/log-domain/";
           description = "Log-domain arithmetic";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-elasticsearch" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, base64-bytestring
         , bloodhound, bytestring, deepseq, http-client, http-client-tls
         , log-base, semigroups, stdenv, text, text-show, time, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "log-elasticsearch";
           version = "0.9.1.0";
           sha256 = "a5a6ecae199afc03ce20b58af6c11f10cb16cfd3b1dc347d52bc881760bbd544";
           revision = "2";
           editedCabalFile = "11c7jrc16nwg5jxwsggip5bsvw9zbk8c3gw1my22rwfglnpxg885";
           libraryHaskellDepends = [
             aeson aeson-pretty base base64-bytestring bloodhound bytestring
             deepseq http-client http-client-tls log-base semigroups text
             text-show time transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/log";
           description = "Structured logging solution (Elasticsearch back end)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-postgres" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, base64-bytestring
         , bytestring, deepseq, hpqtypes, http-client, lifted-base, log-base
         , mtl, semigroups, split, stdenv, text, text-show, time
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "log-postgres";
           version = "0.7.0.2";
           sha256 = "51c60374838cbd89d027cde9cdf2d8982b4f4152befe76899085520922e5639b";
           revision = "1";
           editedCabalFile = "1f18nzrh3bxnb58cmd3zyqpwaw2jyfl92dg6qd30zhlvlnkz1q7q";
           libraryHaskellDepends = [
             aeson aeson-pretty base base64-bytestring bytestring deepseq
             hpqtypes http-client lifted-base log-base mtl semigroups split text
             text-show time unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/log";
           description = "Structured logging solution (PostgreSQL back end)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "log-warper" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, containers, deepseq
         , directory, filepath, fmt, lifted-async, markdown-unlit, microlens
         , microlens-platform, mmorph, monad-control, monad-loops, mtl
         , o-clock, stdenv, text, time, transformers, transformers-base
         , universum, unix, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "log-warper";
           version = "1.8.10.1";
           sha256 = "a23806e1599f57a51df8458c2d12ae7d1bd4f7332afd417ba4d0d17691c51c32";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base containers deepseq directory filepath fmt
             lifted-async microlens-platform mmorph monad-control monad-loops
             mtl o-clock text time transformers transformers-base universum unix
             unordered-containers vector yaml
           ];
           executableHaskellDepends = [
             base markdown-unlit microlens monad-control mtl text universum yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/serokell/log-warper";
           description = "Flexible, configurable, monadic and pretty logging";
           license = stdenv.lib.licenses.mit;
         }) {};
      "logfloat" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "logfloat";
           version = "0.13.3.3";
           sha256 = "f774bd71d82ae053046ab602aa451ce4f65440d5c634dc8d950ae87f53527f82";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Log-domain floating point numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logger-thread" = callPackage
        ({ mkDerivation, base, fast-logger, protolude, safe-exceptions
         , stdenv, stm, text, time
         }:
         mkDerivation {
           pname = "logger-thread";
           version = "0.1.0.2";
           sha256 = "ac0a54001a69cff6f975209c4d9d399fb58ef59bb0ad6ac742c5ffedeac04a2a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base fast-logger protolude safe-exceptions stm text time
           ];
           executableHaskellDepends = [ base protolude stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joe9/logger-thread#readme";
           description = "Run FastLogger in a thread and direct all queued messages to it";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logging-effect" = callPackage
        ({ mkDerivation, async, base, exceptions, free, monad-control, mtl
         , semigroups, stdenv, stm, stm-delay, text, time, transformers
         , transformers-base, wl-pprint-text
         }:
         mkDerivation {
           pname = "logging-effect";
           version = "1.2.4";
           sha256 = "704042b895ebe3747472da53bba1e1c9a0d7fb6c5d328df5919ed02a4e184692";
           libraryHaskellDepends = [
             async base exceptions free monad-control mtl semigroups stm
             stm-delay text time transformers transformers-base wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocharles/logging-effect";
           description = "A mtl-style monad transformer for general purpose & compositional logging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logging-effect-extra" = callPackage
        ({ mkDerivation, base, logging-effect, logging-effect-extra-file
         , logging-effect-extra-handler, stdenv, wl-pprint-text
         }:
         mkDerivation {
           pname = "logging-effect-extra";
           version = "1.2.2";
           sha256 = "fccb190db3f4f81b761df1b6a4428311691d57a435dc78916e00a1f1bb0b2a4b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base logging-effect logging-effect-extra-file
             logging-effect-extra-handler wl-pprint-text
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jship/logging-effect-extra#readme";
           description = "Supplemental packages for `logging-effect`";
           license = stdenv.lib.licenses.mit;
         }) {};
      "logging-effect-extra-file" = callPackage
        ({ mkDerivation, base, logging-effect, stdenv, template-haskell
         , wl-pprint-text
         }:
         mkDerivation {
           pname = "logging-effect-extra-file";
           version = "1.1.2";
           sha256 = "d53334812651a2c1dfa87e93f43913b190bc63380752498593f593717026b1b7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base logging-effect template-haskell wl-pprint-text
           ];
           executableHaskellDepends = [ base logging-effect wl-pprint-text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jship/logging-effect-extra#readme";
           description = "TH splices to augment log messages with file info";
           license = stdenv.lib.licenses.mit;
         }) {};
      "logging-effect-extra-handler" = callPackage
        ({ mkDerivation, base, exceptions, logging-effect, stdenv, time
         , wl-pprint-text
         }:
         mkDerivation {
           pname = "logging-effect-extra-handler";
           version = "1.1.2";
           sha256 = "14efc5291632570746ba5a807e0634fb5af5c0f49f9994c59f1179ff69db0899";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base exceptions logging-effect time wl-pprint-text
           ];
           executableHaskellDepends = [ base logging-effect wl-pprint-text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jship/logging-effect-extra#readme";
           description = "Handy logging handler combinators";
           license = stdenv.lib.licenses.mit;
         }) {};
      "logging-facade" = callPackage
        ({ mkDerivation, base, call-stack, stdenv, transformers }:
         mkDerivation {
           pname = "logging-facade";
           version = "0.3.0";
           sha256 = "8e7115258b76e0bf5d21b532dd916c63e79b32d1776cc355d2d184f67ae71434";
           libraryHaskellDepends = [ base call-stack transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/logging-facade#readme";
           description = "Simple logging abstraction that allows multiple back-ends";
           license = stdenv.lib.licenses.mit;
         }) {};
      "logging-facade-syslog" = callPackage
        ({ mkDerivation, base, hsyslog, logging-facade, stdenv }:
         mkDerivation {
           pname = "logging-facade-syslog";
           version = "1";
           sha256 = "eb8b23c3f77a788891eac00e2d84bf489b683d761028a7938cf93e36729d8ea9";
           libraryHaskellDepends = [ base hsyslog logging-facade ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/logging-facade-syslog#readme";
           description = "A logging back-end to syslog(3) for the logging-facade library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "logict" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "logict";
           version = "0.6.0.2";
           sha256 = "1182b68e8d00279460c7fb9b8284bf129805c07754c678b2a8de5a6d768e161e";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dolio/";
           description = "A backtracking logic-programming monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "loop" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "loop";
           version = "0.3.0";
           sha256 = "92962010bdab28cc0092dd3fe42819d6f215c717dd10d9349626d92a0d0b3ecf";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/loop";
           description = "Fast loops (for when GHC can't optimize forM_)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "lrucache" = callPackage
        ({ mkDerivation, base, containers, contravariant, stdenv }:
         mkDerivation {
           pname = "lrucache";
           version = "1.2.0.0";
           sha256 = "5f17a9e026e198152d13830a0eae0df21be437c238a3f157f7c188fe27a37616";
           libraryHaskellDepends = [ base containers contravariant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/chowells79/lrucache";
           description = "a simple, pure LRU cache";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lrucaching" = callPackage
        ({ mkDerivation, base, base-compat, deepseq, hashable, psqueues
         , stdenv, vector
         }:
         mkDerivation {
           pname = "lrucaching";
           version = "0.3.3";
           sha256 = "aa7e5fd27963c70fc1108a7c0526ca0e05f76ccd885844bc50bdae70d5174aa4";
           libraryHaskellDepends = [
             base base-compat deepseq hashable psqueues vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cocreature/lrucaching#readme";
           description = "LRU cache";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lucid" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , hashable, mmorph, mtl, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "lucid";
           version = "2.9.9";
           sha256 = "d1aad51adf5ec30c0831ebce129c4fb10b69c287778f3cf644d6553543a50d33";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers hashable mmorph mtl text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/lucid";
           description = "Clear to write, read and edit DSL for HTML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "lxd-client" = callPackage
        ({ mkDerivation, aeson, async, base, bimap, bytestring, connection
         , containers, data-default, directory, either, exceptions, filepath
         , http-api-data, http-client, http-client-tls, http-media
         , http-types, mtl, network, semigroups, servant, servant-client
         , stdenv, text, tls, transformers, unix, websockets, x509
         , x509-store, x509-validation
         }:
         mkDerivation {
           pname = "lxd-client";
           version = "0.1.0.6";
           sha256 = "8b50bb6fa10aad3e900ea311d3dcff44768495de729ab5ac376dfe2e60aa801b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base bimap bytestring connection containers
             data-default directory either exceptions filepath http-api-data
             http-client http-client-tls http-media http-types mtl network
             semigroups servant servant-client text tls transformers unix
             websockets x509 x509-store x509-validation
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/haskell-lxd-client#readme";
           description = "LXD client written in Haskell";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "lxd-client-config" = callPackage
        ({ mkDerivation, aeson, base, containers, directory, filepath
         , stdenv, text, yaml
         }:
         mkDerivation {
           pname = "lxd-client-config";
           version = "0.1.0.1";
           sha256 = "903852c99bebc0af3cc3a26734056003f9097ada08eb1f361abce097a120afcf";
           libraryHaskellDepends = [
             aeson base containers directory filepath text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hverr/haskell-lxd-client-config#readme";
           description = "Read the configuration file of the standard LXD client";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "lzma" = callPackage
        ({ mkDerivation, base, bytestring, lzma, stdenv }:
         mkDerivation {
           pname = "lzma";
           version = "0.0.0.3";
           sha256 = "af8321c3511bde3e2745093fa3bd74c642e386db7d2e7c43b3a54814f1338144";
           revision = "1";
           editedCabalFile = "0y89blvpswvji1ya7h67gcx322iqi93di3jmwx47l6mic3ki4r2d";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ lzma ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/lzma";
           description = "LZMA/XZ compression and decompression";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) lzma;};
      "lzma-clib" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "lzma-clib";
           version = "5.2.2";
           sha256 = "0aed9cb8ef3a2b0e71c429b00161ee3fb342cce2603ccb934f507fb236a09fd5";
           doHaddock = false;
           doCheck = false;
           description = "liblzma C library and headers for use by LZMA bindings";
           license = stdenv.lib.licenses.publicDomain;
           platforms = stdenv.lib.platforms.none;
         }) {};
      "lzma-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, lzma, resourcet, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "lzma-conduit";
           version = "1.2.1";
           sha256 = "e955da2b8b108b3bf07073e12e5b01c46d42c8f3e40828fb1f34cd7e5413a742";
           libraryHaskellDepends = [
             base bytestring conduit lzma resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/alphaHeavy/lzma-conduit";
           description = "Conduit interface for lzma/xz compression";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "machines" = callPackage
        ({ mkDerivation, adjunctions, base, Cabal, cabal-doctest, comonad
         , containers, distributive, mtl, pointed, profunctors
         , semigroupoids, semigroups, stdenv, transformers
         , transformers-compat, void
         }:
         mkDerivation {
           pname = "machines";
           version = "0.6.3";
           sha256 = "3fd2e863a9a2ea2e3ef123668082757e48a5ec25e9659f4e02a3f56e44bdbecf";
           revision = "5";
           editedCabalFile = "1w9z6j74vdsaiqr5jhw4zvgl2n3l6fw3x1sgvf1yysmxkx9hhhdn";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             adjunctions base comonad containers distributive mtl pointed
             profunctors semigroupoids semigroups transformers
             transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/machines/";
           description = "Networked stream transducers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "machines-binary" = callPackage
        ({ mkDerivation, base, binary, bytestring, machines, stdenv }:
         mkDerivation {
           pname = "machines-binary";
           version = "0.3.0.3";
           sha256 = "60ff456d658ea1a427f32ee5ae1c726e2e7703942bd33edf28b457d753c20652";
           libraryHaskellDepends = [ base binary bytestring machines ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-binary";
           description = "Binary utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "machines-directory" = callPackage
        ({ mkDerivation, base, directory, filepath, machines, machines-io
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "machines-directory";
           version = "0.2.1.0";
           sha256 = "849c07db6ff6cfd88348d228a7a3f8ccb16e99568230ee0d20faa5670474deb4";
           libraryHaskellDepends = [
             base directory filepath machines machines-io transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-directory";
           description = "Directory (system) utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "machines-io" = callPackage
        ({ mkDerivation, base, bytestring, chunked-data, machines, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "machines-io";
           version = "0.2.0.13";
           sha256 = "4d579d5e9e94fafcfca91322734263498999d2e2af45c40ff0d1db78f4a8f5d4";
           libraryHaskellDepends = [
             base bytestring chunked-data machines transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aloiscochard/machines-io";
           description = "IO utilities for the machines library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "magic" = callPackage
        ({ mkDerivation, base, file, stdenv }:
         mkDerivation {
           pname = "magic";
           version = "1.1";
           sha256 = "b21c3b69f57b64199c1d7be0ac8ea1d02d698be59943058f6a2d642ea57ce082";
           libraryHaskellDepends = [ base ];
           librarySystemDepends = [ file ];
           doHaddock = false;
           doCheck = false;
           description = "Interface to C file/magic library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) file;};
      "magicbane" = callPackage
        ({ mkDerivation, aeson, aeson-qq, attoparsec, base, classy-prelude
         , conduit, conduit-combinators, data-default, data-has, ekg-core
         , ekg-wai, envy, errors, fast-logger, http-api-data, http-client
         , http-client-tls, http-conduit, http-date, http-link-header
         , http-media, http-types, lifted-async, mime-types, monad-control
         , monad-logger, monad-metrics, mtl, network, network-uri
         , raw-strings-qq, refined, servant, servant-server, split, stdenv
         , string-conversions, text, transformers, unordered-containers, wai
         , wai-cli, wai-middleware-metrics
         }:
         mkDerivation {
           pname = "magicbane";
           version = "0.1.4";
           sha256 = "a07b86e06179c855e284974e19779737aead8acb3c998b50f5e0191e110ad2fd";
           libraryHaskellDepends = [
             aeson aeson-qq attoparsec base classy-prelude conduit
             conduit-combinators data-default data-has ekg-core ekg-wai envy
             errors fast-logger http-api-data http-client http-client-tls
             http-conduit http-date http-link-header http-media http-types
             lifted-async mime-types monad-control monad-logger monad-metrics
             mtl network network-uri raw-strings-qq refined servant
             servant-server split string-conversions text transformers
             unordered-containers wai wai-cli wai-middleware-metrics
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/magicbane#readme";
           description = "A web framework that integrates Servant, ClassyPrelude, EKG, fast-logger, wai-cli…";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "mainland-pretty" = callPackage
        ({ mkDerivation, base, containers, srcloc, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "mainland-pretty";
           version = "0.6.1";
           sha256 = "e34624877cd2d2a2caae87598d0a9512834f560d7b17982fcdab533992dd45e0";
           libraryHaskellDepends = [
             base containers srcloc text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mainland/mainland-pretty";
           description = "Pretty printing designed for printing source code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "makefile" = callPackage
        ({ mkDerivation, attoparsec, base, stdenv, text }:
         mkDerivation {
           pname = "makefile";
           version = "1.1.0.0";
           sha256 = "ed7a12094fe93ef0c6350ed6607ad488703f54bc2ad5d8cb2f9d89eb10b75c07";
           libraryHaskellDepends = [ attoparsec base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nmattia/mask";
           description = "Simple Makefile parser and generator";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mallard" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cryptohash, exceptions
         , fgl, file-embed, hashable, hasql, hasql-optparse-applicative
         , hasql-pool, hasql-transaction, Interpolation, lens, megaparsec
         , mtl, optparse-applicative, optparse-text, path, path-io, stdenv
         , text, unordered-containers
         }:
         mkDerivation {
           pname = "mallard";
           version = "0.6.1.1";
           sha256 = "1594a75dc75cf8482d0b9a7ba443c9322287267faf6b044d18888cb167c1b10a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base byteable bytestring cryptohash exceptions fgl file-embed
             hashable hasql hasql-pool hasql-transaction Interpolation lens
             megaparsec mtl path path-io text unordered-containers
           ];
           executableHaskellDepends = [
             base exceptions fgl hasql hasql-optparse-applicative hasql-pool
             lens mtl optparse-applicative optparse-text path path-io text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/mallard";
           description = "Database migration and testing as a library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "managed" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "managed";
           version = "1.0.6";
           sha256 = "f1a70a23c0866b75d609b2c818b426712d7a2b4256f43a3d5da517e853e279cd";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A monad for managed values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mandrill" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, blaze-html
         , bytestring, containers, email-validate, http-client
         , http-client-tls, http-types, lens, mtl, old-locale, QuickCheck
         , stdenv, text, time, unordered-containers
         }:
         mkDerivation {
           pname = "mandrill";
           version = "0.5.3.2";
           sha256 = "270d7df72da9c7d1d17bb3c5b115dac449b05a2931a6be41e55336b24e74f4cb";
           libraryHaskellDepends = [
             aeson base base64-bytestring blaze-html bytestring containers
             email-validate http-client http-client-tls http-types lens mtl
             old-locale QuickCheck text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Library for interfacing with the Mandrill JSON API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "markdown" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
         , conduit, conduit-extra, containers, data-default, stdenv, text
         , transformers, xml-conduit, xml-types, xss-sanitize
         }:
         mkDerivation {
           pname = "markdown";
           version = "0.1.16";
           sha256 = "08b0b352e208316ddc99c6f161704c8ecaf248c2e51f506900e344c93757ed85";
           libraryHaskellDepends = [
             attoparsec base blaze-html blaze-markup conduit conduit-extra
             containers data-default text transformers xml-conduit xml-types
             xss-sanitize
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/markdown";
           description = "Convert Markdown to HTML, with XSS protection";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "markdown-unlit" = callPackage
        ({ mkDerivation, base, base-compat, stdenv }:
         mkDerivation {
           pname = "markdown-unlit";
           version = "0.4.1";
           sha256 = "7438d86988b5950be1a0696a9bf54bbcda0bc66b4e3af0a0cc762b7ad78b0903";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base base-compat ];
           executableHaskellDepends = [ base base-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/markdown-unlit#readme";
           description = "Literate Haskell support for Markdown";
           license = stdenv.lib.licenses.mit;
         }) {};
      "markov-chain" = callPackage
        ({ mkDerivation, base, containers, random, stdenv, transformers }:
         mkDerivation {
           pname = "markov-chain";
           version = "0.0.3.4";
           sha256 = "6e51b800101a28593be28ce7ef1b21b7cc7a177a821fb99ecd8a28c69b7b92cd";
           libraryHaskellDepends = [ base containers random transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/markov-chain/";
           description = "Markov Chains for generating random sequences with a user definable behaviour";
           license = "GPL";
         }) {};
      "markup" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, clay, comonad
         , lucid, mmorph, monad-control, monad-logger, mtl, path-extra
         , resourcet, stdenv, text, transformers-base, urlpath
         }:
         mkDerivation {
           pname = "markup";
           version = "4.0.3";
           sha256 = "0362bedb0692350fc10c9ab509dc2addfc39160581cdbe5ef44f8f8f644296a8";
           libraryHaskellDepends = [
             base blaze-html blaze-markup clay comonad lucid mmorph
             monad-control monad-logger mtl path-extra resourcet text
             transformers-base urlpath
           ];
           doHaddock = false;
           doCheck = false;
           description = "Abstraction for HTML-embedded content";
           license = stdenv.lib.licenses.mit;
         }) {};
      "marvin" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, configurator
         , deepseq, directory, filepath, hashable, haskeline, http-client
         , http-client-tls, http-types, irc-conduit, lens, lifted-async
         , lifted-base, marvin-interpolate, monad-control, monad-logger
         , monad-loops, mtl, mustache, network-uri, optparse-applicative
         , random, stdenv, stm, text, text-icu, time, transformers
         , transformers-base, unordered-containers, vector, wai, warp
         , warp-tls, websockets, wreq, wuss
         }:
         mkDerivation {
           pname = "marvin";
           version = "0.2.5";
           sha256 = "50bdbb5300d03a0cb5f47e1b535c41044c67d8efd39961d3868aaaa31fe2f551";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring conduit configurator deepseq hashable
             haskeline http-client http-client-tls http-types irc-conduit lens
             lifted-async lifted-base marvin-interpolate monad-control
             monad-logger monad-loops mtl network-uri optparse-applicative
             random stm text text-icu time transformers transformers-base
             unordered-containers vector wai warp warp-tls websockets wreq wuss
           ];
           executableHaskellDepends = [
             aeson base bytestring configurator directory filepath mustache
             optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://marvin.readthedocs.io";
           description = "A framework for modular, portable chat bots";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "marvin-interpolate" = callPackage
        ({ mkDerivation, base, haskell-src-meta, mtl, parsec, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "marvin-interpolate";
           version = "1.1.2";
           sha256 = "d640c3bc2f70e17d1fb23c914a3d19b11f72568fda5d5c52e52c1de2e940eccf";
           libraryHaskellDepends = [
             base haskell-src-meta mtl parsec template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://marvin.readthedocs.io/en/latest/interpolation.html";
           description = "Compile time string interpolation a la Scala and CoffeeScript";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "math-functions" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv, vector
         , vector-th-unbox
         }:
         mkDerivation {
           pname = "math-functions";
           version = "0.2.1.0";
           sha256 = "f71b5598de453546396a3f5f7f6ce877fffcc996639b7569d8628cae97da65eb";
           libraryHaskellDepends = [
             base deepseq primitive vector vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/math-functions";
           description = "Special functions and Chebyshev polynomials";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mathexpr" = callPackage
        ({ mkDerivation, base, data-default-class, stdenv }:
         mkDerivation {
           pname = "mathexpr";
           version = "0.3.0.0";
           sha256 = "23c30ae0c962a7858d57bed320be6421baeb82fa795260e1eea0bc8fcc4871ad";
           libraryHaskellDepends = [ base data-default-class ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mdibaiee/mathexpr";
           description = "Parse and evaluate math expressions with variables and functions";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "matplotlib" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , filepath, process, split, stdenv, temporary
         }:
         mkDerivation {
           pname = "matplotlib";
           version = "0.6.0";
           sha256 = "6ddf08827bd7737b1e66969d5f869b6c91bb0610f7e1bf3b7eda3e7cf1c2b980";
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq filepath process split
             temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abarbu/matplotlib-haskell";
           description = "Bindings to Matplotlib; a Python plotting library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrices" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv, vector }:
         mkDerivation {
           pname = "matrices";
           version = "0.4.5";
           sha256 = "2d396f130d675eabaa435caba122fe2b2c1d2dfc5343471131b7392e479b7397";
           libraryHaskellDepends = [ base deepseq primitive vector ];
           doHaddock = false;
           doCheck = false;
           description = "native matrix based on vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrix" = callPackage
        ({ mkDerivation, base, deepseq, loop, primitive, stdenv, vector }:
         mkDerivation {
           pname = "matrix";
           version = "0.3.5.0";
           sha256 = "7a3d41c0f66212360057b29ae9f81779c8da9f71b040ad7676699af7e7ca35b5";
           libraryHaskellDepends = [ base deepseq loop primitive vector ];
           doHaddock = false;
           doCheck = false;
           description = "A native implementation of matrix operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "matrix-market-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, exceptions
         , scientific, stdenv
         }:
         mkDerivation {
           pname = "matrix-market-attoparsec";
           version = "0.1.0.8";
           sha256 = "5e41aa81abdfd6062dc4607ea7c684b9ac09a286d2ebf76829504acf09260a77";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring exceptions scientific
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/matrix-market-attoparsec";
           description = "Parsing and serialization functions for the NIST Matrix Market format";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "maximal-cliques" = callPackage
        ({ mkDerivation, base, containers, stdenv, vector }:
         mkDerivation {
           pname = "maximal-cliques";
           version = "0.1.1";
           sha256 = "709d05c753c7d2d7466ade515da0255fc79241432d0118b3182dd3b2def475e9";
           libraryHaskellDepends = [ base containers vector ];
           doHaddock = false;
           doCheck = false;
           description = "Enumerate all maximal cliques of a graph";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mbox" = callPackage
        ({ mkDerivation, base, safe, stdenv, text, time, time-locale-compat
         }:
         mkDerivation {
           pname = "mbox";
           version = "0.3.4";
           sha256 = "dce4b538bbe03928a1d1438bf80b4d341ffb1a9d23ead1c2b16a04b0fa5371de";
           revision = "1";
           editedCabalFile = "11jikczq21fnhsvr6n33qbb5q6ixbhab4s0js8n39zwgmglighz5";
           libraryHaskellDepends = [ base safe text time time-locale-compat ];
           doHaddock = false;
           doCheck = false;
           description = "Read and write standard mailbox files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mbox-utility" = callPackage
        ({ mkDerivation, base, bytestring, hsemail, non-empty, old-time
         , parsec, spreadsheet, stdenv, utility-ht
         }:
         mkDerivation {
           pname = "mbox-utility";
           version = "0.0.1";
           sha256 = "e5e009f83c95b20d85c4b39d233b2f32ee15eae08d54edbaa7928848ae15e9f8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring hsemail non-empty old-time parsec spreadsheet
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           description = "List contents of an mbox file containing e-mails";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mbtiles" = callPackage
        ({ mkDerivation, base, bytestring, directory, monad-control, mtl
         , resource-pool, sqlite-simple, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "mbtiles";
           version = "0.6.0.0";
           sha256 = "b8a82f0a1c551a59961449587f031f679dd2f5f082ce45b6f7d88d81f99ad62f";
           libraryHaskellDepends = [
             base bytestring directory monad-control mtl resource-pool
             sqlite-simple text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/mbtiles#readme";
           description = "Haskell MBTiles client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mcmc-types" = callPackage
        ({ mkDerivation, base, containers, mwc-probability, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "mcmc-types";
           version = "1.0.3";
           sha256 = "3c4b25030b05567694ddc313ca808a32133ad5433b4d89837e1ed00bbfcefc6e";
           libraryHaskellDepends = [
             base containers mwc-probability transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mcmc-types";
           description = "Common types for sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "med-module" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, storable-endian
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "med-module";
           version = "0.1.1";
           sha256 = "f78974fba8f8d17267297b268b84cf7434f51f5d2ad106a461f225f1d873eee3";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring storable-endian transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           description = "Parse song module files from Amiga MED and OctaMED";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "median-stream" = callPackage
        ({ mkDerivation, base, heap, stdenv }:
         mkDerivation {
           pname = "median-stream";
           version = "0.7.0.0";
           sha256 = "e92fc44be8189dafe9190aad225462780f26d0b1fe1823376342329db6c71f3d";
           libraryHaskellDepends = [ base heap ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/median-stream#readme";
           description = "Constant-time queries for the median of a stream of numeric data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mega-sdist" = callPackage
        ({ mkDerivation, base, bytestring, classy-prelude-conduit
         , conduit-extra, directory, filepath, http-conduit, optparse-simple
         , stdenv, tar-conduit, temporary, text, typed-process, yaml
         }:
         mkDerivation {
           pname = "mega-sdist";
           version = "0.3.0.6";
           sha256 = "87ee721b6f71bbb1b1359d56437c05962778f035454bbc2e5b3ec970619aea31";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring classy-prelude-conduit conduit-extra directory
             filepath http-conduit optparse-simple tar-conduit temporary text
             typed-process yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mega-sdist#readme";
           description = "Handles uploading to Hackage from mega repos";
           license = stdenv.lib.licenses.mit;
         }) {};
      "megaparsec" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , deepseq, mtl, parser-combinators, scientific, stdenv, text
         , transformers
         }:
         mkDerivation {
           pname = "megaparsec";
           version = "6.3.0";
           sha256 = "5b779cfdc3c5c327de1674d246bade7a33dade36b8be182c5328d4af237c7095";
           revision = "2";
           editedCabalFile = "1npxvydar8l68vfp3g0ir9cvq5vglf1z2a9q1h1mj438y0084f7v";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers deepseq mtl
             parser-combinators scientific text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/megaparsec";
           description = "Monadic parser combinators";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "memory" = callPackage
        ({ mkDerivation, base, basement, bytestring, deepseq, foundation
         , ghc-prim, stdenv
         }:
         mkDerivation {
           pname = "memory";
           version = "0.14.11";
           sha256 = "674cf05ccf238c8ba0aa1673da3132c4f573163dd9a21b9f5e1fb938322add4c";
           libraryHaskellDepends = [
             base basement bytestring deepseq foundation ghc-prim
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-memory";
           description = "memory and related abstraction stuff";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mercury-api" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, clock, hashable
         , optparse-applicative, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "mercury-api";
           version = "0.1.0.1";
           sha256 = "f9e398ec0256b065de94f9412de6d164bd6fc425ad64d407d513db232602bb40";
           revision = "2";
           editedCabalFile = "093c8afmcrnbfliz1ykpyc4w40dli2wig0qi0xcwg8445idwp2kg";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base bytestring clock hashable text
             unordered-containers
           ];
           executableHaskellDepends = [
             ansi-terminal base bytestring optparse-applicative text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ppelleti/hs-mercury-api";
           description = "Haskell binding to Mercury API for ThingMagic RFID readers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mersenne-random-pure64" = callPackage
        ({ mkDerivation, base, random, stdenv, time }:
         mkDerivation {
           pname = "mersenne-random-pure64";
           version = "0.2.2.0";
           sha256 = "ef1400ddc1ddafb0b98d4331a58bdbe3b5209a81579e17f85f180731a96d75d1";
           libraryHaskellDepends = [ base random time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
           description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "messagepack" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, deepseq
         , stdenv
         }:
         mkDerivation {
           pname = "messagepack";
           version = "0.5.4";
           sha256 = "939590c05d5b0831b3b4796f2e1a070e290982c92b2009f2aa1ef5f4b05b5d7c";
           revision = "1";
           editedCabalFile = "0p13in70gvxl8d8hjl1dcxczfpcfyffy2lxbdy1d21h742ks1zjb";
           libraryHaskellDepends = [
             base bytestring cereal containers deepseq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rodrigosetti/messagepack";
           description = "Serialize instance for Message Pack Object";
           license = stdenv.lib.licenses.mit;
         }) {};
      "messagepack-rpc" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, messagepack
         , network-simple, stdenv
         }:
         mkDerivation {
           pname = "messagepack-rpc";
           version = "0.5.1";
           sha256 = "aa7960644668284e6add36e5c305af2c6d3ebf0a9a2c3fcd62529554a049a0bc";
           revision = "1";
           editedCabalFile = "05p6naaxswmsc3w7k67ydzzwyn60ymp0jbrc0f66p2sajvlnviax";
           libraryHaskellDepends = [
             base bytestring cereal containers messagepack network-simple
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/rodrigosetti/messagepack-rpc";
           description = "Message Pack RPC over TCP";
           license = stdenv.lib.licenses.mit;
         }) {};
      "metrics" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, containers, lens
         , mwc-random, primitive, stdenv, text, time, transformers
         , transformers-base, unix-compat, unordered-containers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "metrics";
           version = "0.4.1.1";
           sha256 = "d55f6e704ec6f0c6bab0da46417049b7de3e76ca69a0be4c49a790db28c75bb8";
           libraryHaskellDepends = [
             ansi-terminal base bytestring containers lens mwc-random primitive
             text time transformers transformers-base unix-compat
             unordered-containers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           description = "High-performance application metric tracking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mfsolve" = callPackage
        ({ mkDerivation, base, hashable, mtl, mtl-compat, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "mfsolve";
           version = "0.3.2.0";
           sha256 = "232167442f9c0f326b7514b362d4521b3937b716fd4155c65060d34430aa42f1";
           libraryHaskellDepends = [
             base hashable mtl mtl-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Equation solver and calculator à la metafont";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microformats2-parser" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec, base
         , base-compat, blaze-html, blaze-markup, bytestring, containers
         , data-default, either, errors, html-conduit, lens-aeson, network
         , network-uri, options, pcre-heavy, safe, scotty, stdenv, tagsoup
         , text, time, transformers, unordered-containers, vector, wai-cli
         , wai-extra, xml-lens, xss-sanitize
         }:
         mkDerivation {
           pname = "microformats2-parser";
           version = "1.0.1.7";
           sha256 = "def0a462fcfaa344629ee05ced7a93593bad2749148873b4f4c63e3f0c6758f1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-qq attoparsec base base-compat blaze-markup bytestring
             containers data-default either errors html-conduit lens-aeson
             network-uri pcre-heavy safe tagsoup text time transformers
             unordered-containers vector xml-lens xss-sanitize
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base base-compat blaze-html blaze-markup
             data-default network network-uri options scotty text wai-cli
             wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/microformats2-parser";
           description = "A Microformats 2 parser";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "microlens" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "microlens";
           version = "0.4.8.3";
           sha256 = "53445b345d493e381173e6d7dc428116717cee9216e1fe069b96e68657151d9f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "A tiny lens library with no dependencies. If you're writing an app, you probably want microlens-platform, not this.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, microlens
         , scientific, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "microlens-aeson";
           version = "2.2.0.2";
           sha256 = "8d343c3585b1db18ce21bdb431cc23e50eb8c59034d478dd9b88e8b4dc35f317";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring microlens scientific text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fosskers/microlens-aeson/";
           description = "Law-abiding lenses for Aeson, using microlens";
           license = stdenv.lib.licenses.mit;
         }) {};
      "microlens-contra" = callPackage
        ({ mkDerivation, base, contravariant, microlens, stdenv }:
         mkDerivation {
           pname = "microlens-contra";
           version = "0.1.0.1";
           sha256 = "4983f19d37168a7cb862f76a22e8a43156df89c3c58b8206e2c84b2262c7f595";
           libraryHaskellDepends = [ base contravariant microlens ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "True folds and getters for microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-ghc" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, microlens
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "microlens-ghc";
           version = "0.4.8.0";
           sha256 = "dea1ea2fa61dea6ebb431e95b36ae4e2011ddb94ad3e0693173fd41f1858697a";
           libraryHaskellDepends = [
             array base bytestring containers microlens transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "microlens + array, bytestring, containers, transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-mtl" = callPackage
        ({ mkDerivation, base, microlens, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "microlens-mtl";
           version = "0.1.11.1";
           sha256 = "d3e74f46a72aad12b71d8549a98fbc023fb364766f17d75742fb32fee70bdf50";
           libraryHaskellDepends = [
             base microlens mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "microlens support for Reader/Writer/State from mtl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-platform" = callPackage
        ({ mkDerivation, base, hashable, microlens, microlens-ghc
         , microlens-mtl, microlens-th, stdenv, text, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "microlens-platform";
           version = "0.3.9.0";
           sha256 = "93076f4c17e5ce65db89ccf50924b395667a730c8ff0c1a94b03b94b9a373539";
           libraryHaskellDepends = [
             base hashable microlens microlens-ghc microlens-mtl microlens-th
             text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "Feature-complete microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microlens-th" = callPackage
        ({ mkDerivation, base, containers, microlens, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "microlens-th";
           version = "0.4.1.3";
           sha256 = "8e5c3bfc477ac9fa516b1a28a02a58a8ba2daeed99ff716cb06c3dda31134195";
           libraryHaskellDepends = [
             base containers microlens template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/microlens";
           description = "Automatic generation of record lenses for microlens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microsoft-translator" = callPackage
        ({ mkDerivation, base, bytestring, http-api-data, http-client
         , http-client-tls, http-media, mtl, safe, servant, servant-client
         , stdenv, text, time, xml
         }:
         mkDerivation {
           pname = "microsoft-translator";
           version = "0.1.1";
           sha256 = "5b01dbeb85c8f570c612268ffa23c8d4ee302143b8bcf99b59a8b1134f9cc589";
           libraryHaskellDepends = [
             base bytestring http-api-data http-client http-client-tls
             http-media mtl safe servant servant-client text time xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/BlackBrane/microsoft-translator";
           description = "Bindings to the Microsoft Translator API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "microspec" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "microspec";
           version = "0.1.0.0";
           sha256 = "e1e4156574d81786e1c8d04ba22e7283001ef3eada3104a99e9c31a45656d343";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Tiny QuickCheck test library with minimal dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "microstache" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , directory, filepath, parsec, stdenv, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "microstache";
           version = "1.0.1.1";
           sha256 = "5de98542313eb75f84961366ff8a70ed632387ba6518215035b2dd1b32d6a120";
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq directory filepath parsec
             text transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/microstache";
           description = "Mustache templates for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "midi" = callPackage
        ({ mkDerivation, base, binary, bytestring, event-list
         , explicit-exception, monoid-transformer, non-negative, QuickCheck
         , random, semigroups, stdenv, transformers, utility-ht
         }:
         mkDerivation {
           pname = "midi";
           version = "0.2.2.2";
           sha256 = "de7cb58971a43f23e2a1ec0c4c01f690c1dd11ba55bc71264e1b9731014a693b";
           libraryHaskellDepends = [
             base binary bytestring event-list explicit-exception
             monoid-transformer non-negative QuickCheck random semigroups
             transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/MIDI";
           description = "Handling of MIDI messages and files";
           license = "GPL";
         }) {};
      "midi-music-box" = callPackage
        ({ mkDerivation, base, containers, diagrams-lib
         , diagrams-postscript, event-list, midi, non-empty
         , optparse-applicative, stdenv, utility-ht
         }:
         mkDerivation {
           pname = "midi-music-box";
           version = "0.0.0.4";
           sha256 = "373c67bf3135499331ec00748dd003a26155f4c567ab06105c92d9e5d6d81651";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers diagrams-lib diagrams-postscript event-list midi
             non-empty optparse-applicative utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/midi-music-box";
           description = "Convert MIDI file to music box punch tape";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mighty-metropolis" = callPackage
        ({ mkDerivation, base, kan-extensions, mcmc-types, mwc-probability
         , pipes, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "mighty-metropolis";
           version = "1.2.0";
           sha256 = "8d3c0b4b65024846291c4f547c45e5c04f587aefd0e8d041d54679bb519871c0";
           libraryHaskellDepends = [
             base kan-extensions mcmc-types mwc-probability pipes primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mighty-metropolis";
           description = "The Metropolis algorithm";
           license = stdenv.lib.licenses.mit;
         }) {};
      "milena" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, digest, lens
         , lifted-base, monad-control, mtl, murmur-hash, network, random
         , resource-pool, semigroups, stdenv, transformers, zlib
         }:
         mkDerivation {
           pname = "milena";
           version = "0.5.2.1";
           sha256 = "c2d568c54723f990b7edaf53354e59ff883860c99195480f7e49c18d2e9ed4d7";
           libraryHaskellDepends = [
             base bytestring cereal containers digest lens lifted-base
             monad-control mtl murmur-hash network random resource-pool
             semigroups transformers zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/adamflott/milena.git#readme";
           description = "A Kafka client for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mime-mail" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , filepath, process, random, stdenv, text
         }:
         mkDerivation {
           pname = "mime-mail";
           version = "0.4.14";
           sha256 = "9632c3d54c9741fece0a3ea705d965485a1299ebe5798d2aa7cca2c8e4baaa3e";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring filepath process
             random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/mime-mail";
           description = "Compose MIME email messages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-mail-ses" = callPackage
        ({ mkDerivation, base, base64-bytestring, byteable, bytestring
         , conduit, cryptohash, http-client, http-conduit, http-types
         , mime-mail, old-locale, stdenv, text, time, transformers
         , xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "mime-mail-ses";
           version = "0.4.0.0";
           sha256 = "bc2660fd086b217bd269e57605d5a8350b167edca5a376763f91cea2905a0771";
           libraryHaskellDepends = [
             base base64-bytestring byteable bytestring conduit cryptohash
             http-client http-conduit http-types mime-mail old-locale text time
             transformers xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/mime-mail";
           description = "Send mime-mail messages via Amazon SES";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mime-types" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text }:
         mkDerivation {
           pname = "mime-types";
           version = "0.1.0.7";
           sha256 = "83164a24963a7ef37543349df095155b30116c208e602a159a5cd3722f66e9b9";
           libraryHaskellDepends = [ base bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Basic mime-type handling types and functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "minimorph" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "minimorph";
           version = "0.1.6.1";
           sha256 = "94677b454b86a47d1b04ef1462873708976546bbb7a3bcc4f3ffe222d98bb844";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Mikolaj/minimorph";
           description = "English spelling functions with an emphasis on simplicity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "minio-hs" = callPackage
        ({ mkDerivation, aeson, async, base, base64-bytestring, bytestring
         , case-insensitive, conduit, conduit-combinators, conduit-extra
         , containers, cryptonite, cryptonite-conduit, data-default
         , exceptions, filepath, http-client, http-conduit, http-types
         , lifted-async, lifted-base, memory, monad-control, protolude
         , resourcet, stdenv, text, text-format, time, transformers
         , transformers-base, vector, xml-conduit
         }:
         mkDerivation {
           pname = "minio-hs";
           version = "0.3.2";
           sha256 = "249b5b22bf9758d4a7e88382aa6533a610cf9c39b773df6101f008feecb6d079";
           libraryHaskellDepends = [
             aeson async base base64-bytestring bytestring case-insensitive
             conduit conduit-combinators conduit-extra containers cryptonite
             cryptonite-conduit data-default exceptions filepath http-client
             http-conduit http-types lifted-async lifted-base memory
             monad-control protolude resourcet text text-format time
             transformers transformers-base vector xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minio/minio-hs#readme";
           description = "A Minio Haskell Library for Amazon S3 compatible cloud storage";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "miniutter" = callPackage
        ({ mkDerivation, base, binary, containers, ghc-prim, minimorph
         , stdenv, text
         }:
         mkDerivation {
           pname = "miniutter";
           version = "0.4.6.0";
           sha256 = "bde66af62bb1f9d4649bc9ddaf6b82f70ba5078591d6cd7462effb650c876a24";
           libraryHaskellDepends = [
             base binary containers ghc-prim minimorph text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Mikolaj/miniutter";
           description = "Simple English clause creation from arbitrary words";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mintty" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "mintty";
           version = "0.1.1";
           sha256 = "c87f349f1999e8dee25f636428fc1742f50bcd2b51c9288578c60c58102e9f83";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/mintty";
           description = "A reliable way to detect the presence of a MinTTY console on Windows";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "misfortune" = callPackage
        ({ mkDerivation, base, bytestring, cereal, directory, filepath
         , knob, monad-loops, random-fu, regex-base, regex-pcre, semigroups
         , stdenv, text, utf8-string, vector
         }:
         mkDerivation {
           pname = "misfortune";
           version = "0.1.1.2";
           sha256 = "ae4b44215f811e7af6af756c813b9bd6e4161be555f30dd817324f8d1ffe2349";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal directory filepath knob random-fu semigroups
             text utf8-string vector
           ];
           executableHaskellDepends = [ monad-loops regex-base regex-pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/misfortune";
           description = "fortune-mod clone";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "miso" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, http-api-data
         , http-types, lucid, network-uri, servant, servant-lucid, stdenv
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "miso";
           version = "0.10.0.0";
           sha256 = "fdb4c4a4976572215686912b9397ffb28d4a903a9577789fd8eb933053b3b05c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers http-api-data http-types lucid
             network-uri servant servant-lucid text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dmjio/miso";
           description = "A tasty Haskell front-end framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "missing-foreign" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "missing-foreign";
           version = "0.1.1";
           sha256 = "9e1b36cdb8626d848386c1c4d54f3b9f80b3458398aa6a4d499266b5ecbcc885";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Convenience functions for FFI work";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mixed-types-num" = callPackage
        ({ mkDerivation, base, convertible, hspec, hspec-smallcheck
         , QuickCheck, smallcheck, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "mixed-types-num";
           version = "0.3.1.4";
           sha256 = "c4ffffea5a5eae0a1fafde3187be1bdf9cd0d166bee0bd502b1aa6cd898dc100";
           libraryHaskellDepends = [
             base convertible hspec hspec-smallcheck QuickCheck smallcheck
             template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michalkonecny/mixed-types-num";
           description = "Alternative Prelude with numeric and logic expressions typed bottom-up";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mltool" = callPackage
        ({ mkDerivation, ascii-progress, base, deepseq, hmatrix
         , hmatrix-gsl, hmatrix-gsl-stats, MonadRandom, random, stdenv
         , vector
         }:
         mkDerivation {
           pname = "mltool";
           version = "0.1.0.2";
           sha256 = "379ca73b496e1a589be6d8d75a4067e2eb382e6500530f10b40bfda59042f5bf";
           libraryHaskellDepends = [
             ascii-progress base deepseq hmatrix hmatrix-gsl hmatrix-gsl-stats
             MonadRandom random vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alexander-ignatyev/mltool";
           description = "Machine Learning Toolbox";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmap" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "mmap";
           version = "0.5.9";
           sha256 = "58fcbb04e1cb8e7c36c05823b02dce2faaa989c53d745a7f36192de2fc98b5f8";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Memory mapped files for POSIX and Windows";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmark" = callPackage
        ({ mkDerivation, aeson, base, case-insensitive, containers
         , data-default-class, deepseq, dlist, email-validate, foldl
         , hashable, html-entity-map, lucid, megaparsec, microlens
         , microlens-th, modern-uri, mtl, parser-combinators, stdenv, text
         , text-metrics, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "mmark";
           version = "0.0.4.0";
           sha256 = "9015a9ea5cce5b441b4f660da12ac298e1cf45d113209e6a1497b9a6b3a2ba15";
           revision = "2";
           editedCabalFile = "1l2xljnasvgj3icc8dynsakyskd65c114gm4f94la3pv8ghcc3rg";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base case-insensitive containers data-default-class deepseq
             dlist email-validate foldl hashable html-entity-map lucid
             megaparsec microlens microlens-th modern-uri mtl parser-combinators
             text text-metrics unordered-containers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/mmark";
           description = "Strict markdown processor for writers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmark-ext" = callPackage
        ({ mkDerivation, base, data-default-class, foldl, lucid, microlens
         , mmark, modern-uri, stdenv, text
         }:
         mkDerivation {
           pname = "mmark-ext";
           version = "0.0.1.2";
           sha256 = "59e12257836c1088da3def0b43ba2c27d14fad1888eea68e30782f46b747c938";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base data-default-class foldl lucid microlens mmark modern-uri text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/mmark-ext";
           description = "Commonly useful extensions for MMark markdown processor";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mmorph" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "mmorph";
           version = "1.1.1";
           sha256 = "e3350d65edfbe52b723ff02fa9143bd6bde3a992035e4d35cc943191db76109e";
           libraryHaskellDepends = [
             base mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Monad morphisms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mnist-idx" = callPackage
        ({ mkDerivation, base, binary, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "mnist-idx";
           version = "0.1.2.8";
           sha256 = "42ff167e84414821ed47d783042cad20a0bd198f935648aa6cdf97bdc291b2fe";
           libraryHaskellDepends = [ base binary bytestring vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kryoxide/mnist-idx/";
           description = "Read and write IDX data that is used in e.g. the MNIST database.";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "mockery" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, directory, filepath
         , logging-facade, stdenv, temporary
         }:
         mkDerivation {
           pname = "mockery";
           version = "0.3.5";
           sha256 = "b7a1edacd3d32dc7f0e28c67877209d3ca3551d1da186f6445f825f3477dd727";
           libraryHaskellDepends = [
             base base-compat bytestring directory filepath logging-facade
             temporary
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support functions for automated testing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "model" = callPackage
        ({ mkDerivation, base, containers, convertible, deepseq, either
         , pretty, stdenv, transformers
         }:
         mkDerivation {
           pname = "model";
           version = "0.4.4";
           sha256 = "44e0a604e5461b00818fbb6f2ec755dd56f7b533a5d255c1c50f328f4e0dbbd6";
           libraryHaskellDepends = [
             base containers convertible deepseq either pretty transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tittoassini/model";
           description = "Derive a model of a data type using Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "modern-uri" = callPackage
        ({ mkDerivation, base, bytestring, containers, contravariant
         , deepseq, exceptions, megaparsec, profunctors, QuickCheck, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "modern-uri";
           version = "0.1.2.1";
           sha256 = "30241a63db2fb28efe30f84e71e3ae5acb491950aacb34e13c2835d2d8bdc383";
           revision = "1";
           editedCabalFile = "1kgwf0y5p5imrkjga53yna4sy6jqk5x3v0zks24c4vb52mi2a19n";
           libraryHaskellDepends = [
             base bytestring containers contravariant deepseq exceptions
             megaparsec profunctors QuickCheck template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/modern-uri";
           description = "Modern library for working with URIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "modify-fasta" = callPackage
        ({ mkDerivation, base, containers, fasta, mtl, optparse-applicative
         , pipes, pipes-text, regex-tdfa, regex-tdfa-text, semigroups, split
         , stdenv, text, text-show
         }:
         mkDerivation {
           pname = "modify-fasta";
           version = "0.8.2.3";
           sha256 = "dcee07de4f97b10c557cc3a18aee35d75caf8ef65bdc104bcd6785bfabc7465e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers fasta regex-tdfa regex-tdfa-text split text
             text-show
           ];
           executableHaskellDepends = [
             base containers fasta mtl optparse-applicative pipes pipes-text
             semigroups split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GregorySchwartz/modify-fasta";
           description = "Modify fasta (and CLIP) files in several optional ways";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "moesocks" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
         , containers, cryptohash, hslogger, HsOpenSSL, iproute, lens
         , lens-aeson, mtl, network, optparse-applicative, random, stdenv
         , stm, strict, text, time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "moesocks";
           version = "1.0.0.44";
           sha256 = "bf35a237dffeaebc82237439fe457d0c423d235a48a69f02c9e616297540e1c8";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson async attoparsec base binary bytestring containers cryptohash
             hslogger HsOpenSSL iproute lens lens-aeson mtl network
             optparse-applicative random stm strict text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nfjinjing/moesocks";
           description = "A functional firewall killer";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "mole" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , containers, cryptohash, css-syntax, directory, filemanip
         , filepath, fsnotify, kraken, mtl, network-uri
         , optparse-applicative, process, snap-core, snap-server, stdenv
         , stm, tagsoup, text, time, transformers, unix
         }:
         mkDerivation {
           pname = "mole";
           version = "0.0.6";
           sha256 = "ab7803cd42f79d5aad4492c257b06c9d7079f15f84e52d63978565c374e81a6a";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             attoparsec base base64-bytestring bytestring containers cryptohash
             css-syntax directory filemanip filepath fsnotify kraken mtl
             network-uri optparse-applicative process snap-core snap-server stm
             tagsoup text time transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           description = "A glorified string replacement tool";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-control" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-control";
           version = "1.0.2.3";
           sha256 = "6c1034189d237ae45368c70f0e68f714dd3beda715dd265b6c8a99fcc64022b1";
           libraryHaskellDepends = [
             base stm transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/monad-control";
           description = "Lift control operations, like exception catching, through monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-control-aligned" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers, transformers-base
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-control-aligned";
           version = "0.0.1";
           sha256 = "ddb75107f0896931a83066d2ad85745c0bf4e0396046a3d5c17f35809a114287";
           libraryHaskellDepends = [
             base stm transformers transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/monad-control#readme";
           description = "Just like monad-control, except less efficient, and the monadic state terms are all * -> *";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-coroutine" = callPackage
        ({ mkDerivation, base, monad-parallel, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-coroutine";
           version = "0.9.0.4";
           sha256 = "13e0ff12046296390ea69dda5001aa02b1b57e968447d27712a24c8c7cfe5de7";
           libraryHaskellDepends = [
             base monad-parallel transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
           description = "Coroutine monad transformer for suspending and resuming monadic computations";
           license = "GPL";
         }) {};
      "monad-extras" = callPackage
        ({ mkDerivation, base, mmorph, monad-control, stdenv, stm
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-extras";
           version = "0.6.0";
           sha256 = "df33d7c51a97d16226b8160d9bc09686cb6f7b7bf5c54557381c6fe4a3c84f2c";
           libraryHaskellDepends = [
             base mmorph monad-control stm transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jwiegley/monad-extras";
           description = "Extra utility functions for working with monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-http" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, exceptions
         , http-client, http-client-tls, http-types, monad-logger
         , monadcryptorandom, MonadRandom, mtl, stdenv, text, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-http";
           version = "0.1.0.0";
           sha256 = "a333b087835aa4902d0814e76fe4f32a523092fd7b13526aad415160a8317192";
           revision = "7";
           editedCabalFile = "19qsjwcdg39is6ipwl6hgr42c7gyc7p1cs5f8isxy90hb4xjghrh";
           libraryHaskellDepends = [
             base base-compat bytestring exceptions http-client http-client-tls
             http-types monad-logger monadcryptorandom MonadRandom mtl text
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/haskell-monad-http#readme";
           description = "A class of monads which can do http requests";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-journal" = callPackage
        ({ mkDerivation, base, monad-control, mtl, stdenv, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "monad-journal";
           version = "0.8.1";
           sha256 = "e20ac220086081b5cf1964e9486e04113ec03b15f247512a2193898100a105ac";
           libraryHaskellDepends = [
             base monad-control mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/phaazon/monad-journal";
           description = "Pure logger typeclass and monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-logger" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, conduit
         , conduit-extra, exceptions, fast-logger, lifted-base
         , monad-control, monad-loops, mtl, resourcet, stdenv, stm
         , stm-chans, template-haskell, text, transformers
         , transformers-base, transformers-compat, unliftio-core
         }:
         mkDerivation {
           pname = "monad-logger";
           version = "0.3.28.1";
           sha256 = "f93162f0672275dd20106acdede3be56d95ebba384a20bd0f9d161ffb8c9f795";
           libraryHaskellDepends = [
             base blaze-builder bytestring conduit conduit-extra exceptions
             fast-logger lifted-base monad-control monad-loops mtl resourcet stm
             stm-chans template-haskell text transformers transformers-base
             transformers-compat unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kazu-yamamoto/logger";
           description = "A class of monads which can log messages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-logger-json" = callPackage
        ({ mkDerivation, aeson, base, monad-logger, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "monad-logger-json";
           version = "0.1.0.0";
           sha256 = "10871c4aef838c01c8fdd7586161367b4d66907a53cbd9737efb717a1041e9aa";
           libraryHaskellDepends = [
             aeson base monad-logger template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/fpco/monad-logger-json";
           description = "JSON-friendly Logging APIs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-logger-prefix" = callPackage
        ({ mkDerivation, base, exceptions, monad-control, monad-logger, mtl
         , resourcet, stdenv, text, transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-logger-prefix";
           version = "0.1.8";
           sha256 = "b2a723cd1851af2a98365caf6bd1ed5982928f449c16ec84db2821daadc71add";
           libraryHaskellDepends = [
             base exceptions monad-control monad-logger mtl resourcet text
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/parsonsmatt/monad-logger-prefix#readme";
           description = "Add prefixes to your monad-logger output";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "monad-logger-syslog" = callPackage
        ({ mkDerivation, base, bytestring, fast-logger, hsyslog
         , monad-logger, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "monad-logger-syslog";
           version = "0.1.4.0";
           sha256 = "052c3e13e235e7fb31caecc117e3ab4629e85bbfd3b35ec03f74d732acbc9ccb";
           libraryHaskellDepends = [
             base bytestring fast-logger hsyslog monad-logger text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-logger-syslog";
           description = "syslog output for monad-logger";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-loops" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monad-loops";
           version = "0.4.3";
           sha256 = "7eaaaf6bc43661e9e86e310ff8c56fbea16eb6bf13c31a2e28103138ac164c18";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/monad-loops";
           description = "Monadic loops";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "monad-memo" = callPackage
        ({ mkDerivation, array, base, containers, mtl, primitive, stdenv
         , transformers, vector
         }:
         mkDerivation {
           pname = "monad-memo";
           version = "0.4.1";
           sha256 = "4c00c4aff00c85bfcce0a9a7d96a2a7d08f1efe64b3326e67e47499d5168f11d";
           libraryHaskellDepends = [
             array base containers mtl primitive transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/EduardSergeev/monad-memo";
           description = "Memoization monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-metrics" = callPackage
        ({ mkDerivation, base, clock, ekg-core, exceptions, hashable
         , microlens, mtl, stdenv, text, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "monad-metrics";
           version = "0.2.1.1";
           sha256 = "fe179a952dd85ddc1efd94f8ab7b98c02e6be818dcd4b499a60a1d437234f985";
           libraryHaskellDepends = [
             base clock ekg-core exceptions hashable microlens mtl text
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sellerlabs/monad-metrics#readme";
           description = "A convenient wrapper around EKG metrics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-mock" = callPackage
        ({ mkDerivation, base, constraints, exceptions, haskell-src-exts
         , haskell-src-meta, monad-control, mtl, stdenv, template-haskell
         , th-orphans, transformers-base
         }:
         mkDerivation {
           pname = "monad-mock";
           version = "0.2.0.0";
           sha256 = "7bafe50c2671d83e1bc7d4697985d1cda12ab5570b7fa4ddbf09c047b9982a7b";
           libraryHaskellDepends = [
             base constraints exceptions haskell-src-exts haskell-src-meta
             monad-control mtl template-haskell th-orphans transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cjdev/monad-mock#readme";
           description = "A monad transformer for mocking mtl-style typeclasses";
           license = stdenv.lib.licenses.isc;
         }) {};
      "monad-par" = callPackage
        ({ mkDerivation, abstract-deque, abstract-par, array, base
         , containers, deepseq, monad-par-extras, mtl, mwc-random, parallel
         , stdenv
         }:
         mkDerivation {
           pname = "monad-par";
           version = "0.3.4.8";
           sha256 = "f84cdf51908a1c41c3f672be9520a8fdc028ea39d90a25ecfe5a3b223cfeb951";
           libraryHaskellDepends = [
             abstract-deque abstract-par array base containers deepseq
             monad-par-extras mtl mwc-random parallel
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "A library for parallel programming based on a monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-par-extras" = callPackage
        ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "monad-par-extras";
           version = "0.3.3";
           sha256 = "e21e33190bc248afa4ae467287ac37d24037ef3de6050c44fd85b52f4d5b842e";
           libraryHaskellDepends = [
             abstract-par base cereal deepseq mtl random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmar/monad-par";
           description = "Combinators and extra features for Par monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-parallel" = callPackage
        ({ mkDerivation, base, parallel, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monad-parallel";
           version = "0.7.2.3";
           sha256 = "128fb8c36be717f82aa3146d855303f48d04c56ba025078e6cd35d6050b45089";
           libraryHaskellDepends = [
             base parallel transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
           description = "Parallel execution of monadic computations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-peel" = callPackage
        ({ mkDerivation, base, extensible-exceptions, stdenv, transformers
         }:
         mkDerivation {
           pname = "monad-peel";
           version = "0.2.1.2";
           sha256 = "2dd5e9090f3951dbc298e35c3cea7099818aba0485a55059475c4f346fc933f4";
           libraryHaskellDepends = [
             base extensible-exceptions transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://andersk.mit.edu/haskell/monad-peel/";
           description = "Lift control operations like exception catching through monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-products" = callPackage
        ({ mkDerivation, base, semigroupoids, stdenv }:
         mkDerivation {
           pname = "monad-products";
           version = "4.0.1";
           sha256 = "02bfe1db2ae1a5cff19f73736a219605b1f0649f6af44ca848d09160a7946cea";
           libraryHaskellDepends = [ base semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monad-products";
           description = "Monad products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-recorder" = callPackage
        ({ mkDerivation, base, exceptions, monad-control, mtl, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-recorder";
           version = "0.1.0";
           sha256 = "313df1493b39ad691a0eaf04141cbcd4d96dd7f2786481b959085915f7b86bd8";
           libraryHaskellDepends = [
             base exceptions monad-control mtl transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/harendra-kumar/monad-recorder";
           description = "Record and replay the results of monadic actions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-skeleton" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monad-skeleton";
           version = "0.1.5";
           sha256 = "a96840713ffdbb97d58e8dc7a47d2b725993868f005903fa9aa26bcf6f32559e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/monad-skeleton";
           description = "Monads of program skeleta";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-st" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "monad-st";
           version = "0.2.4.1";
           sha256 = "8e1818576bc486e884b953680fe41c524ff23eef2ec382b5f28f47fa7b8abf08";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monad-st";
           description = "Provides a MonadST class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-time" = callPackage
        ({ mkDerivation, base, mtl, stdenv, time }:
         mkDerivation {
           pname = "monad-time";
           version = "0.2";
           sha256 = "a9b901ca94b4c71d5f374a472506db92d26b13af523ceafe1e3302e8bae8b05d";
           revision = "1";
           editedCabalFile = "1v59w75w589mh6n3ga2fcihgmjmg0vd0q7fg9l2q52yhgx5pz9m3";
           libraryHaskellDepends = [ base mtl time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scrive/monad-time";
           description = "Type class for monads which carry the notion of the current time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monad-unlift" = callPackage
        ({ mkDerivation, base, constraints, monad-control, stdenv
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-unlift";
           version = "0.2.0";
           sha256 = "4b5e638619e4821918b4ec67aeffb581ab9df23d168fbb72164137009a15ee0f";
           libraryHaskellDepends = [
             base constraints monad-control transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-unlift";
           description = "Typeclasses for representing monad transformer unlifting";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monad-unlift-ref" = callPackage
        ({ mkDerivation, base, constraints, exceptions, monad-control
         , monad-unlift, mtl, mutable-containers, resourcet, stdenv, stm
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "monad-unlift-ref";
           version = "0.2.1";
           sha256 = "0f059539297478ad8b7e861682207b37b91eaf7e36bd8fdcc3f865a3c6971d1d";
           libraryHaskellDepends = [
             base constraints exceptions monad-control monad-unlift mtl
             mutable-containers resourcet stm transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/monad-unlift";
           description = "Typeclasses for representing monad transformer unlifting";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monadcryptorandom" = callPackage
        ({ mkDerivation, base, bytestring, crypto-api, exceptions, mtl
         , stdenv, tagged, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "monadcryptorandom";
           version = "0.7.2";
           sha256 = "49ce8ce6d709cf55fd897d80624e714ec98d80398ae50d85b9f9551da0e4368a";
           libraryHaskellDepends = [
             base bytestring crypto-api exceptions mtl tagged transformers
             transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/TomMD/monadcryptorandom";
           description = "A monad for using CryptoRandomGen";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monadic-arrays" = callPackage
        ({ mkDerivation, array, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "monadic-arrays";
           version = "0.2.2";
           sha256 = "667714c6100272b48c4377cf2e2984b67a4445521a2a2e9c37539128c7e276a0";
           libraryHaskellDepends = [
             array base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/monadic-arrays/";
           description = "Boxed and unboxed arrays for monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monadloc" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, transformers }:
         mkDerivation {
           pname = "monadloc";
           version = "0.7.1";
           sha256 = "b25a0f6b3ebb051e58e2a58f2f5d588ff67622584cb575d40c46eaacbd1de7a8";
           libraryHaskellDepends = [ base template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pepeiborra/monadloc";
           description = "A class for monads which can keep a monadic call trace";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "monadoid" = callPackage
        ({ mkDerivation, base, monad-control, mtl, stdenv
         , transformers-base
         }:
         mkDerivation {
           pname = "monadoid";
           version = "0.0.2";
           sha256 = "26c2e9fb0456dbec761c6d9723ad33cbb9fcd3a1318ff4197859d766e14ec877";
           libraryHaskellDepends = [
             base monad-control mtl transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "A monoid for monads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monadplus" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "monadplus";
           version = "1.4.2";
           sha256 = "366ed520db1eaf2ec56d8508fee2804cc24c7a6016de4b75b9addec681186595";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Haskell98 partial maps and filters over MonadPlus";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monads-tf" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "monads-tf";
           version = "0.1.0.3";
           sha256 = "249dd2aa55c4dd6530f1e49f6b052ec91bc590ecfef2bd24c58837a3f8d4b0f1";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Monad classes, using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mongoDB" = callPackage
        ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
         , binary, bson, bytestring, conduit, conduit-extra, containers
         , cryptohash, data-default-class, hashtables, lifted-base
         , monad-control, mtl, network, nonce, parsec, pureMD5, random
         , random-shuffle, resourcet, stdenv, tagged, text, time, tls
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "mongoDB";
           version = "2.3.0.4";
           sha256 = "a7d8bef4dfe887eb89ab97bd938b7a64746aee59c84a7cfec851344e4a98bc63";
           libraryHaskellDepends = [
             array base base16-bytestring base64-bytestring binary bson
             bytestring conduit conduit-extra containers cryptohash
             data-default-class hashtables lifted-base monad-control mtl network
             nonce parsec pureMD5 random random-shuffle resourcet tagged text
             time tls transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mongodb-haskell/mongodb";
           description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "mono-traversable" = callPackage
        ({ mkDerivation, base, bytestring, containers, hashable, split
         , stdenv, text, transformers, unordered-containers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "mono-traversable";
           version = "1.0.8.1";
           sha256 = "991290797bd77ce2f2e23dd5dea32fb159c6cb9310615f64a0703ea4c6373935";
           libraryHaskellDepends = [
             base bytestring containers hashable split text transformers
             unordered-containers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Type classes for mapping, folding, and traversing monomorphic containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mono-traversable-instances" = callPackage
        ({ mkDerivation, base, comonad, containers, dlist, dlist-instances
         , mono-traversable, semigroupoids, semigroups, stdenv, transformers
         , vector-instances
         }:
         mkDerivation {
           pname = "mono-traversable-instances";
           version = "0.1.0.0";
           sha256 = "b5ff2b8bcebe31ffcc652a8dd3adde6aa7cd7f27a1cf6d058d4c658b370c087e";
           libraryHaskellDepends = [
             base comonad containers dlist dlist-instances mono-traversable
             semigroupoids semigroups transformers vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Extra typeclass instances for mono-traversable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "monoid-extras" = callPackage
        ({ mkDerivation, base, groups, semigroupoids, semigroups, stdenv }:
         mkDerivation {
           pname = "monoid-extras";
           version = "0.4.2";
           sha256 = "13ff4e055c9656a3e599567cbc4a46ef8617c05534de46909a4239696e34281f";
           revision = "2";
           editedCabalFile = "04h78r48rg2ppi53869vb8y226g135fxgy9ryi1v08nqsiqi1vvw";
           libraryHaskellDepends = [ base groups semigroupoids semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Various extra monoid-related definitions and utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoid-subclasses" = callPackage
        ({ mkDerivation, base, bytestring, containers, primes, stdenv, text
         , vector
         }:
         mkDerivation {
           pname = "monoid-subclasses";
           version = "0.4.4";
           sha256 = "97793736943c0c49a4c867dcbee7556eea2029737943d4fb474bdb37786699f9";
           libraryHaskellDepends = [
             base bytestring containers primes text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/blamario/monoid-subclasses/";
           description = "Subclasses of Monoid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoid-transformer" = callPackage
        ({ mkDerivation, base, semigroups, stdenv }:
         mkDerivation {
           pname = "monoid-transformer";
           version = "0.0.4";
           sha256 = "43abf147e4d1b57c5d306d9533e42fb52828d64e761e0e3d8797fb52cfc98388";
           libraryHaskellDepends = [ base semigroups ];
           doHaddock = false;
           doCheck = false;
           description = "Monoid counterparts to some ubiquitous monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "monoidal-containers" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, lens, newtype
         , stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "monoidal-containers";
           version = "0.3.0.2";
           sha256 = "326a48e1a1938c7ab11651ef297112f9a3b80270156183e5016e9e13397072c7";
           libraryHaskellDepends = [
             base containers deepseq hashable lens newtype unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bgamari/monoidal-containers";
           description = "Containers with monoidal accumulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "morte" = callPackage
        ({ mkDerivation, alex, array, base, binary, code-page, containers
         , deepseq, Earley, http-client, http-client-tls, microlens
         , microlens-mtl, optparse-applicative, pipes, stdenv, system-fileio
         , system-filepath, text, text-format, transformers
         }:
         mkDerivation {
           pname = "morte";
           version = "1.6.15";
           sha256 = "d077fab224a308941a4767dc960eb9597efd7ae5a048a5d331d7314f96454513";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base binary containers deepseq Earley http-client
             http-client-tls microlens microlens-mtl pipes system-fileio
             system-filepath text text-format transformers
           ];
           libraryToolDepends = [ alex ];
           executableHaskellDepends = [
             base code-page optparse-applicative text text-format
           ];
           doHaddock = false;
           doCheck = false;
           description = "A bare-bones calculus of constructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mountpoints" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "mountpoints";
           version = "1.0.2";
           sha256 = "67fcdf64fdb8111f58939c64b168a9dfa519d7068e0f439887d739866f18d5c2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "list mount points";
           license = "LGPL";
         }) {};
      "mstate" = callPackage
        ({ mkDerivation, base, monad-peel, mtl, stdenv, stm }:
         mkDerivation {
           pname = "mstate";
           version = "0.2.7";
           sha256 = "4508e3e7cc2dec5a0e75ba7dd085c73fdd4f886ac6d1a74cf071816795bb2c17";
           libraryHaskellDepends = [ base monad-peel mtl stm ];
           doHaddock = false;
           doCheck = false;
           description = "MState: A consistent State monad for concurrent applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "mtl";
           version = "2.2.2";
           sha256 = "8803f48a8ed33296c3a3272f448198737a287ec31baa901af09e2118c829bef6";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/haskell/mtl";
           description = "Monad classes, using functional dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl-compat" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "mtl-compat";
           version = "0.2.1.3";
           sha256 = "6458ca53593a31ebce1d94ef8dd4f6a06d050dd7ed32335f6cc6b6e5d3456894";
           revision = "3";
           editedCabalFile = "0igfsrc7q326ggvw47xwq1xffa4r225akla0nwgmqhd7y1n5753c";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-compat/mtl-compat";
           description = "Backported Control.Monad.Except module from mtl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mtl-prelude" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "mtl-prelude";
           version = "2.0.3.1";
           sha256 = "c4a6dda093d63bd2161f55030c5825903dfa9b7d5e766c487fd848cb2aa01233";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/mtl-prelude";
           description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
           license = stdenv.lib.licenses.mit;
         }) {};
      "multiarg" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "multiarg";
           version = "0.30.0.10";
           sha256 = "c9fa623a8e06d62addc2b7ad5102ceac3a6f0db6a67afbc8e693d0d0aec417a1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/massysett/multiarg";
           description = "Command lines for options that take multiple arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multimap" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "multimap";
           version = "1.2.1";
           sha256 = "6332c529475177b9e08d762d5701804dc2edc0ff26dd98a2a1dcd7ed092e7434";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/scravy/multimap";
           description = "A multimap";
           license = stdenv.lib.licenses.mit;
         }) {};
      "multipart" = callPackage
        ({ mkDerivation, base, bytestring, parsec, stdenv }:
         mkDerivation {
           pname = "multipart";
           version = "0.1.2";
           sha256 = "e543fb307beb14fc366171d7767a6a18244bacf78db295d8d161c5c03d94043c";
           libraryHaskellDepends = [ base bytestring parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/silkapp/multipart";
           description = "HTTP multipart split out of the cgi package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multiset" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "multiset";
           version = "0.3.3";
           sha256 = "c74e77d3dbbe81fe3b48629fc257fa084df89bfb575c82c42f5549af376de135";
           revision = "2";
           editedCabalFile = "1pwb1prra12yrm3qdjp8h7343cilbkck85blhaflzsmn1sbcyq2w";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "The Data.MultiSet container type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "multistate" = callPackage
        ({ mkDerivation, base, monad-control, mtl, stdenv, tagged
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "multistate";
           version = "0.7.1.2";
           sha256 = "9189313c54130173171077a64851244e517ec135bf0a9230d39b272aee0394d5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base monad-control mtl tagged transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lspitzner/multistate";
           description = "like mtl's ReaderT / WriterT / StateT, but more than one contained value/type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "murmur-hash" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "murmur-hash";
           version = "0.1.0.9";
           sha256 = "89b9db94ead4cc0784dbcfb47c51b5664c1718860db00cd8ada3ef6fdd4465ad";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/murmur-hash";
           description = "MurmurHash2 implementation for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mustache" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
         , directory, either, filepath, mtl, parsec, scientific, stdenv
         , template-haskell, text, th-lift, unordered-containers, vector
         , yaml
         }:
         mkDerivation {
           pname = "mustache";
           version = "2.3.0";
           sha256 = "018863e578e971e393edc65dd7e0ed92a0e37fc152a47bb379fd8abd59537be0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers directory either filepath mtl
             parsec scientific template-haskell text th-lift
             unordered-containers vector
           ];
           executableHaskellDepends = [
             aeson base bytestring cmdargs filepath text yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/JustusAdam/mustache";
           description = "A mustache template parser library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mutable-containers" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, mono-traversable
         , primitive, stdenv, vector
         }:
         mkDerivation {
           pname = "mutable-containers";
           version = "0.3.4";
           sha256 = "641966e0adee48badb8bf07037af6c879480e4e97f673d9e2b84fbf43685137e";
           libraryHaskellDepends = [
             base containers ghc-prim mono-traversable primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/mono-traversable#readme";
           description = "Abstactions and concrete implementations of mutable containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mwc-probability" = callPackage
        ({ mkDerivation, base, mwc-random, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "mwc-probability";
           version = "1.3.0";
           sha256 = "0f9ba623fa2fea7770e3f1cacb1d8a0b14711e60039590d5181864e5a2fe1f6f";
           revision = "1";
           editedCabalFile = "1b1w504ycphpkcq279bjr2m1laxmv7xzhrbqaf6ayym265f75mnb";
           libraryHaskellDepends = [ base mwc-random primitive transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/mwc-probability";
           description = "Sampling function-based probability distributions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "mwc-random" = callPackage
        ({ mkDerivation, base, math-functions, primitive, stdenv, time
         , vector
         }:
         mkDerivation {
           pname = "mwc-random";
           version = "0.13.6.0";
           sha256 = "065f334fc13c057eb03ef0b6aa3665ff193609d9bfcad8068bdd260801f44716";
           libraryHaskellDepends = [
             base math-functions primitive time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/mwc-random";
           description = "Fast, high quality pseudo random number generation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mwc-random-accelerate" = callPackage
        ({ mkDerivation, accelerate, base, mwc-random, stdenv }:
         mkDerivation {
           pname = "mwc-random-accelerate";
           version = "0.1.0.0";
           sha256 = "30fad33d12b130457a6dcb8bedc885700e6ac0eea9b0f25fe6e5fe34968932e3";
           revision = "1";
           editedCabalFile = "0xgl1glq4jxs48x7wp8wh6pk3zad8483bvppwp89p3k0vlh6yqq3";
           libraryHaskellDepends = [ accelerate base mwc-random ];
           doHaddock = false;
           doCheck = false;
           description = "Generate Accelerate arrays filled with high quality pseudorandom numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, mysql, stdenv
         }:
         mkDerivation {
           pname = "mysql";
           version = "0.1.4";
           sha256 = "9b8675db208851524a77b6e5c4278e6bc29eab16d970a9dda312ae366bdb668e";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring containers ];
           librarySystemDepends = [ mysql ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/mysql";
           description = "A low-level MySQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) mysql;};
      "mysql-haskell" = callPackage
        ({ mkDerivation, base, binary, binary-ieee754, binary-parsers
         , blaze-textual, bytestring, bytestring-lexing, cryptonite
         , io-streams, memory, monad-loops, network, scientific, stdenv
         , tcp-streams, text, time, tls, vector, wire-streams, word24
         }:
         mkDerivation {
           pname = "mysql-haskell";
           version = "0.8.3.0";
           sha256 = "e9aef28ccccc0801a1db1c936945a226961334ec11d85905ae58a09a42507aac";
           revision = "1";
           editedCabalFile = "1kpfmrwwdaxjqwbsc6m9imlcfi2vvkz62pin5nrvm1fk17isy69v";
           libraryHaskellDepends = [
             base binary binary-ieee754 binary-parsers blaze-textual bytestring
             bytestring-lexing cryptonite io-streams memory monad-loops network
             scientific tcp-streams text time tls vector wire-streams word24
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/mysql-haskell";
           description = "pure haskell MySQL driver";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql-haskell-nem" = callPackage
        ({ mkDerivation, base, bytestring, io-streams, mysql-haskell
         , scientific, stdenv, text, time
         }:
         mkDerivation {
           pname = "mysql-haskell-nem";
           version = "0.1.0.0";
           sha256 = "7a0868b76edc96a7aff7860f96436b9040f6cb9319dd67f68bfd700948721f0d";
           libraryHaskellDepends = [
             base bytestring io-streams mysql-haskell scientific text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lorenzo/mysql-haskell-nem#readme";
           description = "Adds a interface like mysql-simple to mysql-haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql-haskell-openssl" = callPackage
        ({ mkDerivation, base, binary, HsOpenSSL, mysql-haskell, stdenv
         , tcp-streams, tcp-streams-openssl, wire-streams
         }:
         mkDerivation {
           pname = "mysql-haskell-openssl";
           version = "0.8.3.0";
           sha256 = "44345ef9b5d98b1fca5089533990b8f4ba67afde7995282c323dacfb44dba55e";
           libraryHaskellDepends = [
             base binary HsOpenSSL mysql-haskell tcp-streams tcp-streams-openssl
             wire-streams
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/mysql-haskell";
           description = "TLS support for mysql-haskell package using openssl";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "mysql-simple" = callPackage
        ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
         , blaze-textual, bytestring, mysql, old-locale, pcre-light, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "mysql-simple";
           version = "0.4.4";
           sha256 = "b51c2f4638857b931cf73b181900df0a3a06a49f20145f2a0f56b7af13833ce7";
           libraryHaskellDepends = [
             attoparsec base base16-bytestring blaze-builder blaze-textual
             bytestring mysql old-locale pcre-light text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/mysql-simple";
           description = "A mid-level MySQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "n-tuple" = callPackage
        ({ mkDerivation, base, singletons, stdenv, vector }:
         mkDerivation {
           pname = "n-tuple";
           version = "0.0.1.1";
           sha256 = "212779940d40cca3c3527300c1038123f3d98836609fca388556ad0574269fdf";
           libraryHaskellDepends = [ base singletons vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/n-tuple#readme";
           description = "Homogeneous tuples of arbitrary length";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nagios-check" = callPackage
        ({ mkDerivation, base, bifunctors, exceptions, mtl, stdenv, text }:
         mkDerivation {
           pname = "nagios-check";
           version = "0.3.2";
           sha256 = "1bc9b85cb10c396943d53c44e2701c5bc2a02ecdf3e8f46da238981f8b7860b7";
           libraryHaskellDepends = [ base bifunctors exceptions mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/olorin/haskell-nagios-check";
           description = "Package for writing monitoring plugins";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nakadi-client" = callPackage
        ({ mkDerivation, aeson, aeson-casing, base, bytestring, conduit
         , conduit-combinators, conduit-extra, containers, hashable
         , http-client, http-client-tls, http-conduit, http-types
         , iso8601-time, lens, monad-logger, mtl, resourcet, retry
         , safe-exceptions, scientific, split, stdenv, tasty
         , template-haskell, text, time, transformers, unordered-containers
         , uuid, vector
         }:
         mkDerivation {
           pname = "nakadi-client";
           version = "0.3.0.0";
           sha256 = "5eabcda72644078ebadb1376ce41c156f1f421be7b07253f088e9d6e56409991";
           libraryHaskellDepends = [
             aeson aeson-casing base bytestring conduit conduit-combinators
             conduit-extra containers hashable http-client http-client-tls
             http-conduit http-types iso8601-time lens monad-logger mtl
             resourcet retry safe-exceptions scientific split tasty
             template-haskell text time transformers unordered-containers uuid
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/nakadi-haskell#readme";
           description = "Client library for the Nakadi Event Broker";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "names-th" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell }:
         mkDerivation {
           pname = "names-th";
           version = "0.2.0.3";
           sha256 = "0ebe2b2f9bfe079d71d4ac805db6f3239f70a92c27dde0cea6c5235e273f5ec6";
           libraryHaskellDepends = [ base containers template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Manipulate name strings for TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nano-erl" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "nano-erl";
           version = "0.1.0.1";
           sha256 = "370a60682b38ca77b793ee7326c54d5e74dd688f316f31fdd5cf999ad498ee12";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           description = "Small library for Erlang-style actor semantics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nanospec" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "nanospec";
           version = "0.2.2";
           sha256 = "cf14ccc2b296c910000cdc3eb51b37389b3eb94139384b9555db79b8128595e5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/nanospec#readme";
           description = "A lightweight implementation of a subset of Hspec's API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "naqsha" = callPackage
        ({ mkDerivation, base, bytestring, groups, stdenv, vector }:
         mkDerivation {
           pname = "naqsha";
           version = "0.2.0.1";
           sha256 = "4941224601df58a801a5cd2fb345fa8785972c6fe098d0088bd5f8f369f39c94";
           libraryHaskellDepends = [ base bytestring groups vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/naqsha/naqsha.git";
           description = "A library for working with geospatial data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nats" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "nats";
           version = "1.1.2";
           sha256 = "b9d2d85d8612f9b06f8c9bfd1acecd848e03ab82cfb53afe1d93f5086b6e80ec";
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/nats/";
           description = "Natural numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "natural-sort" = callPackage
        ({ mkDerivation, base, bytestring, parsec, stdenv, text }:
         mkDerivation {
           pname = "natural-sort";
           version = "0.1.2";
           sha256 = "7b72b734680827ab07df38a004d4f523540055389d62fcd587edd2fcf19a6b50";
           libraryHaskellDepends = [ base bytestring parsec text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/natural-sort/";
           description = "User-friendly text collation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "natural-transformation" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "natural-transformation";
           version = "0.4";
           sha256 = "aac28e2c1147ed77c1ec0f0eb607a577fa26d0fd67474293ba860ec124efc8af";
           revision = "4";
           editedCabalFile = "1zppa1fcc7pl7ak0hs3w3pkx34398nrfiiwa3w689ib08kqkdpby";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ku-fpg/natural-transformation";
           description = "A natural transformation package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ndjson-conduit" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , stdenv
         }:
         mkDerivation {
           pname = "ndjson-conduit";
           version = "0.1.0.5";
           sha256 = "c037b8f7c47b146f1384585541ae8a4f9218bc4456f428935f973ae07da49db1";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-ndjson-conduit";
           description = "Conduit-based parsing and serialization for newline delimited JSON";
           license = stdenv.lib.licenses.mit;
         }) {};
      "neat-interpolation" = callPackage
        ({ mkDerivation, base, base-prelude, parsec, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "neat-interpolation";
           version = "0.3.2.1";
           sha256 = "5530e43ca4de09b972d173e522f9dc96265f3afe0df695a25f0141be816fa014";
           libraryHaskellDepends = [
             base base-prelude parsec template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/neat-interpolation";
           description = "A quasiquoter for neat and simple multiline text interpolation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "netlib-carray" = callPackage
        ({ mkDerivation, base, carray, stdenv, storable-complex
         , transformers
         }:
         mkDerivation {
           pname = "netlib-carray";
           version = "0.0";
           sha256 = "19d0327410c2524e25629ec94ed2adf43f34e4174ebe884dff6363e21bbc709c";
           libraryHaskellDepends = [
             base carray storable-complex transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/netlib-carray/";
           description = "Helper modules for CArray wrappers to BLAS and LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "netlib-ffi" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "netlib-ffi";
           version = "0.0";
           sha256 = "ac270bb45b8528e06f0f1476fbd4736b0feb26576cdac29b0d27a45da17a0444";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/netlib-ffi/";
           description = "Helper modules for FFI to BLAS and LAPACK";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "netpbm" = callPackage
        ({ mkDerivation, attoparsec, attoparsec-binary, base, bytestring
         , stdenv, storable-record, unordered-containers, vector
         , vector-th-unbox
         }:
         mkDerivation {
           pname = "netpbm";
           version = "1.0.2";
           sha256 = "846a04bca94be31c779888febc390c64cfba93e40f3a7a2f80ff6a6e44fcc2d7";
           revision = "1";
           editedCabalFile = "1vhwjv5c5gxn9l9982da54nzczbmj8rl09xn8ac7rix0zmmyvl50";
           libraryHaskellDepends = [
             attoparsec attoparsec-binary base bytestring storable-record
             unordered-containers vector vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/haskell-netpbm";
           description = "Loading PBM, PGM, PPM image files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nettle" = callPackage
        ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
         , nettle, securemem, stdenv, tagged
         }:
         mkDerivation {
           pname = "nettle";
           version = "0.2.0";
           sha256 = "220184713b802c53ee26783b891a3bbee6c6b2571f798bd6def2496a504e9bde";
           libraryHaskellDepends = [
             base byteable bytestring crypto-cipher-types securemem tagged
           ];
           libraryPkgconfigDepends = [ nettle ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stbuehler/haskell-nettle";
           description = "safe nettle binding";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) nettle;};
      "netwire" = callPackage
        ({ mkDerivation, base, containers, deepseq, parallel, profunctors
         , random, semigroups, stdenv, time, transformers
         }:
         mkDerivation {
           pname = "netwire";
           version = "5.0.2";
           sha256 = "4d790f19642c62e555d167d53d88da56cc83daf093ff4ee37c83e21a2112cd83";
           libraryHaskellDepends = [
             base containers deepseq parallel profunctors random semigroups time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/esoeylemez/netwire";
           description = "Functional reactive programming library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "netwire-input" = callPackage
        ({ mkDerivation, base, netwire, stdenv }:
         mkDerivation {
           pname = "netwire-input";
           version = "0.0.6";
           sha256 = "4a04c52371358471eaef127ed37547ec35fe58bef2cd6b22ce8b1074fb0db88e";
           libraryHaskellDepends = [ base netwire ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/Mokosha/netwire-input";
           description = "Input handling abstractions for netwire";
           license = stdenv.lib.licenses.mit;
         }) {};
      "netwire-input-glfw" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, directory
         , filepath, GLFW-b, mtl, netwire, netwire-input, OpenGL, stdenv
         , stm, transformers
         }:
         mkDerivation {
           pname = "netwire-input-glfw";
           version = "0.0.8";
           sha256 = "e937460ebe4781f6ff989aaa3f1e782271827924e6d74f604f553b66fa8cc0d9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers GLFW-b mtl netwire-input stm
           ];
           executableHaskellDepends = [
             array base bytestring containers directory filepath GLFW-b mtl
             netwire netwire-input OpenGL transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/Mokosha/netwire-input-glfw";
           description = "GLFW instance of netwire-input";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "network";
           version = "2.6.3.4";
           sha256 = "bc0d263a06db9b0f0c867dab68c7d0aed2f3e13ee01a6b63e0219ee7d0b95cfb";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/network";
           description = "Low-level networking interface";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-anonymous-i2p" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, exceptions, mtl
         , network, network-attoparsec, network-simple, stdenv, text
         , transformers, uuid
         }:
         mkDerivation {
           pname = "network-anonymous-i2p";
           version = "0.10.0";
           sha256 = "cff5796c36c1ebbb969e5433538eb3f3979acef9825a7bfb683ed002023fff2c";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring exceptions mtl network
             network-attoparsec network-simple text transformers uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
           description = "Haskell API for I2P anonymous networking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-anonymous-tor" = callPackage
        ({ mkDerivation, attoparsec, base, base32string, bytestring
         , exceptions, hexstring, network, network-attoparsec
         , network-simple, socks, splice, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "network-anonymous-tor";
           version = "0.11.0";
           sha256 = "41aee5b34aaaec6fa47a56cca61fafec22097bda25d13d5baef6b7924e127549";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base base32string bytestring exceptions hexstring
             network network-attoparsec network-simple socks text transformers
           ];
           executableHaskellDepends = [
             base exceptions network network-simple splice
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.leonmergen.com/opensource.html";
           description = "Haskell API for Tor anonymous networking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, enclosed-exceptions
         , exceptions, lifted-base, monad-control, mtl, network, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "network-attoparsec";
           version = "0.12.2";
           sha256 = "9790a9bad286ab1474dadbece3e4b2e1dd068d4ede3847cb73bcd66386bf08f0";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base bytestring enclosed-exceptions exceptions
             lifted-base monad-control mtl network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solatis/haskell-network-attoparsec";
           description = "Utility functions for running a parser against a socket";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-carbon" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, text, time
         , vector
         }:
         mkDerivation {
           pname = "network-carbon";
           version = "1.0.11";
           sha256 = "d81729280cd36ef06de7032ebbaa8f7ffde46a767ea4d6f8334b4c1242927eda";
           libraryHaskellDepends = [
             base bytestring network text time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/network-carbon";
           description = "A Haskell implementation of the Carbon protocol (part of the Graphite monitoring tools)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-conduit-tls" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , connection, cprng-aes, data-default, monad-control, network
         , stdenv, streaming-commons, tls, transformers, transformers-base
         }:
         mkDerivation {
           pname = "network-conduit-tls";
           version = "1.2.2";
           sha256 = "12a2cddfacd19d0585e57ff143d625e255e1a4628a463a41332eabc3c02bb087";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra connection cprng-aes
             data-default monad-control network streaming-commons tls
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/conduit";
           description = "Create TLS-aware network code with conduits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "network-house" = callPackage
        ({ mkDerivation, array, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "network-house";
           version = "0.1.0.2";
           sha256 = "071fbc22fc516175e78235d9e29ccefd8eec7c3caa2e6de74dddf62cdbffab43";
           libraryHaskellDepends = [ array base containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/network-house";
           description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "network-info" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "network-info";
           version = "0.2.0.9";
           sha256 = "632939efc095b8dd01a813243e8cb14f4ffd1b9052a26523b9c04dc81993aa66";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jystic/network-info";
           description = "Access the local computer's basic network configuration";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-ip" = callPackage
        ({ mkDerivation, base, data-default-class, data-dword, data-endian
         , data-serializer, data-textual, hashable, parsers, stdenv
         , text-printer, type-hint
         }:
         mkDerivation {
           pname = "network-ip";
           version = "0.3.0.2";
           sha256 = "ee259d236312aafc4bd08dfeff2ebe4b4f930b2f5879764e1a6d5675c5105efe";
           libraryHaskellDepends = [
             base data-default-class data-dword data-endian data-serializer
             data-textual hashable parsers text-printer type-hint
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/network-ip";
           description = "Internet Protocol data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-msgpack-rpc" = callPackage
        ({ mkDerivation, base, binary, binary-conduit, bytestring, conduit
         , conduit-extra, data-default-class, data-default-instances-base
         , data-msgpack, data-msgpack-types, exceptions, MissingH
         , monad-control, mtl, network, stdenv, tagged, text
         }:
         mkDerivation {
           pname = "network-msgpack-rpc";
           version = "0.0.4";
           sha256 = "59185bdaa263eff55c35a571d0a03637d20cbd9926aaf419958c0afa5ca7342d";
           revision = "2";
           editedCabalFile = "0nw2pgyw077ncbmiij99xyy414635vvdmb2das7dkzppsfx47rn3";
           libraryHaskellDepends = [
             base binary binary-conduit bytestring conduit conduit-extra
             data-default-class data-default-instances-base data-msgpack
             data-msgpack-types exceptions MissingH monad-control mtl network
             tagged text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://msgpack.org/";
           description = "A MessagePack-RPC Implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-multicast" = callPackage
        ({ mkDerivation, base, network, stdenv }:
         mkDerivation {
           pname = "network-multicast";
           version = "0.2.0";
           sha256 = "0f3b50abc3a401c20cc6a0ec51a49d2a48e5b467d9fbd63b7cf803165fe975f2";
           libraryHaskellDepends = [ base network ];
           doHaddock = false;
           doCheck = false;
           description = "Simple multicast library";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "network-simple" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, network, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "network-simple";
           version = "0.4.0.5";
           sha256 = "0947b409ebf68d0fa0d94c0a99c6b01165a1c5ab40507b489d195a84b4cd6aaa";
           libraryHaskellDepends = [
             base bytestring exceptions network transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/network-simple";
           description = "Simple network sockets usage patterns";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, fetchgit
         , hashable, stdenv, transformers
         }:
         mkDerivation {
           pname = "network-transport";
           version = "0.5.2";
           src = fetchgit {
             url = "https://github.com/serokell/network-transport";
             sha256 = "0lqa26l2ikpq6a4s7qm9b2favx59w82i0wngakhfyax66fpixp8q";
             rev = "018a50b9042c2115c3ec9c9fd5ca5f28737dd29c";
           };
           libraryHaskellDepends = [
             base binary bytestring deepseq hashable transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Network abstraction layer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-composed" = callPackage
        ({ mkDerivation, base, bytestring, network-transport, stdenv }:
         mkDerivation {
           pname = "network-transport-composed";
           version = "0.2.1";
           sha256 = "a35bbfbe35a7a6c6e20e9d839f9f5b30f82f3680863968f73ce82e0e03e55944";
           libraryHaskellDepends = [ base bytestring network-transport ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Compose network transports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-inmemory" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-accessor
         , fetchgit, network-transport, stdenv, stm
         }:
         mkDerivation {
           pname = "network-transport-inmemory";
           version = "0.5.1";
           src = fetchgit {
             url = "https://github.com/avieth/network-transport-inmemory";
             sha256 = "0ak64rks3lk3kk5wyndrrk2swmd84h9diribzix305xwz1jhjj9w";
             rev = "5d8ff2b07b9df35cf61329a3d975e2c8cf95c12a";
           };
           libraryHaskellDepends = [
             base bytestring containers data-accessor network-transport stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "In-memory instantiation of Network.Transport";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-tcp" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-accessor
         , fetchgit, network, network-transport, stdenv, uuid
         }:
         mkDerivation {
           pname = "network-transport-tcp";
           version = "0.6.0";
           src = fetchgit {
             url = "https://github.com/serokell/network-transport-tcp";
             sha256 = "1cim8867kf36kv6ax9jx5shlqd7hhs1i4jf101x4pk3wriwbxsds";
             rev = "3d56652123bd296dc759cd31947eb2a17924e68a";
           };
           libraryHaskellDepends = [
             base bytestring containers data-accessor network network-transport
             uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "TCP instantiation of Network.Transport";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-transport-tests" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, containers, mtl
         , network-transport, random, stdenv
         }:
         mkDerivation {
           pname = "network-transport-tests";
           version = "0.2.4.2";
           sha256 = "cb24c4bf7eed5a381eb21a3efadf8752050845e5d4426a1d2e00f128ea27cbc7";
           libraryHaskellDepends = [
             ansi-terminal base bytestring containers mtl network-transport
             random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Unit tests for Network.Transport implementations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "network-uri" = callPackage
        ({ mkDerivation, base, deepseq, parsec, stdenv }:
         mkDerivation {
           pname = "network-uri";
           version = "2.6.1.0";
           sha256 = "423e0a2351236f3fcfd24e39cdbc38050ec2910f82245e69ca72a661f7fc47f0";
           revision = "1";
           editedCabalFile = "141nj7q0p9wkn5gr41ayc63cgaanr9m59yym47wpxqr3c334bk32";
           libraryHaskellDepends = [ base deepseq parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/network-uri";
           description = "URI manipulation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "newtype" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "newtype";
           version = "0.2";
           sha256 = "b714033abd9a8b0903bcef0d36d0913de2a5003c852f43f97fa688717289e459";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A typeclass and set of functions for working with newtypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "newtype-generics" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "newtype-generics";
           version = "0.5.2.1";
           sha256 = "d312ddc98f81f7e6fe85acfdde15982f1b23c680cb46bcd78dac28745e35b5f1";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A typeclass and set of functions for working with newtypes, with generics support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "next-ref" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "next-ref";
           version = "0.1.0.2";
           sha256 = "a586f15c17d5d53dd647411d02660dcbfd293f38a75f030d6892a76a2c24789f";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           description = "A concurrency primitive for a slow consumer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nfc" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, c2hs, nfc
         , stdenv
         }:
         mkDerivation {
           pname = "nfc";
           version = "0.1.0";
           sha256 = "63b8f1d434c9e20c1df08ab532c4e098871b0788f9d1b8a5ed84bce1abb01167";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ nfc ];
           libraryToolDepends = [ c2hs ];
           executableHaskellDepends = [ base base16-bytestring bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/centromere/nfc#readme";
           description = "libnfc bindings";
           license = stdenv.lib.licenses.publicDomain;
         }) {inherit (pkgs) nfc;};
      "nicify-lib" = callPackage
        ({ mkDerivation, base, parsec, stdenv, transformers }:
         mkDerivation {
           pname = "nicify-lib";
           version = "1.0.1";
           sha256 = "7d26f86d792dda166805e9dda17cfbc7a2101f3654fe798f4231385d8136e732";
           libraryHaskellDepends = [ base parsec transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty print the standard output of default `Show` instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "nix-paths" = callPackage
        ({ mkDerivation, base, nix, nix-hash, process, stdenv }:
         mkDerivation {
           pname = "nix-paths";
           version = "1.0.1";
           sha256 = "ab37163bc2970ea16c2eb6e091d1e99ab50b8e2ba93c23d24dac761803e509f8";
           libraryHaskellDepends = [ base process ];
           libraryToolDepends = [ nix nix-hash ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/nix-paths";
           description = "Knowledge of Nix's installation directories";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "non-empty" = callPackage
        ({ mkDerivation, base, containers, deepseq, QuickCheck, stdenv
         , utility-ht
         }:
         mkDerivation {
           pname = "non-empty";
           version = "0.3";
           sha256 = "77906c1d4c94738e8b34d9aa28c6a3981edb82df7ee82f2f43aeb57b20bd5be0";
           libraryHaskellDepends = [
             base containers deepseq QuickCheck utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/non-empty/";
           description = "List-like structures with static restrictions on the number of elements";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "non-empty-sequence" = callPackage
        ({ mkDerivation, base, containers, semigroups, stdenv }:
         mkDerivation {
           pname = "non-empty-sequence";
           version = "0.2.0.2";
           sha256 = "d9a3604c0c140197731895af56413edbf1cf6866f9c0636ece9d8314366dd1e1";
           libraryHaskellDepends = [ base containers semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/non-empty-sequence";
           description = "Non-empty sequence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "non-negative" = callPackage
        ({ mkDerivation, base, QuickCheck, semigroups, stdenv, utility-ht
         }:
         mkDerivation {
           pname = "non-negative";
           version = "0.1.2";
           sha256 = "5614acf55f3c16a21fea263e375e8993f9b859e21997b0410c74fe6642c20138";
           libraryHaskellDepends = [ base QuickCheck semigroups utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/non-negative/";
           description = "Non-negative numbers";
           license = "GPL";
         }) {};
      "nonce" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, entropy
         , stdenv, text, transformers, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "nonce";
           version = "1.0.5";
           sha256 = "cdc6ab31b99af6a852f163a142cf27b917e6d168f8e0c04a9ab406bfaa7beb95";
           libraryHaskellDepends = [
             base base64-bytestring bytestring entropy text transformers
             unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/nonce";
           description = "Generate cryptographic nonces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nondeterminism" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "nondeterminism";
           version = "1.4";
           sha256 = "3037c93b0277037ab51ad8640f72a7975dcf48ba81570640be12d390d7b47dc5";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "A monad and monad transformer for nondeterministic computations";
           license = "LGPL";
         }) {};
      "normaldistribution" = callPackage
        ({ mkDerivation, base, random, stdenv }:
         mkDerivation {
           pname = "normaldistribution";
           version = "1.1.0.3";
           sha256 = "6d7ba381946f76f3bd848c90e5bcc6f6ae5c418f7ae294cfc2559541fa02f7e0";
           libraryHaskellDepends = [ base random ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/normaldistribution";
           description = "Minimum fuss normally distributed random values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "normalization-insensitive" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, hashable, stdenv, text
         , unicode-transforms
         }:
         mkDerivation {
           pname = "normalization-insensitive";
           version = "2.0.1";
           sha256 = "3b54ba0c2fc0ea99321bbec7f28bedc771bf1ec0a3f9796da7e479829282cb02";
           revision = "1";
           editedCabalFile = "1zaqbgrfy33y2d9ix178mhyysyffsia0hbmg77gcjmvv32b44m6j";
           libraryHaskellDepends = [
             base bytestring deepseq hashable text unicode-transforms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ppelleti/normalization-insensitive";
           description = "Normalization insensitive string comparison";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nsis" = callPackage
        ({ mkDerivation, base, stdenv, transformers, uniplate }:
         mkDerivation {
           pname = "nsis";
           version = "0.3.2";
           sha256 = "b9985b8d62569c192d89b20965eed2b98186a67148b667202823c6389b8f15ca";
           libraryHaskellDepends = [ base transformers uniplate ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/nsis#readme";
           description = "DSL for producing Windows Installer using NSIS";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numbers" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numbers";
           version = "3000.2.0.1";
           sha256 = "736d0551e4a13510dfe43a777a220bd4b17a19a73e6cd17bf901b1854b5ce183";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/numbers#readme";
           description = "Various number types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numeric-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numeric-extras";
           version = "0.1";
           sha256 = "c700711021d96334be43a21fbd80a5f7146fdd6706ef8656f1d287ff000b61d6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/numeric-extras";
           description = "Useful tools from the C standard library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numeric-prelude" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, non-negative
         , parsec, QuickCheck, random, semigroups, stdenv, storable-record
         , utility-ht
         }:
         mkDerivation {
           pname = "numeric-prelude";
           version = "0.4.3";
           sha256 = "b8f8f9a660e598055898c1d6c981885c629882ae028fec90f91955bade19892d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             array base containers deepseq non-negative parsec QuickCheck random
             semigroups storable-record utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Numeric_Prelude";
           description = "An experimental alternative hierarchy of numeric type classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numhask" = callPackage
        ({ mkDerivation, base, protolude, QuickCheck, stdenv, tasty
         , tasty-quickcheck
         }:
         mkDerivation {
           pname = "numhask";
           version = "0.1.4.0";
           sha256 = "f255a7ebe3479575d771ec528105b58107dc8b4a06591007ce2d4a8d1d69448c";
           libraryHaskellDepends = [
             base protolude QuickCheck tasty tasty-quickcheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonyday567/numhask#readme";
           description = "A numeric prelude";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numhask-range" = callPackage
        ({ mkDerivation, adjunctions, base, distributive, numhask
         , protolude, QuickCheck, semigroupoids, stdenv
         }:
         mkDerivation {
           pname = "numhask-range";
           version = "0.1.3.0";
           sha256 = "f1ca2e5d0e4e9e2a4a8af7c64a3f953a7157a5bb2740297f577bb79811b982c0";
           libraryHaskellDepends = [
             adjunctions base distributive numhask protolude QuickCheck
             semigroupoids
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonyday567/numhask-range#readme";
           description = "Numbers that are range representations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "numtype-dk" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "numtype-dk";
           version = "0.5.0.1";
           sha256 = "29dbb9bf7693989f94605804de31b1a4dacf53ab566ce0346445288eae95d017";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bjornbm/numtype-dk";
           description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "nvim-hs" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, bytestring, cereal
         , cereal-conduit, conduit, conduit-extra, containers, data-default
         , deepseq, directory, dyre, exceptions, filepath, foreign-store
         , hslogger, lifted-base, megaparsec, messagepack, monad-control
         , mtl, network, optparse-applicative, process, resourcet, setenv
         , stdenv, stm, streaming-commons, template-haskell, text, time
         , time-locale-compat, transformers, transformers-base, utf8-string
         , void
         }:
         mkDerivation {
           pname = "nvim-hs";
           version = "0.2.5";
           sha256 = "4be016f62eb2c931d9916e732c94718e66edfccae2948bc6941f20cb52bb3ee2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-wl-pprint base bytestring cereal cereal-conduit conduit
             conduit-extra containers data-default deepseq directory dyre
             exceptions filepath foreign-store hslogger lifted-base megaparsec
             messagepack monad-control mtl network optparse-applicative process
             resourcet setenv stm streaming-commons template-haskell text time
             time-locale-compat transformers transformers-base utf8-string void
           ];
           executableHaskellDepends = [ base data-default ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/neovimhaskell/nvim-hs";
           description = "Haskell plugin backend for neovim";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "nvim-hs-contrib" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, bytestring, data-default
         , directory, exceptions, filepath, messagepack, mtl, nvim-hs
         , stdenv, text, time, utf8-string, yaml
         }:
         mkDerivation {
           pname = "nvim-hs-contrib";
           version = "0.2.0";
           sha256 = "6ee5e9777fbe4dcfa7085923ee1386c2f9c317177c9d61f332cf424e544d2915";
           libraryHaskellDepends = [
             ansi-wl-pprint base bytestring data-default directory exceptions
             filepath messagepack mtl nvim-hs text time utf8-string yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/neovimhaskell/nvim-hs";
           description = "Haskell plugin backend for neovim";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "nvim-hs-ghcid" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , ghcid, nvim-hs, nvim-hs-contrib, resourcet, stdenv, transformers
         , yaml
         }:
         mkDerivation {
           pname = "nvim-hs-ghcid";
           version = "0.2.0";
           sha256 = "6ed326f9de682ec3a7b8493c1f5ef710f7e14ec65c815a67911e306def880e81";
           libraryHaskellDepends = [
             base bytestring containers directory filepath ghcid nvim-hs
             nvim-hs-contrib resourcet transformers yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/saep/nvim-hs-ghcid";
           description = "Neovim plugin that runs ghcid to update the quickfix list";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "nvvm" = callPackage
        ({ mkDerivation, base, bytestring, c2hs, Cabal, cuda, directory
         , filepath, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "nvvm";
           version = "0.8.0.2";
           sha256 = "63a496373d4f3a4d15c23c7ff87609ec5c73ab0b8fcecdac2af0768cfb02fd16";
           setupHaskellDepends = [
             base Cabal cuda directory filepath template-haskell
           ];
           libraryHaskellDepends = [ base bytestring cuda template-haskell ];
           libraryToolDepends = [ c2hs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tmcdonell/nvvm";
           description = "FFI bindings to NVVM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "o-clock" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "o-clock";
           version = "0.1.1";
           sha256 = "00e486fb523c0bad188078ec22d144383247b810ea6272eceef819a413d6b3a9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ghc-prim ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/serokell/o-clock";
           description = "Type-safe time library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "objective" = callPackage
        ({ mkDerivation, base, containers, exceptions, free, hashable
         , monad-skeleton, mtl, profunctors, stdenv, template-haskell
         , transformers, transformers-compat, unordered-containers, void
         , witherable
         }:
         mkDerivation {
           pname = "objective";
           version = "1.1.2";
           sha256 = "2fcf283ede3f447f2e65ed9c434bb8facef873ba534aa0de29eb5ffefcc86644";
           revision = "1";
           editedCabalFile = "039j3xac9ish0yk4w04bmip6g9p6ndfd9ngh46ya125ms4nhmyj4";
           libraryHaskellDepends = [
             base containers exceptions free hashable monad-skeleton mtl
             profunctors template-haskell transformers transformers-compat
             unordered-containers void witherable
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/objective";
           description = "Composable objects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ochintin-daicho" = callPackage
        ({ mkDerivation, base, bookkeeping, stdenv, text }:
         mkDerivation {
           pname = "ochintin-daicho";
           version = "0.1.0.1";
           sha256 = "d49094e19869862a4dcc24fc39b976be1b4b637c100b7d404f8c921ed10456e8";
           libraryHaskellDepends = [ base bookkeeping text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arowM/haskell-ochintin-daicho#readme";
           description = "A module to manage payroll books for Japanese companies";
           license = stdenv.lib.licenses.mit;
         }) {};
      "oeis" = callPackage
        ({ mkDerivation, base, HTTP, network, network-uri, stdenv }:
         mkDerivation {
           pname = "oeis";
           version = "0.3.9";
           sha256 = "8a692c0b898f5d89e607f9593697a24827981a1cfee53045c192084015061b8e";
           revision = "1";
           editedCabalFile = "0rb6l3qblay8aiwaznp35gj7vwmhm87y57wvf3babwrh91s88jaj";
           libraryHaskellDepends = [ base HTTP network network-uri ];
           doHaddock = false;
           doCheck = false;
           description = "Interface to the Online Encyclopedia of Integer Sequences (OEIS)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ofx" = callPackage
        ({ mkDerivation, base, parsec, pretty, stdenv, time }:
         mkDerivation {
           pname = "ofx";
           version = "0.4.2.0";
           sha256 = "0e22e2269f099603832f666814235051fadf92cbdec3dfacf7d1e8231ccd95f1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base parsec pretty time ];
           executableHaskellDepends = [ base parsec pretty time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/ofx";
           description = "Parser for OFX data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "old-locale" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "old-locale";
           version = "1.0.0.7";
           sha256 = "dbaf8bf6b888fb98845705079296a23c3f40ee2f449df7312f7f7f1de18d7b50";
           revision = "2";
           editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "locale library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "old-time" = callPackage
        ({ mkDerivation, base, old-locale, stdenv }:
         mkDerivation {
           pname = "old-time";
           version = "1.1.0.3";
           sha256 = "1ccb158b0f7851715d36b757c523b026ca1541e2030d02239802ba39b4112bc1";
           revision = "2";
           editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
           libraryHaskellDepends = [ base old-locale ];
           doHaddock = false;
           doCheck = false;
           description = "Time library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "once" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv
         , template-haskell, unordered-containers
         }:
         mkDerivation {
           pname = "once";
           version = "0.2";
           sha256 = "753ec628a1fac1f308a4b0e75adee768f962815485e1832a8052ee9af61848a8";
           libraryHaskellDepends = [
             base containers hashable template-haskell unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://anonscm.debian.org/cgit/users/kaction-guest/haskell-once.git";
           description = "memoization for IO actions and functions";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "one-liner" = callPackage
        ({ mkDerivation, base, bifunctors, contravariant, ghc-prim
         , profunctors, stdenv, tagged, transformers
         }:
         mkDerivation {
           pname = "one-liner";
           version = "0.9.2";
           sha256 = "ab3056b1833685da9810ba40eccc381416cd3c531dd3c930f9a83fb7dcf4c7d7";
           libraryHaskellDepends = [
             base bifunctors contravariant ghc-prim profunctors tagged
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sjoerdvisscher/one-liner";
           description = "Constraint-based generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "online" = callPackage
        ({ mkDerivation, base, foldl, formatting, numhask, optparse-generic
         , perf, protolude, scientific, stdenv, tdigest, text, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "online";
           version = "0.2.1.0";
           sha256 = "9d7a7db4b78f4162f2495e4f85e16fd1606125b95d6cf087fe144d291c83419b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base foldl numhask protolude tdigest vector vector-algorithms
           ];
           executableHaskellDepends = [
             base foldl formatting numhask optparse-generic perf protolude
             scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonyday567/online#readme";
           description = "online statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "oo-prototypes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "oo-prototypes";
           version = "0.1.0.0";
           sha256 = "9eaee40e3221f817b957e472917977bdb06ac0e163a0c6ef87941de29a12f576";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/oo-prototypes";
           description = "Support for OO-like prototypes";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "opaleye" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , case-insensitive, contravariant, postgresql-simple, pretty
         , product-profunctors, profunctors, semigroups, stdenv, text, time
         , time-locale-compat, transformers, uuid, void
         }:
         mkDerivation {
           pname = "opaleye";
           version = "0.6.0.0";
           sha256 = "383cf7acecfdf5bc9ca1b3a7447b30494224c7859c6a326a83f662936ea73c5f";
           revision = "1";
           editedCabalFile = "0hkgrksap5hn0xq86bq9rsm3h9a6vamh6la77z10fdxv7m3xjxf3";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring case-insensitive
             contravariant postgresql-simple pretty product-profunctors
             profunctors semigroups text time time-locale-compat transformers
             uuid void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
           description = "An SQL-generating DSL targeting PostgreSQL";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "opaleye-trans" = callPackage
        ({ mkDerivation, base, exceptions, mtl, opaleye, postgresql-simple
         , product-profunctors, stdenv, transformers
         }:
         mkDerivation {
           pname = "opaleye-trans";
           version = "0.4.2";
           sha256 = "95977ca6e4c79325bbb8dd8f9323a671df6749f0bcd631170775d340f1e2db15";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base exceptions mtl opaleye postgresql-simple product-profunctors
             transformers
           ];
           executableHaskellDepends = [
             base opaleye postgresql-simple product-profunctors
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/WraithM/opaleye-trans";
           description = "A monad transformer for Opaleye";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "open-browser" = callPackage
        ({ mkDerivation, base, process, stdenv }:
         mkDerivation {
           pname = "open-browser";
           version = "0.2.1.0";
           sha256 = "0bed2e63800f738e78a4803ed22902accb50ac02068b96c17ce83a267244ca66";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base process ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rightfold/open-browser";
           description = "Open a web browser from Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "open-witness" = callPackage
        ({ mkDerivation, base, constraints, hashable, random, stdenv
         , template-haskell, transformers, witness
         }:
         mkDerivation {
           pname = "open-witness";
           version = "0.4.0.1";
           sha256 = "0770500d6eeb301fc92d30bec2ccef55b05beb0200125fcbddb6b50836034111";
           libraryHaskellDepends = [
             base constraints hashable random template-haskell transformers
             witness
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AshleyYakeley/open-witness";
           description = "open witnesses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "openexr-write" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
         , deepseq, split, stdenv, vector, vector-split, zlib
         }:
         mkDerivation {
           pname = "openexr-write";
           version = "0.1.0.1";
           sha256 = "6de3f2d859f72ad3654dbe24ef89aa98967a55a3fd98e0c090b93a04e4938538";
           libraryHaskellDepends = [
             base binary bytestring data-binary-ieee754 deepseq split vector
             vector-split zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pavolzetor/openexr-write#readme";
           description = "Library for writing images in OpenEXR HDR file format";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "openpgp-asciiarmor" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
         , cereal, stdenv
         }:
         mkDerivation {
           pname = "openpgp-asciiarmor";
           version = "0.1";
           sha256 = "5cd45aad8fb9e0d07ed27da1801937b4d8598dac1c55bcfbfe11d9608f053bf7";
           libraryHaskellDepends = [
             attoparsec base base64-bytestring bytestring cereal
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://floss.scru.org/openpgp-asciiarmor";
           description = "OpenPGP (RFC4880) ASCII Armor codec";
           license = "unknown";
         }) {};
      "opensource" = callPackage
        ({ mkDerivation, aeson, base, http-client, http-client-tls, stdenv
         , text, transformers
         }:
         mkDerivation {
           pname = "opensource";
           version = "0.1.0.0";
           sha256 = "3459b6ce70fb8fc8bdf9d9f6ed0476724cb8a11b673fc60422edac2376620127";
           revision = "1";
           editedCabalFile = "02zb9m7d6fsjbqgwbjnkrpgqc93zm34bvzgasw903hhdkskshrp6";
           libraryHaskellDepends = [
             aeson base http-client http-client-tls text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://api.opensource.org/";
           description = "Haskell API Wrapper for the Open Source License API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "openssl-streams" = callPackage
        ({ mkDerivation, base, bytestring, HsOpenSSL, io-streams, network
         , stdenv
         }:
         mkDerivation {
           pname = "openssl-streams";
           version = "1.2.1.3";
           sha256 = "dc7170e835cf71a132903e2a6ccc976bd2984f9241ea2e4e99a9ece74f868f5f";
           libraryHaskellDepends = [
             base bytestring HsOpenSSL io-streams network
           ];
           doHaddock = false;
           doCheck = false;
           description = "OpenSSL network support for io-streams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "operational" = callPackage
        ({ mkDerivation, base, mtl, random, stdenv }:
         mkDerivation {
           pname = "operational";
           version = "0.2.3.5";
           sha256 = "91d479063ae7ed3d0a6ae911bdee550fbf31cf341910f9778046b484c55b4af4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base mtl ];
           executableHaskellDepends = [ base mtl random ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Operational";
           description = "Implementation of difficult monads made easy with operational semantics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "operational-class" = callPackage
        ({ mkDerivation, base, operational, stdenv, transformers }:
         mkDerivation {
           pname = "operational-class";
           version = "0.3.0.0";
           sha256 = "8b28b9cb86a2dd520196f6a563538dc2c9e8730f0a0f5e5f3bca19559631e70b";
           libraryHaskellDepends = [ base operational transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-operational-class";
           description = "MonadProgram typeclass for the operational package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "opml-conduit" = callPackage
        ({ mkDerivation, base, case-insensitive, conduit
         , conduit-combinators, containers, lens-simple, mono-traversable
         , monoid-subclasses, safe-exceptions, semigroups, stdenv, text
         , time, timerep, uri-bytestring, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "opml-conduit";
           version = "0.6.0.4";
           sha256 = "480b557690aab79e3761ad7f1ba1d44873c3d395d2b27f2d133372a01c535d1d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base case-insensitive conduit conduit-combinators containers
             lens-simple mono-traversable monoid-subclasses safe-exceptions
             semigroups text time timerep uri-bytestring xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/opml-conduit";
           description = "Streaming parser/renderer for the OPML 2.0 format.";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "optional-args" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "optional-args";
           version = "1.0.2";
           sha256 = "2e3454ad77cba80b15c02dbe1915889fafa81a22deb7fe5e7e01b0dd8d85b0e4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Optional function arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "options" = callPackage
        ({ mkDerivation, base, containers, monads-tf, stdenv, transformers
         }:
         mkDerivation {
           pname = "options";
           version = "1.2.1.1";
           sha256 = "283eea9ae2c539830c6c65f5c03fb00626cfd1274da0526c285c146fc3065a62";
           libraryHaskellDepends = [ base containers monads-tf transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-options/";
           description = "A powerful and easy-to-use command-line option parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "optparse-applicative" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, process, stdenv
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "optparse-applicative";
           version = "0.14.2.0";
           sha256 = "e1341e9831c7b10332d1b29cfa966a80d46b476bb52d99d50bdb53eb770d7f30";
           libraryHaskellDepends = [
             ansi-wl-pprint base process transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pcapriotti/optparse-applicative";
           description = "Utilities and combinators for parsing command line options";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-generic" = callPackage
        ({ mkDerivation, base, bytestring, Only, optparse-applicative
         , semigroups, stdenv, system-filepath, text, time, transformers
         , void
         }:
         mkDerivation {
           pname = "optparse-generic";
           version = "1.2.3";
           sha256 = "f37d9eb00a14aa75f560a9d3d75c39f7f79e4cd63cab78c7736a0dd989bcbff3";
           libraryHaskellDepends = [
             base bytestring Only optparse-applicative semigroups
             system-filepath text time transformers void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Auto-generate a command-line parser for your datatype";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-simple" = callPackage
        ({ mkDerivation, base, gitrev, optparse-applicative, stdenv
         , template-haskell, transformers
         }:
         mkDerivation {
           pname = "optparse-simple";
           version = "0.1.0";
           sha256 = "838d795faa3de3b426b83df11834bead33d02d7fe89df30300ca05c72e714cbc";
           libraryHaskellDepends = [
             base gitrev optparse-applicative template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/optparse-simple#readme";
           description = "Simple interface to optparse-applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "optparse-text" = callPackage
        ({ mkDerivation, base, optparse-applicative, stdenv, text }:
         mkDerivation {
           pname = "optparse-text";
           version = "0.1.1.0";
           sha256 = "f6c081ecec880ae4124f25c1d91ba3a1a3caed9d2fde9e977bceab7d300884ef";
           libraryHaskellDepends = [ base optparse-applicative text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/passy/optparse-text#readme";
           description = "Data.Text helpers for optparse-applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "package-description-remote" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, lens, lens-aeson, stdenv
         , wreq
         }:
         mkDerivation {
           pname = "package-description-remote";
           version = "0.2.0.0";
           sha256 = "4a936d2346265d4d960875b12272e9f15aedf6aa6aa5f177f7ce30c7e4f68744";
           libraryHaskellDepends = [
             base bytestring Cabal lens lens-aeson wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yamadapc/stack-run-auto/package-description-remote";
           description = "Fetches a 'GenericPackageDescription' from Hackage";
           license = stdenv.lib.licenses.mit;
         }) {};
      "packdeps" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers, directory
         , filepath, optparse-applicative, process, semigroups, split
         , stdenv, tar, text, time
         }:
         mkDerivation {
           pname = "packdeps";
           version = "0.4.4";
           sha256 = "54a8d40b3a5cb6c7df349884dc7f0f37b6bac21f5064fc12f52ee0d4e2628b7e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal containers directory filepath split tar text
             time
           ];
           executableHaskellDepends = [
             base Cabal containers optparse-applicative process semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://packdeps.haskellers.com/";
           description = "Check your cabal packages for lagging dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pager" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , directory, process, resourcet, safe, stdenv, terminfo, text
         , transformers, unix
         }:
         mkDerivation {
           pname = "pager";
           version = "0.1.1.0";
           sha256 = "3e1e4f2ca17be6dd68d2d480f29e7a770c0f7ca3109aa1980da677d96cd4eef3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra directory process resourcet
             safe terminfo text transformers unix
           ];
           executableHaskellDepends = [ base bytestring conduit-extra text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pharpend/pager";
           description = "Open up a pager, like 'less' or 'more'";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "pagerduty" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, bytestring
         , bytestring-conversion, conduit, data-default-class, exceptions
         , generics-sop, http-client, http-types, lens, lens-aeson, mmorph
         , monad-control, mtl, stdenv, template-haskell, text, time
         , time-locale-compat, transformers, transformers-base
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "pagerduty";
           version = "0.0.8";
           sha256 = "2f8f9ef70a672dd9160beb1e87d9b88d8cbd6f137637f4aed98df756ea270463";
           libraryHaskellDepends = [
             aeson base bifunctors bytestring bytestring-conversion conduit
             data-default-class exceptions generics-sop http-client http-types
             lens lens-aeson mmorph monad-control mtl template-haskell text time
             time-locale-compat transformers transformers-base
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/brendanhay/pagerduty";
           description = "Client library for PagerDuty Integration and REST APIs";
           license = "unknown";
         }) {};
      "pagination" = callPackage
        ({ mkDerivation, base, deepseq, exceptions, stdenv }:
         mkDerivation {
           pname = "pagination";
           version = "0.2.1";
           sha256 = "88dcbae69e830adac0943f24f8ae6915f9e4ba684531a76bce936767cbeb203d";
           revision = "1";
           editedCabalFile = "14sirfxb9qa8g57fxmpphg5hph7kp0lpgwxrmkjlj1x8xwh5x6d5";
           libraryHaskellDepends = [ base deepseq exceptions ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/pagination";
           description = "Framework-agnostic pagination boilerplate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "palette" = callPackage
        ({ mkDerivation, array, base, colour, containers, stdenv }:
         mkDerivation {
           pname = "palette";
           version = "0.1.0.5";
           sha256 = "7434530139793650b5a2dc8b8b32348ab8021c4eeaad774a1fd709c040ab9812";
           revision = "1";
           editedCabalFile = "1a5qsbd43wmw1f3dj6vnmzd9imh9gsnz29jc47ivbgj4x6mdmsq1";
           libraryHaskellDepends = [ array base colour containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/diagrams";
           description = "Utilities for choosing and creating color schemes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pandoc" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, base64-bytestring
         , binary, blaze-html, blaze-markup, bytestring, Cabal
         , case-insensitive, cmark-gfm, containers, data-default, deepseq
         , directory, doctemplates, filepath, Glob, haddock-library, hslua
         , hslua-module-text, HTTP, http-client, http-client-tls, http-types
         , JuicyPixels, mtl, network, network-uri, pandoc-types, parsec
         , process, random, safe, scientific, SHA, skylighting, split
         , stdenv, syb, tagsoup, temporary, texmath, text, time, unix
         , unordered-containers, vector, xml, yaml, zip-archive, zlib
         }:
         mkDerivation {
           pname = "pandoc";
           version = "2.0.6";
           sha256 = "f2f236e91986b522510c7ea8212c1641da6006d0acec3e6b587a4e4faf3612ee";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [
             aeson aeson-pretty base base64-bytestring binary blaze-html
             blaze-markup bytestring case-insensitive cmark-gfm containers
             data-default deepseq directory doctemplates filepath Glob
             haddock-library hslua hslua-module-text HTTP http-client
             http-client-tls http-types JuicyPixels mtl network network-uri
             pandoc-types parsec process random safe scientific SHA skylighting
             split syb tagsoup temporary texmath text time unix
             unordered-containers vector xml yaml zip-archive zlib
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://pandoc.org";
           description = "Conversion between markup formats";
           license = "GPL";
         }) {};
      "pandoc-citeproc" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
         , Cabal, containers, data-default, directory, filepath, hs-bibutils
         , mtl, old-locale, pandoc, pandoc-types, parsec, process, rfc5051
         , setenv, split, stdenv, syb, tagsoup, temporary, text, time
         , unordered-containers, vector, xml-conduit, yaml
         }:
         mkDerivation {
           pname = "pandoc-citeproc";
           version = "0.12.2.5";
           sha256 = "ddfb40b4ff42e1781172bf1077e344fb8909df99b3463c12b39f5a46ddb2a8d0";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [
             aeson base bytestring containers data-default directory filepath
             hs-bibutils mtl old-locale pandoc pandoc-types parsec rfc5051
             setenv split syb tagsoup text time unordered-containers vector
             xml-conduit yaml
           ];
           executableHaskellDepends = [
             aeson aeson-pretty attoparsec base bytestring containers directory
             filepath mtl pandoc pandoc-types process syb temporary text vector
             yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/pandoc-citeproc";
           description = "Supports using pandoc with citeproc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pandoc-types" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , ghc-prim, QuickCheck, stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "pandoc-types";
           version = "1.17.3.1";
           sha256 = "4b1674f7d000da4f86e775f6178e1939fe506e2e4b45c8842dc0182ad92a1736";
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq ghc-prim QuickCheck syb
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://johnmacfarlane.net/pandoc";
           description = "Types for representing a structured document";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pango" = callPackage
        ({ mkDerivation, array, base, Cabal, cairo, containers, directory
         , filepath, glib, gtk2hs-buildtools, mtl, pango, pretty, process
         , stdenv, text
         }:
         mkDerivation {
           pname = "pango";
           version = "0.13.4.0";
           sha256 = "1f08c7e941f35c3be60b6b77347c0e9ac87feaca865aee21b0a5400b04d1ead4";
           enableSeparateDataOutput = true;
           setupHaskellDepends = [ base Cabal filepath gtk2hs-buildtools ];
           libraryHaskellDepends = [
             array base cairo containers directory glib mtl pretty process text
           ];
           libraryPkgconfigDepends = [ pango ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/gtk2hs/";
           description = "Binding to the Pango text rendering engine";
           license = stdenv.lib.licenses.lgpl21;
         }) {inherit (pkgs) pango;};
      "papillon" = callPackage
        ({ mkDerivation, base, bytestring, directory, filepath, monads-tf
         , stdenv, template-haskell, transformers
         }:
         mkDerivation {
           pname = "papillon";
           version = "0.1.0.5";
           sha256 = "f384ff05d5cb0fed420bc700dabdb3e8beef191921f9759b12bf3dfe60ad82b0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring monads-tf template-haskell transformers
           ];
           executableHaskellDepends = [
             base directory filepath monads-tf template-haskell transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://skami.iocikun.jp/haskell/packages/papillon";
           description = "packrat parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parallel" = callPackage
        ({ mkDerivation, array, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "parallel";
           version = "3.2.1.1";
           sha256 = "323bb9bc9e36fb9bfb08e68a772411302b1599bfffbc6de20fa3437ce1473c17";
           revision = "1";
           editedCabalFile = "12sgigg7r4nmyhbfn1p09ajf4s576yca31b7daj5zpp1mxgb5x7i";
           libraryHaskellDepends = [ array base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Parallel programming library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parallel-io" = callPackage
        ({ mkDerivation, base, containers, extensible-exceptions, random
         , stdenv
         }:
         mkDerivation {
           pname = "parallel-io";
           version = "0.3.3";
           sha256 = "3a14c02b9b8b7c72577eb90a8dd72de75d99192def87d7aa79545ee4d6e80645";
           revision = "1";
           editedCabalFile = "1vlb2x1ghih4l64031rmh7h643c3knh5r5mwilf7g8izb58ypvkm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers extensible-exceptions random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://batterseapower.github.com/parallel-io";
           description = "Combinators for executing IO actions in parallel on a thread pool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parseargs" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "parseargs";
           version = "0.2.0.8";
           sha256 = "7b789204c15d0c478db3d133f349a6970b5509fc6af655faedc03c7426dcf7d6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/BartMassey/parseargs";
           description = "Full-featured command-line argument parsing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsec" = callPackage
        ({ mkDerivation, base, bytestring, mtl, stdenv, text }:
         mkDerivation {
           pname = "parsec";
           version = "3.1.13.0";
           sha256 = "7861ae437a6177ee7c08899432fd8c062e7c110361da48a9f9e88263fd4d80f1";
           revision = "1";
           editedCabalFile = "1dpr1wfpykkl6kayp4wnyn0n1zv7pvqksax2i54dhdgjijj8qynd";
           libraryHaskellDepends = [ base bytestring mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/parsec";
           description = "Monadic parser combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsec-numeric" = callPackage
        ({ mkDerivation, base, parsec, stdenv }:
         mkDerivation {
           pname = "parsec-numeric";
           version = "0.1.0.0";
           sha256 = "7bdd9ae4aa63695e3072c73d99b85ef1572ffe9f5a07621edaa9515393a6e52f";
           libraryHaskellDepends = [ base parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrewRademacher/parsec-numeric";
           description = "Parsec combinators for parsing Haskell numeric types";
           license = "unknown";
         }) {};
      "parser-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "parser-combinators";
           version = "0.4.0";
           sha256 = "b124e9411de085972e4d9ae8254299e8e773e964b2798eb400d5cf6814f8f3ab";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/parser-combinators";
           description = "Lightweight package providing commonly useful parser combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "parsers" = callPackage
        ({ mkDerivation, attoparsec, base, base-orphans, charset
         , containers, mtl, parsec, scientific, semigroups, stdenv, text
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "parsers";
           version = "0.12.8";
           sha256 = "5aba0afdd53f3bd39b145ca858b696ba0a36d099c694742fb6a5d38900806bc8";
           libraryHaskellDepends = [
             attoparsec base base-orphans charset containers mtl parsec
             scientific semigroups text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/parsers/";
           description = "Parsing combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "partial-handler" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "partial-handler";
           version = "1.0.3";
           sha256 = "94c72af024417ec04e3d94b5b57c7bfeb8b48acb8444e7c0fe0764ff1139c131";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/partial-handler";
           description = "A composable exception handler";
           license = stdenv.lib.licenses.mit;
         }) {};
      "partial-isomorphisms" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "partial-isomorphisms";
           version = "0.2.2.1";
           sha256 = "4c551fa69119e87de1ba0ec7b854f6ed13fb2fe2768db4afff2f8468f0f4a164";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
           description = "Partial isomorphisms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "partial-order" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "partial-order";
           version = "0.1.2.1";
           sha256 = "e37dc77f4b8852b1c96fe9b8b06db41aa00d06c5ce7f0c1c5bea15ea462ac397";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/haskell-partial-order";
           description = "Provides typeclass suitable for types admitting a partial order";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "partial-semigroup" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "partial-semigroup";
           version = "0.3.0.3";
           sha256 = "3d273d24524ddfab2999a047e43f2f25ee89b0ea083f24a527de8a7da74056ef";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chris-martin/partial-semigroup";
           description = "A partial binary associative operator";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "path" = callPackage
        ({ mkDerivation, aeson, base, deepseq, exceptions, filepath
         , hashable, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "path";
           version = "0.6.1";
           sha256 = "4b8bd85a13395b4240c639b9cf804371854d5dac69158f661068bd3089a25e59";
           libraryHaskellDepends = [
             aeson base deepseq exceptions filepath hashable template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Support for well-typed paths";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-extra" = callPackage
        ({ mkDerivation, base, exceptions, path, stdenv }:
         mkDerivation {
           pname = "path-extra";
           version = "0.0.6";
           sha256 = "883aa371560b3b0d41df1954ed44c6dd6e5d77cb3bd4ebf0fd4b9d72df0a6935";
           libraryHaskellDepends = [ base exceptions path ];
           doHaddock = false;
           doCheck = false;
           description = "Chris Done's path library, enriched with URL-related goodies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-io" = callPackage
        ({ mkDerivation, base, containers, directory, dlist, exceptions
         , filepath, path, stdenv, temporary, time, transformers
         , unix-compat
         }:
         mkDerivation {
           pname = "path-io";
           version = "1.3.3";
           sha256 = "2aec05914a7569f221cf73e25070fea5fad8125a9a93845e8d614a1c291e35bd";
           revision = "1";
           editedCabalFile = "16jfcjpqbzj6jr0sqxq2ys1z9qd2d8xr9k9vyij08ywynmwwvvzm";
           libraryHaskellDepends = [
             base containers directory dlist exceptions filepath path temporary
             time transformers unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/path-io";
           description = "Interface to ‘directory’ package for users of ‘path’";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-pieces" = callPackage
        ({ mkDerivation, base, stdenv, text, time }:
         mkDerivation {
           pname = "path-pieces";
           version = "0.2.1";
           sha256 = "080bd49f53e20597ca3e5962e0c279a3422345f5b088840a30a751cd76d4a36f";
           revision = "1";
           editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
           libraryHaskellDepends = [ base text time ];
           doHaddock = false;
           doCheck = false;
           description = "Components of paths";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "path-text-utf8" = callPackage
        ({ mkDerivation, base, bytestring, path, safe-exceptions, stdenv
         , text
         }:
         mkDerivation {
           pname = "path-text-utf8";
           version = "0.0.1.0";
           sha256 = "8f110e6ef0f50566ff0ee03e4551d5c6913ad3c1d5da9ee91229a44b2437f37c";
           revision = "1";
           editedCabalFile = "1m04dyqqamh9lkkmcbf2dg7ivd5kb2dxqh9b844lr7mk5qganar6";
           libraryHaskellDepends = [
             base bytestring path safe-exceptions text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chris-martin/path-text-utf8";
           description = "Read and write UTF-8 text files";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "pathtype" = callPackage
        ({ mkDerivation, base, deepseq, directory, old-time, QuickCheck
         , semigroups, stdenv, tagged, time, transformers, utility-ht
         }:
         mkDerivation {
           pname = "pathtype";
           version = "0.8.1";
           sha256 = "d5e6dc557dcf53e97cc2f7f6d6ee30992920e3ea074042b6ac11f74f2792340f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base deepseq directory old-time QuickCheck semigroups tagged time
             transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/pathtype/";
           description = "Type-safe replacement for System.FilePath etc";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pathwalk" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv, transformers }:
         mkDerivation {
           pname = "pathwalk";
           version = "0.3.1.2";
           sha256 = "76e0d0646a3133a062dbae4e9d37d59e71d6328706bb178552a93800e4550e91";
           libraryHaskellDepends = [ base directory filepath transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Xe/pathwalk";
           description = "Path walking utilities for Haskell programs";
           license = stdenv.lib.licenses.mit;
         }) {};
      "patience" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "patience";
           version = "0.1.1";
           sha256 = "35c7c334d344b3cbdc61cc88c559bedb300ace860a80e3990aeb268f1f10db63";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "Patience diff and longest increasing subsequence";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pattern-arrows" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "pattern-arrows";
           version = "0.0.2";
           sha256 = "6fc2d972e72785d727d2b68e1f82ef94a2c93cedbc00e6a4cdc03498825c078f";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
           description = "Arrows for Pretty Printing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pcf-font" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, stdenv
         , vector, zlib
         }:
         mkDerivation {
           pname = "pcf-font";
           version = "0.2.2.0";
           sha256 = "8a67d04240a7668e669414d1b4f531d290c79a63198e0ecf02cb0339bff098ef";
           libraryHaskellDepends = [
             base binary bytestring containers vector zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michael-swan/pcf-font";
           description = "PCF font parsing and rendering library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pcf-font-embed" = callPackage
        ({ mkDerivation, base, bytestring, pcf-font, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "pcf-font-embed";
           version = "0.1.2.0";
           sha256 = "c55d51ee6f959c9c05bb9d9adac3aad1cd87b2bba3cca7d3667d67f1a230fd51";
           libraryHaskellDepends = [
             base bytestring pcf-font template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michael-swan/pcf-font-embed";
           description = "Template Haskell for embedding text rendered using PCF fonts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pcre-heavy" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, pcre-light
         , semigroups, stdenv, string-conversions, template-haskell
         }:
         mkDerivation {
           pname = "pcre-heavy";
           version = "1.0.0.2";
           sha256 = "8a5cf697b7683127812450cef57d0d74ac5c1117ec80618d10509642f793cbd1";
           libraryHaskellDepends = [
             base base-compat bytestring pcre-light semigroups
             string-conversions template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/pcre-heavy";
           description = "A regexp library on top of pcre-light you can actually use";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "pcre-light" = callPackage
        ({ mkDerivation, base, bytestring, pcre, stdenv }:
         mkDerivation {
           pname = "pcre-light";
           version = "0.4.0.4";
           sha256 = "02c97e39263d18fd26aa63d52c88c4bfbb5c3f66ab40564552e7f11d5d889e75";
           libraryHaskellDepends = [ base bytestring ];
           libraryPkgconfigDepends = [ pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/pcre-light";
           description = "Portable regex library for Perl 5 compatible regular expressions";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) pcre;};
      "pcre-utils" = callPackage
        ({ mkDerivation, array, attoparsec, base, bytestring, mtl
         , regex-pcre-builtin, stdenv, vector
         }:
         mkDerivation {
           pname = "pcre-utils";
           version = "0.1.8.1.1";
           sha256 = "1f2a80ca63308e182542534866a844efaf880deac4145213bf1c83a560586df4";
           libraryHaskellDepends = [
             array attoparsec base bytestring mtl regex-pcre-builtin vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bartavelle/pcre-utils";
           description = "Perl-like substitute and split for PCRE regexps";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdf-toolbox-content" = callPackage
        ({ mkDerivation, attoparsec, base, base16-bytestring, bytestring
         , containers, io-streams, pdf-toolbox-core, stdenv, text
         }:
         mkDerivation {
           pname = "pdf-toolbox-content";
           version = "0.0.5.1";
           sha256 = "1c104e232e178603ff9dd8c6eaaf0ccbda918c70b40ed63f08fa1922a3c88488";
           libraryHaskellDepends = [
             attoparsec base base16-bytestring bytestring containers io-streams
             pdf-toolbox-core text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/pdf-toolbox";
           description = "A collection of tools for processing PDF files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdf-toolbox-core" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, errors
         , io-streams, scientific, stdenv, transformers, zlib-bindings
         }:
         mkDerivation {
           pname = "pdf-toolbox-core";
           version = "0.0.4.1";
           sha256 = "cce3949ef5596b5d61032ce1547160dc5f52e3d5c556dcdb9aabf1582173a981";
           libraryHaskellDepends = [
             attoparsec base bytestring containers errors io-streams scientific
             transformers zlib-bindings
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/pdf-toolbox";
           description = "A collection of tools for processing PDF files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdf-toolbox-document" = callPackage
        ({ mkDerivation, base, bytestring, cipher-aes, cipher-rc4
         , containers, crypto-api, cryptohash, io-streams
         , pdf-toolbox-content, pdf-toolbox-core, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "pdf-toolbox-document";
           version = "0.0.7.1";
           sha256 = "3f7d379baa85c1cf9998e3f84177ad24b5cc8632fb211af7a09603e59596f0e1";
           libraryHaskellDepends = [
             base bytestring cipher-aes cipher-rc4 containers crypto-api
             cryptohash io-streams pdf-toolbox-content pdf-toolbox-core text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/pdf-toolbox";
           description = "A collection of tools for processing PDF files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pdfinfo" = callPackage
        ({ mkDerivation, base, mtl, old-locale, process-extras, stdenv
         , text, time, time-locale-compat
         }:
         mkDerivation {
           pname = "pdfinfo";
           version = "1.5.4";
           sha256 = "9a6a1f7d8ab0a5e8f7f8276da070ccddec140d6b2549b084042159b639230911";
           libraryHaskellDepends = [
             base mtl old-locale process-extras text time time-locale-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/pdfinfo";
           description = "Wrapper around the pdfinfo command";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pell" = callPackage
        ({ mkDerivation, arithmoi, base, containers, stdenv }:
         mkDerivation {
           pname = "pell";
           version = "0.1.1.0";
           sha256 = "5e2002920c97bddbe3047dbc2eba3ddadd3823c4ca137c4a1d3314cb12dc4ad4";
           libraryHaskellDepends = [ arithmoi base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brunjlar/pell";
           description = "Package to solve the Generalized Pell Equation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pem" = callPackage
        ({ mkDerivation, base, basement, bytestring, memory, stdenv }:
         mkDerivation {
           pname = "pem";
           version = "0.2.4";
           sha256 = "770c4c1b9cd24b3db7f511f8a48404a0d098999e28573c3743a8a296bb96f8d4";
           libraryHaskellDepends = [ base basement bytestring memory ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-pem";
           description = "Privacy Enhanced Mail (PEM) format reader and writer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "perf" = callPackage
        ({ mkDerivation, base, containers, foldl, formatting, numhask
         , optparse-generic, protolude, rdtsc, stdenv, tdigest, text, time
         , vector
         }:
         mkDerivation {
           pname = "perf";
           version = "0.3.0";
           sha256 = "38f463fc0c0966b707fbb5c1b4a270a916a1b1329dcad34f8ecabb3798141851";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers foldl numhask protolude rdtsc tdigest time
           ];
           executableHaskellDepends = [
             base formatting numhask optparse-generic protolude text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tonyday567/perf";
           description = "low-level performance statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistable-record" = callPackage
        ({ mkDerivation, array, base, containers, dlist, names-th
         , product-isomorphic, stdenv, template-haskell, th-data-compat
         , transformers
         }:
         mkDerivation {
           pname = "persistable-record";
           version = "0.6.0.1";
           sha256 = "a1bef99c646daef7a50bc21c4720f0d485513690cf2293ea9783cf2d7f6f5eca";
           libraryHaskellDepends = [
             array base containers dlist names-th product-isomorphic
             template-haskell th-data-compat transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Binding between SQL database values and haskell records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistable-types-HDBC-pg" = callPackage
        ({ mkDerivation, base, bytestring, convertible, HDBC
         , persistable-record, relational-query-HDBC, stdenv
         , text-postgresql
         }:
         mkDerivation {
           pname = "persistable-types-HDBC-pg";
           version = "0.0.1.5";
           sha256 = "89a4b31fb916afd21e99af0d3dbcbb69c68ef97842c824113958ef238dc5b94d";
           libraryHaskellDepends = [
             base bytestring convertible HDBC persistable-record
             relational-query-HDBC text-postgresql
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "HDBC and Relational-Record instances of PostgreSQL extended types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistent" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-html, blaze-markup, bytestring, conduit, containers
         , exceptions, fast-logger, http-api-data, lifted-base
         , monad-control, monad-logger, mtl, old-locale, path-pieces
         , resource-pool, resourcet, scientific, silently, stdenv, tagged
         , template-haskell, text, time, transformers, transformers-base
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "persistent";
           version = "2.7.1";
           sha256 = "c2896ef228486c02c08b8594c9eccef8ca246291c4f16eff538fef9dc332391d";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring blaze-html blaze-markup
             bytestring conduit containers exceptions fast-logger http-api-data
             lifted-base monad-control monad-logger mtl old-locale path-pieces
             resource-pool resourcet scientific silently tagged template-haskell
             text time transformers transformers-base unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Type-safe, multi-backend data serialization";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-mongoDB" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bson, bytestring, cereal
         , conduit, containers, http-api-data, monad-control, mongoDB
         , network, path-pieces, persistent, resource-pool, resourcet
         , stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "persistent-mongoDB";
           version = "2.6.0";
           sha256 = "e34ee25417a232e97c25989d04d8d62d907def78c6fd1710ba61f15c3d9924f9";
           libraryHaskellDepends = [
             aeson attoparsec base bson bytestring cereal conduit containers
             http-api-data monad-control mongoDB network path-pieces persistent
             resource-pool resourcet text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using mongoDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-mysql" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , containers, monad-control, monad-logger, mysql, mysql-simple
         , persistent, resource-pool, resourcet, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "persistent-mysql";
           version = "2.6.2.1";
           sha256 = "339e326034ea5d861b6e59e63a1fc1d34a7aeae129accd544d0b78f4e9cd6366";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit containers
             monad-control monad-logger mysql mysql-simple persistent
             resource-pool resourcet text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using MySQL database server";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-mysql-haskell" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, containers
         , io-streams, monad-control, monad-logger, mysql-haskell, network
         , persistent, persistent-template, resource-pool, resourcet, stdenv
         , text, time, tls, transformers
         }:
         mkDerivation {
           pname = "persistent-mysql-haskell";
           version = "0.3.6";
           sha256 = "23493eab38e1a6d0ea2072db930c78fe437de63edb29bb66c4a428bd324c02a9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring conduit containers io-streams monad-control
             monad-logger mysql-haskell network persistent resource-pool
             resourcet text time tls transformers
           ];
           executableHaskellDepends = [
             base monad-logger persistent persistent-template transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "A pure haskell backend for the persistent library using MySQL database server";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-postgresql" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
         , containers, monad-control, monad-logger, persistent
         , postgresql-libpq, postgresql-simple, resource-pool, resourcet
         , stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "persistent-postgresql";
           version = "2.6.3";
           sha256 = "916e515e40ce8d1d2a35dee5e459f5f4e29cb15eadca8ae6f9e8d6731641237b";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring conduit containers
             monad-control monad-logger persistent postgresql-libpq
             postgresql-simple resource-pool resourcet text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using postgresql";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-refs" = callPackage
        ({ mkDerivation, base, containers, mtl, ref-fd, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "persistent-refs";
           version = "0.4";
           sha256 = "46b310e034e23993e7da740d388e06e410483ada05cbcc8c0a4953ee19f8d0d3";
           libraryHaskellDepends = [
             base containers mtl ref-fd transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acfoltzer/persistent-refs";
           description = "Haskell references backed by an IntMap for persistence and reversibility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "persistent-sqlite" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, containers
         , microlens-th, monad-control, monad-logger, old-locale, persistent
         , resource-pool, resourcet, stdenv, text, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "persistent-sqlite";
           version = "2.6.4";
           sha256 = "75e5dbd330337e6e60346f309457f56deabb4260bd53391962de2f085416ac9a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring conduit containers microlens-th monad-control
             monad-logger old-locale persistent resource-pool resourcet text
             time transformers unordered-containers
           ];
           executableHaskellDepends = [ base monad-logger ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Backend for the persistent library using sqlite3";
           license = stdenv.lib.licenses.mit;
         }) {};
      "persistent-template" = callPackage
        ({ mkDerivation, aeson, aeson-compat, base, bytestring, containers
         , ghc-prim, http-api-data, monad-control, monad-logger, path-pieces
         , persistent, stdenv, tagged, template-haskell, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "persistent-template";
           version = "2.5.3.1";
           sha256 = "8ddb28d564a1decf9eb21587c989aec3d55fdd5437ccf3543b58003b78bc8910";
           libraryHaskellDepends = [
             aeson aeson-compat base bytestring containers ghc-prim
             http-api-data monad-control monad-logger path-pieces persistent
             tagged template-haskell text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/persistent";
           description = "Type-safe, non-relational, multi-backend persistence";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pg-transact" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, monad-control
         , postgresql-simple, stdenv, transformers
         }:
         mkDerivation {
           pname = "pg-transact";
           version = "0.1.0.1";
           sha256 = "598236369ee1228a3a76b4f0d5830d652a90ddbc0f98fdde064ad979a1abc97d";
           libraryHaskellDepends = [
             base bytestring exceptions monad-control postgresql-simple
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/pg-transact#readme";
           description = "Another postgresql-simple transaction monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pgp-wordlist" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text, vector
         }:
         mkDerivation {
           pname = "pgp-wordlist";
           version = "0.1.0.2";
           sha256 = "e28b6fe85222adf1247d5870ab47c68c3d25df3f9ceda104bfb64e1414a92466";
           libraryHaskellDepends = [ base bytestring containers text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/quchen/pgp-wordlist";
           description = "Translate between binary data and a human-readable collection of words";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "phantom-state" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "phantom-state";
           version = "0.2.1.2";
           sha256 = "f978ef98e810e9a9e53f1479340ba7a28f80a64aba431322959cbf8c620c3811";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Phantom State Transformer. Like State Monad, but without values.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "picedit" = callPackage
        ({ mkDerivation, base, cli, hmatrix, JuicyPixels, stdenv, vector }:
         mkDerivation {
           pname = "picedit";
           version = "0.2.3.0";
           sha256 = "e8525d8ca1d4ab0995293948a05dda3eb57f2456603ba5467fef982d0296c12d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base hmatrix JuicyPixels vector ];
           executableHaskellDepends = [ base cli hmatrix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mdibaiee/picedit#readme";
           description = "simple image manipulation functions";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "picoparsec" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , monoid-subclasses, scientific, stdenv, text
         }:
         mkDerivation {
           pname = "picoparsec";
           version = "0.1.2.3";
           sha256 = "8ec7ed678efaf62de15b7c2f1d21f1ddf8b92f5fa233eed9534c12e8812e9150";
           libraryHaskellDepends = [
             array base bytestring containers deepseq monoid-subclasses
             scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/blamario/picoparsec";
           description = "Fast combinator parsing for bytestrings and text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "picosat" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "picosat";
           version = "0.1.4";
           sha256 = "5a6d9fae04a77a95a8c92ec6dd76302010b726d8c934dc8d8bbabc82851e9039";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdiehl/haskell-picosat";
           description = "Bindings to the PicoSAT solver";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pid1" = callPackage
        ({ mkDerivation, base, directory, process, stdenv, unix }:
         mkDerivation {
           pname = "pid1";
           version = "0.1.2.0";
           sha256 = "9e97bf9b4b6ffd6a9b706cc6d5fadd8089cd37d2b8763111bd743104db267f76";
           revision = "1";
           editedCabalFile = "11yg5pjci1d6p5ml0ic4vqn70vjx8vvhqs20rahgfqhh8palkyw9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory process unix ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/pid1#readme";
           description = "Do signal handling and orphan reaping for Unix PID1 init processes";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pinboard" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, http-client
         , http-client-tls, http-types, monad-logger, mtl, network
         , profunctors, random, safe-exceptions, stdenv, text, time
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pinboard";
           version = "0.9.12.8";
           sha256 = "93b7810df9efea605d710452f2a072c4618640ce337cbcfd1f1e8100c7f4344d";
           libraryHaskellDepends = [
             aeson base bytestring containers http-client http-client-tls
             http-types monad-logger mtl network profunctors random
             safe-exceptions text time transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jonschoning/pinboard";
           description = "Access to the Pinboard API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pinch" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , ghc-prim, hashable, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pinch";
           version = "0.3.2.0";
           sha256 = "a1920f6cf2347ff3eeea8cfe3f59987a771efc5e2044370244cf55fa61eb1764";
           libraryHaskellDepends = [
             array base bytestring containers deepseq ghc-prim hashable text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/pinch#readme";
           description = "An alternative implementation of Thrift for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes" = callPackage
        ({ mkDerivation, base, exceptions, mmorph, mtl, semigroups, stdenv
         , transformers, void
         }:
         mkDerivation {
           pname = "pipes";
           version = "4.3.8";
           sha256 = "91a79f231ebe880d0d4fec697171db90a6d1d1cd92992d77ceab4ebacfbf97f2";
           libraryHaskellDepends = [
             base exceptions mmorph mtl semigroups transformers void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Compositional pipelines";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-aeson" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, pipes
         , pipes-attoparsec, pipes-bytestring, pipes-parse, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "pipes-aeson";
           version = "0.4.1.8";
           sha256 = "350411f492fefa8d5a2554e7521d22b7ee88bacbea9d27c0d22468f6355ebe75";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring pipes pipes-attoparsec
             pipes-bytestring pipes-parse transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-aeson";
           description = "Encode and decode JSON streams using Aeson and Pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-attoparsec" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, pipes, pipes-parse
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "pipes-attoparsec";
           version = "0.5.1.5";
           sha256 = "fe9eb446289dbc4c4acdde39620877b885417990d9774f622fa9d1daa591cafd";
           libraryHaskellDepends = [
             attoparsec base bytestring pipes pipes-parse text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-attoparsec";
           description = "Attoparsec and Pipes integration";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, pipes, pipes-group, pipes-parse
         , stdenv, stringsearch, transformers
         }:
         mkDerivation {
           pname = "pipes-bytestring";
           version = "2.1.6";
           sha256 = "b1dc370680f3671759010caace183bce683d0481bd2c0e3f4906b78ac8623c18";
           libraryHaskellDepends = [
             base bytestring pipes pipes-group pipes-parse stringsearch
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "ByteString support for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-category" = callPackage
        ({ mkDerivation, base, lens, mtl, pipes, pipes-extras, stdenv }:
         mkDerivation {
           pname = "pipes-category";
           version = "0.3.0.0";
           sha256 = "4711d889ed2bf7244bbbc292af5746e0378d72a09929aa1e668056e7f0180701";
           libraryHaskellDepends = [ base lens mtl pipes pipes-extras ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/pipes-category#readme";
           description = "Allows instances for Category, Arrow and ArrowChoice for Pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-concurrency" = callPackage
        ({ mkDerivation, async, base, contravariant, pipes, stdenv, stm
         , void
         }:
         mkDerivation {
           pname = "pipes-concurrency";
           version = "2.0.9";
           sha256 = "646d7b10030b6f146170018677a7d9c0b22def4d14cb0da981ae6572b56620af";
           libraryHaskellDepends = [
             async base contravariant pipes stm void
           ];
           doHaddock = false;
           doCheck = false;
           description = "Concurrency for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-csv" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, cassava, pipes
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pipes-csv";
           version = "1.4.3";
           sha256 = "9485f5ddd56ec9bb10d26cdf2b5b67754726e36b167652b11cb0a42acbda68b3";
           libraryHaskellDepends = [
             base blaze-builder bytestring cassava pipes unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fast, streaming csv parser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pipes-extras" = callPackage
        ({ mkDerivation, base, foldl, lens, pipes, stdenv, transformers }:
         mkDerivation {
           pname = "pipes-extras";
           version = "1.0.12";
           sha256 = "c1e042038444690a3bc5dac3340493a38ccff5a3032fdf44b95e738b2eb0276b";
           libraryHaskellDepends = [ base foldl lens pipes transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Extra utilities for pipes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-fastx" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, pipes
         , pipes-attoparsec, pipes-bytestring, stdenv
         }:
         mkDerivation {
           pname = "pipes-fastx";
           version = "0.3.0.0";
           sha256 = "31264ba760bae1df3170a7d8da32f3e3fcb289545a33f369a94732e55e08ba75";
           libraryHaskellDepends = [
             attoparsec base bytestring pipes pipes-attoparsec pipes-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           description = "Streaming parsers for Fasta and Fastq";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-fluid" = callPackage
        ({ mkDerivation, base, constraints, lens, lifted-async
         , monad-control, pipes, semigroups, stdenv, stm, these
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "pipes-fluid";
           version = "0.6.0.0";
           sha256 = "8a4097620bbfaf6f7662acbf792defc92434aaadd8dc71f71b7f26e58fb87585";
           libraryHaskellDepends = [
             base constraints lens lifted-async monad-control pipes semigroups
             stm these transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/pipes-fluid#readme";
           description = "Reactively combines Producers so that a value is yielded as soon as possible";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-group" = callPackage
        ({ mkDerivation, base, free, pipes, pipes-parse, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "pipes-group";
           version = "1.0.8";
           sha256 = "6a645b278f43a172223835614122c063f1bd9b3324575ba4ec5f9c640886957d";
           libraryHaskellDepends = [
             base free pipes pipes-parse transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Group streams into substreams";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-interleave" = callPackage
        ({ mkDerivation, base, containers, heaps, pipes, stdenv }:
         mkDerivation {
           pname = "pipes-interleave";
           version = "1.1.2";
           sha256 = "8d68bc447d0f4b612bf2cfef655e2318d14aee530c4fc5e408e87cf08d69d22a";
           libraryHaskellDepends = [ base containers heaps pipes ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bgamari/pipes-interleave";
           description = "Interleave and merge streams of elements";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-misc" = callPackage
        ({ mkDerivation, base, clock, Decimal, lens, mmorph, mtl, pipes
         , pipes-category, pipes-concurrency, semigroups, stdenv, stm
         , transformers
         }:
         mkDerivation {
           pname = "pipes-misc";
           version = "0.4.0.1";
           sha256 = "b901c84c1a3a61b1a9c8944d16494a256a5690d3e06bf75e66860e28d626f667";
           libraryHaskellDepends = [
             base clock Decimal lens mmorph mtl pipes pipes-category
             pipes-concurrency semigroups stm transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/pipes-misc#readme";
           description = "Miscellaneous utilities for pipes, required by glazier-tutorial";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-mongodb" = callPackage
        ({ mkDerivation, base, monad-control, mongoDB, pipes, stdenv }:
         mkDerivation {
           pname = "pipes-mongodb";
           version = "0.1.0.0";
           sha256 = "0821194bdf7f377beeb20fc8f697ed5388a221b6e8e42c513eea67a91c198340";
           libraryHaskellDepends = [ base monad-control mongoDB pipes ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jb55/pipes-mongodb";
           description = "Stream results from MongoDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pipes-network" = callPackage
        ({ mkDerivation, base, bytestring, network, network-simple, pipes
         , pipes-safe, stdenv, transformers
         }:
         mkDerivation {
           pname = "pipes-network";
           version = "0.6.4.1";
           sha256 = "a8624aec78e2d2a814956d6759a8d3e18811a82d245480f0404fe408f951a0af";
           revision = "1";
           editedCabalFile = "0i7iyzsj6hax7k66rcrkqgkd7z5z65ak77jmg9mdlm13q12r6kih";
           libraryHaskellDepends = [
             base bytestring network network-simple pipes pipes-safe
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0001/pipes-network";
           description = "Use network sockets together with the pipes library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-parse" = callPackage
        ({ mkDerivation, base, pipes, stdenv, transformers }:
         mkDerivation {
           pname = "pipes-parse";
           version = "3.0.8";
           sha256 = "d28f831b2c8229cca567ee95570787d2dd3f5cfcff3b3c44ee308360a8c107a9";
           libraryHaskellDepends = [ base pipes transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Parsing infrastructure for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-random" = callPackage
        ({ mkDerivation, base, mwc-random, pipes, stdenv, vector }:
         mkDerivation {
           pname = "pipes-random";
           version = "1.0.0.4";
           sha256 = "542a07e7d7aafa87201c1f00c4e98ac8f59707f776ea03b1f6f117273608659e";
           libraryHaskellDepends = [ base mwc-random pipes vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fosskers/pipes-random";
           description = "Producers for handling randomness";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-safe" = callPackage
        ({ mkDerivation, base, containers, exceptions, monad-control, mtl
         , pipes, primitive, stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "pipes-safe";
           version = "2.2.6";
           sha256 = "9f1b18792617d5ab4a144b3a036b8d7d57cbc53adb98fd2605bbe172710f09f9";
           libraryHaskellDepends = [
             base containers exceptions monad-control mtl pipes primitive
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           description = "Safety for the pipes ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-text" = callPackage
        ({ mkDerivation, base, bytestring, pipes, pipes-bytestring
         , pipes-group, pipes-parse, pipes-safe, stdenv, streaming-commons
         , text, transformers
         }:
         mkDerivation {
           pname = "pipes-text";
           version = "0.0.2.5";
           sha256 = "4489ee02a8ebfd87049fc4dd1380b21e6f33984eb0101c836ab8e054759c0f2a";
           libraryHaskellDepends = [
             base bytestring pipes pipes-bytestring pipes-group pipes-parse
             pipes-safe streaming-commons text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelt/text-pipes";
           description = "properly streaming text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pipes-wai" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types, pipes
         , stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "pipes-wai";
           version = "3.2.0";
           sha256 = "04a670df140c12b64f6f0d04b3c5571527f144ee429e7030bb62ec8785056d2a";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types pipes transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/iand675/pipes-wai";
           description = "A port of wai-conduit for the pipes ecosystem";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pixelated-avatar-generator" = callPackage
        ({ mkDerivation, async, base, bytestring, cli, JuicyPixels, pureMD5
         , random, split, stdenv
         }:
         mkDerivation {
           pname = "pixelated-avatar-generator";
           version = "0.1.3";
           sha256 = "4d7d87404121f5481faa7d6af087575a9541aaad96b196ec230d1883a563a078";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring JuicyPixels pureMD5 split
           ];
           executableHaskellDepends = [ async base cli random ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ExcaliburZero/pixelated-avatar-generator";
           description = "A library and application for generating pixelated avatars";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pkcs10" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
         , bytestring, cryptonite, pem, stdenv, x509
         }:
         mkDerivation {
           pname = "pkcs10";
           version = "0.2.0.0";
           sha256 = "896e923f67bac4c7f0e48c9afca60f9ef5178e00fca9f179e8fdae3c12476294";
           libraryHaskellDepends = [
             asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
             x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fcomb/pkcs10-hs#readme";
           description = "PKCS#10 library";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "placeholders" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "placeholders";
           version = "0.1";
           sha256 = "652a78553dcaf6e11b4cd8f0e60010b32da299fbe57721df4bf9157e852d0346";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ahammar/placeholders";
           description = "Placeholders for use while developing Haskell code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plan-b" = callPackage
        ({ mkDerivation, base, exceptions, path, path-io, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "plan-b";
           version = "0.2.1";
           sha256 = "7baad85b24abc214e7dba2d9863b1dc0ca6d54f737efa2d608d69d0992071c0d";
           revision = "2";
           editedCabalFile = "03vi68kp16lcly2rv6nq5a64k00hd4a5zvdf8pbz76450fik2c1j";
           libraryHaskellDepends = [
             base exceptions path path-io transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/plan-b";
           description = "Failure-tolerant file and directory editing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plot" = callPackage
        ({ mkDerivation, array, base, cairo, colour, hmatrix, mtl, pango
         , stdenv, transformers
         }:
         mkDerivation {
           pname = "plot";
           version = "0.2.3.9";
           sha256 = "c6146c647010bc46500ab1043abd63d6793b654686c15728cd8003ebed27cfb3";
           libraryHaskellDepends = [
             array base cairo colour hmatrix mtl pango transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/amcphail/plot";
           description = "A plotting library, exportable as eps/pdf/svg/png or renderable with gtk";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "plutus-prototype" = callPackage
        ({ mkDerivation, base, bifunctors, binary, bytestring
         , cardano-crypto, cryptonite, ed25519, either, fetchgit, filepath
         , lens, memory, mtl, operational, parsec, stdenv, transformers
         }:
         mkDerivation {
           pname = "plutus-prototype";
           version = "0.1.0.0";
           src = fetchgit {
             url = "https://github.com/input-output-hk/plutus-prototype";
             sha256 = "1bgpq5zbi3bl70pn2jsqv1s9k1fn3akknx2x7qfqacg6qrl70pg4";
             rev = "b35148f0097bf5b4ddd75c323ae896a568cd1122";
           };
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bifunctors binary bytestring cardano-crypto cryptonite ed25519
             either filepath lens memory mtl operational parsec transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "iohk.io";
           description = "Prototype of the Plutus language";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pointed" = callPackage
        ({ mkDerivation, base, comonad, containers, data-default-class
         , hashable, kan-extensions, semigroupoids, semigroups, stdenv, stm
         , tagged, transformers, transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "pointed";
           version = "5.0.1";
           sha256 = "b94635a5c8779238501a9156015422ce2fb4d5efd45d68999e8cbe2ecc5121dd";
           libraryHaskellDepends = [
             base comonad containers data-default-class hashable kan-extensions
             semigroupoids semigroups stm tagged transformers
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/pointed/";
           description = "Pointed and copointed data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointedlist" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "pointedlist";
           version = "0.6.1";
           sha256 = "743cb0f89cbb128f8aa24c4519b262b561bf2cd607f83e94f9241e8af1cfba9b";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           description = "A zipper-like comonad which works as a list, tracking a position";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointful" = callPackage
        ({ mkDerivation, base, containers, haskell-src-exts-simple, mtl
         , stdenv, syb, transformers
         }:
         mkDerivation {
           pname = "pointful";
           version = "1.0.9";
           sha256 = "6a1881236419751beb5b2e4e495bd9093ea2dec3f3cbd44e2a62aaabe53cacd6";
           revision = "1";
           editedCabalFile = "13lwn5zy44cbmax8ic1j8dhrzn7hxws5mcjrjyjwqcn2abmwc2js";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers haskell-src-exts-simple mtl syb transformers
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/23Skidoo/pointful";
           description = "Pointful refactoring tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pointless-fun" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "pointless-fun";
           version = "1.1.0.6";
           sha256 = "d05c59dac408a81766d676da2fb98025e75e0c3d0a07bdb458759d5c41e3b054";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Some common point-free combinators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "poll" = callPackage
        ({ mkDerivation, base, enumset, stdenv, utility-ht }:
         mkDerivation {
           pname = "poll";
           version = "0.0.0.1";
           sha256 = "b9fe87fe1b4d3ecb2ad3c1c290e231b0c93d498f0d318f67018a1dde97a0ed29";
           libraryHaskellDepends = [ base enumset utility-ht ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to poll.h";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "poly-arity" = callPackage
        ({ mkDerivation, base, constraints, stdenv }:
         mkDerivation {
           pname = "poly-arity";
           version = "0.1.0";
           sha256 = "cb10a644fe04de8e703942f4bd0d97c4df0f9e3915d33a494994e85830cfdd29";
           libraryHaskellDepends = [ base constraints ];
           doHaddock = false;
           doCheck = false;
           description = "Tools for working with functions of undetermined arity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "polynomials-bernstein" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "polynomials-bernstein";
           version = "1.1.2";
           sha256 = "6950f2e791533a40e7e41ff98679f680f27c7b66258b57871027bf0e5adc7062";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           description = "A solver for systems of polynomial equations in bernstein form";
           license = "GPL";
         }) {};
      "polyparse" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "polyparse";
           version = "1.12";
           sha256 = "f54c63584ace968381de4a06bd7328b6adc3e1a74fd336e18449e0dd7650be15";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~malcolm/polyparse/";
           description = "A variety of alternative parser combinator libraries";
           license = "LGPL";
         }) {};
      "pomaps" = callPackage
        ({ mkDerivation, base, containers, deepseq, ghc-prim, lattices
         , stdenv
         }:
         mkDerivation {
           pname = "pomaps";
           version = "0.0.0.3";
           sha256 = "d56fc99a77377590ce94630f4012dc7b26ffe29639a3764c9d3c35f31856aebf";
           libraryHaskellDepends = [
             base containers deepseq ghc-prim lattices
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sgraf812/pomaps#readme";
           description = "Maps and sets of partial orders";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pooled-io" = callPackage
        ({ mkDerivation, base, concurrent-split, containers, deepseq
         , stdenv, transformers, unsafe, utility-ht
         }:
         mkDerivation {
           pname = "pooled-io";
           version = "0.0.2.1";
           sha256 = "7d405a8876d55a9c077a304dd378854bc9e6e20f643c357c82bd3f38297ff9d0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base concurrent-split containers deepseq transformers unsafe
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/pooled-io/";
           description = "Run jobs on a limited number of threads and support data dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "posix-paths" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "posix-paths";
           version = "0.2.1.3";
           sha256 = "57d28850610f0b820c2dcc2dc4e843e733a05a6a8d8ebbdead5a7c9571cdabfc";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           description = "POSIX filepath/directory functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "post-mess-age" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "post-mess-age";
           version = "0.2.1.0";
           sha256 = "d0f69ab1cb130a9f8bb54cd1f3b0167184af885fedba89ff32fec8e54e95d64c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Send messages to a handle concurrently without getting them mixed";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-binary" = callPackage
        ({ mkDerivation, aeson, base, base-prelude, binary-parser
         , bytestring, bytestring-strict-builder, containers, loch-th
         , network-ip, placeholders, scientific, stdenv, text, time
         , transformers, unordered-containers, uuid, vector
         }:
         mkDerivation {
           pname = "postgresql-binary";
           version = "0.12.1";
           sha256 = "a20a9f6c102d09f220e5f08357b3cd0a06a5f8d22eff4dd7f9e6fc668e1165cd";
           libraryHaskellDepends = [
             aeson base base-prelude binary-parser bytestring
             bytestring-strict-builder containers loch-th network-ip
             placeholders scientific text time transformers unordered-containers
             uuid vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/postgresql-binary";
           description = "Encoders and decoders for the PostgreSQL's binary format";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-libpq" = callPackage
        ({ mkDerivation, base, bytestring, postgresql, stdenv, unix }:
         mkDerivation {
           pname = "postgresql-libpq";
           version = "0.9.4.0";
           sha256 = "02c50b3acf6869c58fa16b975e8391388241f563ba8f0832ccf191682a528a96";
           libraryHaskellDepends = [ base bytestring unix ];
           librarySystemDepends = [ postgresql ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lpsmith/postgresql-libpq";
           description = "low-level binding to libpq";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) postgresql;};
      "postgresql-query" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
         , containers, data-default, either, exceptions, file-embed
         , haskell-src-meta, hreader, hset, inflections, monad-control
         , monad-logger, mtl, postgresql-simple, resource-pool, semigroups
         , stdenv, template-haskell, text, th-lift, th-lift-instances, time
         , transformers, transformers-base, transformers-compat, type-fun
         }:
         mkDerivation {
           pname = "postgresql-query";
           version = "3.3.0";
           sha256 = "2867edd5b6823d248dd47334166af763c30b4ca8b7aec0e23c07b222f7f19646";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder bytestring containers
             data-default either exceptions file-embed haskell-src-meta hreader
             hset inflections monad-control monad-logger mtl postgresql-simple
             resource-pool semigroups template-haskell text th-lift
             th-lift-instances time transformers transformers-base
             transformers-compat type-fun
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/s9gf4ult/postgresql-query";
           description = "Sql interpolating quasiquote plus some kind of primitive ORM using it";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-schema" = callPackage
        ({ mkDerivation, base, basic-prelude, optparse-applicative
         , postgresql-simple, shelly, stdenv, text, time
         }:
         mkDerivation {
           pname = "postgresql-schema";
           version = "0.1.14";
           sha256 = "73decc70c9fc349d0162c253eb0e92a1add5964c28ef89abfe30e97f1184d572";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base basic-prelude postgresql-simple shelly text
           ];
           executableHaskellDepends = [
             base basic-prelude optparse-applicative shelly text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mfine/postgresql-schema";
           description = "PostgreSQL Schema Management";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring
         , bytestring-builder, case-insensitive, containers, hashable
         , postgresql-libpq, scientific, stdenv, template-haskell, text
         , time, transformers, uuid-types, vector
         }:
         mkDerivation {
           pname = "postgresql-simple";
           version = "0.5.3.0";
           sha256 = "1e0d7b646d60d79bcc827e3c0b2d3425dfb2ca7dbb57f16903b7089740230e41";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring bytestring-builder
             case-insensitive containers hashable postgresql-libpq scientific
             template-haskell text time transformers uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Mid-Level PostgreSQL client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple-migration" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, cryptohash
         , directory, postgresql-simple, stdenv, text, time
         }:
         mkDerivation {
           pname = "postgresql-simple-migration";
           version = "0.1.11.0";
           sha256 = "c00f850a4be88124d83e2bc4f2c5d873ab27aa9fcff6936d9994debf69ac759e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base64-bytestring bytestring cryptohash directory
             postgresql-simple time
           ];
           executableHaskellDepends = [
             base base64-bytestring bytestring cryptohash directory
             postgresql-simple text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ameingast/postgresql-simple-migration";
           description = "PostgreSQL Schema Migrations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple-queue" = callPackage
        ({ mkDerivation, aeson, base, bytestring, exceptions, monad-control
         , pg-transact, postgresql-simple, random, stdenv, stm, text, time
         , transformers
         }:
         mkDerivation {
           pname = "postgresql-simple-queue";
           version = "1.0.1";
           sha256 = "330b69c54e075104171758117e714b7da6c740dff8ca09fbe33bd3ab854e5a3f";
           libraryHaskellDepends = [
             aeson base bytestring exceptions monad-control pg-transact
             postgresql-simple random stm text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/postgresql-queue#readme";
           description = "A PostgreSQL backed queue";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "postgresql-simple-url" = callPackage
        ({ mkDerivation, base, network-uri, postgresql-simple, split
         , stdenv
         }:
         mkDerivation {
           pname = "postgresql-simple-url";
           version = "0.2.0.0";
           sha256 = "f7d85afe7dd047c63aa56cc67e8d28e1d18f33baff8ee447adc5bec427b6ea4c";
           revision = "1";
           editedCabalFile = "1z9qk3kplc5y93h3xbb9gialhdmnblwrmf2943wkj70qg975hajb";
           libraryHaskellDepends = [
             base network-uri postgresql-simple split
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/postgresql-simple-url";
           description = "Parse postgres:// url into ConnectInfo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-transactional" = callPackage
        ({ mkDerivation, base, monad-control, mtl, postgresql-simple
         , stdenv
         }:
         mkDerivation {
           pname = "postgresql-transactional";
           version = "1.1.1";
           sha256 = "f9302a1e134b31f2e9bd243c4fe36a25b3a9a9d6984288be1bc9c29882545ed3";
           libraryHaskellDepends = [
             base monad-control mtl postgresql-simple
           ];
           doHaddock = false;
           doCheck = false;
           description = "a transactional monad on top of postgresql-simple";
           license = stdenv.lib.licenses.mit;
         }) {};
      "postgresql-typed" = callPackage
        ({ mkDerivation, aeson, array, attoparsec, base, binary, bytestring
         , containers, cryptonite, haskell-src-meta, HDBC, memory, network
         , old-locale, postgresql-binary, scientific, stdenv
         , template-haskell, text, time, utf8-string, uuid
         }:
         mkDerivation {
           pname = "postgresql-typed";
           version = "0.5.2";
           sha256 = "cca083de0d1735dcd784ac9be0b27692162053a97076d96bdb5aa61460ed4973";
           libraryHaskellDepends = [
             aeson array attoparsec base binary bytestring containers cryptonite
             haskell-src-meta HDBC memory network old-locale postgresql-binary
             scientific template-haskell text time utf8-string uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dylex/postgresql-typed";
           description = "PostgreSQL interface with compile-time SQL type checking, optional HDBC backend";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pqueue" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "pqueue";
           version = "1.3.2.3";
           sha256 = "2a2b8b4ebc9acaf3c428be69b0f5548fab24eafdec33a8f6a9b47a4fea065418";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Reliable, persistent, fast priority queues";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pred-set" = callPackage
        ({ mkDerivation, base, hashable, hashtables, HSet, stdenv }:
         mkDerivation {
           pname = "pred-set";
           version = "0.0.1";
           sha256 = "cb22ec50f94cf76b6bc55fd66b91badfef657cbe1a6b6a59b691e48004c37726";
           libraryHaskellDepends = [ base hashable hashtables HSet ];
           doHaddock = false;
           doCheck = false;
           description = "Simple cached predicates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pred-trie" = callPackage
        ({ mkDerivation, base, composition-extra, containers, hashable
         , hashtables, mtl, poly-arity, pred-set, QuickCheck, semigroups
         , stdenv, tries, unordered-containers
         }:
         mkDerivation {
           pname = "pred-trie";
           version = "0.5.1.2";
           sha256 = "437b4f2578444adad0eeb519d23c339d4f5cb3532b12745bc1e94144135a0a34";
           libraryHaskellDepends = [
             base composition-extra containers hashable hashtables mtl
             poly-arity pred-set QuickCheck semigroups tries
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Predicative tries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prefix-units" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prefix-units";
           version = "0.2.0";
           sha256 = "050abdf827a5bd014a2628b195fbd59bb226020612c99e86a082ac1c8274e384";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iustin/prefix-units";
           description = "A basic library for SI/binary prefix units";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prelude-compat" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prelude-compat";
           version = "0.0.0.1";
           sha256 = "7bdc875d5b7265a87f06866dc00da69edcd4ae36ea9687c8c6e643833ffb40d4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Provide Prelude and Data.List with fixed content across GHC versions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prelude-extras" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prelude-extras";
           version = "0.4.0.3";
           sha256 = "09bb087f0870a353ec1e7e1a08017b9a766d430d956afb88ca000a6a876bf877";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/prelude-extras";
           description = "Higher order versions of Prelude classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prelude-safeenum" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "prelude-safeenum";
           version = "0.1.1.2";
           sha256 = "d4f9f195d31198fa1a5e1edfb50684971cc5dc2695bf38c1e7e2dabdce329727";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "A redefinition of the Prelude's Enum class in order to render it safe";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "preprocessor-tools" = callPackage
        ({ mkDerivation, base, mtl, parsec, stdenv, syb }:
         mkDerivation {
           pname = "preprocessor-tools";
           version = "1.0.1";
           sha256 = "c946c99fe8c9effba27946cd2c26173d2346340528d800a228796d68f8aeee59";
           libraryHaskellDepends = [ base mtl parsec syb ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
           description = "A framework for extending Haskell's syntax via quick-and-dirty preprocessors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "present" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "present";
           version = "4.1.0";
           sha256 = "bae8b334817a31572cc0e771f40e89b976e72b2b55d0955e4e198502dd8a427b";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/present";
           description = "Make presentations for data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-class" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "pretty-class";
           version = "1.0.1.1";
           sha256 = "558d1b506ff58afb0a5fb9d85ea93a94687cc1aabcc5a112a6ee4375a7b8aee1";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddssff/pretty-class";
           description = "Pretty printing class similar to Show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-hex" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "pretty-hex";
           version = "1.0";
           sha256 = "ff9a5f2023d6a4454f06cc395726b4cac3f9d0ea03759b14ccf7d62df79e9c7a";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "A library for hex dumps of ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-show" = callPackage
        ({ mkDerivation, array, base, filepath, ghc-prim, happy
         , haskell-lexer, pretty, stdenv
         }:
         mkDerivation {
           pname = "pretty-show";
           version = "1.6.16";
           sha256 = "dbee8476bf12ce5bd991d0a52c1340802e07bb706c68c1a7911a38db16ac0350";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array base filepath ghc-prim haskell-lexer pretty
           ];
           libraryToolDepends = [ happy ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.github.com/yav/pretty-show";
           description = "Tools for working with derived `Show` instances and generic inspection of values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pretty-simple" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, bytestring, containers
         , mtl, parsec, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "pretty-simple";
           version = "2.0.2.1";
           sha256 = "0ef9c85a431c3e42053ff2b98ab5397583fde3a23d2c113088a91aa2b2e9169a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base containers mtl parsec text transformers
           ];
           executableHaskellDepends = [ aeson base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/pretty-simple";
           description = "pretty printer for data types with a 'Show' instance";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pretty-types" = callPackage
        ({ mkDerivation, base, mtl, stdenv, tagged }:
         mkDerivation {
           pname = "pretty-types";
           version = "0.2.3.1";
           sha256 = "e56c49d1099aaeafe0b982ef9e60cb7194fd987c4b659a8d7bcde380d3b8784f";
           libraryHaskellDepends = [ base mtl tagged ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/pretty-types#readme";
           description = "A small pretty printing DSL for complex types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prettyclass" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "prettyclass";
           version = "1.0.0.0";
           sha256 = "e537446e7a346e5e0872ed8281db2bb0220c737f10757848c901da1399548986";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           description = "Pretty printing class similar to Show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prettyprinter" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, text }:
         mkDerivation {
           pname = "prettyprinter";
           version = "1.1.1";
           sha256 = "a0b32ee64d410436e6b411f7f1349a8763b9c26e144abc671b798da72f7feecf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base text ];
           executableHaskellDepends = [ base template-haskell text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "A modern, easy to use, well-documented, extensible prettyprinter";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-ansi-terminal" = callPackage
        ({ mkDerivation, ansi-terminal, base, prettyprinter, stdenv, text
         }:
         mkDerivation {
           pname = "prettyprinter-ansi-terminal";
           version = "1.1.1.2";
           sha256 = "d3e0b420df2904ae1ef23daf9bbb6de2c1fbbee056b779fc2cebe303cedf4641";
           libraryHaskellDepends = [ ansi-terminal base prettyprinter text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "ANSI terminal backend for the »prettyprinter« package";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-compat-annotated-wl-pprint" = callPackage
        ({ mkDerivation, base, prettyprinter, stdenv, text }:
         mkDerivation {
           pname = "prettyprinter-compat-annotated-wl-pprint";
           version = "1";
           sha256 = "2c259bac999d75b071a077f218a433c070783e9f40b67796e31a776fefbaf57e";
           revision = "3";
           editedCabalFile = "0vzi7id60pfj35xp61akzvfx9x6py45r5b8343i48ljpir91rvgw";
           libraryHaskellDepends = [ base prettyprinter text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "Prettyprinter compatibility module for previous users of the annotated-wl-pprint package";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-compat-ansi-wl-pprint" = callPackage
        ({ mkDerivation, base, prettyprinter, prettyprinter-ansi-terminal
         , stdenv, text
         }:
         mkDerivation {
           pname = "prettyprinter-compat-ansi-wl-pprint";
           version = "1.0.1";
           sha256 = "012d6bb711da25cc38260f4d00d26c24e52547a0ca53b0f6459fd06e5b93f73f";
           revision = "1";
           editedCabalFile = "0rzvap56ygygzs95091ipmcdc7n76sczc2dk88g4nr7zskb2nf1k";
           libraryHaskellDepends = [
             base prettyprinter prettyprinter-ansi-terminal text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "Drop-in compatibility package to migrate from »ansi-wl-pprint« to »prettyprinter«";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prettyprinter-compat-wl-pprint" = callPackage
        ({ mkDerivation, base, prettyprinter, stdenv, text }:
         mkDerivation {
           pname = "prettyprinter-compat-wl-pprint";
           version = "1.0.0.1";
           sha256 = "75221f5064e69eead5807a62894e8b5aa768f979c7f8fb75d0e1b2a15345529e";
           revision = "3";
           editedCabalFile = "0cb1i1hmr6wl8lacy3w822h273lapqhp537snxgbmhf9xvfckbpr";
           libraryHaskellDepends = [ base prettyprinter text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/quchen/prettyprinter";
           description = "Prettyprinter compatibility module for previous users of the wl-pprint package";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "prim-array" = callPackage
        ({ mkDerivation, base, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "prim-array";
           version = "0.2.1";
           sha256 = "4edd7820b4edf984833703a916c66ab1798de66c89d2f3f723088ab029f4e4d9";
           libraryHaskellDepends = [ base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/prim-array#readme";
           description = "Primitive byte array with type variable";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "primes" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "primes";
           version = "0.2.1.0";
           sha256 = "74d66558fb638ea4d31eae2fe1a294cb5a9d64491314305d74a11d93f277c65b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sebfisch/primes";
           description = "Efficient, purely functional generation of prime numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "primitive" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, transformers }:
         mkDerivation {
           pname = "primitive";
           version = "0.6.3.0";
           sha256 = "cddeff804e0f577f1be0179d5d145dfc170f8bfb66f663b9fba67104a45d9555";
           libraryHaskellDepends = [ base ghc-prim transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/primitive";
           description = "Primitive memory-related operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "printcess" = callPackage
        ({ mkDerivation, base, containers, lens, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "printcess";
           version = "0.1.0.3";
           sha256 = "5f6c220f9e0251785c8b250df3636c2d012d2a670677df46dad64ca4949eb52a";
           libraryHaskellDepends = [ base containers lens mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/m0rphism/printcess/";
           description = "Pretty printing with indentation, mixfix operators, and automatic line breaks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "probability" = callPackage
        ({ mkDerivation, base, containers, random, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "probability";
           version = "0.2.5.1";
           sha256 = "d3e67c8b32dda838c455ddd532a668bc464cfe1d49dc74f4502175614af7ed2d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers random transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Probabilistic_Functional_Programming";
           description = "Probabilistic Functional Programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "process" = callPackage
        ({ mkDerivation, base, deepseq, directory, filepath, stdenv, unix
         }:
         mkDerivation {
           pname = "process";
           version = "1.6.1.0";
           sha256 = "245fa25e49e9f616d2788c45e70263dc069db78656dd83ebfba807e870528a53";
           libraryHaskellDepends = [ base deepseq directory filepath unix ];
           doHaddock = false;
           doCheck = false;
           description = "Process libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "process-extras" = callPackage
        ({ mkDerivation, base, bytestring, data-default, deepseq
         , generic-deriving, ListLike, mtl, process, stdenv, text
         }:
         mkDerivation {
           pname = "process-extras";
           version = "0.7.4";
           sha256 = "293e75f849254ce0ce0d7fa659681917e07a557c602505a2f9e20777467e984e";
           libraryHaskellDepends = [
             base bytestring data-default deepseq generic-deriving ListLike mtl
             process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/seereason/process-extras";
           description = "Process extras";
           license = stdenv.lib.licenses.mit;
         }) {};
      "product-isomorphic" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, th-data-compat }:
         mkDerivation {
           pname = "product-isomorphic";
           version = "0.0.3.1";
           sha256 = "119c1b00171a5d3296e66ac4cd9510056e9eb26aed0e1840f3b1fb359a00a5ee";
           libraryHaskellDepends = [ base template-haskell th-data-compat ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/khibino/haskell-product-isomorphic";
           description = "Weaken applicative functor on products";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "product-profunctors" = callPackage
        ({ mkDerivation, base, contravariant, profunctors, stdenv, tagged
         , template-haskell
         }:
         mkDerivation {
           pname = "product-profunctors";
           version = "0.8.0.3";
           sha256 = "4fa4b1c6ba4f84305ef11e001695a7027f37d4a88bf34996ed3724233ac40cc9";
           libraryHaskellDepends = [
             base contravariant profunctors tagged template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tomjaguarpaw/product-profunctors";
           description = "product-profunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profiterole" = callPackage
        ({ mkDerivation, base, containers, directory, extra, filepath
         , ghc-prof, hashable, scientific, stdenv, text
         }:
         mkDerivation {
           pname = "profiterole";
           version = "0.1";
           sha256 = "c688d8c4f04e7a674832b39add365cee8eb99ae83643a849529e2ec56a46d2f1";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base containers directory extra filepath ghc-prof hashable
             scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/profiterole#readme";
           description = "Restructure GHC profile reports";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profiteur" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, filepath
         , ghc-prof, js-jquery, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "profiteur";
           version = "0.4.4.0";
           sha256 = "098e5b87b849ceef6627fd798751348e9dc54900b1bfdde981695093fdf2f622";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             aeson base bytestring containers filepath ghc-prof js-jquery
             scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/profiteur";
           description = "Treemap visualiser for GHC prof files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profunctor-extras" = callPackage
        ({ mkDerivation, base, profunctors, stdenv }:
         mkDerivation {
           pname = "profunctor-extras";
           version = "4.0";
           sha256 = "8a3c51ef41d686e39f87875dd48e72e5aa83956125bdf9922edf531c292a4482";
           libraryHaskellDepends = [ base profunctors ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/profunctor-extras/";
           description = "This package has been absorbed into profunctors 4.0";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "profunctors" = callPackage
        ({ mkDerivation, base, base-orphans, bifunctors, comonad
         , contravariant, distributive, semigroups, stdenv, tagged
         , transformers
         }:
         mkDerivation {
           pname = "profunctors";
           version = "5.2.2";
           sha256 = "e981e6a33ac99d38a947a749179bbea3c294ecf6bfde41660fe6d8d5a2e43768";
           libraryHaskellDepends = [
             base base-orphans bifunctors comonad contravariant distributive
             semigroups tagged transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/profunctors/";
           description = "Profunctors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "project-template" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, conduit
         , conduit-extra, containers, directory, filepath, mtl, resourcet
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "project-template";
           version = "0.2.0.1";
           sha256 = "eb52496fa7448f5fed445525c05327b31a45282fc1d0a772c7022a9809e7c9dc";
           libraryHaskellDepends = [
             base base64-bytestring bytestring conduit conduit-extra containers
             directory filepath mtl resourcet text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-ide";
           description = "Specify Haskell project templates and generate files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "projectroot" = callPackage
        ({ mkDerivation, base, directory, stdenv }:
         mkDerivation {
           pname = "projectroot";
           version = "0.2.0.1";
           sha256 = "53753086543ed199cf6f0d76852660f5d74c0874bfdee21c0f4e0d845b7e1ab8";
           libraryHaskellDepends = [ base directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-projectroot";
           description = "Bindings to the projectroot C logic";
           license = stdenv.lib.licenses.mit;
         }) {};
      "prometheus-client" = callPackage
        ({ mkDerivation, atomic-primops, base, bytestring, clock
         , containers, mtl, stdenv, stm, transformers, utf8-string
         }:
         mkDerivation {
           pname = "prometheus-client";
           version = "0.3.0";
           sha256 = "5f28c40b864d4773d019725e9f0dd7c06610c676250c8f1126e511d72348d05b";
           libraryHaskellDepends = [
             atomic-primops base bytestring clock containers mtl stm
             transformers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/prometheus-haskell";
           description = "Haskell client library for http://prometheus.io.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "prometheus-metrics-ghc" = callPackage
        ({ mkDerivation, base, prometheus-client, stdenv, utf8-string }:
         mkDerivation {
           pname = "prometheus-metrics-ghc";
           version = "0.3.0";
           sha256 = "dd26541686f69db972ee4e9d6d6d2d71a8525ce44af20e41842e0d77da7fec31";
           libraryHaskellDepends = [ base prometheus-client utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/prometheus-haskell";
           description = "Metrics exposing GHC runtime information for use with prometheus-client";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "promises" = callPackage
        ({ mkDerivation, base, primitive, stdenv }:
         mkDerivation {
           pname = "promises";
           version = "0.3";
           sha256 = "bf7c901915c122e7ab270f4c90cf02e83a703bf78f246948dc2452dcd294f260";
           libraryHaskellDepends = [ base primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/promises/";
           description = "Lazy demand-driven promises";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "prompt" = callPackage
        ({ mkDerivation, base, base-compat, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "prompt";
           version = "0.1.1.2";
           sha256 = "67b5711ef4c650747645b6d9de16a8bb04e04d1c2e4d39e3a8d4099873a151f2";
           libraryHaskellDepends = [
             base base-compat mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/prompt";
           description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "proto-lens" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , data-default-class, lens-family, parsec, pretty, stdenv, text
         , transformers, void
         }:
         mkDerivation {
           pname = "proto-lens";
           version = "0.2.2.0";
           sha256 = "92057ebfb5b2be5dc925b53ce96cf40abe5280bfdac833c0c567087e07fa7a9c";
           libraryHaskellDepends = [
             attoparsec base bytestring containers data-default-class
             lens-family parsec pretty text transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens";
           description = "A lens-based implementation of protocol buffers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-arbitrary" = callPackage
        ({ mkDerivation, base, bytestring, containers, lens-family
         , proto-lens, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "proto-lens-arbitrary";
           version = "0.1.1.1";
           sha256 = "95c28f6bc9be5b1057215e1ab99b06f69fddc28c24068cb576b1d5cdbb12b7c9";
           libraryHaskellDepends = [
             base bytestring containers lens-family proto-lens QuickCheck text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens";
           description = "Arbitrary instances for proto-lens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-combinators" = callPackage
        ({ mkDerivation, base, Cabal, data-default-class, lens-family
         , proto-lens, proto-lens-protoc, stdenv, transformers
         }:
         mkDerivation {
           pname = "proto-lens-combinators";
           version = "0.1.0.8";
           sha256 = "ffb7ac1486ca81629a66cf9ae3fa8bf16f7cd4c1e004b8f58433b41e5a30df2f";
           setupHaskellDepends = [ base Cabal proto-lens-protoc ];
           libraryHaskellDepends = [
             base data-default-class lens-family proto-lens proto-lens-protoc
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens";
           description = "Utilities functions to proto-lens";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-descriptors" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default-class
         , lens-family, lens-labels, proto-lens, stdenv, text
         }:
         mkDerivation {
           pname = "proto-lens-descriptors";
           version = "0.2.2.0";
           sha256 = "0b3f4eb9ddc081baef1f45831c17ab4b960ebac630af1f29bbd5521f46ca5bee";
           libraryHaskellDepends = [
             base bytestring containers data-default-class lens-family
             lens-labels proto-lens text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Protocol buffers for describing the definitions of messages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-optparse" = callPackage
        ({ mkDerivation, base, optparse-applicative, proto-lens, stdenv
         , text
         }:
         mkDerivation {
           pname = "proto-lens-optparse";
           version = "0.1.0.4";
           sha256 = "8b738a61d99282b2f8bbe483d01058cc6ca32b51c1774cf140a40cf6a578dcf3";
           libraryHaskellDepends = [
             base optparse-applicative proto-lens text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens";
           description = "Adapting proto-lens to optparse-applicative ReadMs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-protobuf-types" = callPackage
        ({ mkDerivation, base, Cabal, lens-family, proto-lens
         , proto-lens-protoc, stdenv, text
         }:
         mkDerivation {
           pname = "proto-lens-protobuf-types";
           version = "0.2.2.0";
           sha256 = "e23848be576ddef65691617419bc7cbed75a7405af31a68c4987e2ee393ed62c";
           setupHaskellDepends = [ base Cabal proto-lens-protoc ];
           libraryHaskellDepends = [
             base lens-family proto-lens proto-lens-protoc text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/google/proto-lens";
           description = "Basic protocol buffer message types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "proto-lens-protoc" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, containers
         , data-default-class, directory, filepath, haskell-src-exts
         , lens-family, lens-labels, process, proto-lens
         , proto-lens-descriptors, stdenv, text
         }:
         mkDerivation {
           pname = "proto-lens-protoc";
           version = "0.2.2.3";
           sha256 = "f88e71f56db3ecca87e5779124b3c2ad4d08a918c65759083fdf185a041c4923";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring Cabal containers data-default-class directory
             filepath haskell-src-exts lens-family lens-labels process
             proto-lens proto-lens-descriptors text
           ];
           executableHaskellDepends = [
             base bytestring containers data-default-class filepath
             haskell-src-exts lens-family proto-lens proto-lens-descriptors text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Protocol buffer compiler for the proto-lens library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protobuf" = callPackage
        ({ mkDerivation, base, base-orphans, bytestring, cereal
         , data-binary-ieee754, deepseq, mtl, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "protobuf";
           version = "0.2.1.1";
           sha256 = "cd659a085b670d204c0b4ddf0cb323e4f024c9d972cf183dc14154a44d5e722c";
           libraryHaskellDepends = [
             base base-orphans bytestring cereal data-binary-ieee754 deepseq mtl
             text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alphaHeavy/protobuf";
           description = "Google Protocol Buffers via GHC.Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protobuf-simple" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers
         , data-binary-ieee754, directory, filepath, mtl, parsec, split
         , stdenv, text
         }:
         mkDerivation {
           pname = "protobuf-simple";
           version = "0.1.0.5";
           sha256 = "6b46b427f14eacb814dfce0a678e7cb7742d1583d14f9540ca00fb0bc0e916f1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers data-binary-ieee754 mtl text
           ];
           executableHaskellDepends = [
             base containers directory filepath mtl parsec split text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sru-systems/protobuf-simple";
           description = "Simple Protocol Buffers library (proto2)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "protocol-buffers" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, containers
         , directory, filepath, mtl, parsec, stdenv, syb, utf8-string
         }:
         mkDerivation {
           pname = "protocol-buffers";
           version = "2.4.7";
           sha256 = "09e6b3d128af82f9f5f3b0b3c8243c962b660297358ea231db2c571c4cca62b5";
           libraryHaskellDepends = [
             array base binary bytestring containers directory filepath mtl
             parsec syb utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Parse Google Protocol Buffer specifications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protocol-buffers-descriptor" = callPackage
        ({ mkDerivation, base, bytestring, containers, protocol-buffers
         , stdenv
         }:
         mkDerivation {
           pname = "protocol-buffers-descriptor";
           version = "2.4.7";
           sha256 = "00d313399ceb420e7c4cdab04e214708180f0219d0ac7814f1850cf1f85b21cc";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers protocol-buffers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k-bx/protocol-buffers";
           description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "protolude" = callPackage
        ({ mkDerivation, array, async, base, bytestring, containers
         , deepseq, ghc-prim, hashable, mtl, mtl-compat, safe, stdenv, stm
         , text, transformers, transformers-compat
         }:
         mkDerivation {
           pname = "protolude";
           version = "0.2.1";
           sha256 = "bdbf0e47f8cb8501df93eadfeaaa3a914cebbdd598e6c8b52ee7136c7a574be4";
           revision = "2";
           editedCabalFile = "03w9051jdbldbid9iyvibdhxdr73cawrvp9qdsc0czxix5ggfr75";
           libraryHaskellDepends = [
             array async base bytestring containers deepseq ghc-prim hashable
             mtl mtl-compat safe stm text transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdiehl/protolude";
           description = "A small prelude";
           license = stdenv.lib.licenses.mit;
         }) {};
      "proxied" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "proxied";
           version = "0.3";
           sha256 = "534d4d425f2834b39689e2af301bd5ff81d1619e65664a5efd797a0c88dbeb26";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/proxied";
           description = "Make functions consume Proxy instead of undefined";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "psql-helpers" = callPackage
        ({ mkDerivation, base, postgresql-simple, stdenv }:
         mkDerivation {
           pname = "psql-helpers";
           version = "0.1.0.0";
           sha256 = "f13ca642072477d3ab0246c514e3fc78e0c5cb419345240fbad994ed2a3219f4";
           libraryHaskellDepends = [ base postgresql-simple ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/psql-helpers#readme";
           description = "A small collection of helper functions to generate postgresql queries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "psqueues" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "psqueues";
           version = "0.2.5.0";
           sha256 = "163fe7220b157a535c278ef3b92deddf8abc3ae3a3fcb6f2c4e58959a9cbc2bb";
           libraryHaskellDepends = [ base deepseq ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           description = "Pure priority search queues";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pthread" = callPackage
        ({ mkDerivation, base, generic-deriving, stdenv }:
         mkDerivation {
           pname = "pthread";
           version = "0.2.0";
           sha256 = "b6ee8d48c2eccf84acef31c6065a74ae5844e2fc68e4f55a05b44eddae032388";
           libraryHaskellDepends = [ base generic-deriving ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tweag/pthread";
           description = "Bindings for the pthread library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "publicsuffix" = callPackage
        ({ mkDerivation, base, filepath, stdenv, template-haskell }:
         mkDerivation {
           pname = "publicsuffix";
           version = "0.20170802";
           sha256 = "1c9420657fcca5281792266bc72a10de6295eb571a202b8561514175dc764c28";
           libraryHaskellDepends = [ base filepath template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wereHamster/publicsuffix-haskell/";
           description = "The publicsuffix list exposed as proper Haskell types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pure-io" = callPackage
        ({ mkDerivation, base, containers, mtl, safe, stdenv }:
         mkDerivation {
           pname = "pure-io";
           version = "0.2.1";
           sha256 = "a9ef0f324ce29fecdcdb11f2ce0088bcf282951727d983824e05f12e519bfb5f";
           libraryHaskellDepends = [ base containers mtl safe ];
           doHaddock = false;
           doCheck = false;
           description = "Pure IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pureMD5" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, crypto-api
         , stdenv, tagged
         }:
         mkDerivation {
           pname = "pureMD5";
           version = "2.1.3";
           sha256 = "bef3358a5e3a45b649860a5792f052e2f927c0492a7056cf64425116c8a7b17d";
           libraryHaskellDepends = [
             base binary bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "purescript-bridge" = callPackage
        ({ mkDerivation, base, containers, directory, filepath
         , generic-deriving, lens, mtl, stdenv, text, transformers
         }:
         mkDerivation {
           pname = "purescript-bridge";
           version = "0.11.1.2";
           sha256 = "9c00caff498652addaf123d4d719f7488ece06a9279a348b6a182825482f15c6";
           libraryHaskellDepends = [
             base containers directory filepath generic-deriving lens mtl text
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Generate PureScript data types from Haskell data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "pusher-http-haskell" = callPackage
        ({ mkDerivation, aeson, base, base16-bytestring, bytestring
         , cryptonite, hashable, http-client, http-types, memory, stdenv
         , text, time, transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "pusher-http-haskell";
           version = "1.5.1.2";
           sha256 = "d65a463504a3cc5545e9db4b680394d39e185a6de1e3558be2499d12a2052bcb";
           libraryHaskellDepends = [
             aeson base base16-bytestring bytestring cryptonite hashable
             http-client http-types memory text time transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pusher-community/pusher-http-haskell";
           description = "Haskell client library for the Pusher HTTP API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pvss" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptonite
         , cryptonite-openssl, deepseq, foundation, hourglass, integer-gmp
         , memory, stdenv, vector
         }:
         mkDerivation {
           pname = "pvss";
           version = "0.2.0";
           sha256 = "e440145003cac581a43941e82b213011cb0730c524948e9aaec9d3376622028c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring cryptonite cryptonite-openssl deepseq
             foundation integer-gmp memory
           ];
           executableHaskellDepends = [
             base cryptonite deepseq hourglass memory vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/input-output-hk/pvss-haskell#readme";
           description = "Public Verifiable Secret Sharing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "pwstore-fast" = callPackage
        ({ mkDerivation, base, base64-bytestring, binary, byteable
         , bytestring, cryptohash, random, stdenv
         }:
         mkDerivation {
           pname = "pwstore-fast";
           version = "2.4.4";
           sha256 = "7219af66b6f762d9dd5376b3b25393d4d6626e390e9d9c9f87f6e3f13ea7fbb2";
           libraryHaskellDepends = [
             base base64-bytestring binary byteable bytestring cryptohash random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/PeterScott/pwstore";
           description = "Secure password storage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "qchas" = callPackage
        ({ mkDerivation, base, hmatrix, random, stdenv }:
         mkDerivation {
           pname = "qchas";
           version = "1.0.1.0";
           sha256 = "55b556e745b178ff7d0bfd124c7e0721079875f3c50441dbecf6f3cbf2851b8a";
           libraryHaskellDepends = [ base hmatrix random ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ardeleanasm/qchas#readme";
           description = "A library for implementing Quantum Algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "qm-interpolated-string" = callPackage
        ({ mkDerivation, base, bytestring, haskell-src-meta, stdenv
         , template-haskell, text
         }:
         mkDerivation {
           pname = "qm-interpolated-string";
           version = "0.2.1.0";
           sha256 = "c32e56608e4a707cb16d2cd3d409e6c3e56b89818e63540f63106cf833a41f27";
           libraryHaskellDepends = [
             base bytestring haskell-src-meta template-haskell text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/unclechu/haskell-qm-interpolated-string";
           description = "Implementation of interpolated multiline strings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "quickbench" = callPackage
        ({ mkDerivation, base, containers, directory, docopt, pretty-show
         , process, safe, split, stdenv, tabular, time
         }:
         mkDerivation {
           pname = "quickbench";
           version = "1.0";
           sha256 = "8bfe252e50a683346e753db312e9542f8d43256947ab215fcfd24af03787b926";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory docopt pretty-show process safe split
             tabular time
           ];
           executableHaskellDepends = [ base process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/simonmichael/quickbench#readme";
           description = "quick & easy benchmarking of command-line programs";
           license = "GPL";
         }) {};
      "quickcheck-arbitrary-adt" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-arbitrary-adt";
           version = "0.2.0.0";
           sha256 = "d9998dbfa2785f29164c0bdc345b2ffaed630dd5bfb1bdbaa3b0e13e0724c0db";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/plow-technologies/quickcheck-arbitrary-adt#readme";
           description = "Generic typeclasses for generating arbitrary ADTs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-assertions" = callPackage
        ({ mkDerivation, base, ieee754, pretty-show, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-assertions";
           version = "0.3.0";
           sha256 = "9b0328a788dcac0824a7d7496ab403eef04170551255c9e58fb6e2e319a9cacf";
           libraryHaskellDepends = [ base ieee754 pretty-show QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
           description = "HUnit like assertions for QuickCheck";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "quickcheck-classes" = callPackage
        ({ mkDerivation, aeson, base, containers, prim-array, primitive
         , QuickCheck, stdenv, transformers
         }:
         mkDerivation {
           pname = "quickcheck-classes";
           version = "0.3.3";
           sha256 = "24b03c0e067cb64bf9d307f5b98ea59b3cfb4cda8d87c0dcb6c75b53d8bcf7b3";
           libraryHaskellDepends = [
             aeson base containers prim-array primitive QuickCheck transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/quickcheck-classes#readme";
           description = "QuickCheck common typeclasses";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-combinators" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, unfoldable-restricted }:
         mkDerivation {
           pname = "quickcheck-combinators";
           version = "0.0.2";
           sha256 = "7fcd7b320a3d6d66b1db3cc8e63c21bc2b2b84329ffc490113ea7df61a711b65";
           libraryHaskellDepends = [ base QuickCheck unfoldable-restricted ];
           doHaddock = false;
           doCheck = false;
           description = "Simple type-level combinators for augmenting QuickCheck instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-instances" = callPackage
        ({ mkDerivation, array, base, base-compat, bytestring
         , case-insensitive, containers, hashable, old-time, QuickCheck
         , scientific, stdenv, tagged, text, time, transformers
         , transformers-compat, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "quickcheck-instances";
           version = "0.3.16.1";
           sha256 = "7fb107e2bbaa58403aaf96a6fc84672623cf94c52b314fd69e70fb948f5e6507";
           libraryHaskellDepends = [
             array base base-compat bytestring case-insensitive containers
             hashable old-time QuickCheck scientific tagged text time
             transformers transformers-compat unordered-containers uuid-types
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/qc-instances";
           description = "Common quickcheck instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-io" = callPackage
        ({ mkDerivation, base, HUnit, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-io";
           version = "0.2.0";
           sha256 = "fb779119d79fe08ff4d502fb6869a70c9a8d5fd8ae0959f605c3c937efd96422";
           libraryHaskellDepends = [ base HUnit QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/quickcheck-io#readme";
           description = "Use HUnit assertions as QuickCheck properties";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-properties" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "quickcheck-properties";
           version = "0.1";
           sha256 = "3c89ed3fb03199853455806aac3852da8fe2973ae1c78320b901aacb030f2643";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "QuickCheck properties for standard type classes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-simple" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-simple";
           version = "0.1.0.2";
           sha256 = "8ad6926fcd45d2fab8e8a55c20a6e6037cce8a66a225ad74b2990922f5f1335c";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           description = "Test properties and default-mains for QuickCheck";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-special" = callPackage
        ({ mkDerivation, base, QuickCheck, special-values, stdenv }:
         mkDerivation {
           pname = "quickcheck-special";
           version = "0.1.0.6";
           sha256 = "9573898509bd30613bdf59338a5754251081420c59fb658727973e2e837f1cb6";
           revision = "1";
           editedCabalFile = "1whwmij115vw0qwkzlkc4z4yhj7iwwqjhf5aaxn5np0gh2gzihb3";
           libraryHaskellDepends = [ base QuickCheck special-values ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/quickcheck-special#readme";
           description = "Edge cases and special values for QuickCheck Arbitrary instances";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-state-machine" = callPackage
        ({ mkDerivation, ansi-wl-pprint, async, base, containers
         , lifted-async, lifted-base, monad-control, mtl, QuickCheck
         , quickcheck-with-counterexamples, random, stdenv, stm
         , template-haskell, th-abstraction
         }:
         mkDerivation {
           pname = "quickcheck-state-machine";
           version = "0.3.1";
           sha256 = "44cad255e3b633bf5662494d86e261f8f98bd7be5382b1850503dd632ad03990";
           libraryHaskellDepends = [
             ansi-wl-pprint async base containers lifted-async lifted-base
             monad-control mtl QuickCheck quickcheck-with-counterexamples random
             stm template-haskell th-abstraction
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/advancedtelematic/quickcheck-state-machine#readme";
           description = "Test monadic programs using state machine based models";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "quickcheck-text" = callPackage
        ({ mkDerivation, base, binary, bytestring, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "quickcheck-text";
           version = "0.1.2.1";
           sha256 = "4442fdb8ae6cd469c04957d34fee46039c9dc0ddce23ce6050babe6826d0ab09";
           libraryHaskellDepends = [ base binary bytestring QuickCheck text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/olorin/quickcheck-text";
           description = "Alternative arbitrary instance for Text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "quickcheck-unicode" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv }:
         mkDerivation {
           pname = "quickcheck-unicode";
           version = "1.0.1.0";
           sha256 = "132005ea7edff35e95139c36232a70698cd0f4f4d79dfaa4e66fbcf557d08368";
           libraryHaskellDepends = [ base QuickCheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/quickcheck-unicode";
           description = "Generator and shrink functions for testing Unicode-related software";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "quickcheck-with-counterexamples" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, template-haskell }:
         mkDerivation {
           pname = "quickcheck-with-counterexamples";
           version = "1.0";
           sha256 = "0775755444042169f949474f8931bbf2a88b5cba475d190aacad9af0213fde5e";
           revision = "3";
           editedCabalFile = "0wz7iwpgxx977y46xis4imrhds1i341fv6mpwydr1mzhzazifvz8";
           libraryHaskellDepends = [ base QuickCheck template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/nick8325/quickcheck-with-counterexamples";
           description = "Get counterexamples from QuickCheck as Haskell values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "raaz" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, optparse-applicative
         , stdenv, vector
         }:
         mkDerivation {
           pname = "raaz";
           version = "0.2.0";
           sha256 = "9ef0560e7c6b47edd54b5999c3bdacd05d65ac3046b508baaca141c03db98120";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring deepseq vector ];
           executableHaskellDepends = [ base optparse-applicative ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/raaz-crypto/raaz";
           description = "The raaz cryptographic library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rainbow" = callPackage
        ({ mkDerivation, base, bytestring, lens-simple, process, stdenv
         , text
         }:
         mkDerivation {
           pname = "rainbow";
           version = "0.28.0.4";
           sha256 = "829296f88be520a9a6c6de715ffa2bb926cecc0135b23f602cc4377bac4e8831";
           libraryHaskellDepends = [
             base bytestring lens-simple process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/massysett/rainbow";
           description = "Print text to terminal with colors and effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rainbox" = callPackage
        ({ mkDerivation, base, bytestring, containers, lens-simple, rainbow
         , stdenv, text
         }:
         mkDerivation {
           pname = "rainbox";
           version = "0.18.0.10";
           sha256 = "d692e95565b4ce4454536493ae4d6ba256eecf5e88e0495d156008ea76ba1b05";
           libraryHaskellDepends = [
             base bytestring containers lens-simple rainbow text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/rainbox";
           description = "Two-dimensional box pretty printing, with colors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rakuten" = callPackage
        ({ mkDerivation, aeson, base, bytestring, connection, constraints
         , data-default-class, extensible, http-api-data, http-client
         , http-client-tls, http-types, lens, req, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "rakuten";
           version = "0.1.0.5";
           sha256 = "e14e9e20b9d49dc84a86f1e66dae910eff2ccad27b9502376e795f40ebdc2785";
           libraryHaskellDepends = [
             aeson base bytestring connection constraints data-default-class
             extensible http-api-data http-client http-client-tls http-types
             lens req text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matsubara0507/rakuten#readme";
           description = "The Rakuten API in Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ramus" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ramus";
           version = "0.1.2";
           sha256 = "dcddddc416e79c401604565b7297a945f814edeed056fb3b897eda5f4f0b794e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NickSeagull/ramus#readme";
           description = "Elm signal system for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "random" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "random";
           version = "1.1";
           sha256 = "b718a41057e25a3a71df693ab0fe2263d492e759679b3c2fea6ea33b171d3a5a";
           revision = "1";
           editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           description = "random number library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "random-fu" = callPackage
        ({ mkDerivation, base, erf, log-domain, math-functions, monad-loops
         , mtl, random-shuffle, random-source, rvar, stdenv, syb
         , template-haskell, transformers, vector
         }:
         mkDerivation {
           pname = "random-fu";
           version = "0.2.7.0";
           sha256 = "b6b3a4b3ede34991d26e0447f90b14fa66af61f376fa0aed2e0899fdc879b0c4";
           libraryHaskellDepends = [
             base erf log-domain math-functions monad-loops mtl random-shuffle
             random-source rvar syb template-haskell transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Random number generation";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "random-shuffle" = callPackage
        ({ mkDerivation, base, MonadRandom, random, stdenv }:
         mkDerivation {
           pname = "random-shuffle";
           version = "0.0.4";
           sha256 = "52704411f040fd0bf2361dad162e35dc13caa6535b2e4908d3513c00a95d0615";
           libraryHaskellDepends = [ base MonadRandom random ];
           doHaddock = false;
           doCheck = false;
           description = "Random shuffle implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "random-source" = callPackage
        ({ mkDerivation, base, flexible-defaults, mersenne-random-pure64
         , mtl, mwc-random, random, stateref, stdenv, syb, template-haskell
         , th-extras
         }:
         mkDerivation {
           pname = "random-source";
           version = "0.3.0.6";
           sha256 = "f3dfec3aef0614ff856abbba018f3bc3446295157895ea09a015737d67205b73";
           libraryHaskellDepends = [
             base flexible-defaults mersenne-random-pure64 mtl mwc-random random
             stateref syb template-haskell th-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Generic basis for random number generators";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "random-tree" = callPackage
        ({ mkDerivation, base, containers, lens, MonadRandom, mtl, random
         , random-shuffle, stdenv, transformers, tree-fun
         }:
         mkDerivation {
           pname = "random-tree";
           version = "0.6.0.5";
           sha256 = "2b604e7ce184e2c877fac63dbac1df3060cdc023427b8eb5844106a826591cc2";
           libraryHaskellDepends = [
             base containers lens MonadRandom mtl random random-shuffle
             transformers tree-fun
           ];
           doHaddock = false;
           doCheck = false;
           description = "Create random trees";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "range" = callPackage
        ({ mkDerivation, base, free, parsec, stdenv }:
         mkDerivation {
           pname = "range";
           version = "0.1.2.0";
           sha256 = "4b997ffc63dfc93716938b086ceefffd9df14684c511e0fef4656e82d58b0b09";
           libraryHaskellDepends = [ base free parsec ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/robertmassaioli/range";
           description = "This has a bunch of code for specifying and managing ranges in your code";
           license = stdenv.lib.licenses.mit;
         }) {};
      "range-set-list" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "range-set-list";
           version = "0.1.2.0";
           sha256 = "3b749cf447dcf1f81f263c9c43dd61ee533b4fb25e6e4ca3bdbe2321702bab67";
           revision = "1";
           editedCabalFile = "061xbyarcjr4bcb08a5xyzqiyvagn9729p6hk5kzayzlkscx16j2";
           libraryHaskellDepends = [
             base containers deepseq hashable semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/range-set-list#readme";
           description = "Memory efficient sets with ranges of elements";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rank-product" = callPackage
        ({ mkDerivation, base, random-fu, stdenv }:
         mkDerivation {
           pname = "rank-product";
           version = "0.2.0.1";
           sha256 = "79ffdf09bd6eb37109ff80e965c94def0031bd8c0d8b1cdb9918d903e91fc0b6";
           libraryHaskellDepends = [ base random-fu ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/GregorySchwartz/rank-product#readme";
           description = "Find the rank product of a data set";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "rank1dynamic" = callPackage
        ({ mkDerivation, base, binary, stdenv }:
         mkDerivation {
           pname = "rank1dynamic";
           version = "0.4.0";
           sha256 = "3c424bfe52b7d4766fd66ea34c204cf920b146455711d8d10d580ca6c175ab1d";
           libraryHaskellDepends = [ base binary ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-distributed.github.com";
           description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rasterific-svg" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, directory
         , filepath, FontyFruity, JuicyPixels, lens, linear, mtl
         , optparse-applicative, primitive, Rasterific, scientific, stdenv
         , svg-tree, text, transformers, vector
         }:
         mkDerivation {
           pname = "rasterific-svg";
           version = "0.3.3";
           sha256 = "4add8e22fda66dc2c3b6cdcd07800aa016a79f5310c7dfba46e907e387c30d4b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base binary bytestring containers directory filepath FontyFruity
             JuicyPixels lens linear mtl primitive Rasterific scientific
             svg-tree text transformers vector
           ];
           executableHaskellDepends = [
             base bytestring directory filepath FontyFruity JuicyPixels
             optparse-applicative Rasterific svg-tree
           ];
           doHaddock = false;
           doCheck = false;
           description = "SVG renderer based on Rasterific";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ratel" = callPackage
        ({ mkDerivation, aeson, base, bytestring, case-insensitive
         , containers, http-client, http-client-tls, http-types, stdenv
         , text, uuid
         }:
         mkDerivation {
           pname = "ratel";
           version = "0.3.10";
           sha256 = "167d3c8e0d74ce41357ce756113f1d4488b4333f83c30df229dda19cb3789881";
           libraryHaskellDepends = [
             aeson base bytestring case-insensitive containers http-client
             http-client-tls http-types text uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/ratel#readme";
           description = "Notify Honeybadger about exceptions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ratel-wai" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , http-client, ratel, stdenv, wai
         }:
         mkDerivation {
           pname = "ratel-wai";
           version = "0.3.2";
           sha256 = "ea721c46a5833be2f4ee7cc16ad313bff29c0a3223e51605002ca6c077ec68b8";
           libraryHaskellDepends = [
             base bytestring case-insensitive containers http-client ratel wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/ratel-wai#readme";
           description = "Notify Honeybadger about exceptions via a WAI middleware";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ratio-int" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "ratio-int";
           version = "0.1.2";
           sha256 = "efe86052c5979261d9aa6861c6297205ee0b60e1b36de191d20485e823c9781a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RaphaelJ/ratio-int";
           description = "Fast specialisation of Data.Ratio for Int.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rattletrap" = callPackage
        ({ mkDerivation, aeson, base, bimap, binary, binary-bits
         , bytestring, containers, data-binary-ieee754, http-client
         , http-client-tls, stdenv, template-haskell, text, vector
         }:
         mkDerivation {
           pname = "rattletrap";
           version = "3.1.2";
           sha256 = "48d14db74d73e11100a6c0696fd4d5cd4a5cd585f67154c7c3265504272d0e2c";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bimap binary binary-bits bytestring containers
             data-binary-ieee754 http-client http-client-tls template-haskell
             text vector
           ];
           executableHaskellDepends = [
             aeson base bimap binary binary-bits bytestring containers
             data-binary-ieee754 http-client http-client-tls template-haskell
             text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/rattletrap#readme";
           description = "Parse and generate Rocket League replays";
           license = stdenv.lib.licenses.mit;
         }) {};
      "raw-strings-qq" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "raw-strings-qq";
           version = "1.1";
           sha256 = "2e011ec26aeaa53ab43c30b7d9b5b0f661f24b4ebef8884c12c571353c0fbed3";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/23Skidoo/raw-strings-qq";
           description = "Raw string literals for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rawfilepath" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "rawfilepath";
           version = "0.2.4";
           sha256 = "cbb01b49f7ff0271a8c6e4124f93515e6cdabf9581278594e19dd916b6bd5bd3";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xtendo-org/rawfilepath#readme";
           description = "Use RawFilePath instead of FilePath";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "rawstring-qm" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, template-haskell, text
         }:
         mkDerivation {
           pname = "rawstring-qm";
           version = "0.2.3.0";
           sha256 = "11a177bb7d685fb6a98390630196bd544e877b7460648e61a2905c21a71268fe";
           libraryHaskellDepends = [ base bytestring template-haskell text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tolysz/rawstring-qm";
           description = "Simple raw string quotation and dictionary interpolation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rdf" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, deepseq, dlist, fgl
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "rdf";
           version = "0.1.0.2";
           sha256 = "889d93b6f54c791e62cd93ec404bb171d7e3bdbba0a085a4c7f4e4d2f3b51f6f";
           libraryHaskellDepends = [
             attoparsec base bytestring deepseq dlist fgl text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/traviswhitaker/rdf";
           description = "Representation and Incremental Processing of RDF Data";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rdtsc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "rdtsc";
           version = "1.3.0.1";
           sha256 = "54c9a925f68d6c60b405e92f9d3bd9ebfc25cce0c72d2313a6c7e1b7cc2ed950";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mgrabmueller/rdtsc";
           description = "Binding for the rdtsc machine instruction";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "re2" = callPackage
        ({ mkDerivation, base, bytestring, re2, stdenv, vector }:
         mkDerivation {
           pname = "re2";
           version = "0.2";
           sha256 = "6906d80ed6834162f74ceb056230f7b1d1cd3423f05f67c65107b1493c8fd561";
           libraryHaskellDepends = [ base bytestring vector ];
           librarySystemDepends = [ re2 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rblaze/haskell-re2#readme";
           description = "Bindings to the re2 regular expression library";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) re2;};
      "reactive-banana" = callPackage
        ({ mkDerivation, base, containers, hashable, pqueue, stdenv
         , transformers, unordered-containers, vault
         }:
         mkDerivation {
           pname = "reactive-banana";
           version = "1.1.0.1";
           sha256 = "ac0e96ff640d9d2453fd35336a278159263b5e8b40c5ce27a221bdcd46fe70c3";
           libraryHaskellDepends = [
             base containers hashable pqueue transformers unordered-containers
             vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Reactive-banana";
           description = "Library for functional reactive programming (FRP)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "read-editor" = callPackage
        ({ mkDerivation, base, directory, process, stdenv }:
         mkDerivation {
           pname = "read-editor";
           version = "0.1.0.2";
           sha256 = "ed8aeca86823fbaf11a0a543fd106c9c3abe65216ea974ed56050cbebf777085";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yamadapc/haskell-read-editor";
           description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "read-env-var" = callPackage
        ({ mkDerivation, base, exceptions, stdenv, transformers }:
         mkDerivation {
           pname = "read-env-var";
           version = "1.0.0.0";
           sha256 = "03f3c8176fc08ce838ae772f13991258e2b496712cc71edb1a00336e7ce0b75c";
           libraryHaskellDepends = [ base exceptions transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/read-env-var#readme";
           description = "Functions for safely reading environment variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "readable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "readable";
           version = "0.3.1";
           sha256 = "703037ad2cca4d6d42ba23e2758d1911cd82e3e922c4078076c273231e4b43c9";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mightybyte/readable";
           description = "Reading from Text and ByteString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rebase" = callPackage
        ({ mkDerivation, base, base-prelude, bifunctors, bytestring
         , containers, contravariant, contravariant-extras, deepseq, dlist
         , either, fail, hashable, mtl, profunctors, scientific
         , semigroupoids, semigroups, stdenv, stm, text, time, transformers
         , unordered-containers, uuid, vector, void
         }:
         mkDerivation {
           pname = "rebase";
           version = "1.1.1";
           sha256 = "5e8e15b84ab8f4c606c95f0133b10dbee9218c8f53d2b8ae00ca568860bb0e66";
           libraryHaskellDepends = [
             base base-prelude bifunctors bytestring containers contravariant
             contravariant-extras deepseq dlist either fail hashable mtl
             profunctors scientific semigroupoids semigroups stm text time
             transformers unordered-containers uuid vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/rebase";
           description = "A more progressive alternative to the \"base\" package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "recursion-schemes" = callPackage
        ({ mkDerivation, base, base-orphans, bifunctors, comonad, free
         , semigroups, stdenv, template-haskell, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "recursion-schemes";
           version = "5.0.2";
           sha256 = "3a4965bbcc10eb1d1d8dfd51771d7f20c164a1de5711333b1d5cd268a7f6aad2";
           revision = "1";
           editedCabalFile = "1mmq9dx0dgws4dbmij76snj91dv6czigs1kchi0vy01hplsb0wks";
           libraryHaskellDepends = [
             base base-orphans bifunctors comonad free semigroups
             template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/recursion-schemes/";
           description = "Generalized bananas, lenses and barbed wire";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "redis-io" = callPackage
        ({ mkDerivation, attoparsec, auto-update, base, bytestring
         , containers, exceptions, iproute, monad-control, mtl, network
         , operational, redis-resp, resource-pool, semigroups, stdenv, stm
         , time, tinylog, transformers, transformers-base
         }:
         mkDerivation {
           pname = "redis-io";
           version = "0.7.0";
           sha256 = "1f68cb184f29fd4dc27b7034ee6dd2c53a952fbda1084ba25afd83952518e619";
           libraryHaskellDepends = [
             attoparsec auto-update base bytestring containers exceptions
             iproute monad-control mtl network operational redis-resp
             resource-pool semigroups stm time tinylog transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/redis-io/";
           description = "Yet another redis client";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "redis-resp" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, containers, dlist, double-conversion
         , operational, semigroups, split, stdenv, transformers
         }:
         mkDerivation {
           pname = "redis-resp";
           version = "0.4.0";
           sha256 = "8bc0d592843e05c37a3fda22255daca74f1c17c4e4a7951531accd45cd2a9232";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion containers dlist
             double-conversion operational semigroups split transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/redis-resp/";
           description = "REdis Serialization Protocol (RESP) implementation";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "reducers" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, fingertree
         , hashable, semigroupoids, semigroups, stdenv, text, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "reducers";
           version = "3.12.2";
           sha256 = "c5d03608b7217e8690a884014dfe03dc4c882ac1a481c5e85c76af4f7a516abd";
           libraryHaskellDepends = [
             array base bytestring containers fingertree hashable semigroupoids
             semigroups text transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/reducers/";
           description = "Semigroups, specialized containers and a general map/reduce framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ref-fd" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers }:
         mkDerivation {
           pname = "ref-fd";
           version = "0.4.0.1";
           sha256 = "e416f1afba149e3af9cbe1011381d0b89609c240d812127bd03b8a922a5f6037";
           libraryHaskellDepends = [ base stm transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A type class for monads with references using functional dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ref-tf" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers }:
         mkDerivation {
           pname = "ref-tf";
           version = "0.4.0.1";
           sha256 = "fcb522c5dca437fbd0c0132c56664a71c48fe2c06b150fcfa77d3bad5ce4be0e";
           libraryHaskellDepends = [ base stm transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A type class for monads with references using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "refact" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "refact";
           version = "0.3.0.2";
           sha256 = "0ad029727797c8ca5d179c7abf1bfc135d86a7d72cf93785ee12ad243aeb1f6c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Specify refactorings to perform with apply-refact";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "references" = callPackage
        ({ mkDerivation, array, base, containers, directory, either
         , filepath, instance-control, mtl, stdenv, template-haskell, text
         , transformers, uniplate
         }:
         mkDerivation {
           pname = "references";
           version = "0.3.3.1";
           sha256 = "bc07606d36639148374e7a29a67ac489c7a0ed02655311b5d633a144a746c10e";
           libraryHaskellDepends = [
             array base containers directory either filepath instance-control
             mtl template-haskell text transformers uniplate
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lazac/references";
           description = "Selectors for reading and updating data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "refined" = callPackage
        ({ mkDerivation, base, base-prelude, stdenv, template-haskell }:
         mkDerivation {
           pname = "refined";
           version = "0.1.2.1";
           sha256 = "156e08b286b3c433d40ca39160b7f1ecec6072c138ca48f6d90d3d0cb808e777";
           libraryHaskellDepends = [ base base-prelude template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/refined";
           description = "Refinement types with static and runtime checking";
           license = stdenv.lib.licenses.mit;
         }) {};
      "reflection" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "reflection";
           version = "2.1.3";
           sha256 = "88f81923abd7211e51de7071cd5800b30784e374c193de8cdd7b1c201f8de405";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/reflection";
           description = "Reifies arbitrary terms into types that can be reflected back into terms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, text }:
         mkDerivation {
           pname = "reform";
           version = "0.2.7.1";
           sha256 = "59be2189906788ee4ecf82559aea2e7159a7a0c716c129cccce97e9d89819230";
           libraryHaskellDepends = [ base containers mtl text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "reform is a type-safe HTML form generation and validation library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, reform, stdenv
         , text
         }:
         mkDerivation {
           pname = "reform-blaze";
           version = "0.2.4.3";
           sha256 = "11bcf127356bf5840a0947ea1058cbf1e08096ab0fc872aa5c1ec7d88e40b2e4";
           libraryHaskellDepends = [
             base blaze-html blaze-markup reform text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Add support for using blaze-html with Reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-hamlet" = callPackage
        ({ mkDerivation, base, blaze-markup, reform, shakespeare, stdenv
         , text
         }:
         mkDerivation {
           pname = "reform-hamlet";
           version = "0.0.5.3";
           sha256 = "512729389fc3eec118a8079486eb2319e1e8eaecdeecafdd6b36205373ce3466";
           libraryHaskellDepends = [
             base blaze-markup reform shakespeare text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Add support for using Hamlet with Reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-happstack" = callPackage
        ({ mkDerivation, base, bytestring, happstack-server, mtl, random
         , reform, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "reform-happstack";
           version = "0.2.5.2";
           sha256 = "260f00d9a71a9081b33aac883249d721db993134216cca55acf01de20128dc34";
           libraryHaskellDepends = [
             base bytestring happstack-server mtl random reform text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Happstack support for reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reform-hsp" = callPackage
        ({ mkDerivation, base, hsp, hsx2hs, reform, stdenv, text }:
         mkDerivation {
           pname = "reform-hsp";
           version = "0.2.7.1";
           sha256 = "48edd2a1322bacfb2d8574222c194cfa4ffdce135f4dff851d9d5e6fe3008d20";
           libraryHaskellDepends = [ base hsp hsx2hs reform text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/";
           description = "Add support for using HSP with Reform";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-applicative" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "regex-applicative";
           version = "0.3.3";
           sha256 = "6659a2cc1c8137d77ef57f75027723b075d473354d935233d98b1ae1b03c3be6";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/regex-applicative";
           description = "Regex-based parsing with applicative interface";
           license = stdenv.lib.licenses.mit;
         }) {};
      "regex-applicative-text" = callPackage
        ({ mkDerivation, base, regex-applicative, stdenv, text }:
         mkDerivation {
           pname = "regex-applicative-text";
           version = "0.1.0.1";
           sha256 = "b093051f80865d257da2ded8ad1b566927b01b3d2f86d41da2ffee4a26c4e2d9";
           revision = "1";
           editedCabalFile = "1w8aqqq6j1lhwpi2d0qj9h32cia3nr9l43a0mspqawb1nsmpjyic";
           libraryHaskellDepends = [ base regex-applicative text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/regex-applicative-text#readme";
           description = "regex-applicative on text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-base" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, mtl, stdenv
         }:
         mkDerivation {
           pname = "regex-base";
           version = "0.93.2";
           sha256 = "20dc5713a16f3d5e2e6d056b4beb9cfdc4368cd09fd56f47414c847705243278";
           libraryHaskellDepends = [ array base bytestring containers mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-compat" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-posix, stdenv }:
         mkDerivation {
           pname = "regex-compat";
           version = "0.95.1";
           sha256 = "d57cb1a5a4d66753b18eaa37a1621246f660472243b001894f970037548d953b";
           libraryHaskellDepends = [ array base regex-base regex-posix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-compat-tdfa" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-tdfa, stdenv }:
         mkDerivation {
           pname = "regex-compat-tdfa";
           version = "0.95.1.4";
           sha256 = "4fa38ed24ae390eeffe6eef04bbe632d7ecd02b9123729e976e7420f927520dd";
           libraryHaskellDepends = [ array base regex-base regex-tdfa ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
           description = "Unicode Support version of Text.Regex, using regex-tdfa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-pcre" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, pcre
         , regex-base, stdenv
         }:
         mkDerivation {
           pname = "regex-pcre";
           version = "0.94.4";
           sha256 = "8eaa7d4ac6c0a4ba35aa59fc3f6b8f8e252bb25a47e136791446a74752e226c0";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           librarySystemDepends = [ pcre ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/regex-pcre";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) pcre;};
      "regex-pcre-builtin" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, regex-base
         , stdenv
         }:
         mkDerivation {
           pname = "regex-pcre-builtin";
           version = "0.94.4.8.8.35";
           sha256 = "0bd1b695de953ba4b6e6e0de007021c346cb2a6c8e09356fbcd34f8a79d2ea78";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/regex-pcre";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-pcre-text" = callPackage
        ({ mkDerivation, array, base, bytestring, regex-base
         , regex-pcre-builtin, regex-tdfa-text, stdenv, text
         }:
         mkDerivation {
           pname = "regex-pcre-text";
           version = "0.94.0.1";
           sha256 = "17991ed7b00da5cfb2efa0cefac16f9e0452fc794fe538d26d5cc802f0d8e9bd";
           libraryHaskellDepends = [
             array base bytestring regex-base regex-pcre-builtin regex-tdfa-text
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/regex-pcre-text";
           description = "Text-based PCRE API for regex-base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-posix" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, regex-base
         , stdenv
         }:
         mkDerivation {
           pname = "regex-posix";
           version = "0.95.2";
           sha256 = "56019921cd4a4c9682b81ec614236fea816ba8ed8785a1640cd66d8b24fc703e";
           libraryHaskellDepends = [
             array base bytestring containers regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://sourceforge.net/projects/lazy-regex";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-tdfa" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
         , parsec, regex-base, stdenv
         }:
         mkDerivation {
           pname = "regex-tdfa";
           version = "1.2.2";
           sha256 = "cb12d675be7b31ed8086d8d022023d03eb553e55dbee6e1b7a4154933d471d39";
           revision = "1";
           editedCabalFile = "0m2i94gm6a1m6sn3mj47jbnmjp5ksiqmdn6v4pdr7xsv5a15gfwn";
           libraryHaskellDepends = [
             array base bytestring containers ghc-prim mtl parsec regex-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ChrisKuklewicz/regex-tdfa";
           description = "Replaces/Enhances Text.Regex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "regex-tdfa-text" = callPackage
        ({ mkDerivation, array, base, regex-base, regex-tdfa, stdenv, text
         }:
         mkDerivation {
           pname = "regex-tdfa-text";
           version = "1.0.0.3";
           sha256 = "38d77a0d225c306c52c6d4eed12d11d05a4bc4194d547cb9a7a9b6f5a8792001";
           libraryHaskellDepends = [ array base regex-base regex-tdfa text ];
           doHaddock = false;
           doCheck = false;
           description = "Text interface for regex-tdfa";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reinterpret-cast" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "reinterpret-cast";
           version = "0.1.0";
           sha256 = "5654622c904b42c62f2473c64624715dbd458ea00209ed9ab39396eabc1353e4";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nh2/reinterpret-cast";
           description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
           license = stdenv.lib.licenses.mit;
         }) {};
      "relational-query" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, dlist
         , names-th, persistable-record, product-isomorphic, sql-words
         , stdenv, template-haskell, text, th-reify-compat, time
         , time-locale-compat, transformers
         }:
         mkDerivation {
           pname = "relational-query";
           version = "0.11.0.0";
           sha256 = "5fd5cd6f9fadef2995ffc8c5e4dd76d7b31125900dcef892c6bcf2a758f61a6c";
           libraryHaskellDepends = [
             array base bytestring containers dlist names-th persistable-record
             product-isomorphic sql-words template-haskell text th-reify-compat
             time time-locale-compat transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Typeful, Modular, Relational, algebraic query engine";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-query-HDBC" = callPackage
        ({ mkDerivation, base, containers, convertible, dlist, HDBC
         , HDBC-session, names-th, persistable-record, product-isomorphic
         , relational-query, relational-schemas, sql-words, stdenv
         , template-haskell, th-data-compat, transformers
         }:
         mkDerivation {
           pname = "relational-query-HDBC";
           version = "0.6.6.1";
           sha256 = "4fecb13ef0150f2f067f8b3df7cbe6a65528f0ce8035f7a2b04ac4b4a75c44a9";
           libraryHaskellDepends = [
             base containers convertible dlist HDBC HDBC-session names-th
             persistable-record product-isomorphic relational-query
             relational-schemas sql-words template-haskell th-data-compat
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "HDBC instance of relational-query and typed query interface for HDBC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-record" = callPackage
        ({ mkDerivation, base, persistable-record
         , persistable-types-HDBC-pg, product-isomorphic, relational-query
         , relational-query-HDBC, stdenv
         }:
         mkDerivation {
           pname = "relational-record";
           version = "0.2.1.2";
           sha256 = "5ead1f9de164cbf674ec268fdd613dcfbbc87f5069e53007837ea5db93320d19";
           libraryHaskellDepends = [
             base persistable-record persistable-types-HDBC-pg
             product-isomorphic relational-query relational-query-HDBC
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Meta package of Relational Record";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "relational-schemas" = callPackage
        ({ mkDerivation, base, bytestring, containers, relational-query
         , stdenv, template-haskell, time
         }:
         mkDerivation {
           pname = "relational-schemas";
           version = "0.1.6.1";
           sha256 = "01ed4c898224e163d88b59ab66ebf50c710d6a4b968f8f3d6da2b6eca05278d2";
           libraryHaskellDepends = [
             base bytestring containers relational-query template-haskell time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "RDBMSs' schema templates for relational-query";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rematch" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "rematch";
           version = "0.2.0.0";
           sha256 = "f996de29c0e7a47484a16113129166f7df12567d3ca3ea24c5c97e98a8225c51";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A simple api for matchers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "renderable" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, transformers
         }:
         mkDerivation {
           pname = "renderable";
           version = "0.2.0.1";
           sha256 = "d1ea5a8d2da8913700c326c3e757c8c4c8a87f1353125bbc9ea372729e04b6c5";
           libraryHaskellDepends = [ base containers hashable transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/schell/renderable";
           description = "An API for managing renderable resources";
           license = stdenv.lib.licenses.mit;
         }) {};
      "repa" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, QuickCheck, stdenv
         , template-haskell, vector
         }:
         mkDerivation {
           pname = "repa";
           version = "3.4.1.3";
           sha256 = "3e32d7b2964994d6edd3eabcce38f0c08ff474b3d4acb0d9b3f3b75c76e67a70";
           libraryHaskellDepends = [
             base bytestring ghc-prim QuickCheck template-haskell vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "High performance, regular, shape polymorphic parallel arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repa-algorithms" = callPackage
        ({ mkDerivation, base, repa, stdenv, vector }:
         mkDerivation {
           pname = "repa-algorithms";
           version = "3.4.1.2";
           sha256 = "07b597e071759e3708bbd8487ce0111949ed3e74b5187f486be19e4764c19886";
           libraryHaskellDepends = [ base repa vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "Algorithms using the Repa array library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repa-io" = callPackage
        ({ mkDerivation, base, binary, bmp, bytestring, old-time, repa
         , stdenv, vector
         }:
         mkDerivation {
           pname = "repa-io";
           version = "3.4.1.1";
           sha256 = "b5dbca96a988fb8bd918288ea1cfcf215fe46062e45001b209603b63a39ba9da";
           revision = "1";
           editedCabalFile = "0z0wbaz7svqdzjpmx7d9wwfjl31w0i29pcc1v11r26f9avw3g9qi";
           libraryHaskellDepends = [
             base binary bmp bytestring old-time repa vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://repa.ouroborus.net";
           description = "Read and write Repa arrays in various formats";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "repline" = callPackage
        ({ mkDerivation, base, containers, haskeline, mtl, process, stdenv
         }:
         mkDerivation {
           pname = "repline";
           version = "0.1.7.0";
           sha256 = "503a035d8a380ac21c532e48c0f47006ff1c20ed9683f4906fdb304b4b9e55de";
           libraryHaskellDepends = [ base containers haskeline mtl process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sdiehl/repline";
           description = "Haskeline wrapper for GHCi-like REPL interfaces";
           license = stdenv.lib.licenses.mit;
         }) {};
      "req" = callPackage
        ({ mkDerivation, aeson, authenticate-oauth, base, blaze-builder
         , bytestring, case-insensitive, connection, data-default-class
         , http-api-data, http-client, http-client-tls, http-types
         , monad-control, mtl, retry, stdenv, text, time, transformers
         , transformers-base
         }:
         mkDerivation {
           pname = "req";
           version = "1.0.0";
           sha256 = "0701964278654bc8d2c96f550da1a11de78d42e4f85ce53ba5260c7e83695ee8";
           revision = "1";
           editedCabalFile = "18bs1mcr454dgczzv8ahxps5lhba8wgls34cccg5aqdfhglprphk";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson authenticate-oauth base blaze-builder bytestring
             case-insensitive connection data-default-class http-api-data
             http-client http-client-tls http-types monad-control mtl retry text
             time transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/req";
           description = "Easy-to-use, type-safe, expandable, high-level HTTP library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "req-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit, http-client, req
         , resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "req-conduit";
           version = "1.0.0";
           sha256 = "1da764e4bdc5454aef3d79cff2d72c9fa393a8d049ab14c3ba2be77325d96ba4";
           revision = "1";
           editedCabalFile = "14m20b2i0kygminqw35y3wi1na7bfpkyg1yc03a48qy6rrdqgnc2";
           libraryHaskellDepends = [
             base bytestring conduit http-client req resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/req-conduit";
           description = "Conduit helpers for the req HTTP client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "reroute" = callPackage
        ({ mkDerivation, base, deepseq, hashable, http-api-data, hvect, mtl
         , stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "reroute";
           version = "0.4.1.0";
           sha256 = "34a83f0d0240610b3e6867f02859d77a8255783e2225389bf025865d5d4c2508";
           libraryHaskellDepends = [
             base deepseq hashable http-api-data hvect mtl text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/agrafix/Spock";
           description = "abstract implementation of typed and untyped web routing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "resource-pool" = callPackage
        ({ mkDerivation, base, hashable, monad-control, stdenv, stm, time
         , transformers, transformers-base, vector
         }:
         mkDerivation {
           pname = "resource-pool";
           version = "0.2.3.2";
           sha256 = "8627eea2bea8824af2723646e74e2af0c73f583dd0c496c9fd242cd9d242bc12";
           libraryHaskellDepends = [
             base hashable monad-control stm time transformers transformers-base
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bos/pool";
           description = "A high-performance striped resource pooling implementation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "resourcet" = callPackage
        ({ mkDerivation, base, containers, exceptions, mtl, primitive
         , stdenv, transformers, unliftio-core
         }:
         mkDerivation {
           pname = "resourcet";
           version = "1.2.0";
           sha256 = "095dc971a170f5cd2880e303ffb04a0feabeba29a1d776238b9691ece666fa26";
           libraryHaskellDepends = [
             base containers exceptions mtl primitive transformers unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/conduit";
           description = "Deterministic allocation and freeing of scarce resources";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-client" = callPackage
        ({ mkDerivation, aeson-utils, base, bytestring, case-insensitive
         , data-default, exceptions, http-client, http-conduit, http-types
         , hxt, hxt-pickle-utils, monad-control, mtl, resourcet, rest-types
         , stdenv, tostring, transformers, transformers-base
         , transformers-compat, uri-encode, utf8-string
         }:
         mkDerivation {
           pname = "rest-client";
           version = "0.5.1.1";
           sha256 = "5da423c9f2c87b9b9797ea331c5f248408e5f863d460dfd94b3408249729f663";
           revision = "2";
           editedCabalFile = "0issr73rbnyaqfgx4c0wsy9sq948sqrkima2cr2sb1lkf8n4ihr8";
           libraryHaskellDepends = [
             aeson-utils base bytestring case-insensitive data-default
             exceptions http-client http-conduit http-types hxt hxt-pickle-utils
             monad-control mtl resourcet rest-types tostring transformers
             transformers-base transformers-compat uri-encode utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Utility library for use in generated API client libraries";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-core" = callPackage
        ({ mkDerivation, aeson, aeson-utils, base, base-compat, bytestring
         , case-insensitive, errors, fclabels, hxt, hxt-pickle-utils
         , json-schema, mtl, mtl-compat, multipart, random, rest-stringmap
         , rest-types, safe, split, stdenv, text, transformers
         , transformers-compat, unordered-containers, uri-encode
         , utf8-string, uuid
         }:
         mkDerivation {
           pname = "rest-core";
           version = "0.39";
           sha256 = "d760d0547fc1a99cd949dde08b7945fb93af24f4e55d45ecf410c352d5005404";
           revision = "8";
           editedCabalFile = "12ia5ic2cas82h3dksdy4hzmcw42f13wqwqw0ilbn50q85j2k4pf";
           libraryHaskellDepends = [
             aeson aeson-utils base base-compat bytestring case-insensitive
             errors fclabels hxt hxt-pickle-utils json-schema mtl mtl-compat
             multipart random rest-stringmap rest-types safe split text
             transformers transformers-compat unordered-containers uri-encode
             utf8-string uuid
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest API library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-gen" = callPackage
        ({ mkDerivation, aeson, base, base-compat, blaze-html, Cabal
         , code-builder, directory, fclabels, filepath, hashable
         , haskell-src-exts, HStringTemplate, hxt, json-schema, pretty
         , process, rest-core, safe, scientific, semigroups, split, stdenv
         , text, uniplate, unordered-containers, vector
         }:
         mkDerivation {
           pname = "rest-gen";
           version = "0.20.0.1";
           sha256 = "61f462755edb12996f49a1a7723cdc7e01e0a5c2e3c8f01805c6bbdcceaf4439";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base-compat blaze-html Cabal code-builder directory
             fclabels filepath hashable haskell-src-exts HStringTemplate hxt
             json-schema pretty process rest-core safe scientific semigroups
             split text uniplate unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Documentation and client generation from rest definition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-happstack" = callPackage
        ({ mkDerivation, base, containers, happstack-server, mtl, rest-core
         , rest-gen, stdenv, utf8-string
         }:
         mkDerivation {
           pname = "rest-happstack";
           version = "0.3.1.1";
           sha256 = "794f06eb2c96b995397e21f4578bd7094a20334f43883e97af81dbe60b394ff6";
           revision = "2";
           editedCabalFile = "0yr1407fds0h73ijw6iivqq15ybiz3n6s555vxgaay4j4k4pkax9";
           libraryHaskellDepends = [
             base containers happstack-server mtl rest-core rest-gen utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest driver for Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-snap" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , rest-core, safe, snap-core, stdenv, unordered-containers
         , uri-encode, utf8-string
         }:
         mkDerivation {
           pname = "rest-snap";
           version = "0.3.0.0";
           sha256 = "ce4584bc1e9473e524782c6adf8771af1ddc1d2f6e865f7b06c883f46aee68e8";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive rest-core safe
             snap-core unordered-containers uri-encode utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest driver for Snap";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-stringmap" = callPackage
        ({ mkDerivation, aeson, base, containers, hashable, hxt
         , json-schema, stdenv, tostring, unordered-containers
         }:
         mkDerivation {
           pname = "rest-stringmap";
           version = "0.2.0.6";
           sha256 = "66e5a32f04cfcf9826296b3c053c22caa745fd890ccc6ea9199c34529507524a";
           revision = "7";
           editedCabalFile = "14jqqpxxs7vkrf6syycrg2ymh79gl83z13kq261alw5gy8yjnszv";
           libraryHaskellDepends = [
             aeson base containers hashable hxt json-schema tostring
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Maps with stringy keys that can be transcoded to JSON and XML";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-types" = callPackage
        ({ mkDerivation, aeson, base, base-compat, case-insensitive
         , generic-aeson, generic-xmlpickler, hxt, json-schema
         , rest-stringmap, stdenv, text, uuid
         }:
         mkDerivation {
           pname = "rest-types";
           version = "1.14.1.1";
           sha256 = "b7e08e65bbae20bd891f0905c9c785184182172094673ab13e66499e4fe3969a";
           revision = "4";
           editedCabalFile = "04s5xcjycbw9fqhmpx0kmy5wmkpgcs84vam68w428rb7y64099mb";
           libraryHaskellDepends = [
             aeson base base-compat case-insensitive generic-aeson
             generic-xmlpickler hxt json-schema rest-stringmap text uuid
           ];
           doHaddock = false;
           doCheck = false;
           description = "Silk Rest Framework Types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rest-wai" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, case-insensitive
         , containers, http-types, mime-types, mtl, rest-core, stdenv, text
         , unordered-containers, wai
         }:
         mkDerivation {
           pname = "rest-wai";
           version = "0.2.0.1";
           sha256 = "38205eb7b85a4e052f11db099dd65e9d952b8533d1a35001f0b1958b443c0d02";
           revision = "2";
           editedCabalFile = "1n3sd3vszi0ifw098jf2yan8xcnrxckr22jssl61k0vn74573hw3";
           libraryHaskellDepends = [
             base base-compat bytestring case-insensitive containers http-types
             mime-types mtl rest-core text unordered-containers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "Rest driver for WAI applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "result" = callPackage
        ({ mkDerivation, base, bifunctors, keys, mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "result";
           version = "0.2.6.0";
           sha256 = "f526d97cdab851f24e215e346f6d54d3a504a6ac5d9264f580c4f72d606178c5";
           libraryHaskellDepends = [ base bifunctors keys mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/srijs/haskell-result";
           description = "Encode success or at least one error";
           license = stdenv.lib.licenses.mit;
         }) {};
      "rethinkdb-client-driver" = callPackage
        ({ mkDerivation, aeson, base, binary, bytestring, containers
         , hashable, mtl, network, old-locale, scientific, stdenv, stm
         , template-haskell, text, time, unordered-containers, vector
         }:
         mkDerivation {
           pname = "rethinkdb-client-driver";
           version = "0.0.25";
           sha256 = "0f9dc156cd61b866b847b1b1a60a2345b4b5556b8b75a9e8499b0514e7f98996";
           libraryHaskellDepends = [
             aeson base binary bytestring containers hashable mtl network
             old-locale scientific stm template-haskell text time
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
           description = "Client driver for RethinkDB";
           license = stdenv.lib.licenses.mit;
         }) {};
      "retry" = callPackage
        ({ mkDerivation, base, data-default-class, exceptions, ghc-prim
         , random, stdenv, transformers
         }:
         mkDerivation {
           pname = "retry";
           version = "0.7.6.1";
           sha256 = "02c9c3495be50e83904189f2916ae10c43192489dc424051153737b5dd725314";
           libraryHaskellDepends = [
             base data-default-class exceptions ghc-prim random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/Soostone/retry";
           description = "Retry combinators for monadic actions that may fail";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rev-state" = callPackage
        ({ mkDerivation, base, mtl, stdenv }:
         mkDerivation {
           pname = "rev-state";
           version = "0.1.2";
           sha256 = "ee070e39d7f7d673593e2f356ab317bc2fdd0d8a283f8316c0e5b5adbdf0f919";
           revision = "2";
           editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
           libraryHaskellDepends = [ base mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/rev-state#readme";
           description = "Reverse State monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rfc5051" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "rfc5051";
           version = "0.1.0.3";
           sha256 = "e38dab28a5625774be60545c8c99e647b79bbc0ac0bc9c65fe6b2ebef160642b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring containers ];
           executableHaskellDepends = [ base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           description = "Simple unicode collation as per RFC5051";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "riak" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, bifunctors, binary
         , blaze-builder, bytestring, containers, data-default-class
         , deepseq, enclosed-exceptions, exceptions, hashable
         , mersenne-random-pure64, monad-control, network, protocol-buffers
         , pureMD5, random, resource-pool, riak-protobuf, semigroups, stdenv
         , stm, text, time, transformers, transformers-base
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "riak";
           version = "1.1.2.4";
           sha256 = "54c5fe2b2d6a2deaec764610c55547b34d7548629a6392c4f0df702b93b8c7c8";
           libraryHaskellDepends = [
             aeson async attoparsec base bifunctors binary blaze-builder
             bytestring containers data-default-class deepseq
             enclosed-exceptions exceptions hashable mersenne-random-pure64
             monad-control network protocol-buffers pureMD5 random resource-pool
             riak-protobuf semigroups stm text time transformers
             transformers-base unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/riak-haskell-client/riak-haskell-client";
           description = "A Haskell client for the Riak decentralized data store";
           license = "unknown";
         }) {};
      "riak-protobuf" = callPackage
        ({ mkDerivation, array, base, parsec, protocol-buffers
         , protocol-buffers-descriptor, stdenv
         }:
         mkDerivation {
           pname = "riak-protobuf";
           version = "0.23.0.0";
           sha256 = "5dcbd06bdb66a1e43881a62a44d92e47d3f16f9ea1b4d53e4a92622faecdca33";
           libraryHaskellDepends = [
             array base parsec protocol-buffers protocol-buffers-descriptor
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/riak-haskell-client/riak-haskell-client";
           description = "Haskell types for the Riak protocol buffer API";
           license = "unknown";
         }) {};
      "rng-utils" = callPackage
        ({ mkDerivation, base, bytestring, random, stdenv }:
         mkDerivation {
           pname = "rng-utils";
           version = "0.3.0";
           sha256 = "0886acb1e0ae6c6ad5f594a9d4d57ea5af69c566ccc5763d0b7c690963e946ba";
           libraryHaskellDepends = [ base bytestring random ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/soostone/rng-utils";
           description = "RNG within an IORef for convenient concurrent use";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rocksdb-haskell-ng" = callPackage
        ({ mkDerivation, base, bytestring, directory, fetchgit, rocksdb
         , stdenv
         }:
         mkDerivation {
           pname = "rocksdb-haskell-ng";
           version = "0.0.0";
           src = fetchgit {
             url = "https://github.com/input-output-hk/rocksdb-haskell-ng.git";
             sha256 = "02jvri8ik8jgrxwa6qmh3xcwqvm4s27iv3sxpjpny79nlhlxvfzp";
             rev = "49f501a082d745f3b880677220a29cafaa181452";
           };
           libraryHaskellDepends = [ base bytestring directory ];
           librarySystemDepends = [ rocksdb ];
           doHaddock = false;
           doCheck = false;
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) rocksdb;};
      "roles" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "roles";
           version = "0.2.0.0";
           sha256 = "e29d2f31b21b2d8ce3507e17211e70a61d2e434a8e19f80b2e4898bdabac34a0";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/matt-noonan/roles/";
           description = "Composable class-based roles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rose-trees" = callPackage
        ({ mkDerivation, base, containers, deepseq, hashable, mtl
         , QuickCheck, quickcheck-instances, semigroupoids, semigroups, sets
         , stdenv, unordered-containers, witherable
         }:
         mkDerivation {
           pname = "rose-trees";
           version = "0.0.4.4";
           sha256 = "2313133d29286e1e4f1f0b1d6ec0fba852bc5537d5b062c1b8fe0a6aa79b72cd";
           libraryHaskellDepends = [
             base containers deepseq hashable mtl QuickCheck
             quickcheck-instances semigroupoids semigroups sets
             unordered-containers witherable
           ];
           doHaddock = false;
           doCheck = false;
           description = "A collection of rose tree structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rot13" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "rot13";
           version = "0.2.0.1";
           sha256 = "e026d418cc6a1ce83ba11e811387e62ad49ffb1cbd6ae7f58b72fd179fccd4dc";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kvanberendonck/codec-rot13";
           description = "Fast ROT13 cipher for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "runmemo" = callPackage
        ({ mkDerivation, stdenv }:
         mkDerivation {
           pname = "runmemo";
           version = "1.0.0.1";
           sha256 = "ba5ef3177f8fe5f443808e44f62d03b23ac19bbef7f708e40532031a3505d689";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/runmemo";
           description = "A simple memoization helper library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "rvar" = callPackage
        ({ mkDerivation, base, MonadPrompt, mtl, random-source, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "rvar";
           version = "0.2.0.3";
           sha256 = "d78aaf2ffdba182dda95d1692fec7abc5d77fa371120618a397b5675438c6bc0";
           libraryHaskellDepends = [
             base MonadPrompt mtl random-source transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/random-fu";
           description = "Random Variables";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "s3-signer" = callPackage
        ({ mkDerivation, base, base64-bytestring, cryptohash, http-types
         , stdenv, time, utf8-string
         }:
         mkDerivation {
           pname = "s3-signer";
           version = "0.3.0.0";
           sha256 = "89e957f81211a417c425214d3d7eafb0f15f695ffe0002f4198f2e34b43bc494";
           libraryHaskellDepends = [
             base base64-bytestring cryptohash http-types time utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/s3-signer";
           description = "Pre-signed Amazon S3 URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "safe";
           version = "0.3.15";
           sha256 = "a35e4ae609aabd568da7e7d220ab529c34040b71ae50df1ee353896445a66a2d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/safe#readme";
           description = "Library of safe (exception free) functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safe-exceptions" = callPackage
        ({ mkDerivation, base, deepseq, exceptions, stdenv, transformers }:
         mkDerivation {
           pname = "safe-exceptions";
           version = "0.1.6.0";
           sha256 = "71d47ce1049465b02d89231f2931e7a1d22b6960e85fca5281162e979cf08d1c";
           libraryHaskellDepends = [ base deepseq exceptions transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/safe-exceptions#readme";
           description = "Safe, consistent, and easy exception handling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "safe-exceptions-checked" = callPackage
        ({ mkDerivation, base, deepseq, safe-exceptions, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "safe-exceptions-checked";
           version = "0.1.0";
           sha256 = "d807552b828de308d80805f65ee41f3e25571506b10e6b28b0b81de4aec0ca3f";
           revision = "3";
           editedCabalFile = "004id0k46j545zvkldfcv5qjgxzl35brm9h6fq72y43b9hl2y55f";
           libraryHaskellDepends = [
             base deepseq safe-exceptions transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/safe-exceptions-checked#readme";
           description = "Safe, checked exceptions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "safecopy" = callPackage
        ({ mkDerivation, array, base, bytestring, cereal, containers
         , old-time, semigroups, stdenv, template-haskell, text, time
         , vector
         }:
         mkDerivation {
           pname = "safecopy";
           version = "0.9.3.3";
           sha256 = "cb2272648a2e1e924b3f4f7f73c475ab70c661c8967246acae1b47f0fa57ba9e";
           libraryHaskellDepends = [
             array base bytestring cereal containers old-time semigroups
             template-haskell text time vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acid-state/safecopy";
           description = "Binary serialization with version control";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "safeio" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , directory, exceptions, filepath, resourcet, stdenv, unix
         }:
         mkDerivation {
           pname = "safeio";
           version = "0.0.5.0";
           sha256 = "d5799b6a6cd36e8f5442d991ed3a2076b10e0e3131269a2090b8c9c5c001e311";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators directory exceptions
             filepath resourcet unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/luispedro/safeio#readme";
           description = "Write output to disk atomically";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sample-frame" = callPackage
        ({ mkDerivation, base, QuickCheck, stdenv, storable-record }:
         mkDerivation {
           pname = "sample-frame";
           version = "0.0.3";
           sha256 = "5baf301a4f7b2d52e6b9b9c06b10afd3938de0be6d09736d0188616cd9027247";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base QuickCheck storable-record ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
           description = "Handling of samples in an (audio) signal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sample-frame-np" = callPackage
        ({ mkDerivation, base, numeric-prelude, sample-frame, stdenv }:
         mkDerivation {
           pname = "sample-frame-np";
           version = "0.0.4.1";
           sha256 = "b1db7621b07503f5fe49390bf1e1b4257c49f4760d617121a23d845278f93624";
           libraryHaskellDepends = [ base numeric-prelude sample-frame ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Synthesizer";
           description = "Orphan instances for types from sample-frame and numericprelude";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sampling" = callPackage
        ({ mkDerivation, base, containers, foldl, mwc-random, primitive
         , stdenv, vector
         }:
         mkDerivation {
           pname = "sampling";
           version = "0.3.2";
           sha256 = "a66156e4600ffb15bde127a841251d49f2d0ff67a85e05961b91839b4769824e";
           libraryHaskellDepends = [
             base containers foldl mwc-random primitive vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtobin/sampling";
           description = "Sample values from collections";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sandi" = callPackage
        ({ mkDerivation, base, bytestring, conduit, exceptions, stdenv
         , stringsearch
         }:
         mkDerivation {
           pname = "sandi";
           version = "0.4.1";
           sha256 = "722492c2db14a18ed643d5b10532c1a82787f6ab9a952e15a9389d8a7e48c623";
           revision = "1";
           editedCabalFile = "1gk6vwydqdgz1s5glv4jlkaph7g19aqdf7yxbyq0m1afaj1rvjq9";
           libraryHaskellDepends = [
             base bytestring conduit exceptions stringsearch
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/sandi";
           description = "Data encoding library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sandman" = callPackage
        ({ mkDerivation, base, Cabal, containers, directory, filepath
         , optparse-applicative, process, stdenv, text, unix-compat
         }:
         mkDerivation {
           pname = "sandman";
           version = "0.2.0.1";
           sha256 = "407d283e1fc4a2a369615bac569683bf399ac14ddbce1331850bfe1d7837ce64";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base Cabal containers directory filepath optparse-applicative
             process text unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/abhinav/sandman#readme";
           description = "Manages Cabal sandboxes to avoid rebuilding packages";
           license = stdenv.lib.licenses.mit;
         }) {};
      "say" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, transformers }:
         mkDerivation {
           pname = "say";
           version = "0.1.0.0";
           sha256 = "f26fdb94ed81a2ae503beca0dcea74da7ee37408ba2e41ab3fdcaa9a7622fc40";
           libraryHaskellDepends = [ base bytestring text transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/say#readme";
           description = "Initial project template from stack";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sbp" = callPackage
        ({ mkDerivation, aeson, array, base, base64-bytestring
         , basic-prelude, binary, binary-conduit, bytestring, conduit
         , conduit-extra, data-binary-ieee754, lens, lens-aeson, monad-loops
         , resourcet, stdenv, template-haskell, text, yaml
         }:
         mkDerivation {
           pname = "sbp";
           version = "2.3.6";
           sha256 = "13da29c591f54cc958f1c25e26847ccc250c5be3577999394b83873c0e0dc816";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson array base base64-bytestring basic-prelude binary bytestring
             data-binary-ieee754 lens lens-aeson monad-loops template-haskell
             text
           ];
           executableHaskellDepends = [
             aeson base basic-prelude binary-conduit bytestring conduit
             conduit-extra resourcet yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/swift-nav/libsbp";
           description = "SwiftNav's SBP Library";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "sbv" = callPackage
        ({ mkDerivation, array, async, base, containers, crackNum
         , data-binary-ieee754, deepseq, directory, filepath
         , generic-deriving, ghc, mtl, pretty, process, QuickCheck, random
         , stdenv, syb, template-haskell, time
         }:
         mkDerivation {
           pname = "sbv";
           version = "7.4";
           sha256 = "ec3d3922a0da061513b1eedc96ede24a06a6202b2d7d5ae1641fb3dcbe78d47b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             array async base containers crackNum data-binary-ieee754 deepseq
             directory filepath generic-deriving ghc mtl pretty process
             QuickCheck random syb template-haskell time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://leventerkok.github.com/sbv/";
           description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scalendar" = callPackage
        ({ mkDerivation, base, containers, stdenv, text, time }:
         mkDerivation {
           pname = "scalendar";
           version = "1.2.0";
           sha256 = "f5c85e8da39e7eb22068032c4c5c32751ebbed61d0ee9679cadac904dde163ac";
           libraryHaskellDepends = [ base containers text time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/scalendar";
           description = "A library for handling calendars and resource availability over time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "scalpel" = callPackage
        ({ mkDerivation, base, bytestring, curl, data-default, scalpel-core
         , stdenv, tagsoup, text
         }:
         mkDerivation {
           pname = "scalpel";
           version = "0.5.1";
           sha256 = "20df66433570a2ca754f14058a47fb00519d9a75bb822fc3fd1769a83c608b0d";
           libraryHaskellDepends = [
             base bytestring curl data-default scalpel-core tagsoup text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/scalpel";
           description = "A high level web scraping library for Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "scalpel-core" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default, fail
         , regex-base, regex-tdfa, stdenv, tagsoup, text, vector
         }:
         mkDerivation {
           pname = "scalpel-core";
           version = "0.5.1";
           sha256 = "8c05b86853b737fbed4144dc9c7bbb7743525c305f9529f59776df97bfe229a9";
           libraryHaskellDepends = [
             base bytestring containers data-default fail regex-base regex-tdfa
             tagsoup text vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/scalpel";
           description = "A high level web scraping library for Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "scanner" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "scanner";
           version = "0.2";
           sha256 = "3a020d68a0372a5211c72e55eeb299738ea608d17184bc68f74d31ebe667a5e9";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Yuras/scanner";
           description = "Fast non-backtracking incremental combinator parsing for bytestrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "schematic" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, hjsonschema
         , mtl, profunctors, regex-tdfa, regex-tdfa-text, scientific
         , singletons, smallcheck, stdenv, tagged, template-haskell, text
         , union, unordered-containers, validationt, vector, vinyl
         }:
         mkDerivation {
           pname = "schematic";
           version = "0.4.2.0";
           sha256 = "c48af3110e8d1f67011230a910abbc9ab445043fb6e8218c9de8c68ab6bdc34c";
           libraryHaskellDepends = [
             aeson base bytestring containers hjsonschema mtl profunctors
             regex-tdfa regex-tdfa-text scientific singletons smallcheck tagged
             template-haskell text union unordered-containers validationt vector
             vinyl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/typeable/schematic";
           description = "JSON-biased spec and validation tool";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scientific" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, deepseq
         , hashable, integer-gmp, integer-logarithms, primitive, stdenv
         , text
         }:
         mkDerivation {
           pname = "scientific";
           version = "0.3.5.2";
           sha256 = "5ce479ff95482fb907267516bd0f8fff450bdeea546bbd1267fe035acf975657";
           revision = "5";
           editedCabalFile = "19rrdna5f75rc21x6wr9m6x9h7776qbmi4z1cwwipfpij8hah54n";
           libraryHaskellDepends = [
             base binary bytestring containers deepseq hashable integer-gmp
             integer-logarithms primitive text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/scientific";
           description = "Numbers represented using scientific notation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scotty" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, bytestring
         , case-insensitive, data-default-class, fail, http-types
         , monad-control, mtl, nats, network, regex-compat, stdenv, text
         , transformers, transformers-base, transformers-compat, wai
         , wai-extra, warp
         }:
         mkDerivation {
           pname = "scotty";
           version = "0.11.0";
           sha256 = "892203c937ccf1279f5005ddb78ebea84629b80687a1e38fc118b38011a386ed";
           revision = "9";
           editedCabalFile = "0cdvv4qsda5rkdj93400i8n3lzkxmz9xci7i38pri9axmics28qa";
           libraryHaskellDepends = [
             aeson base blaze-builder bytestring case-insensitive
             data-default-class fail http-types monad-control mtl nats network
             regex-compat text transformers transformers-base
             transformers-compat wai wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scotty-web/scotty";
           description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "scrypt" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, entropy
         , stdenv
         }:
         mkDerivation {
           pname = "scrypt";
           version = "0.5.0";
           sha256 = "3ec0a622393e2a4dbbce4c899602c848d924f8516688491b1162331b7093d9b2";
           libraryHaskellDepends = [
             base base64-bytestring bytestring entropy
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/informatikr/scrypt";
           description = "Stronger password hashing via sequential memory-hard functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sdl2" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, linear, SDL2
         , StateVar, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "sdl2";
           version = "2.3.0.1";
           sha256 = "d35089ef6b398e18a7c39f292778c82eaebb871061fe0e87c5ba27a49d1ad7b3";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring exceptions linear StateVar text transformers vector
           ];
           librarySystemDepends = [ SDL2 ];
           libraryPkgconfigDepends = [ SDL2 ];
           doHaddock = false;
           doCheck = false;
           description = "Both high- and low-level bindings to the SDL library (version 2.0.4+).";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) SDL2;};
      "sdl2-gfx" = callPackage
        ({ mkDerivation, base, bytestring, lifted-base, linear
         , monad-control, SDL2, sdl2, SDL2_gfx, stdenv, template-haskell
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "sdl2-gfx";
           version = "0.2";
           sha256 = "8c1e10b7a675d782cd650820c75c4ef9225718ad6aaa3f8db02e869b7720c50d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring lifted-base linear monad-control sdl2
             template-haskell text transformers vector
           ];
           libraryPkgconfigDepends = [ SDL2 SDL2_gfx ];
           executableHaskellDepends = [ base linear sdl2 vector ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_gfx";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_gfx;};
      "sdl2-image" = callPackage
        ({ mkDerivation, base, bytestring, SDL2, sdl2, SDL2_image, stdenv
         , template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "sdl2-image";
           version = "2.0.0";
           sha256 = "399742b2b7e64fe4e58c9d8a44ad29b2c355589233535238f8c9b371de6c26df";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring sdl2 template-haskell text transformers
           ];
           libraryPkgconfigDepends = [ SDL2 SDL2_image ];
           executableHaskellDepends = [ base sdl2 text ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_image";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_image;};
      "sdl2-mixer" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, lifted-base
         , monad-control, sdl2, SDL2_mixer, stdenv, template-haskell, text
         , transformers, vector
         }:
         mkDerivation {
           pname = "sdl2-mixer";
           version = "0.1";
           sha256 = "d924f31d9e1c87eed92d357ce20273dba44637861927188b8a44db2c0b2e2bc0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring data-default-class lifted-base monad-control sdl2
             template-haskell text transformers vector
           ];
           librarySystemDepends = [ SDL2_mixer ];
           libraryPkgconfigDepends = [ SDL2_mixer ];
           executableHaskellDepends = [ base data-default-class sdl2 vector ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_mixer";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) SDL2_mixer;};
      "sdl2-ttf" = callPackage
        ({ mkDerivation, base, bytestring, SDL2, sdl2, SDL2_ttf, stdenv
         , template-haskell, text, transformers
         }:
         mkDerivation {
           pname = "sdl2-ttf";
           version = "2.0.2";
           sha256 = "0dc6ca8459c463a06e8a59a4cb2039a9a08bd62a04b59efc035a31554b950ae4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring sdl2 template-haskell text transformers
           ];
           libraryPkgconfigDepends = [ SDL2 SDL2_ttf ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to SDL2_ttf";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) SDL2; inherit (pkgs) SDL2_ttf;};
      "search-algorithms" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "search-algorithms";
           version = "0.3.0";
           sha256 = "4a9d03c97abfd83fae582e4c3425a105b8649b8e69a2c1e170dbbabd8820db10";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/devonhollowood/search-algorithms#readme";
           description = "Common graph search algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "securemem" = callPackage
        ({ mkDerivation, base, byteable, bytestring, ghc-prim, memory
         , stdenv
         }:
         mkDerivation {
           pname = "securemem";
           version = "0.1.10";
           sha256 = "32895a4748508da58207b4867266601af6259b7109af80bbf5d2e9e598e016a6";
           libraryHaskellDepends = [
             base byteable bytestring ghc-prim memory
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-securemem";
           description = "abstraction to an auto scrubbing and const time eq, memory chunk";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "selda" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, hashable, mtl
         , psqueues, stdenv, text, time, unordered-containers
         }:
         mkDerivation {
           pname = "selda";
           version = "0.1.12.1";
           sha256 = "496176292b1ac0f16a033e5a0e431f0e241ff23f5b5644f926c7e213a67500c7";
           libraryHaskellDepends = [
             base bytestring exceptions hashable mtl psqueues text time
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://selda.link";
           description = "Multi-backend, high-level EDSL for interacting with SQL databases";
           license = stdenv.lib.licenses.mit;
         }) {};
      "selda-postgresql" = callPackage
        ({ mkDerivation, base, bytestring, exceptions, postgresql-libpq
         , selda, stdenv, text
         }:
         mkDerivation {
           pname = "selda-postgresql";
           version = "0.1.7.2";
           sha256 = "ff781255b5faa9e9197fd3d298e8e11f81c13a0f01d072c72028003563fee51b";
           libraryHaskellDepends = [
             base bytestring exceptions postgresql-libpq selda text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/valderman/selda";
           description = "PostgreSQL backend for the Selda database EDSL";
           license = stdenv.lib.licenses.mit;
         }) {};
      "selda-sqlite" = callPackage
        ({ mkDerivation, base, direct-sqlite, directory, exceptions, selda
         , stdenv, text
         }:
         mkDerivation {
           pname = "selda-sqlite";
           version = "0.1.6.0";
           sha256 = "c67ba89114a82ece42b7e478bcf480ae0241cefb41e2e9b340a268f9f08be390";
           revision = "1";
           editedCabalFile = "0yf1n9iaaafnllkb2yi38ncyd3q062g4p7ln9ypb6h8gcym8s8m1";
           libraryHaskellDepends = [
             base direct-sqlite directory exceptions selda text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/valderman/selda";
           description = "SQLite backend for the Selda database EDSL";
           license = stdenv.lib.licenses.mit;
         }) {};
      "semigroupoid-extras" = callPackage
        ({ mkDerivation, base, profunctors, semigroupoids, stdenv }:
         mkDerivation {
           pname = "semigroupoid-extras";
           version = "5";
           sha256 = "102e33b55cc3b15a1b714825a3703f3fc2bb09d8038404af442d35c0ac0c3832";
           libraryHaskellDepends = [ base profunctors semigroupoids ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroupoid-extras";
           description = "Semigroupoids that depend on PolyKinds";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroupoids" = callPackage
        ({ mkDerivation, base, base-orphans, bifunctors, Cabal
         , cabal-doctest, comonad, containers, contravariant, distributive
         , hashable, semigroups, stdenv, tagged, transformers
         , transformers-compat, unordered-containers
         }:
         mkDerivation {
           pname = "semigroupoids";
           version = "5.2.1";
           sha256 = "79e41eb7cbcb4f152343b91243feac0a120375284c1207edaa73b23d8df6d200";
           revision = "3";
           editedCabalFile = "0wzcnpz8pyjk823vqnq5s8krsb8i6cw573hcschpd9x5ynq4li70";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base base-orphans bifunctors comonad containers contravariant
             distributive hashable semigroups tagged transformers
             transformers-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroupoids";
           description = "Semigroupoids: Category sans id";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semigroups" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "semigroups";
           version = "0.18.4";
           sha256 = "589e3042329a6bcffb5c0e85834143586db22eb7a2aae094d492cd004f685d27";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/semigroups/";
           description = "Anything that associates";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semiring-simple" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "semiring-simple";
           version = "1.0.0.1";
           sha256 = "c08d1b533f4559fc55119f563a6cf3d74ad7c6f5916c2efe00b50d2a5169fd28";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A module for dealing with semirings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "semver" = callPackage
        ({ mkDerivation, attoparsec, base, deepseq, stdenv, text }:
         mkDerivation {
           pname = "semver";
           version = "0.3.3.1";
           sha256 = "36d3369706836d60f3bc517f30c6860734481866363723904b8768823b6bc8b1";
           libraryHaskellDepends = [ attoparsec base deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/semver";
           description = "Representation, manipulation, and de/serialisation of Semantic Versions";
           license = "unknown";
         }) {};
      "sendfile" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv }:
         mkDerivation {
           pname = "sendfile";
           version = "0.7.9";
           sha256 = "102fdf6db8c00f5a5981c6eed5acba1368a2d79b2970ce5b22ceb180aa0fdc42";
           libraryHaskellDepends = [ base bytestring network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/stepcut/sendfile";
           description = "A portable sendfile library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sensu-run" = callPackage
        ({ mkDerivation, aeson, base, bytestring, filepath, http-client
         , http-types, lens, network, optparse-applicative, process, stdenv
         , temporary, text, time, unix, unix-compat, vector, wreq
         }:
         mkDerivation {
           pname = "sensu-run";
           version = "0.4.0.4";
           sha256 = "bee065757a9c68d4a7863c8a003a57863fb19ce43fe2d359c1ee186d8d72ffdd";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base bytestring filepath http-client http-types lens network
             optparse-applicative process temporary text time unix unix-compat
             vector wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/sensu-run#readme";
           description = "A tool to send command execution results to Sensu";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "seqalign" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, vector }:
         mkDerivation {
           pname = "seqalign";
           version = "0.2.0.4";
           sha256 = "4ea194658d865890157d3df882ed21b0c089cdff7f80ea613ae25c5f3d744305";
           libraryHaskellDepends = [ base bytestring vector ];
           doHaddock = false;
           doCheck = false;
           description = "Sequence Alignment";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "seqloc" = callPackage
        ({ mkDerivation, attoparsec, base, biocore, bytestring, hashable
         , stdenv, unordered-containers, vector
         }:
         mkDerivation {
           pname = "seqloc";
           version = "0.6.1.1";
           sha256 = "4435e76ba86417612b6bd6a173dc99444d5fe9184a9822b1edf13c808d4f55c3";
           libraryHaskellDepends = [
             attoparsec base biocore bytestring hashable unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
           description = "Handle sequence locations for bioinformatics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serf" = callPackage
        ({ mkDerivation, attoparsec, base, conduit, conduit-extra, mtl
         , operational, process, resourcet, stdenv, text
         }:
         mkDerivation {
           pname = "serf";
           version = "0.1.1.0";
           sha256 = "d6c9c6ddf99a2119c6686732caf9f04ef8e9c4df5519a8bbd4ac7f5531d4c067";
           libraryHaskellDepends = [
             attoparsec base conduit conduit-extra mtl operational process
             resourcet text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/sanetracker/serf";
           description = "Interact with Serf via Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serokell-util" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, base16-bytestring
         , base64-bytestring, bytestring, clock, containers, deepseq
         , directory, exceptions, extra, filepath, fmt, formatting, hashable
         , lens, log-warper, monad-control, mtl, optparse-applicative
         , parsec, QuickCheck, quickcheck-instances, scientific, semigroups
         , stdenv, stm, template-haskell, text, text-format, transformers
         , universum, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "serokell-util";
           version = "0.8.0";
           sha256 = "3711f844d87556c4deb8d72dd0861ca9d1063ee28250a5f6e167ac758df11b6d";
           libraryHaskellDepends = [
             aeson ansi-terminal base base16-bytestring base64-bytestring
             bytestring clock containers deepseq directory exceptions extra
             filepath fmt formatting hashable lens log-warper monad-control mtl
             optparse-applicative parsec QuickCheck quickcheck-instances
             scientific semigroups stm template-haskell text text-format
             transformers universum unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/serokell/serokell-util";
           description = "General-purpose functions by Serokell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servant" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
         , Cabal, cabal-doctest, case-insensitive, http-api-data, http-media
         , http-types, mmorph, mtl, natural-transformation, network-uri
         , stdenv, string-conversions, tagged, text, vault
         }:
         mkDerivation {
           pname = "servant";
           version = "0.12";
           sha256 = "09fd559b7d48e87bbb0eddbf8f8b9a2fd67197bfcdb2fcc8fd2b60295b941d41";
           revision = "1";
           editedCabalFile = "0gcpz466zjbcg95bpxybq1v939wmjwani1ml4fmblhckbcbkl723";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec base base-compat bytestring case-insensitive
             http-api-data http-media http-types mmorph mtl
             natural-transformation network-uri string-conversions tagged text
             vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "A family of combinators for defining webservices APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-JuicyPixels" = callPackage
        ({ mkDerivation, base, bytestring, http-media, JuicyPixels, servant
         , servant-server, stdenv, wai, warp
         }:
         mkDerivation {
           pname = "servant-JuicyPixels";
           version = "0.3.0.3";
           sha256 = "60f9c098c1f446338000dad50fb82ff914664d955c1964c09e940da0e81c654d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring http-media JuicyPixels servant
           ];
           executableHaskellDepends = [
             base JuicyPixels servant servant-server wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tvh/servant-JuicyPixels";
           description = "Servant support for JuicyPixels";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-auth-cookie" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
         , cereal, cookie, cryptonite, data-default, exceptions
         , http-api-data, http-types, memory, mtl, servant, servant-server
         , stdenv, tagged, time, transformers, wai
         }:
         mkDerivation {
           pname = "servant-auth-cookie";
           version = "0.5.0.5";
           sha256 = "6a5b9ffabfc48a908bd91ade7c0b5ef7704eab033a4bb5abffdccd280a7187d6";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder bytestring cereal cookie
             cryptonite data-default exceptions http-api-data http-types memory
             mtl servant servant-server tagged time transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "Authentication via encrypted cookies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, http-media, servant, stdenv }:
         mkDerivation {
           pname = "servant-blaze";
           version = "0.7.1";
           sha256 = "90ed1c7a22b83bee344ef3896203f3699b7633bf986ffa064752c3596c072646";
           revision = "6";
           editedCabalFile = "051m44rqmxkl30n96qcbz1xwwsw2n7l7laflnc0xydc40ws0bj96";
           libraryHaskellDepends = [ base blaze-html http-media servant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Blaze-html support for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-cassava" = callPackage
        ({ mkDerivation, base, base-compat, bytestring, cassava, http-media
         , servant, stdenv, vector
         }:
         mkDerivation {
           pname = "servant-cassava";
           version = "0.10";
           sha256 = "9b2c5d906f3a4bb2767b2ce91f12a74e24adceadd296220b5d7216c5e1f3560e";
           revision = "1";
           editedCabalFile = "165q0rvbk09z4k5zwhpx6380gakqbbz2xwvw40ahpjf46p0k9159";
           libraryHaskellDepends = [
             base base-compat bytestring cassava http-media servant vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Servant CSV content-type for cassava";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-checked-exceptions" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, http-api-data
         , http-client, http-media, natural-transformation
         , optparse-applicative, profunctors, servant, servant-client
         , servant-docs, servant-server, stdenv, tagged, text, wai, warp
         }:
         mkDerivation {
           pname = "servant-checked-exceptions";
           version = "0.4.1.0";
           sha256 = "6fbc80f2939ad2f9d6b728ca4d65edcf50f2f35944cd2b5b0d641948b9df00a6";
           revision = "1";
           editedCabalFile = "07srldxvgzgzxq5dik787ays7xylwsdmz8bv3ffvp435nvvpmrzr";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring deepseq http-media profunctors servant
             servant-client servant-docs servant-server tagged text
           ];
           executableHaskellDepends = [
             aeson base http-api-data http-client natural-transformation
             optparse-applicative servant servant-client servant-docs
             servant-server text wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/servant-checked-exceptions";
           description = "Checked exceptions for Servant APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-client" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
         , containers, exceptions, http-client, http-client-tls, http-media
         , http-types, monad-control, mtl, semigroupoids
         , servant-client-core, stdenv, text, transformers
         , transformers-base, transformers-compat
         }:
         mkDerivation {
           pname = "servant-client";
           version = "0.12";
           sha256 = "95c9d6cef575f1c7f9cc448753a8d6ca5d53e394638665a5f09dbc83917150f0";
           libraryHaskellDepends = [
             aeson attoparsec base base-compat bytestring containers exceptions
             http-client http-client-tls http-media http-types monad-control mtl
             semigroupoids servant-client-core text transformers
             transformers-base transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "automatical derivation of querying functions for servant webservices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-client-core" = callPackage
        ({ mkDerivation, base, base-compat, base64-bytestring, bytestring
         , containers, exceptions, generics-sop, http-api-data, http-media
         , http-types, mtl, network-uri, safe, servant, stdenv, text
         }:
         mkDerivation {
           pname = "servant-client-core";
           version = "0.12";
           sha256 = "a50cac1cb5225eab8632dc2cb8b1a9917deec67f46cb2f86c2cec31c9f366371";
           revision = "1";
           editedCabalFile = "0sfj0sj66f4wi2r4g9hr6p0010jc8l2h05mi23r0217ncwh8y3xm";
           libraryHaskellDepends = [
             base base-compat base64-bytestring bytestring containers exceptions
             generics-sop http-api-data http-media http-types mtl network-uri
             safe servant text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Core functionality and class for client function generation for servant APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-docs" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, base-compat, bytestring
         , case-insensitive, control-monad-omega, hashable, http-media
         , http-types, lens, servant, stdenv, string-conversions, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "servant-docs";
           version = "0.11.1";
           sha256 = "62d12d6884c018c5c05f796ff297337dcdd6360c8f4d55bb548ce6f7254046c4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base base-compat bytestring case-insensitive
             control-monad-omega hashable http-media http-types lens servant
             string-conversions text unordered-containers
           ];
           executableHaskellDepends = [
             aeson base lens servant string-conversions text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "generate API docs for your servant webservice";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-elm" = callPackage
        ({ mkDerivation, base, elm-export, lens, servant, servant-foreign
         , stdenv, text, wl-pprint-text
         }:
         mkDerivation {
           pname = "servant-elm";
           version = "0.4.0.1";
           sha256 = "69b3a5dcbb680fc1e923d76afa8255987d4613e0d4387eb493de071c9842ffc5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base elm-export lens servant servant-foreign text wl-pprint-text
           ];
           executableHaskellDepends = [ base elm-export servant text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mattjbray/servant-elm#readme";
           description = "Automatically derive Elm functions to query servant webservices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-exceptions" = callPackage
        ({ mkDerivation, aeson, base, exceptions, http-media, http-types
         , mtl, servant, servant-server, stdenv, text, wai, warp
         }:
         mkDerivation {
           pname = "servant-exceptions";
           version = "0.1.1";
           sha256 = "652b9fdc463200ebb8c2b2e0757f9d90662408bf45a657b3f719d0a36d34abe1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base exceptions http-media http-types mtl servant
             servant-server text wai
           ];
           executableHaskellDepends = [
             aeson base exceptions http-types servant-server text warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ch1bo/servant-exceptions#readme";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-foreign" = callPackage
        ({ mkDerivation, base, http-types, lens, servant, stdenv, text }:
         mkDerivation {
           pname = "servant-foreign";
           version = "0.10.1";
           sha256 = "88f2f5bc2293585e6dcf5f544bdbf871090389b0402ead403abf6013c3aec9c8";
           libraryHaskellDepends = [ base http-types lens servant text ];
           doHaddock = false;
           doCheck = false;
           description = "Helpers for generating clients for servant APIs in any programming language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-generic" = callPackage
        ({ mkDerivation, base, servant, servant-server, stdenv }:
         mkDerivation {
           pname = "servant-generic";
           version = "0.1.0.1";
           sha256 = "2ef213c2f72eb5d1c3da06f5b8e7537128ea96fe54bb086d5ade91ce872cfcfd";
           libraryHaskellDepends = [ base servant servant-server ];
           doHaddock = false;
           doCheck = false;
           description = "Specify Servant APIs with records";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servant-js" = callPackage
        ({ mkDerivation, aeson, base, base-compat, charset, filepath, lens
         , servant, servant-foreign, servant-server, stdenv, stm, text
         , transformers, warp
         }:
         mkDerivation {
           pname = "servant-js";
           version = "0.9.3.2";
           sha256 = "02e0ec27a44a1e5794aacfbf745a815a68854d077e7d056d3e2f17d4812867dc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base base-compat charset lens servant servant-foreign text
           ];
           executableHaskellDepends = [
             aeson base filepath lens servant servant-server stm transformers
             warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Automatically derive javascript functions to query servant webservices";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-kotlin" = callPackage
        ({ mkDerivation, base, containers, directory, formatting, lens
         , servant, servant-foreign, stdenv, text, time, wl-pprint-text
         }:
         mkDerivation {
           pname = "servant-kotlin";
           version = "0.1.0.3";
           sha256 = "ed9579d151a9ba420b1d67753f4c183d3ecb8a4a19d1dbac46f07ae1f689b3c5";
           libraryHaskellDepends = [
             base containers directory formatting lens servant servant-foreign
             text time wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/matsubara0507/servant-kotlin#readme";
           description = "Automatically derive Kotlin class to query servant webservices";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servant-lucid" = callPackage
        ({ mkDerivation, base, http-media, lucid, servant, stdenv }:
         mkDerivation {
           pname = "servant-lucid";
           version = "0.7.1";
           sha256 = "ec26ba7d159b09be10beacf6242f6ae1bd111e9c738bfbf3cf2f560f48e0fe40";
           revision = "6";
           editedCabalFile = "0bz3j6xjig6qj7qwkvzv9kqvivd6qvz0kn42lpwg1kcf1j6w31mc";
           libraryHaskellDepends = [ base http-media lucid servant ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Servant support for lucid";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-mock" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-types, QuickCheck
         , servant, servant-server, stdenv, transformers, wai, warp
         }:
         mkDerivation {
           pname = "servant-mock";
           version = "0.8.3";
           sha256 = "b56080e50ec74f02b759b5ebd7f07f5ac34efc52475e85b4c728f54cf6f3933b";
           revision = "2";
           editedCabalFile = "00dq310ik9nm20mxxr9d46jilp9h6k54f5mdl1ii2ggwy2mck1dm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring http-types QuickCheck servant servant-server
             transformers wai
           ];
           executableHaskellDepends = [
             aeson base QuickCheck servant-server warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "Derive a mock server for free from your servant API types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-multipart" = callPackage
        ({ mkDerivation, base, bytestring, directory, fetchgit, http-client
         , http-media, lens, network, resourcet, servant, servant-docs
         , servant-server, stdenv, text, transformers, wai, wai-extra, warp
         }:
         mkDerivation {
           pname = "servant-multipart";
           version = "0.11";
           src = fetchgit {
             url = "https://github.com/serokell/servant-multipart.git";
             sha256 = "042lw09j79qlax8ymwzphc29q8sx1vzlbyf42hmwy2pg5fgmw0qv";
             rev = "e7de56b5f7c39f8dc473f1bbaf534bb7affc3cf4";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring directory http-media lens resourcet servant
             servant-docs servant-server text transformers wai wai-extra
           ];
           executableHaskellDepends = [
             base bytestring http-client network servant servant-server text
             transformers wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-multipart#readme";
           description = "multipart/form-data (e.g file upload) support for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-pandoc" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, http-media
         , lens, pandoc-types, servant-docs, stdenv, string-conversions
         , text, unordered-containers
         }:
         mkDerivation {
           pname = "servant-pandoc";
           version = "0.4.1.4";
           sha256 = "d2a42add37ea494542a951cf089ea02c7469efc5880a59b8e3eb9b786c5e5543";
           libraryHaskellDepends = [
             base bytestring case-insensitive http-media lens pandoc-types
             servant-docs string-conversions text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Use Pandoc to render servant API documentation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servant-purescript" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , filepath, http-types, lens, mainland-pretty, purescript-bridge
         , servant, servant-foreign, servant-server, servant-subscriber
         , stdenv, text
         }:
         mkDerivation {
           pname = "servant-purescript";
           version = "0.9.0.2";
           sha256 = "f72839cd6b956b6b2ac2adfd2da237ffee63180c43281e3b109e59925526b2ab";
           libraryHaskellDepends = [
             aeson base bytestring containers directory filepath http-types lens
             mainland-pretty purescript-bridge servant servant-foreign
             servant-server servant-subscriber text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/eskimor/servant-purescript#readme";
           description = "Generate PureScript accessor functions for you servant API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-quickcheck" = callPackage
        ({ mkDerivation, aeson, base, base-compat, bytestring
         , case-insensitive, clock, data-default-class, hspec, http-client
         , http-media, http-types, mtl, pretty, process, QuickCheck, servant
         , servant-client, servant-server, split, stdenv, string-conversions
         , temporary, text, time, warp
         }:
         mkDerivation {
           pname = "servant-quickcheck";
           version = "0.0.5.0";
           sha256 = "a61ae5f573fb7da5808cbeb34e898897b36d60625980ff5fc2ff1d541b6bc7a0";
           libraryHaskellDepends = [
             aeson base base-compat bytestring case-insensitive clock
             data-default-class hspec http-client http-media http-types mtl
             pretty process QuickCheck servant servant-client servant-server
             split string-conversions temporary text time warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "QuickCheck entire APIs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-rawm" = callPackage
        ({ mkDerivation, base, bytestring, filepath, http-client
         , http-media, http-types, lens, resourcet, servant, servant-client
         , servant-docs, servant-server, stdenv, text, transformers, wai
         , wai-app-static, warp
         }:
         mkDerivation {
           pname = "servant-rawm";
           version = "0.2.0.2";
           sha256 = "a266877a434f2177049f71ac4b7c4a5e4be77acafb2b779ce61075dea5897c5a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring filepath http-client http-media http-types lens
             resourcet servant-client servant-docs servant-server wai
             wai-app-static
           ];
           executableHaskellDepends = [
             base bytestring http-client http-media http-types servant
             servant-client servant-docs servant-server text transformers wai
             warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/servant-rawm";
           description = "Embed a raw 'Application' in a Servant API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-ruby" = callPackage
        ({ mkDerivation, base, casing, lens, servant-foreign, stdenv, text
         }:
         mkDerivation {
           pname = "servant-ruby";
           version = "0.5.1.0";
           sha256 = "d2145df940bc8cc6281e26c115d1b418e432661e81fe1364e4147d16a8473848";
           libraryHaskellDepends = [ base casing lens servant-foreign text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joneshf/servant-ruby#readme";
           description = "Generate a Ruby client from a Servant API with Net::HTTP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-server" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base-compat
         , base64-bytestring, bytestring, Cabal, cabal-doctest, containers
         , exceptions, fetchgit, filepath, http-api-data, http-types
         , monad-control, mtl, network, network-uri, resourcet, safe
         , servant, split, stdenv, string-conversions, system-filepath
         , tagged, text, transformers, transformers-base
         , transformers-compat, wai, wai-app-static, warp, word8
         }:
         mkDerivation {
           pname = "servant-server";
           version = "0.12";
           src = fetchgit {
             url = "https://github.com/serokell/servant.git";
             sha256 = "1irn9kvyyv2xxfm5rg92f3sw4x5c0drg44g74ccpsw83dh1wl169";
             rev = "5db013cc36894afdff9e748dbc1c05947c54df3d";
           };
           postUnpack = "sourceRoot+=/servant-server; echo source root reset to $sourceRoot";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec base base-compat base64-bytestring bytestring
             containers exceptions filepath http-api-data http-types
             monad-control mtl network network-uri resourcet safe servant split
             string-conversions system-filepath tagged text transformers
             transformers-base transformers-compat wai wai-app-static warp word8
           ];
           executableHaskellDepends = [ aeson base servant text wai warp ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell-servant.readthedocs.org/";
           description = "A family of combinators for defining webservices APIs and serving them";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-static-th" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers
         , directory, filepath, http-media, semigroups, servant
         , servant-blaze, servant-server, stdenv, template-haskell, text
         , wai, warp
         }:
         mkDerivation {
           pname = "servant-static-th";
           version = "0.1.0.6";
           sha256 = "5d45a91c2c9de7a4fa15354887c937cbc49ccd2aee19ecdfe44853eb6a3f2ba7";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-html bytestring containers directory filepath http-media
             semigroups servant servant-blaze servant-server template-haskell
             text
           ];
           executableHaskellDepends = [ base servant-server wai warp ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/servant-static-th";
           description = "Embed a directory of static files in your Servant server";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-subscriber" = callPackage
        ({ mkDerivation, aeson, async, attoparsec, base, blaze-builder
         , bytestring, case-insensitive, containers, directory, filepath
         , http-types, lens, lifted-base, monad-control, monad-logger
         , network-uri, purescript-bridge, servant, servant-foreign
         , servant-server, stdenv, stm, text, time, transformers, wai
         , wai-websockets, warp, websockets
         }:
         mkDerivation {
           pname = "servant-subscriber";
           version = "0.6.0.1";
           sha256 = "3da1856b47c03ffa1d1c107267e7f18ef5207e6bb2d104788f60b14f01ac7839";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async attoparsec base blaze-builder bytestring
             case-insensitive containers directory filepath http-types lens
             lifted-base monad-control monad-logger network-uri servant
             servant-foreign servant-server stm text time transformers wai
             wai-websockets warp websockets
           ];
           executableHaskellDepends = [ base purescript-bridge ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/eskimor/servant-subscriber#readme";
           description = "When REST is not enough ...";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-swagger" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, cabal-doctest
         , hspec, http-media, insert-ordered-containers, lens, QuickCheck
         , servant, stdenv, swagger2, text, unordered-containers
         }:
         mkDerivation {
           pname = "servant-swagger";
           version = "1.1.4";
           sha256 = "710481116ef49a80cc0925a72073b6a38554245ebf04558c50aa4eb053009a75";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson base bytestring hspec http-media insert-ordered-containers
             lens QuickCheck servant swagger2 text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-servant/servant-swagger";
           description = "Generate Swagger specification for your servant API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-swagger-ui" = callPackage
        ({ mkDerivation, base, blaze-markup, bytestring, directory
         , file-embed, filepath, http-media, servant, servant-blaze
         , servant-server, servant-swagger, stdenv, swagger2
         , template-haskell, text, transformers, transformers-compat
         , wai-app-static
         }:
         mkDerivation {
           pname = "servant-swagger-ui";
           version = "0.2.5.3.9.1";
           sha256 = "35017aa0efaa90240fac68d147c35069905eb821567da53bb4b627f829b47fb9";
           libraryHaskellDepends = [
             base blaze-markup bytestring directory file-embed filepath
             http-media servant servant-blaze servant-server servant-swagger
             swagger2 template-haskell text transformers transformers-compat
             wai-app-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/servant-swagger-ui#readme";
           description = "Servant swagger ui";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-websockets" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, conduit
         , exceptions, resourcet, servant-server, stdenv, text, wai
         , wai-websockets, warp, websockets
         }:
         mkDerivation {
           pname = "servant-websockets";
           version = "1.0.0";
           sha256 = "623112456c7095c38a43a0351997bafad299a96f8d7fe769eb29b1f2b2f7c917";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base bytestring conduit exceptions resourcet
             servant-server text wai wai-websockets warp websockets
           ];
           executableHaskellDepends = [
             aeson base conduit servant-server text wai warp websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/moesenle/servant-websockets#readme";
           description = "Small library providing WebSocket endpoints for servant";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "servant-yaml" = callPackage
        ({ mkDerivation, base, bytestring, http-media, servant, stdenv
         , yaml
         }:
         mkDerivation {
           pname = "servant-yaml";
           version = "0.1.0.0";
           sha256 = "c917d9b046b06a9c4386f743a78142c27cf7f0ec1ad8562770ab9828f2ee3204";
           revision = "18";
           editedCabalFile = "038paj9z77rx6jc06vg5f4f9gvwaq73ggw7ppgrw6vwhsl4nd84q";
           libraryHaskellDepends = [
             base bytestring http-media servant yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/servant-yaml#readme";
           description = "Servant support for yaml";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "serversession" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , data-default, hashable, nonce, path-pieces, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "serversession";
           version = "1.0.1";
           sha256 = "3ffbefd87017e8d46fbbe380f59e24672aa9c06b999da5f9ae0b052094d94822";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring data-default hashable nonce
             path-pieces text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Secure, modular server-side sessions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-backend-persistent" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring, cereal
         , path-pieces, persistent, serversession, stdenv, tagged, text
         , time, transformers, unordered-containers
         }:
         mkDerivation {
           pname = "serversession-backend-persistent";
           version = "1.0.4";
           sha256 = "c7f2d6fe08d13269ed4834ccf186926dc6c3815011bc456e77ce481fb6eb971c";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring cereal path-pieces
             persistent serversession tagged text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Storage backend for serversession using persistent and an RDBMS";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-backend-redis" = callPackage
        ({ mkDerivation, base, bytestring, hedis, path-pieces
         , serversession, stdenv, tagged, text, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "serversession-backend-redis";
           version = "1.0.3";
           sha256 = "ce4b0a3741da3842fe4b5008b51894251ac59b3530babd5ce58b915ec2543615";
           libraryHaskellDepends = [
             base bytestring hedis path-pieces serversession tagged text time
             transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Storage backend for serversession using Redis";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-frontend-wai" = callPackage
        ({ mkDerivation, base, bytestring, cookie, data-default
         , path-pieces, serversession, stdenv, text, time, transformers
         , unordered-containers, vault, wai, wai-session
         }:
         mkDerivation {
           pname = "serversession-frontend-wai";
           version = "1.0";
           sha256 = "0b48130e3d3915dc46ec2392984e7862d066f6ddd454127a98b0c21c2574b167";
           libraryHaskellDepends = [
             base bytestring cookie data-default path-pieces serversession text
             time transformers unordered-containers vault wai wai-session
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "wai-session bindings for serversession";
           license = stdenv.lib.licenses.mit;
         }) {};
      "serversession-frontend-yesod" = callPackage
        ({ mkDerivation, base, bytestring, containers, cookie, data-default
         , path-pieces, serversession, stdenv, text, time, transformers
         , unordered-containers, wai, yesod-core
         }:
         mkDerivation {
           pname = "serversession-frontend-yesod";
           version = "1.0";
           sha256 = "063946df7bf693e26973f81dd72b3586115dfac6b358421e4a7ada48e47c6753";
           libraryHaskellDepends = [
             base bytestring containers cookie data-default path-pieces
             serversession text time transformers unordered-containers wai
             yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/serversession";
           description = "Yesod bindings for serversession";
           license = stdenv.lib.licenses.mit;
         }) {};
      "servius" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, bytestring
         , http-types, markdown, shakespeare, stdenv, text, wai
         , wai-app-static
         }:
         mkDerivation {
           pname = "servius";
           version = "1.2.0.3";
           sha256 = "47621f01e55cf4e69aeea80104a8a99e87c3a9ad13a5f144da7acd38370563f0";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base blaze-builder blaze-html bytestring http-types markdown
             shakespeare text wai wai-app-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/servius#readme";
           description = "Warp web server with template rendering";
           license = stdenv.lib.licenses.mit;
         }) {};
      "ses-html" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-html, byteable
         , bytestring, cryptohash, HsOpenSSL, http-streams, stdenv, tagsoup
         , time
         }:
         mkDerivation {
           pname = "ses-html";
           version = "0.4.0.0";
           sha256 = "cff76ee03b538e69a3d107cd63d577210cf0f9879d470bf55519e887e2a8a08f";
           libraryHaskellDepends = [
             base base64-bytestring blaze-html byteable bytestring cryptohash
             HsOpenSSL http-streams tagsoup time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Send HTML formatted emails using Amazon's SES REST API with blaze";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "set-cover" = callPackage
        ({ mkDerivation, base, containers, enummapset, psqueues, semigroups
         , stdenv, utility-ht
         }:
         mkDerivation {
           pname = "set-cover";
           version = "0.0.9";
           sha256 = "afebfd20c00ff68cd99c7e457d15542003228a56d98af63565549a77852f73e1";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers enummapset psqueues semigroups utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/set-cover/";
           description = "Solve exact set cover problems like Sudoku, 8 Queens, Soma Cube, Tetris Cube";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "set-monad" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "set-monad";
           version = "0.2.0.0";
           sha256 = "eb2b4312c4a71024ea1c85683065c1052b0065b7d96df68cd1c4390c1ab2afdb";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           description = "Set monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "setenv" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "setenv";
           version = "0.1.1.3";
           sha256 = "e358df39afc03d5a39e2ec650652d845c85c80cc98fe331654deafb4767ecb32";
           revision = "1";
           editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           description = "A cross-platform library for setting environment variables";
           license = stdenv.lib.licenses.mit;
         }) {};
      "setlocale" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "setlocale";
           version = "1.0.0.5";
           sha256 = "57438491475004eda12d7a73eea0ab1c5fb28774027626e5bbcb142fe57d9ff0";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/IchUndNichtDu/haskell-setlocale";
           description = "Haskell bindings to setlocale";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sets" = callPackage
        ({ mkDerivation, base, commutative, composition, containers
         , contravariant, hashable, keys, mtl, QuickCheck, semigroupoids
         , semigroups, stdenv, transformers, transformers-base
         , unordered-containers, witherable
         }:
         mkDerivation {
           pname = "sets";
           version = "0.0.5.2";
           sha256 = "be20d5b7b4a5770b7089879f3ef7226c485f4d5bb17e87f979f3bb6475e48713";
           libraryHaskellDepends = [
             base commutative composition containers contravariant hashable keys
             mtl QuickCheck semigroupoids semigroups transformers
             transformers-base unordered-containers witherable
           ];
           doHaddock = false;
           doCheck = false;
           description = "Ducktyped set interface for Haskell containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shake" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, directory
         , extra, filepath, hashable, js-flot, js-jquery, primitive, process
         , random, stdenv, time, transformers, unix, unordered-containers
         , utf8-string
         }:
         mkDerivation {
           pname = "shake";
           version = "0.16.3";
           sha256 = "eca327f038e03c5a7969cbfa46c1539990cc9b29e1d83842a6ca600429582f87";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base binary bytestring deepseq directory extra filepath hashable
             js-flot js-jquery primitive process random time transformers unix
             unordered-containers utf8-string
           ];
           executableHaskellDepends = [
             base binary bytestring deepseq directory extra filepath hashable
             js-flot js-jquery primitive process random time transformers unix
             unordered-containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://shakebuild.com";
           description = "Build system library, like Make, but more accurate dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shake-language-c" = callPackage
        ({ mkDerivation, base, data-default-class, fclabels, process, shake
         , split, stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "shake-language-c";
           version = "0.11.0";
           sha256 = "2174ad269b5fc3bb09054b0289697ce052b1cd3fc3393f6ad00181f1870f931d";
           libraryHaskellDepends = [
             base data-default-class fclabels process shake split
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/samplecount/shake-language-c";
           description = "Utilities for cross-compiling with Shake";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "shakespeare" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , containers, directory, exceptions, ghc-prim, parsec, process
         , scientific, stdenv, template-haskell, text, time, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "shakespeare";
           version = "2.0.15";
           sha256 = "4354c6eebbfa89103c8090aae3bc7be5fceae6a0e327acf8adc4f3fd535864ee";
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring containers directory
             exceptions ghc-prim parsec process scientific template-haskell text
             time transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/shakespearean-templates";
           description = "A toolkit for making compile-time interpolated templates";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shell-conduit" = callPackage
        ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
         , control-monad-loop, directory, filepath, monad-control, monads-tf
         , process, resourcet, semigroups, split, stdenv, template-haskell
         , text, transformers, transformers-base, unix
         }:
         mkDerivation {
           pname = "shell-conduit";
           version = "4.6.1";
           sha256 = "86d161f8b05ae72e5464fe4ade42443d750fc9ffbd5ba98d7d5587287076ad42";
           libraryHaskellDepends = [
             async base bytestring conduit conduit-extra control-monad-loop
             directory filepath monad-control monads-tf process resourcet
             semigroups split template-haskell text transformers
             transformers-base unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/shell-conduit";
           description = "Write shell scripts with Conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shell-escape" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, stdenv
         , vector
         }:
         mkDerivation {
           pname = "shell-escape";
           version = "0.2.0";
           sha256 = "e23c9ba94a27e45430cb39e6bb236557e789d24129257c3def377f441b2cba4a";
           libraryHaskellDepends = [
             base binary bytestring containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/solidsnack/shell-escape";
           description = "Shell escaping library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shelly" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, directory
         , enclosed-exceptions, exceptions, lifted-async, lifted-base
         , monad-control, mtl, process, stdenv, system-fileio
         , system-filepath, text, time, transformers, transformers-base
         , unix-compat
         }:
         mkDerivation {
           pname = "shelly";
           version = "1.7.0.1";
           sha256 = "0343758a6f01472341eed2bfd38f8e43543c933bdfc75723c44c332c917f9628";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base bytestring containers directory enclosed-exceptions
             exceptions lifted-async lifted-base monad-control mtl process
             system-fileio system-filepath text time transformers
             transformers-base unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/Shelly.hs";
           description = "shell-like (systems) programming in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "shikensu" = callPackage
        ({ mkDerivation, aeson, base, bytestring, directory, filepath, flow
         , Glob, stdenv, text, unordered-containers
         }:
         mkDerivation {
           pname = "shikensu";
           version = "0.3.8";
           sha256 = "9043593a661b738752686e5d8c1e39db22104832b647ea67d212a91a380d516a";
           libraryHaskellDepends = [
             aeson base bytestring directory filepath flow Glob text
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/icidasset/shikensu#readme";
           description = "Run a sequence of functions on in-memory representations of files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "shortcut-links" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "shortcut-links";
           version = "0.4.2.0";
           sha256 = "1e6b75c5e94fddf9e2e665821ac70f5083e5d40d1fd55813e94943ce02335027";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/shortcut-links";
           description = "Link shortcuts for use in text markup";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "should-not-typecheck" = callPackage
        ({ mkDerivation, base, deepseq, HUnit, stdenv }:
         mkDerivation {
           pname = "should-not-typecheck";
           version = "2.1.0";
           sha256 = "f538ac70ce07679bc2e6c1651db82a86866664ab995665fdc78e6cb12bd8d591";
           libraryHaskellDepends = [ base deepseq HUnit ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/CRogers/should-not-typecheck";
           description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "show-prettyprint" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, prettyprinter, stdenv
         , trifecta
         }:
         mkDerivation {
           pname = "show-prettyprint";
           version = "0.2.0.1";
           sha256 = "4900fc40bc7af1e14dc457e45d880b98073362f5162718eb1df20450250e775a";
           libraryHaskellDepends = [
             ansi-wl-pprint base prettyprinter trifecta
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/quchen/show-prettyprint#readme";
           description = "Robust prettyprinter for output of auto-generated Show instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "signal" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "signal";
           version = "0.1.0.4";
           sha256 = "c4bfdd92b75347e02759c1a7d75963fbc7052e948ec96e25299ca5262e5d76e5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base unix ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pmlodawski/signal";
           description = "Multiplatform signal support for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "silently" = callPackage
        ({ mkDerivation, base, deepseq, directory, stdenv }:
         mkDerivation {
           pname = "silently";
           version = "1.2.5";
           sha256 = "cef625635053a46032ca53b43d311921875a437910b6568ded17027fdca83839";
           libraryHaskellDepends = [ base deepseq directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hspec/silently";
           description = "Prevent or capture writing to stdout and other handles";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, cmdargs, directory, filepath
         , http-types, mime-types, monad-control, mtl, process, setenv
         , simple-templates, stdenv, text, transformers, transformers-base
         , unordered-containers, vector, wai, wai-extra
         }:
         mkDerivation {
           pname = "simple";
           version = "0.11.2";
           sha256 = "ef53672eded47626cd125dc0759628fcfead2f2e271a0cae1092d4ff244e0614";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring blaze-builder bytestring directory
             filepath http-types mime-types monad-control mtl simple-templates
             text transformers transformers-base unordered-containers vector wai
             wai-extra
           ];
           executableHaskellDepends = [
             aeson attoparsec base bytestring cmdargs directory filepath process
             setenv simple-templates text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "A minimalist web framework for the WAI server interface";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-log" = callPackage
        ({ mkDerivation, async, base, base-unicode-symbols, containers
         , data-default, deepseq, directory, exceptions, filepath, hformat
         , microlens, microlens-platform, mmorph, mtl, SafeSemaphore, stdenv
         , text, time, transformers
         }:
         mkDerivation {
           pname = "simple-log";
           version = "0.9.3";
           sha256 = "f012ff48e7a93645f0952562e65455f57073552921a7ee8f6a2f3caddee8a844";
           libraryHaskellDepends = [
             async base base-unicode-symbols containers data-default deepseq
             directory exceptions filepath hformat microlens microlens-platform
             mmorph mtl SafeSemaphore text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mvoidex/simple-log";
           description = "Simple log for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-reflect" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "simple-reflect";
           version = "0.3.2";
           sha256 = "38224eb3d0d5eafc7101ad48fa92001c3e753a015d53bb12753a3836b871ecb6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
           description = "Simple reflection of expressions containing variables";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-sendfile" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, unix }:
         mkDerivation {
           pname = "simple-sendfile";
           version = "0.2.27";
           sha256 = "f68572592099a2db3f7212ac7d133447ae5bbb2605285d3de1a29a52d9c79caf";
           libraryHaskellDepends = [ base bytestring network unix ];
           doHaddock = false;
           doCheck = false;
           description = "Cross platform library for the sendfile system call";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "simple-session" = callPackage
        ({ mkDerivation, base, base64-bytestring, blaze-builder, byteable
         , bytestring, containers, cookie, cryptohash, http-types, simple
         , stdenv, transformers, wai, wai-extra
         }:
         mkDerivation {
           pname = "simple-session";
           version = "0.10.1.1";
           sha256 = "8a9c9cb7a80080b6440a80549919d3cee3409af6c516b3d10d1392708b48e7c1";
           libraryHaskellDepends = [
             base base64-bytestring blaze-builder byteable bytestring containers
             cookie cryptohash http-types simple transformers wai wai-extra
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "Cookie-based session management for the Simple web framework";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "simple-templates" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, scientific, stdenv, text
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "simple-templates";
           version = "0.8.0.1";
           sha256 = "28e10f916320bb5097d9ed323a1726d88d17a51b0ac0290a91806d97840bca8e";
           libraryHaskellDepends = [
             aeson attoparsec base scientific text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://simple.cx";
           description = "A basic template language for the Simple web framework";
           license = stdenv.lib.licenses.lgpl3;
         }) {};
      "singleton-bool" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "singleton-bool";
           version = "0.1.3";
           sha256 = "2e8a4be86294e7769ae0cd0a0dfc8067413d976392658701123317e2006d49c4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/singleton-bool#readme";
           description = "Type level booleans";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "singleton-nats" = callPackage
        ({ mkDerivation, base, singletons, stdenv }:
         mkDerivation {
           pname = "singleton-nats";
           version = "0.4.0.4";
           sha256 = "045e7880bf761ecaaed8b738ff5ecec62604925c354cc1845587c3b023de3fb2";
           libraryHaskellDepends = [ base singletons ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AndrasKovacs/singleton-nats";
           description = "Unary natural numbers relying on the singletons infrastructure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "singletons" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, syb
         , template-haskell, text, th-desugar
         }:
         mkDerivation {
           pname = "singletons";
           version = "2.3.1";
           sha256 = "ca8de4df85d50e9363b3f1715a23c9456d2a57e5e145343693714cecc4afaec4";
           libraryHaskellDepends = [
             base containers mtl syb template-haskell text th-desugar
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/goldfirere/singletons";
           description = "A framework for generating singleton types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "siphash" = callPackage
        ({ mkDerivation, base, bytestring, cpu, stdenv }:
         mkDerivation {
           pname = "siphash";
           version = "1.0.3";
           sha256 = "cf81ce41c6ca40c4fec9add5dcebc161cb2d31f522f9ad727df23d30ac6a05f3";
           revision = "1";
           editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base bytestring cpu ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-siphash";
           description = "siphash: a fast short input PRF";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "skein" = callPackage
        ({ mkDerivation, base, bytestring, cereal, crypto-api, stdenv
         , tagged
         }:
         mkDerivation {
           pname = "skein";
           version = "1.0.9.4";
           sha256 = "f882ca0cc5ed336ef898fb3c89579e392900259296b2320edf968b9fc16cb8c9";
           libraryHaskellDepends = [
             base bytestring cereal crypto-api tagged
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meteficha/skein";
           description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "skeletons" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, containers, directory
         , filepath, stdenv, text, tinytemplate, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "skeletons";
           version = "0.4.0";
           sha256 = "3dd5045d09131434a794b9452980b4a54da4312d2e1116ac455bbc9bdf6fbcc6";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             ansi-wl-pprint base containers directory filepath text tinytemplate
             transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jb55/skeletons";
           description = "Manage project skeletons";
           license = stdenv.lib.licenses.mit;
         }) {};
      "skylighting" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring, binary
         , blaze-html, bytestring, case-insensitive, containers, directory
         , filepath, hxt, mtl, pretty-show, regex-pcre-builtin, safe, stdenv
         , text, utf8-string
         }:
         mkDerivation {
           pname = "skylighting";
           version = "0.5.1";
           sha256 = "afbda861a98bc1bc9e829b43452e9a5fd559c41a76d87bb40b58398a3184b450";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring binary blaze-html
             bytestring case-insensitive containers directory filepath hxt mtl
             regex-pcre-builtin safe text utf8-string
           ];
           executableHaskellDepends = [
             aeson base base64-bytestring binary blaze-html bytestring
             case-insensitive containers directory filepath hxt pretty-show
             regex-pcre-builtin safe text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jgm/skylighting";
           description = "syntax highlighting library";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "slack-web" = callPackage
        ({ mkDerivation, aeson, base, containers, errors, http-api-data
         , http-client, http-client-tls, megaparsec, mtl, servant
         , servant-client, stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "slack-web";
           version = "0.2.0.1";
           sha256 = "295f4958c55708b28597f1d90b9e9fd6117eeedca41c637a7b9878c9be363cec";
           libraryHaskellDepends = [
             aeson base containers errors http-api-data http-client
             http-client-tls megaparsec mtl servant servant-client text time
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jpvillaisaza/slack-web";
           description = "Bindings for the Slack web API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "slave-thread" = callPackage
        ({ mkDerivation, base, base-prelude, list-t, mmorph
         , partial-handler, stdenv, stm-containers, transformers
         }:
         mkDerivation {
           pname = "slave-thread";
           version = "1.0.2";
           sha256 = "e47120598dd65ebee33253911a31518021323a5ccfa52588e13c44fd5f5b4b13";
           libraryHaskellDepends = [
             base base-prelude list-t mmorph partial-handler stm-containers
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/slave-thread";
           description = "A principal solution to ghost threads and silent exceptions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "slug" = callPackage
        ({ mkDerivation, aeson, base, exceptions, http-api-data
         , path-pieces, persistent, QuickCheck, stdenv, text
         }:
         mkDerivation {
           pname = "slug";
           version = "0.1.7";
           sha256 = "d76f8243fd8b45d02c0731962ceddcd96154473d6f7c5cbf36ab921bc5627dde";
           revision = "1";
           editedCabalFile = "0xy0zcrnfpdbkhks15p1g2zxl7zmfb0b5511mfcsvzxl9q8salf6";
           libraryHaskellDepends = [
             aeson base exceptions http-api-data path-pieces persistent
             QuickCheck text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/slug";
           description = "Type-safe slugs for Yesod ecosystem";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smallcheck" = callPackage
        ({ mkDerivation, base, ghc-prim, logict, mtl, pretty, stdenv }:
         mkDerivation {
           pname = "smallcheck";
           version = "1.1.3.1";
           sha256 = "9ff5f16ffa4c4ab57c0f22fcada1825aa250c03f1559aae851d96738bb06bdd2";
           libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/smallcheck";
           description = "A property-based testing library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smoothie" = callPackage
        ({ mkDerivation, aeson, base, linear, stdenv, text, vector }:
         mkDerivation {
           pname = "smoothie";
           version = "0.4.2.7";
           sha256 = "84561c3463d870312fafb48680ef0122688814fcbb2eb605570c48cceb64deb2";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ aeson base linear text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/smoothie";
           description = "Smooth curves via several interpolation modes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "smtp-mail" = callPackage
        ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
         , bytestring, cryptohash, filepath, mime-mail, network, stdenv
         , text
         }:
         mkDerivation {
           pname = "smtp-mail";
           version = "0.1.4.6";
           sha256 = "86dacbef87a2519222a1165b49401a437887a249f5bfd63a99702198dad214bc";
           libraryHaskellDepends = [
             array base base16-bytestring base64-bytestring bytestring
             cryptohash filepath mime-mail network text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jhickner/smtp-mail";
           description = "Simple email sending via SMTP";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-blaze" = callPackage
        ({ mkDerivation, base, blaze-html, snap-core, stdenv }:
         mkDerivation {
           pname = "snap-blaze";
           version = "0.2.1.5";
           sha256 = "b36e35bd4ba3087b3de92702e488ba6570675719243b5dbdf4eae0b819988841";
           libraryHaskellDepends = [ base blaze-html snap-core ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jaspervdj/snap-blaze";
           description = "blaze-html integration for Snap";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-core" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
         , case-insensitive, containers, directory, filepath, hashable
         , HUnit, io-streams, lifted-base, monad-control, mtl, network
         , network-uri, old-locale, random, readable, regex-posix, stdenv
         , text, time, transformers, transformers-base, unix-compat
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "snap-core";
           version = "1.0.3.1";
           sha256 = "0749f0d52e415627411adfa90d78ee04b63aa51f7aa19c0a9a94b692cf5f5754";
           revision = "1";
           editedCabalFile = "0yf3i0pb14zff083cnz4lszg5bkbbzg5r1v3yj9s66dchrszrjbd";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-builder case-insensitive
             containers directory filepath hashable HUnit io-streams lifted-base
             monad-control mtl network network-uri old-locale random readable
             regex-posix text time transformers transformers-base unix-compat
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "Snap: A Haskell Web Framework (core interfaces and types)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snap-server" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , bytestring-builder, case-insensitive, clock, containers
         , directory, filepath, io-streams, io-streams-haproxy, lifted-base
         , mtl, network, old-locale, snap-core, stdenv, text, time
         , transformers, unix, unix-compat, vector
         }:
         mkDerivation {
           pname = "snap-server";
           version = "1.0.3.3";
           sha256 = "745adbc5f8966deff4e84c873f86ad1d19ca306dfd6ddd2a39892640d9bb4eee";
           revision = "2";
           editedCabalFile = "1nb3jxr7sgw2r305k6bbbyyx8myxm3r01a8zhvxdkz4xvv9907d0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring bytestring-builder
             case-insensitive clock containers filepath io-streams
             io-streams-haproxy lifted-base mtl network old-locale snap-core
             text time unix unix-compat vector
           ];
           executableHaskellDepends = [
             attoparsec base blaze-builder bytestring bytestring-builder
             case-insensitive clock containers directory io-streams
             io-streams-haproxy lifted-base mtl network old-locale snap-core
             text time transformers unix unix-compat vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://snapframework.com/";
           description = "A web server for the Snap Framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "snowflake" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "snowflake";
           version = "0.1.1.1";
           sha256 = "f156ca321ae17033fe1cbe7e676fea403136198e1c3a132924a080cd3145cddd";
           revision = "1";
           editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "snowtify" = callPackage
        ({ mkDerivation, base, either, safe, safe-exceptions, stdenv, text
         , turtle
         }:
         mkDerivation {
           pname = "snowtify";
           version = "0.1.0.3";
           sha256 = "588c86910eb26f551b9916aca4e60ed60d7ef9b850eb5a920caac67e2b487dd0";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base either safe safe-exceptions text turtle
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aiya000/hs-snowtify#README.md";
           description = "snowtify send your result of `stack build` (`stack test`) to notify-daemon :dog2:";
           license = stdenv.lib.licenses.mit;
         }) {};
      "soap" = callPackage
        ({ mkDerivation, base, bytestring, conduit, configurator
         , data-default, exceptions, http-client, http-types, iconv, mtl
         , resourcet, stdenv, text, unordered-containers, xml-conduit
         , xml-conduit-writer, xml-types
         }:
         mkDerivation {
           pname = "soap";
           version = "0.2.3.5";
           sha256 = "ba0bf7d1d65a594cf4407e70da5baaa2a2ba341b7e1d01a9a2ea01ff32cbb707";
           revision = "2";
           editedCabalFile = "07283pa4n5mf908zl3az9gy95y49zk65kiwyymsmcz5nvhqvp840";
           libraryHaskellDepends = [
             base bytestring conduit configurator data-default exceptions
             http-client http-types iconv mtl resourcet text
             unordered-containers xml-conduit xml-conduit-writer xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "SOAP client tools";
           license = stdenv.lib.licenses.mit;
         }) {};
      "soap-openssl" = callPackage
        ({ mkDerivation, base, configurator, data-default, HsOpenSSL
         , http-client, http-client-openssl, soap, stdenv, text
         }:
         mkDerivation {
           pname = "soap-openssl";
           version = "0.1.0.2";
           sha256 = "2008547f4fd22063479ce1cd1c483db926f5f08a2ff6fb0c60fb2f0f7d42830f";
           revision = "1";
           editedCabalFile = "1b3aivn9jfaax00id7x4cqvpmd6lgynslchlry0qsmq1lj466cdf";
           libraryHaskellDepends = [
             base configurator data-default HsOpenSSL http-client
             http-client-openssl soap text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "TLS-enabled SOAP transport (using openssl bindings)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "soap-tls" = callPackage
        ({ mkDerivation, base, configurator, connection, data-default
         , http-client, http-client-tls, soap, stdenv, text, tls, x509
         , x509-store, x509-validation
         }:
         mkDerivation {
           pname = "soap-tls";
           version = "0.1.1.2";
           sha256 = "e43abafb0ed390b9f5f99cc957973367d40e91c8d3ae7e22b3250a08ebe7df76";
           revision = "1";
           editedCabalFile = "0h6jgiifrphdphxfvgk95and4a86xp6afxi90v0b93cs2zyi0vsy";
           libraryHaskellDepends = [
             base configurator connection data-default http-client
             http-client-tls soap text tls x509 x509-store x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/haskell-soap";
           description = "TLS-enabled SOAP transport (using tls package)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "socket" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "socket";
           version = "0.8.0.1";
           sha256 = "745f6d1ef2299e321ad646918b9b733c82b4ded51b3b6aab6755c85182ab09a2";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lpeterse/haskell-socket";
           description = "An extensible socket library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "socket-activation" = callPackage
        ({ mkDerivation, base, network, stdenv, transformers, unix }:
         mkDerivation {
           pname = "socket-activation";
           version = "0.1.0.2";
           sha256 = "b99e7b4f296cd462aac84e5bb61fb02953e2080d1351e9e10a63d35dc34eb43b";
           libraryHaskellDepends = [ base network transformers unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ddfisher/haskell-socket-activation";
           description = "systemd socket activation library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "socket-io" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, engine-io
         , mtl, stdenv, stm, text, transformers, unordered-containers
         , vector
         }:
         mkDerivation {
           pname = "socket-io";
           version = "1.3.8";
           sha256 = "f8506eb4ebd756c496851aedb87d365fbbd903af6db6ab917e3f4e1b2eb2fc23";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring engine-io mtl stm text
             transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/engine.io";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "socks" = callPackage
        ({ mkDerivation, base, bytestring, cereal, network, stdenv }:
         mkDerivation {
           pname = "socks";
           version = "0.5.6";
           sha256 = "fa63cd838025e18864c59755750c0cfc4ea76e140a542f07a5c682488ec78438";
           libraryHaskellDepends = [ base bytestring cereal network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-socks";
           description = "Socks proxy (ver 5)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sort" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "sort";
           version = "1.0.0.0";
           sha256 = "cee3894879cb4b2150331eca96d5d27f51a6114bcb082d1d8dded55881f5770d";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdornan/sort";
           description = "A Haskell sorting toolkit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sorted-list" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "sorted-list";
           version = "0.2.0.0";
           sha256 = "cc52c787b056f4d3a9ecc59f06701695602558a4233042ff8f613cdd4985d138";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
           description = "Type-enforced sorted lists and related functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sourcemap" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, process
         , stdenv, text, unordered-containers, utf8-string
         }:
         mkDerivation {
           pname = "sourcemap";
           version = "0.1.6";
           sha256 = "b9a04cccb4fe7eea8b37a2eaf2bc776eae5640038ab76fb948c5a3ea09a9ce7a";
           revision = "1";
           editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring process text unordered-containers
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of source maps as proposed by Google and Mozilla";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sox" = callPackage
        ({ mkDerivation, base, containers, explicit-exception
         , extensible-exceptions, process, sample-frame, semigroups, stdenv
         , transformers, unix, utility-ht
         }:
         mkDerivation {
           pname = "sox";
           version = "0.2.3";
           sha256 = "6075a191c7715cc27be60a21d5fcdfcbcfb54eb659b5d86ce6a8c89d24abad90";
           libraryHaskellDepends = [
             base containers explicit-exception extensible-exceptions process
             sample-frame semigroups transformers unix utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Sox";
           description = "Play, write, read, convert audio signals using Sox";
           license = "GPL";
         }) {};
      "soxlib" = callPackage
        ({ mkDerivation, base, bytestring, containers, explicit-exception
         , extensible-exceptions, sample-frame, sox, stdenv, storablevector
         , transformers, utility-ht
         }:
         mkDerivation {
           pname = "soxlib";
           version = "0.0.3";
           sha256 = "18b555beb0eaafce25550feea23575ec68477728654bd2fbaad67d448f5dcd8b";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring containers explicit-exception extensible-exceptions
             sample-frame storablevector transformers utility-ht
           ];
           libraryPkgconfigDepends = [ sox ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Sox";
           description = "Write, read, convert audio signals using libsox";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) sox;};
      "sparse-linear-algebra" = callPackage
        ({ mkDerivation, base, containers, exceptions, hspec, mtl
         , primitive, QuickCheck, stdenv, transformers, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "sparse-linear-algebra";
           version = "0.2.9.9";
           sha256 = "c14109a01fc9053ad91dfc4f374dbe90a7d2f40960fdd0c32b14ec226bee6cd8";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers exceptions hspec mtl primitive QuickCheck
             transformers vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/sparse-linear-algebra";
           description = "Numerical computing in native Haskell";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "spdx" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "spdx";
           version = "0.2.2.0";
           sha256 = "17ab832cf40cd9df7c1d290e3726c457eb3336c61027e35b245d7e48fb8ebdcb";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/spdx";
           description = "SPDX license expression language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "special-values" = callPackage
        ({ mkDerivation, base, bytestring, ieee754, scientific, stdenv
         , text
         }:
         mkDerivation {
           pname = "special-values";
           version = "0.1.0.0";
           sha256 = "3c14dd1304dacc8e54c2dcf95ebb3bb74b172b5409b9b45352108a4698e06dce";
           libraryHaskellDepends = [
             base bytestring ieee754 scientific text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/special-values#readme";
           description = "Typeclass providing special values";
           license = stdenv.lib.licenses.mit;
         }) {};
      "speculate" = callPackage
        ({ mkDerivation, base, cmdargs, containers, leancheck, stdenv }:
         mkDerivation {
           pname = "speculate";
           version = "0.3.2";
           sha256 = "d34d66e5487698e1a80b5fbd7d8439a1102cee0a51383ab30cd257078308c831";
           libraryHaskellDepends = [ base cmdargs containers leancheck ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rudymatela/speculate#readme";
           description = "discovery of properties about Haskell functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "speculation" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, stm, transformers }:
         mkDerivation {
           pname = "speculation";
           version = "1.5.0.3";
           sha256 = "73bf641a87e0d28a2ba233922db936e0776c3dc24ed421f6f963f015e2eb4d3f";
           libraryHaskellDepends = [ base ghc-prim stm transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/speculation";
           description = "A framework for safe, programmable, speculative parallelism";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "speedy-slice" = callPackage
        ({ mkDerivation, base, kan-extensions, lens, mcmc-types
         , mwc-probability, pipes, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "speedy-slice";
           version = "0.3.0";
           sha256 = "efbf8a10b681b940078f70fb9aca43fec8ba436c82f3faf719bbe495ba152899";
           libraryHaskellDepends = [
             base kan-extensions lens mcmc-types mwc-probability pipes primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jtobin/speedy-slice";
           description = "Speedy slice sampling";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sphinx" = callPackage
        ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
         , network, stdenv, text, text-icu, xml
         }:
         mkDerivation {
           pname = "sphinx";
           version = "0.6.0.2";
           sha256 = "76a977c6ce6e71c220bd5fed7acd0be500c2a1b5c8d081a29564a8e37ba7a6df";
           libraryHaskellDepends = [
             base binary bytestring data-binary-ieee754 network text text-icu
             xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/gregwebs/haskell-sphinx-client";
           description = "Haskell bindings to the Sphinx full-text searching daemon";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "splice" = callPackage
        ({ mkDerivation, base, network, stdenv }:
         mkDerivation {
           pname = "splice";
           version = "0.6.1.1";
           sha256 = "81fabe6652571f0dbf6b8904bd782daaeccc9d89d40f77b15dff46b7499d4e53";
           libraryHaskellDepends = [ base network ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://corsis.github.com/splice/";
           description = "Cross-platform Socket to Socket Data Splicing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "split" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "split";
           version = "0.2.3.3";
           sha256 = "1dcd674f7c5f276f33300f5fd59e49d1ac6fc92ae949fd06a0f6d3e9d9ac1413";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Combinator library for splitting lists";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "splitmix" = callPackage
        ({ mkDerivation, base, random, stdenv, time }:
         mkDerivation {
           pname = "splitmix";
           version = "0";
           sha256 = "f13aa0689625b1d02cf47c748ea8858898bbdb24324f1419de68074e5d344861";
           libraryHaskellDepends = [ base random time ];
           doHaddock = false;
           doCheck = false;
           description = "Fast Splittable PRNG";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "spreadsheet" = callPackage
        ({ mkDerivation, base, explicit-exception, stdenv, transformers
         , utility-ht
         }:
         mkDerivation {
           pname = "spreadsheet";
           version = "0.1.3.7";
           sha256 = "840a66ccbfa0f08851e292e0b6a3f1de652f62d66d9b17e83b69153597d81ba0";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base explicit-exception transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Spreadsheet";
           description = "Read and write spreadsheets from and to CSV files in a lazy way";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sql-words" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "sql-words";
           version = "0.1.5.1";
           sha256 = "ed738e4342060c86f781a2c9c9053262ce21d0ea5a96d09a47c40e6d52a3245b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "SQL keywords data constructors into OverloadedString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sqlite-simple" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, blaze-textual
         , bytestring, containers, direct-sqlite, Only, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "sqlite-simple";
           version = "0.4.14.0";
           sha256 = "49fab62beb96032bfa35cd1b103d08bd6156d68e94b4508df42e2b6a7673a47f";
           libraryHaskellDepends = [
             attoparsec base blaze-builder blaze-textual bytestring containers
             direct-sqlite Only text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nurpax/sqlite-simple";
           description = "Mid-Level SQLite client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sqlite-simple-errors" = callPackage
        ({ mkDerivation, base, parsec, sqlite-simple, stdenv, text }:
         mkDerivation {
           pname = "sqlite-simple-errors";
           version = "0.6.0.0";
           sha256 = "e697ba5ff6b4df227d782cb2d2327ce5df4282acdb17e8087ae76adbfabfd980";
           libraryHaskellDepends = [ base parsec sqlite-simple text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/sqlite-simple-errors";
           description = "Wrapper around errors from sqlite-simple";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "squeal-postgresql" = callPackage
        ({ mkDerivation, aeson, base, bytestring, deepseq, generics-sop
         , lifted-base, monad-control, mtl, network-ip, postgresql-binary
         , postgresql-libpq, scientific, stdenv, text, time, transformers
         , transformers-base, uuid
         }:
         mkDerivation {
           pname = "squeal-postgresql";
           version = "0.1.1.4";
           sha256 = "50ac7094068d8318c495d29becd514c4387ff0442f2f7f864ab1af6f28a10d68";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring deepseq generics-sop lifted-base
             monad-control mtl network-ip postgresql-binary postgresql-libpq
             scientific text time transformers transformers-base uuid
           ];
           executableHaskellDepends = [
             base bytestring generics-sop mtl text transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/morphismtech/squeal";
           description = "Squeal PostgreSQL Library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "srcloc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "srcloc";
           version = "0.5.1.1";
           sha256 = "3148a6c6997b0cb92a0c698f4cb362deee6946ce61235c9dbd5cadf56ff61a17";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mainland/srcloc";
           description = "Data types for managing source code locations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stache" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, deepseq
         , directory, filepath, megaparsec, mtl, stdenv, template-haskell
         , text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "stache";
           version = "1.2.1";
           sha256 = "6bfbdd2755c606f7b146243db1eefc2f49c720264ba9072a9d170a1bbdbc113b";
           revision = "1";
           editedCabalFile = "18h31a8bd7v96lc9q0ai7sblnxg3y55s1053jqdixi3y7lz3jh79";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring containers deepseq directory filepath
             megaparsec mtl template-haskell text unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/stackbuilders/stache";
           description = "Mustache templates for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stack" = callPackage
        ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal, async
         , attoparsec, base, base64-bytestring, bindings-uname
         , blaze-builder, bytestring, Cabal, clock, conduit, conduit-extra
         , containers, cryptonite, cryptonite-conduit, deepseq, directory
         , echo, exceptions, extra, fast-logger, file-embed, filelock
         , filepath, fsnotify, generic-deriving, gitrev, hackage-security
         , hashable, hastache, hpack, hpc, http-client, http-client-tls
         , http-conduit, http-types, memory, microlens, microlens-mtl
         , mintty, monad-logger, mono-traversable, mtl, neat-interpolation
         , network-uri, open-browser, optparse-applicative, optparse-simple
         , path, path-io, persistent, persistent-sqlite, persistent-template
         , pid1, pretty, primitive, process, project-template
         , regex-applicative-text, resourcet, retry, semigroups, split
         , stdenv, stm, store, store-core, streaming-commons, tar
         , template-haskell, temporary, text, text-metrics, th-reify-many
         , time, tls, transformers, unicode-transforms, unix, unix-compat
         , unliftio, unordered-containers, vector, yaml, zip-archive, zlib
         }:
         mkDerivation {
           pname = "stack";
           version = "1.6.5";
           sha256 = "ee5c8ca3f9ee81d1bde3ff54ca07f902a98476f4804f0cf7002b56deed07aa38";
           revision = "1";
           editedCabalFile = "11bmzlf3gxbz2gij0l2999a296z4c12l27f7jfyfka8l1k15d6b1";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal filepath ];
           libraryHaskellDepends = [
             aeson annotated-wl-pprint ansi-terminal async attoparsec base
             base64-bytestring bindings-uname blaze-builder bytestring Cabal
             clock conduit conduit-extra containers cryptonite
             cryptonite-conduit deepseq directory echo exceptions extra
             fast-logger file-embed filelock filepath fsnotify generic-deriving
             hackage-security hashable hastache hpack hpc http-client
             http-client-tls http-conduit http-types memory microlens
             microlens-mtl mintty monad-logger mono-traversable mtl
             neat-interpolation network-uri open-browser optparse-applicative
             path path-io persistent persistent-sqlite persistent-template pid1
             pretty primitive process project-template regex-applicative-text
             resourcet retry semigroups split stm store store-core
             streaming-commons tar template-haskell temporary text text-metrics
             th-reify-many time tls transformers unicode-transforms unix
             unix-compat unliftio unordered-containers vector yaml zip-archive
             zlib
           ];
           executableHaskellDepends = [
             aeson annotated-wl-pprint ansi-terminal async attoparsec base
             base64-bytestring bindings-uname blaze-builder bytestring Cabal
             clock conduit conduit-extra containers cryptonite
             cryptonite-conduit deepseq directory echo exceptions extra
             fast-logger file-embed filelock filepath fsnotify generic-deriving
             gitrev hackage-security hashable hastache hpack hpc http-client
             http-client-tls http-conduit http-types memory microlens
             microlens-mtl mintty monad-logger mono-traversable mtl
             neat-interpolation network-uri open-browser optparse-applicative
             optparse-simple path path-io persistent persistent-sqlite
             persistent-template pid1 pretty primitive process project-template
             regex-applicative-text resourcet retry semigroups split stm store
             store-core streaming-commons tar template-haskell temporary text
             text-metrics th-reify-many time tls transformers unicode-transforms
             unix unix-compat unliftio unordered-containers vector yaml
             zip-archive zlib
           ];
           doHaddock = false;
           doCheck = false;
           preCheck = "export HOME=$TMPDIR";
           postInstall = ''
             exe=$out/bin/stack
             mkdir -p $out/share/bash-completion/completions
             $exe --bash-completion-script $exe >$out/share/bash-completion/completions/stack
           '';
           homepage = "http://haskellstack.org";
           description = "The Haskell Tool Stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stack-type" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "stack-type";
           version = "0.1.0.0";
           sha256 = "f310965736f096cdf099e0a61c5fad39b066692d72643da989b64e61ae196c8e";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aiya000/hs-stack-type";
           description = "The basic stack type";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stackage-curator" = callPackage
        ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-s3, async
         , base, blaze-html, bytestring, Cabal, classy-prelude-conduit
         , conduit, conduit-extra, containers, cryptonite
         , cryptonite-conduit, data-default-class, directory, exceptions
         , filepath, hashable, html-conduit, http-client, http-client-tls
         , http-conduit, lucid, memory, mime-types, monad-unlift
         , monad-unlift-ref, mono-traversable, mtl, old-locale
         , optparse-applicative, optparse-simple, process, resourcet, safe
         , semigroups, stdenv, stm, store, streaming-commons, syb
         , system-fileio, system-filepath, tar, temporary, text, time
         , transformers, unix-compat, unordered-containers, utf8-string
         , vector, xml-conduit, xml-types, yaml, zlib
         }:
         mkDerivation {
           pname = "stackage-curator";
           version = "0.15.1.0";
           sha256 = "57264391591dd1db80ef96b4a0f0d3f5c5d2a22379e3566d1a81adf0caec0b95";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson amazonka amazonka-core amazonka-s3 async base blaze-html
             bytestring Cabal classy-prelude-conduit conduit conduit-extra
             containers cryptonite cryptonite-conduit data-default-class
             directory exceptions filepath hashable html-conduit http-client
             http-client-tls http-conduit lucid memory mime-types monad-unlift
             monad-unlift-ref mono-traversable mtl old-locale process resourcet
             safe semigroups stm store streaming-commons syb system-fileio
             system-filepath tar temporary text time transformers unix-compat
             unordered-containers utf8-string vector xml-conduit xml-types yaml
             zlib
           ];
           executableHaskellDepends = [
             aeson base http-client http-client-tls optparse-applicative
             optparse-simple system-filepath text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-curator";
           description = "Tools for curating Stackage bundles";
           license = stdenv.lib.licenses.mit;
         }) {};
      "state-codes" = callPackage
        ({ mkDerivation, aeson, base, shakespeare, stdenv, text }:
         mkDerivation {
           pname = "state-codes";
           version = "0.1.3";
           sha256 = "1667dc977607fc89a0ca736294b2f0a19608fbe861f03f404c3f8ee91fd0f4a1";
           libraryHaskellDepends = [ aeson base shakespeare text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/acamino/state-codes#README";
           description = "ISO 3166-2:US state codes and i18n names";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stateWriter" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "stateWriter";
           version = "0.2.10";
           sha256 = "68093c0f3ccecf2708831cdf5e42a77ec2a198cfb2c6852b4f7e4215ec3f393c";
           revision = "1";
           editedCabalFile = "19zp7wy2k6f5dqw0wfj9wzarjgfr20nvw5rmqiv79h66qssjl9i6";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           description = "A faster variant of the RWS monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stateref" = callPackage
        ({ mkDerivation, base, mtl, stdenv, stm }:
         mkDerivation {
           pname = "stateref";
           version = "0.3";
           sha256 = "7dd390aab346ca877cde1217d5b62145cdfa6f9390e3b7a53c9296229ee1b741";
           libraryHaskellDepends = [ base mtl stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~mokus/stateref/";
           description = "Abstraction for things that work like IORef";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "statestack" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "statestack";
           version = "0.2.0.5";
           sha256 = "f4eadcf9b08c14cb084436f81e16edf78d6eeda77a3f93e38ba5d7e263ea5f66";
           revision = "1";
           editedCabalFile = "0kf1jdhdv9fiwlbn2915sg39x23lfxlyp2qb7jkrvx8p8v2sam7i";
           libraryHaskellDepends = [
             base mtl transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple State-like monad transformer with saveable and restorable state";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "statistics" = callPackage
        ({ mkDerivation, aeson, base, base-orphans, binary, deepseq, erf
         , math-functions, monad-par, mwc-random, primitive, stdenv, vector
         , vector-algorithms, vector-binary-instances, vector-th-unbox
         }:
         mkDerivation {
           pname = "statistics";
           version = "0.14.0.2";
           sha256 = "3495df2da42c9fcc5b594b97f16c02353bfd6616d6e134ac031dac389d7a4778";
           libraryHaskellDepends = [
             aeson base base-orphans binary deepseq erf math-functions monad-par
             mwc-random primitive vector vector-algorithms
             vector-binary-instances vector-th-unbox
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/statistics";
           description = "A library of statistical types, data, and functions";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "stm" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "stm";
           version = "2.4.5.0";
           sha256 = "31d7db183f13beed5c71409d12747a7f4cf3e145630553dc86336208540859a7";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://wiki.haskell.org/Software_transactional_memory";
           description = "Software Transactional Memory";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-chans" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-chans";
           version = "3.0.0.4";
           sha256 = "2344fc5bfa33d565bad7b009fc0e2c5a7a595060ba149c661f44419fc0d54738";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Additional types of channels for STM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-conduit" = callPackage
        ({ mkDerivation, async, base, cereal, cereal-conduit, conduit
         , conduit-combinators, conduit-extra, directory, ghc-prim
         , lifted-async, lifted-base, monad-control, monad-loops, resourcet
         , stdenv, stm, stm-chans, transformers, void
         }:
         mkDerivation {
           pname = "stm-conduit";
           version = "3.0.0";
           sha256 = "cf6f663c069fb8991831ed792e5d22b8786966740797306c9391e610651da809";
           revision = "1";
           editedCabalFile = "0wmjqypqjw9irmpsmra6zbj1sa4l14xnx5xpaz2zvfsk4x90qyyg";
           libraryHaskellDepends = [
             async base cereal cereal-conduit conduit conduit-combinators
             conduit-extra directory ghc-prim lifted-async lifted-base
             monad-control monad-loops resourcet stm stm-chans transformers void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cgaebel/stm-conduit";
           description = "Introduces conduits to channels, and promotes using conduits concurrently";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-containers" = callPackage
        ({ mkDerivation, base, base-prelude, focus, hashable, list-t
         , primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "stm-containers";
           version = "0.2.16";
           sha256 = "69042f06647cdc69e1ecf83863d88d67acd377f631d8a15966df67245152502f";
           libraryHaskellDepends = [
             base base-prelude focus hashable list-t primitive transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/stm-containers";
           description = "Containers for STM";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stm-delay" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-delay";
           version = "0.1.1.1";
           sha256 = "b132581aac47e6cba6a1691a485e1700fbb047c02b7e1e43ae9bbd8476108a32";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joeyadams/haskell-stm-delay";
           description = "Updatable one-shot timer polled with STM";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-extras" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-extras";
           version = "0.1.0.3";
           sha256 = "88210a157d5a5a2c3bd10b3b9f0ead9bef91f47ecfe6fd56deca058c7270b75e";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/stm-extras#readme";
           description = "Extra STM functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-split" = callPackage
        ({ mkDerivation, base, stdenv, stm }:
         mkDerivation {
           pname = "stm-split";
           version = "0.0.2";
           sha256 = "3c06a43889acc02425b7a5299f71de86ebba6245a92a507db976dc7256713807";
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           description = "TMVars, TVars and TChans with distinguished input and output side";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-stats" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm, template-haskell
         , time
         }:
         mkDerivation {
           pname = "stm-stats";
           version = "0.2.0.0";
           sha256 = "0a4f39b1e9fffe50d6dfaa9c0b04977e510fae8b6bd3d7abb7076e8aa8f01345";
           libraryHaskellDepends = [
             base containers stm template-haskell time
           ];
           doHaddock = false;
           doCheck = false;
           description = "retry statistics for STM transactions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stm-supply" = callPackage
        ({ mkDerivation, base, concurrent-supply, stdenv }:
         mkDerivation {
           pname = "stm-supply";
           version = "0.2.0.0";
           sha256 = "f839ada6e5ac9549731086ed13fcf4c9f03a6ff93d64c0a857148820864f388c";
           libraryHaskellDepends = [ base concurrent-supply ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/stm-supply#readme";
           description = "STM wrapper around Control.Concurrent.Supply.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stopwatch" = callPackage
        ({ mkDerivation, base, clock, stdenv, transformers }:
         mkDerivation {
           pname = "stopwatch";
           version = "0.1.0.4";
           sha256 = "b9f4c22f93359491c9fd20a0bd1ff9abd7e077aadfce1a213293e7e124b1b5c2";
           libraryHaskellDepends = [ base clock transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/stopwatch";
           description = "A simple stopwatch utility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-complex" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "storable-complex";
           version = "0.2.2";
           sha256 = "ab076f15c47a2a324a2119c8feee0a78e1d2af488d0d24b7113b4bb7eee47c06";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cartazio/storable-complex";
           description = "Storable instance for Complex";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-endian" = callPackage
        ({ mkDerivation, base, byteorder, stdenv }:
         mkDerivation {
           pname = "storable-endian";
           version = "0.2.6";
           sha256 = "3743ac8f084ed3187b83f17b4fac280e77c5df01f7910f42b6a1bf09d5a65489";
           revision = "1";
           editedCabalFile = "12f8sscsvsarlwz3p6kk9vbvqsbyhs8lhafgn9h7c0z6pz1amrya";
           libraryHaskellDepends = [ base byteorder ];
           doHaddock = false;
           doCheck = false;
           description = "Storable instances with endianness";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-record" = callPackage
        ({ mkDerivation, base, semigroups, stdenv, transformers, utility-ht
         }:
         mkDerivation {
           pname = "storable-record";
           version = "0.0.4";
           sha256 = "ceffb2f08d8abc37e338ad924b264c230d5e54ecccaf1c22802c3107ea0c5a42";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base semigroups transformers utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/storable-record/";
           description = "Elegant definition of Storable instances for records";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storable-tuple" = callPackage
        ({ mkDerivation, base, base-orphans, stdenv, storable-record
         , utility-ht
         }:
         mkDerivation {
           pname = "storable-tuple";
           version = "0.0.3.3";
           sha256 = "dcfac049527a45c386c80a7c40ec211455b83d74311af88fa686063b5f87df35";
           libraryHaskellDepends = [
             base base-orphans storable-record utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/storable-tuple/";
           description = "Storable instance for pairs and triples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "storablevector" = callPackage
        ({ mkDerivation, base, deepseq, non-negative, QuickCheck
         , semigroups, stdenv, syb, transformers, unsafe, utility-ht
         }:
         mkDerivation {
           pname = "storablevector";
           version = "0.2.13";
           sha256 = "f83742d572aca9431f8ee6325d29169bc630beb2d8ab1957f7165abed138b9fe";
           libraryHaskellDepends = [
             base deepseq non-negative QuickCheck semigroups syb transformers
             unsafe utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Storable_Vector";
           description = "Fast, packed, strict storable arrays with a list interface like ByteString";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "store" = callPackage
        ({ mkDerivation, array, async, base, base-orphans
         , base64-bytestring, bytestring, conduit, containers, contravariant
         , cryptohash, deepseq, directory, filepath, free, ghc-prim
         , hashable, hspec, hspec-smallcheck, integer-gmp, lifted-base
         , monad-control, mono-traversable, network, primitive, resourcet
         , safe, semigroups, smallcheck, stdenv, store-core
         , streaming-commons, syb, template-haskell, text, th-lift
         , th-lift-instances, th-orphans, th-reify-many, th-utilities, time
         , transformers, unordered-containers, vector, void
         }:
         mkDerivation {
           pname = "store";
           version = "0.4.3.2";
           sha256 = "eca47c14b14ce5a6369a4b09a048b5a7fe7574d3f1b1099bc03449416c80308e";
           libraryHaskellDepends = [
             array async base base-orphans base64-bytestring bytestring conduit
             containers contravariant cryptohash deepseq directory filepath free
             ghc-prim hashable hspec hspec-smallcheck integer-gmp lifted-base
             monad-control mono-traversable network primitive resourcet safe
             semigroups smallcheck store-core streaming-commons syb
             template-haskell text th-lift th-lift-instances th-orphans
             th-reify-many th-utilities time transformers unordered-containers
             vector void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/store#readme";
           description = "Fast binary serialization";
           license = stdenv.lib.licenses.mit;
         }) {};
      "store-core" = callPackage
        ({ mkDerivation, base, bytestring, fail, ghc-prim, primitive
         , stdenv, text, transformers
         }:
         mkDerivation {
           pname = "store-core";
           version = "0.4.1";
           sha256 = "145285f9f26a64e9611e01749a0d569691a70fa898f5359bedcfca9dacb064b4";
           libraryHaskellDepends = [
             base bytestring fail ghc-prim primitive text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/store#readme";
           description = "Fast and lightweight binary serialization";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stratosphere" = callPackage
        ({ mkDerivation, aeson, aeson-pretty, base, bytestring, hashable
         , lens, stdenv, template-haskell, text, unordered-containers
         }:
         mkDerivation {
           pname = "stratosphere";
           version = "0.14.0";
           sha256 = "1ae41b6565390ccfb1c662c28f2e1fa121852425111b1126444b798d013dc987";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson aeson-pretty base bytestring hashable lens template-haskell
             text unordered-containers
           ];
           executableHaskellDepends = [
             aeson aeson-pretty base bytestring hashable lens template-haskell
             text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/frontrowed/stratosphere#readme";
           description = "EDSL for AWS CloudFormation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streaming" = callPackage
        ({ mkDerivation, base, containers, exceptions, ghc-prim, mmorph
         , mtl, stdenv, transformers, transformers-base
         }:
         mkDerivation {
           pname = "streaming";
           version = "0.2.0.0";
           sha256 = "76cab21889b60a56dbd657918d417c559a1a749dd69272f62d444dbdd8e88722";
           libraryHaskellDepends = [
             base containers exceptions ghc-prim mmorph mtl transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-streaming/streaming";
           description = "an elementary streaming prelude and general stream type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streaming-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, exceptions, mmorph, mtl
         , resourcet, stdenv, streaming, transformers, transformers-base
         }:
         mkDerivation {
           pname = "streaming-bytestring";
           version = "0.1.5";
           sha256 = "12356f6add66c08064d3c89a9f1fbc6f38f0c0c214867f2219c8beb8f0b30746";
           libraryHaskellDepends = [
             base bytestring deepseq exceptions mmorph mtl resourcet streaming
             transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-streaming/streaming-bytestring";
           description = "effectful byte steams, or: bytestring io done right";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streaming-commons" = callPackage
        ({ mkDerivation, array, async, base, blaze-builder, bytestring
         , directory, network, process, random, stdenv, stm, text
         , transformers, unix, zlib
         }:
         mkDerivation {
           pname = "streaming-commons";
           version = "0.1.19";
           sha256 = "43fcae90df5548d9968b31371f13ec7271df86ac34a484c094616867ed4217a7";
           libraryHaskellDepends = [
             array async base blaze-builder bytestring directory network process
             random stm text transformers unix zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/streaming-commons";
           description = "Common lower-level functions needed by various streaming data libraries";
           license = stdenv.lib.licenses.mit;
         }) {};
      "streamly" = callPackage
        ({ mkDerivation, atomic-primops, base, containers, exceptions
         , lifted-base, lockfree-queue, monad-control, mtl, stdenv, stm
         , transformers, transformers-base
         }:
         mkDerivation {
           pname = "streamly";
           version = "0.1.0";
           sha256 = "f12f6d92b19e11c3ad3191ab1da8b23870d0a86a7a9db537e93127638349fcaa";
           revision = "1";
           editedCabalFile = "0cx4s17r2nn6xwa9lpcn7scvbqqxi6ihxyb20axhj5rim8iz94hm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             atomic-primops base containers exceptions lifted-base
             lockfree-queue monad-control mtl stm transformers transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/composewell/streamly";
           description = "Beautiful Streaming, Concurrent and Reactive Composition";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streamproc" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "streamproc";
           version = "1.6.2";
           sha256 = "e76effaaff83e6a066df949415db109b405bda0aaeb95f0710906c65892584f2";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/peti/streamproc";
           description = "Stream Processer Arrow";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "streams" = callPackage
        ({ mkDerivation, adjunctions, base, comonad, distributive
         , semigroupoids, semigroups, stdenv
         }:
         mkDerivation {
           pname = "streams";
           version = "3.3";
           sha256 = "2933f80d6a83fed326af5588b0cce93985b07233359c311bd69c5bac19954e40";
           libraryHaskellDepends = [
             adjunctions base comonad distributive semigroupoids semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/streams/issues";
           description = "Various Haskell 2010 stream comonads";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict" = callPackage
        ({ mkDerivation, array, base, stdenv }:
         mkDerivation {
           pname = "strict";
           version = "0.3.2";
           sha256 = "2cd35a67938db635a87617d9576d5df0158b581e8e5694f07487c0f4b1549221";
           libraryHaskellDepends = [ array base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
           description = "Strict data types and String IO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict-base-types" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, binary, deepseq, ghc-prim
         , hashable, lens, QuickCheck, stdenv, strict
         }:
         mkDerivation {
           pname = "strict-base-types";
           version = "0.5.0";
           sha256 = "febcadf3d7f97f9c8c161a98e2537ba83a8adc4e4f6015e65430d7367104a1cb";
           libraryHaskellDepends = [
             aeson base bifunctors binary deepseq ghc-prim hashable lens
             QuickCheck strict
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/meiersi/strict-base-types";
           description = "Strict variants of the types provided in base";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict-concurrency" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "strict-concurrency";
           version = "0.2.4.2";
           sha256 = "bf5ad5d14134b57908966322d6b4a07925569b1f351ffe47644233ac4183f86f";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ygale/strict-concurrency";
           description = "Strict concurrency abstractions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "strict-types" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , hashable, stdenv, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "strict-types";
           version = "0.1.2";
           sha256 = "9106620f42690a5877b7d5ee6d58c4c3b0677ea8695e56f793afd2a4a2ae5779";
           libraryHaskellDepends = [
             array base bytestring containers deepseq hashable text
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/strict-types";
           description = "A type level predicate ranging over strict types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-class" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, tagged, text }:
         mkDerivation {
           pname = "string-class";
           version = "0.1.7.0";
           sha256 = "8e5b00563ec2a62120036ab5e06cade5eb7ff8c9caa86f42213c66be39900be8";
           libraryHaskellDepends = [ base bytestring tagged text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/string-class/string-class";
           description = "String class library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "string-combinators";
           version = "0.6.0.5";
           sha256 = "94914abfbd7d17051edab4bc9927c191fd05a652d9ef3cf259b5d0e0ca177e1e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/string-combinators";
           description = "Polymorphic functions to build and combine stringlike values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-conv" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "string-conv";
           version = "0.1.2";
           sha256 = "f259a03e6f296af19a71c07ab9a98a38661dfe40679f360f8e371334ea226039";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/string-conv";
           description = "Standardized conversion between string types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-conversions" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, utf8-string }:
         mkDerivation {
           pname = "string-conversions";
           version = "0.4.0.1";
           sha256 = "46bcce6d9ce62c558b7658a75d9c6a62f7259d6b0473d011d8078234ad6a1994";
           libraryHaskellDepends = [ base bytestring text utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/soenkehahn/string-conversions#readme";
           description = "Simplifies dealing with different types for strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "string-qq" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "string-qq";
           version = "0.0.2";
           sha256 = "9757cad387856a313729caffe0639215a10be7d72b09c44bcab9e55ee2a8c218";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "string-transform" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, utf8-string }:
         mkDerivation {
           pname = "string-transform";
           version = "0.1.0";
           sha256 = "64e91c0ceb35dd7282c917d6de09b0814a7851d4afd9011ded2f002b7a0d8bc1";
           libraryHaskellDepends = [ base bytestring text utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/string-transform#readme";
           description = "simple and easy haskell string transform wrapper";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stringable" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text }:
         mkDerivation {
           pname = "stringable";
           version = "0.1.3";
           sha256 = "e7af961e1eb52c89330aeb5434d7cfdebd3b712dd39812f68dcbd685e3da5a82";
           libraryHaskellDepends = [ base bytestring system-filepath text ];
           doHaddock = false;
           doCheck = false;
           description = "A Stringable type class, in the spirit of Foldable and Traversable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stringbuilder" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "stringbuilder";
           version = "0.5.1";
           sha256 = "d878bdc4da806dbce5ab684ef13d2634c17c15b991d0ed3bb25a331eba6603ba";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "A writer monad for multi-line string literals";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stringsearch" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "stringsearch";
           version = "0.3.6.6";
           sha256 = "295f1971920bc52263d8275d7054ad223a7e1aefe75533f9887735c9644ffe4a";
           libraryHaskellDepends = [ array base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dafis/stringsearch";
           description = "Fast searching, splitting and replacing of ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stripe-core" = callPackage
        ({ mkDerivation, aeson, base, bytestring, mtl, stdenv, text, time
         , transformers, unordered-containers
         }:
         mkDerivation {
           pname = "stripe-core";
           version = "2.2.3";
           sha256 = "bbc5242d07beac17d3404d8a7a7dcf9bab8e8bfc771c2324a65b3581c1afd86f";
           libraryHaskellDepends = [
             aeson base bytestring mtl text time transformers
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/stripe-haskell";
           description = "Stripe API for Haskell - Pure Core";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-haskell" = callPackage
        ({ mkDerivation, base, stdenv, stripe-core, stripe-http-streams }:
         mkDerivation {
           pname = "stripe-haskell";
           version = "2.2.3";
           sha256 = "5df82ed8931ba39ce0c5b65993d1f232ea43fa8c226ebc8b63eadfe41256cb20";
           libraryHaskellDepends = [ base stripe-core stripe-http-streams ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/stripe";
           description = "Stripe API for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-http-streams" = callPackage
        ({ mkDerivation, aeson, base, bytestring, HsOpenSSL, http-streams
         , io-streams, stdenv, stripe-core, text
         }:
         mkDerivation {
           pname = "stripe-http-streams";
           version = "2.2.3";
           sha256 = "57006c2c5325ffae1f2dff5021ff7e6b7c510cb1728326dc0cd59fca7b41b42d";
           libraryHaskellDepends = [
             aeson base bytestring HsOpenSSL http-streams io-streams stripe-core
             text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Stripe API for Haskell - http-streams backend";
           license = stdenv.lib.licenses.mit;
         }) {};
      "stripe-tests" = callPackage
        ({ mkDerivation, aeson, base, bytestring, free, hspec, hspec-core
         , mtl, random, stdenv, stripe-core, text, time, transformers
         , unordered-containers
         }:
         mkDerivation {
           pname = "stripe-tests";
           version = "2.2.3";
           sha256 = "1a1eb1a9d41c897c947990997530e1e1fa2bc04853141522243847bc14177afa";
           libraryHaskellDepends = [
             aeson base bytestring free hspec hspec-core mtl random stripe-core
             text time transformers unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmjio/stripe-haskell";
           description = "Tests for Stripe API bindings for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "strive" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, gpolyline
         , http-client, http-client-tls, http-types, stdenv
         , template-haskell, text, time, transformers
         }:
         mkDerivation {
           pname = "strive";
           version = "4.0.3";
           sha256 = "d821a6b2e4bebd2c1d1412e7508cbf0298c0a98b6d8c1c174bdddb2f01863aac";
           libraryHaskellDepends = [
             aeson base bytestring data-default gpolyline http-client
             http-client-tls http-types template-haskell text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/strive#readme";
           description = "A client for the Strava V3 API";
           license = stdenv.lib.licenses.mit;
         }) {};
      "structured-haskell-mode" = callPackage
        ({ mkDerivation, base, descriptive, ghc-prim, haskell-src-exts
         , stdenv, text
         }:
         mkDerivation {
           pname = "structured-haskell-mode";
           version = "1.1.0";
           sha256 = "c5517a56ebf64134b4b0f0d866357ab498a81d90469985fbeacc458c5ada38b4";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [
             base descriptive ghc-prim haskell-src-exts text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/chrisdone/structured-haskell-mode";
           description = "Structured editing Emacs mode for Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stylish-haskell" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, directory
         , filepath, haskell-src-exts, mtl, optparse-applicative, stdenv
         , strict, syb, yaml
         }:
         mkDerivation {
           pname = "stylish-haskell";
           version = "0.8.1.0";
           sha256 = "8757c7400477507f9428658650631de2c8d843ea354ead3ea2ded9fb2bbd1f23";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring containers directory filepath
             haskell-src-exts mtl syb yaml
           ];
           executableHaskellDepends = [
             aeson base bytestring containers directory filepath
             haskell-src-exts mtl optparse-applicative strict syb yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jaspervdj/stylish-haskell";
           description = "Haskell code prettifier";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "sum-type-boilerplate" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "sum-type-boilerplate";
           version = "0.1.1";
           sha256 = "3169da14c604e19afdcbf721ef1749b9486618ba23bbec14e86ae9862bf0ab9f";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jdreaver/sum-type-boilerplate#readme";
           description = "Library for reducing the boilerplate involved with sum types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sundown" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "sundown";
           version = "0.6";
           sha256 = "cb9b7e98138311375148ffe0fa4c4b04eb7a9f8ec2ae13a674d465e5d71db027";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bitonic/sundown";
           description = "Bindings to the sundown markdown library";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "superbuffer" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "superbuffer";
           version = "0.3.1.1";
           sha256 = "d7a5fb5478731deab80f89233e4f85511949c04b96ad6284f99f16c5c4166c78";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/superbuffer#readme";
           description = "Efficiently build a bytestring from smaller chunks";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "svg-builder" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, hashable, stdenv
         , text, unordered-containers
         }:
         mkDerivation {
           pname = "svg-builder";
           version = "0.1.0.2";
           sha256 = "81490cf0c843d6d7795ba32ac6cb05acf4a92431fe7702aa634ec52d60bfee54";
           revision = "1";
           editedCabalFile = "1h3bzkimiydj5j2rh7cyp5bhphvy6hglpkidhlfwy520sqsw3zvx";
           libraryHaskellDepends = [
             base blaze-builder bytestring hashable text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jeffreyrosenbluth/svg-builder.git";
           description = "DSL for building SVG";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "svg-tree" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers
         , JuicyPixels, lens, linear, mtl, scientific, stdenv, text
         , transformers, vector, xml
         }:
         mkDerivation {
           pname = "svg-tree";
           version = "0.6.2.1";
           sha256 = "3839209076dbf5ee2a3aa391215496f65966b90cb44f3d5b4e21ba919fe8bc0f";
           libraryHaskellDepends = [
             attoparsec base bytestring containers JuicyPixels lens linear mtl
             scientific text transformers vector xml
           ];
           doHaddock = false;
           doCheck = false;
           description = "SVG file loader and serializer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "swagger" = callPackage
        ({ mkDerivation, aeson, base, bytestring, stdenv, text, time
         , transformers
         }:
         mkDerivation {
           pname = "swagger";
           version = "0.3.0";
           sha256 = "c7144fb22a0d223eb2463a896200936eab665dc01f39affc103d2ee6a38f54d0";
           libraryHaskellDepends = [
             aeson base bytestring text time transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of swagger data model";
           license = "unknown";
         }) {};
      "swagger-petstore" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, bytestring
         , case-insensitive, containers, deepseq, exceptions, http-api-data
         , http-client, http-client-tls, http-media, http-types
         , iso8601-time, katip, microlens, mtl, network, random
         , safe-exceptions, stdenv, text, time, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "swagger-petstore";
           version = "0.0.1.8";
           sha256 = "07a683d97fddf18fea68141208c010aab2f1e634cb7bb4b6614e9e4783d854e7";
           libraryHaskellDepends = [
             aeson base base64-bytestring bytestring case-insensitive containers
             deepseq exceptions http-api-data http-client http-client-tls
             http-media http-types iso8601-time katip microlens mtl network
             random safe-exceptions text time transformers unordered-containers
             vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/swagger-api/swagger-codegen#readme";
           description = "Auto-generated swagger-petstore API Client";
           license = stdenv.lib.licenses.mit;
         }) {};
      "swagger2" = callPackage
        ({ mkDerivation, aeson, base, base-compat, bytestring, Cabal
         , cabal-doctest, containers, generics-sop, hashable, http-media
         , insert-ordered-containers, lens, mtl, network, scientific, stdenv
         , template-haskell, text, time, transformers, transformers-compat
         , unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "swagger2";
           version = "2.2";
           sha256 = "c6f9d37157c4e4d8b2f3775601adccdce50bd7209acc7a7565ddae2aca77df2f";
           revision = "1";
           editedCabalFile = "0dhs44zhb2yh4yxw88yvlijcd255ppm1ch7dz7pn7sdv1wr6kxq5";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson base base-compat bytestring containers generics-sop hashable
             http-media insert-ordered-containers lens mtl network scientific
             template-haskell text time transformers transformers-compat
             unordered-containers uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/GetShopTV/swagger2";
           description = "Swagger 2.0 data model";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "swish" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, hashable
         , intern, mtl, network-uri, old-locale, polyparse, semigroups
         , stdenv, text, time
         }:
         mkDerivation {
           pname = "swish";
           version = "0.9.1.10";
           sha256 = "ecb4268e4e55b159c5259cfaf4a704be7fc746df469c86216b3adf6dfa46dd82";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers directory filepath hashable intern mtl network-uri
             old-locale polyparse semigroups text time
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/doug_burke/swish/wiki/Home";
           description = "A semantic web toolkit";
           license = "LGPL";
         }) {};
      "syb" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "syb";
           version = "0.7";
           sha256 = "b8757dce5ab4045c49a0ae90407d575b87ee5523a7dd5dfa5c9d54fcceff42b5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
           description = "Scrap Your Boilerplate";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "syb-with-class" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "syb-with-class";
           version = "0.6.1.8";
           sha256 = "e34749a776da057eabf7895742987c55263bbf7e45cff7093de73a08e5416105";
           libraryHaskellDepends = [
             array base bytestring containers template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "Scrap Your Boilerplate With Class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "symbol" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv }:
         mkDerivation {
           pname = "symbol";
           version = "0.2.4";
           sha256 = "d074a7741f6ce0f2a604e4467c1c46e1acc2b707db107b3458395e646a9b8831";
           revision = "1";
           editedCabalFile = "01ab7600ja88wfvg9x8zmxksw44j9klmm71y9zmig7qxs1qslb25";
           libraryHaskellDepends = [ base containers deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.cs.drexel.edu/~mainland/";
           description = "A 'Symbol' type for fast symbol comparison";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "symengine" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "symengine";
           version = "0.1.2.0";
           sha256 = "0a59f76a924686ae84b1873c8783eb80f6e4092c90f3c971340053c1e6ca82f4";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/symengine/symengine.hs#readme";
           description = "SymEngine symbolic mathematics engine for Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "sysinfo" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "sysinfo";
           version = "0.1.1";
           sha256 = "46db40f2d186956547cca98f5583b28828a2b50255fbd404272c381db64dca29";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/sysinfo#readme";
           description = "Haskell Interface for getting overall system statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "system-argv0" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text }:
         mkDerivation {
           pname = "system-argv0";
           version = "0.1.1";
           sha256 = "6d51da9d2157be14a83f8dca3e9d4196d420e667cd685effb8d7b39185cf4ec6";
           libraryHaskellDepends = [ base bytestring system-filepath text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-filesystem/";
           description = "Get argv[0] as a FilePath";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-fileio" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, system-filepath, text
         , time, unix
         }:
         mkDerivation {
           pname = "system-fileio";
           version = "0.3.16.3";
           sha256 = "3175707cb322c65760fa2eb2ab17327f251c8294ad688efc6258e82328830491";
           libraryHaskellDepends = [
             base bytestring system-filepath text time unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-filesystem";
           description = "Consistent filesystem interaction across GHC versions (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-filepath" = callPackage
        ({ mkDerivation, base, bytestring, Cabal, deepseq, stdenv, text }:
         mkDerivation {
           pname = "system-filepath";
           version = "0.4.14";
           sha256 = "1656ce3c0d585650784ceb3f794748286e19fb635f557e7b29b0897f8956d993";
           revision = "1";
           editedCabalFile = "18llfvisghrn9w9yfgacqn51gs50a0lngah3bmg852h0swj7vkp8";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base bytestring deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/haskell-filesystem";
           description = "High-level, byte-based file and directory path manipulations (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "system-posix-redirect" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, unix }:
         mkDerivation {
           pname = "system-posix-redirect";
           version = "1.1.0.1";
           sha256 = "53535011e64c1792052987bc1e8799222286c30c349dd36d3fc08c8612fa6ef2";
           libraryHaskellDepends = [ base bytestring unix ];
           doHaddock = false;
           doCheck = false;
           description = "A toy module to temporarily redirect a program's stdout";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "systemd" = callPackage
        ({ mkDerivation, base, bytestring, network, stdenv, transformers
         , unix
         }:
         mkDerivation {
           pname = "systemd";
           version = "1.1.2";
           sha256 = "59461920b66b4b63b055b08af464a6fd9ff529f64527dfb573f9396dadd39287";
           libraryHaskellDepends = [
             base bytestring network transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erebe/systemd";
           description = "Systemd facilities (Socket activation, Notify)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tabl" = callPackage
        ({ mkDerivation, base, safe, stdenv, text }:
         mkDerivation {
           pname = "tabl";
           version = "1.0.3";
           sha256 = "4ed4b152c4c2ec8eebc8ec1e4dae6d7dd99b1b15148ea5b43be32ed9c333b0df";
           libraryHaskellDepends = [ base safe text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lovasko/tabl";
           description = "Table layout";
           license = "unknown";
         }) {};
      "tabular" = callPackage
        ({ mkDerivation, base, csv, html, mtl, stdenv }:
         mkDerivation {
           pname = "tabular";
           version = "0.2.2.7";
           sha256 = "13f8da12108dafcf3194eb6bf25febf0081c7e4734f66d2d4aeee899f3c14ffb";
           libraryHaskellDepends = [ base csv html mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/kowey/tabular";
           description = "Two-dimensional data tables with rendering functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagchup" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-accessor
         , explicit-exception, non-empty, stdenv, transformers, utility-ht
         , xml-basic
         }:
         mkDerivation {
           pname = "tagchup";
           version = "0.4.1";
           sha256 = "122c975d73a6bcbe98b3352144ec249494fcd30b6ed23eff19acc562d7ee24c0";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers data-accessor explicit-exception
             non-empty transformers utility-ht xml-basic
           ];
           executableHaskellDepends = [ base xml-basic ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/tagchup/";
           description = "alternative package for processing of tag soups";
           license = "GPL";
         }) {};
      "tagged" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, template-haskell
         , transformers, transformers-compat
         }:
         mkDerivation {
           pname = "tagged";
           version = "0.8.5";
           sha256 = "e47c51c955ed77b0fa36897f652df990aa0a8c4eb278efaddcd604be00fc8d99";
           revision = "2";
           editedCabalFile = "0r2knfcq0b4s652vlvlnfwxlc2mkc2ra9kl8bp4zdn1awmfy0ia5";
           libraryHaskellDepends = [
             base deepseq template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/tagged";
           description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagged-binary" = callPackage
        ({ mkDerivation, base, base-compat, binary, bytestring, pureMD5
         , stdenv
         }:
         mkDerivation {
           pname = "tagged-binary";
           version = "0.2.0.1";
           sha256 = "72cfaa0995838dfb7f0cda897175c469d6b7aef6fd396fc56abc70194b0f645b";
           libraryHaskellDepends = [
             base base-compat binary bytestring pureMD5
           ];
           doHaddock = false;
           doCheck = false;
           description = "Provides tools for serializing data tagged with type information";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tagged-identity" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers }:
         mkDerivation {
           pname = "tagged-identity";
           version = "0.1.2";
           sha256 = "916dd7fdd15452f3d760c345e023ce99496806b813ab01b03ff1b240bbd50210";
           libraryHaskellDepends = [ base mtl transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/tagged-identity";
           description = "Trivial monad transformer that allows identical monad stacks have different types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagsoup" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv, text }:
         mkDerivation {
           pname = "tagsoup";
           version = "0.14.6";
           sha256 = "4b4ed4db1428e859389d628dd5755074f659a424ec49934ec53e44b0fc6a63fb";
           libraryHaskellDepends = [ base bytestring containers text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/tagsoup#readme";
           description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tagstream-conduit" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , case-insensitive, conduit, conduit-extra, data-default, resourcet
         , stdenv, text, transformers, xml-conduit
         }:
         mkDerivation {
           pname = "tagstream-conduit";
           version = "0.5.5.3";
           sha256 = "b296e8f0ba18ae951b5bb3fc2d9d964954666df61ea9363d667f251af17134ab";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring case-insensitive conduit
             conduit-extra data-default resourcet text transformers xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yihuang/tagstream-conduit";
           description = "streamlined html tag parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tar" = callPackage
        ({ mkDerivation, array, base, bytestring, containers, deepseq
         , directory, filepath, stdenv, time
         }:
         mkDerivation {
           pname = "tar";
           version = "0.5.0.3";
           sha256 = "d8d9ad876365f88bdccd02073049e58715cd5ba94de06eb98e21d595244918a3";
           libraryHaskellDepends = [
             array base bytestring containers deepseq directory filepath time
           ];
           doHaddock = false;
           doCheck = false;
           description = "Reading, writing and manipulating \".tar\" archive files.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tar-conduit" = callPackage
        ({ mkDerivation, base, bytestring, conduit-combinators, stdenv }:
         mkDerivation {
           pname = "tar-conduit";
           version = "0.1.1";
           sha256 = "3945132514c11f1825b9be9eaeac8c14c300d966922a3eb2ac84303164f02da1";
           libraryHaskellDepends = [ base bytestring conduit-combinators ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/tar-conduit#readme";
           description = "Parse tar files using conduit for streaming";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tardis" = callPackage
        ({ mkDerivation, base, mmorph, mtl, stdenv }:
         mkDerivation {
           pname = "tardis";
           version = "0.4.1.0";
           sha256 = "e672abadd75055c2372d722c98058f7f3403fcca18258565d1cdd8e0dc25a5d9";
           revision = "1";
           editedCabalFile = "1wp6vp90g19hv8r2l83ava7qxf0933gb7ni2zgyfa66vlvxvhibv";
           libraryHaskellDepends = [ base mmorph mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanBurton/tardis";
           description = "Bidirectional state monad transformer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, clock, containers
         , deepseq, mtl, optparse-applicative, regex-tdfa, stdenv, stm
         , tagged, unbounded-delays, unix
         }:
         mkDerivation {
           pname = "tasty";
           version = "0.11.3";
           sha256 = "2bc8f3ec494f0b6857d646e61cc41410334593c31cb3b346f247123c1549a3bc";
           libraryHaskellDepends = [
             ansi-terminal async base clock containers deepseq mtl
             optparse-applicative regex-tdfa stm tagged unbounded-delays unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/tasty";
           description = "Modern and extensible testing framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-ant-xml" = callPackage
        ({ mkDerivation, base, containers, directory, filepath
         , generic-deriving, ghc-prim, mtl, stdenv, stm, tagged, tasty
         , transformers, xml
         }:
         mkDerivation {
           pname = "tasty-ant-xml";
           version = "1.1.3";
           sha256 = "96cc9575a3179d6f575598e72e80feed9b1270108f6beea14f62d78166dfb95b";
           libraryHaskellDepends = [
             base containers directory filepath generic-deriving ghc-prim mtl
             stm tagged tasty transformers xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/tasty-ant-xml";
           description = "Render tasty output to XML for Jenkins";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-auto" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "tasty-auto";
           version = "0.2.0.0";
           sha256 = "b24e6f45aca98bc83316261d21ac5d9094aede0c5c7179c16ef2f69dfa3cf65a";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory filepath ];
           executableHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/tasty-auto#readme";
           description = "Auto discovery for Tasty with support for ingredients and test tree generation";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-dejafu" = callPackage
        ({ mkDerivation, base, dejafu, random, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-dejafu";
           version = "0.7.1.1";
           sha256 = "54dfa72d0491f04180d25c2e7b2ed74c455f950b472eddd05a6e896fea7e1513";
           libraryHaskellDepends = [ base dejafu random tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barrucadu/dejafu";
           description = "Deja Fu support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-discover" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, Glob
         , stdenv
         }:
         mkDerivation {
           pname = "tasty-discover";
           version = "4.1.5";
           sha256 = "f05df4a6a9d1620989237d7e3d68c1f7a243aef9e1b2d8e92460b3ecbc044fec";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers directory filepath Glob
           ];
           executableHaskellDepends = [
             base containers directory filepath Glob
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lwm/tasty-discover#readme";
           description = "Test discovery for the tasty framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-expected-failure" = callPackage
        ({ mkDerivation, base, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-expected-failure";
           version = "0.11.0.4";
           sha256 = "41ed5a34e250ee5dc78daf93aa02a25d751b2c6423302faf49f28986822ba564";
           revision = "1";
           editedCabalFile = "07sz28vm5rllp9yj1ibhz015s6c4gcq1vzxlphhqam1ah096jc42";
           libraryHaskellDepends = [ base tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nomeata/tasty-expected-failure";
           description = "Mark tasty tests as failure expected";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-fail-fast" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm, tagged, tasty }:
         mkDerivation {
           pname = "tasty-fail-fast";
           version = "0.0.3";
           sha256 = "84a75750a28dfad8d3007ebf9a99789a36e304f737752d9ef1953e19d65078de";
           libraryHaskellDepends = [ base containers stm tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/MichaelXavier/tasty-fail-fast#readme";
           description = "Adds the ability to fail a tasty test suite on first test failure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-golden" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, deepseq
         , directory, filepath, mtl, optparse-applicative, process, stdenv
         , tagged, tasty, temporary
         }:
         mkDerivation {
           pname = "tasty-golden";
           version = "2.3.1.2";
           sha256 = "691e1ff7f3b773d1c9fdbc2dc5813c874a1fe0adc37afa476492a35877de1921";
           libraryHaskellDepends = [
             async base bytestring containers deepseq directory filepath mtl
             optparse-applicative process tagged tasty temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/tasty-golden";
           description = "Golden tests support for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-hedgehog" = callPackage
        ({ mkDerivation, base, hedgehog, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-hedgehog";
           version = "0.1.0.2";
           sha256 = "1dc1ffb73bae9c6ccefb050a5489faae9b3144e987f8d054a9645d7e27884d32";
           libraryHaskellDepends = [ base hedgehog tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/tasty-hedghog";
           description = "Integrates the hedgehog testing library with the tasty testing framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-hspec" = callPackage
        ({ mkDerivation, base, hspec, hspec-core, QuickCheck, stdenv, tasty
         , tasty-quickcheck, tasty-smallcheck
         }:
         mkDerivation {
           pname = "tasty-hspec";
           version = "1.1.3.3";
           sha256 = "ad208527a00fb155d0be81cae2f51326d625b9a5def9acc6ab558700a92cd503";
           libraryHaskellDepends = [
             base hspec hspec-core QuickCheck tasty tasty-quickcheck
             tasty-smallcheck
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mitchellwrosen/tasty-hspec";
           description = "Hspec support for the Tasty test framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-html" = callPackage
        ({ mkDerivation, base, blaze-html, bytestring, containers, filepath
         , generic-deriving, mtl, stdenv, stm, tagged, tasty, text
         , transformers
         }:
         mkDerivation {
           pname = "tasty-html";
           version = "0.4.1.1";
           sha256 = "0eea1c9fcf1ef3aeb94b811086e11d87ce59f90bb91afa8765152b943c591f1a";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base blaze-html bytestring containers filepath generic-deriving mtl
             stm tagged tasty text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/feuerbach/tasty-html";
           description = "Render tasty output to HTML";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-hunit" = callPackage
        ({ mkDerivation, base, stdenv, tasty }:
         mkDerivation {
           pname = "tasty-hunit";
           version = "0.9.2";
           sha256 = "ae1efc2a750dfc09f9276d3a57e6a8f8b30f1a6932e81c53fcd67132b8ea1623";
           libraryHaskellDepends = [ base tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "HUnit support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-kat" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, tasty }:
         mkDerivation {
           pname = "tasty-kat";
           version = "0.0.3";
           sha256 = "a72501f0f77db372648566bbba1dd1d6d0d0c975b42238875d663313e9a5db93";
           libraryHaskellDepends = [ base bytestring tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/tasty-kat";
           description = "Known Answer Tests (KAT) framework for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-program" = callPackage
        ({ mkDerivation, base, deepseq, directory, filepath, process
         , stdenv, tasty
         }:
         mkDerivation {
           pname = "tasty-program";
           version = "1.0.5";
           sha256 = "4cb255ad5f037029cc6ae244fffdfb0ed7c65a4b0575d98ec61c067d6f5829c4";
           libraryHaskellDepends = [
             base deepseq directory filepath process tasty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jstolarek/tasty-program";
           description = "Use tasty framework to test whether a program executes correctly";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-quickcheck" = callPackage
        ({ mkDerivation, base, QuickCheck, random, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-quickcheck";
           version = "0.9.1";
           sha256 = "aabf97cf8e852d18be7ffea9a337f7a70c3416ec14255b49a02d976aa732ab0d";
           libraryHaskellDepends = [ base QuickCheck random tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "QuickCheck support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-rerun" = callPackage
        ({ mkDerivation, base, containers, mtl, optparse-applicative
         , reducers, split, stdenv, stm, tagged, tasty, transformers
         }:
         mkDerivation {
           pname = "tasty-rerun";
           version = "1.1.10";
           sha256 = "2ba4afeecc30f34bf1c7fea73fc6f3a213022de9033660af4e8c72004e77e69c";
           libraryHaskellDepends = [
             base containers mtl optparse-applicative reducers split stm tagged
             tasty transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ocharles/tasty-rerun";
           description = "Run tests by filtering the test tree depending on the result of previous test runs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tasty-silver" = callPackage
        ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
         , deepseq, directory, filepath, mtl, optparse-applicative, process
         , process-extras, regex-tdfa, semigroups, stdenv, stm, tagged
         , tasty, temporary, text
         }:
         mkDerivation {
           pname = "tasty-silver";
           version = "3.1.11";
           sha256 = "5f2170cee1f3104d1e8d6937bb032b57ca712704500286aae5e7e8608cf073e7";
           libraryHaskellDepends = [
             ansi-terminal async base bytestring containers deepseq directory
             filepath mtl optparse-applicative process process-extras regex-tdfa
             semigroups stm tagged tasty temporary text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phile314/tasty-silver";
           description = "A fancy test runner, including support for golden tests";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-smallcheck" = callPackage
        ({ mkDerivation, async, base, smallcheck, stdenv, tagged, tasty }:
         mkDerivation {
           pname = "tasty-smallcheck";
           version = "0.8.1";
           sha256 = "314ba7acdb7793730e7677f553a72dd6a4a8f9a45ff3e931cd7d384affb3c6d8";
           libraryHaskellDepends = [ async base smallcheck tagged tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://documentup.com/feuerbach/tasty";
           description = "SmallCheck support for the Tasty test framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-stats" = callPackage
        ({ mkDerivation, base, containers, directory, process, stdenv, stm
         , tagged, tasty, time
         }:
         mkDerivation {
           pname = "tasty-stats";
           version = "0.2.0.3";
           sha256 = "2bf0a21f0f3f616de2a2d8cccf42371b63779640eca789dccee0089d9de3decb";
           revision = "2";
           editedCabalFile = "1gkan66glb235kakvwkidmxd0cn7s9405w3njiwa5k6cvkpkny4x";
           libraryHaskellDepends = [
             base containers directory process stm tagged tasty time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/tasty-stats#readme";
           description = "Collect statistics of your Tasty testsuite in a CSV file";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-tap" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm, tasty }:
         mkDerivation {
           pname = "tasty-tap";
           version = "0.0.4";
           sha256 = "c85ee6356f7bcdf3756add5baca06d942656400c3e9765e5087229b53d2eff75";
           libraryHaskellDepends = [ base containers stm tasty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/michaelxavier/tasty-tap";
           description = "TAP (Test Anything Protocol) Version 13 formatter for tasty";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tasty-th" = callPackage
        ({ mkDerivation, base, haskell-src-exts, stdenv, tasty
         , template-haskell
         }:
         mkDerivation {
           pname = "tasty-th";
           version = "0.1.7";
           sha256 = "435aac8f317e2f8cb1aa96fb3f7c9003c1ac28e6d3ca4c3c23f5142178de512c";
           libraryHaskellDepends = [
             base haskell-src-exts tasty template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bennofs/tasty-th";
           description = "Automatic tasty test case discovery using TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tce-conf" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "tce-conf";
           version = "1.3";
           sha256 = "b051843bb941ed137242edfcfb28b1c15083951272fe292e82c140c9e1ad26a2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers ];
           executableHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/dino/tce-conf";
           description = "Very simple config file reading";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tcp-streams" = callPackage
        ({ mkDerivation, base, bytestring, data-default-class, io-streams
         , network, pem, stdenv, tls, x509, x509-store, x509-system
         }:
         mkDerivation {
           pname = "tcp-streams";
           version = "1.0.1.0";
           sha256 = "77d812e5db567875ca26c2682ceddf4bcf825d90dd10dcb171279bd7e96e4861";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring data-default-class io-streams network pem tls x509
             x509-store x509-system
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/didi-FP/tcp-streams";
           description = "One stop solution for tcp client and server with tls support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tcp-streams-openssl" = callPackage
        ({ mkDerivation, base, bytestring, HsOpenSSL, HsOpenSSL-x509-system
         , io-streams, network, stdenv, tcp-streams
         }:
         mkDerivation {
           pname = "tcp-streams-openssl";
           version = "1.0.1.0";
           sha256 = "c3e7588ba7348fac87a9dcc531909f90bb3b4a1c01da9eb871a918d02b146afe";
           libraryHaskellDepends = [
             base bytestring HsOpenSSL HsOpenSSL-x509-system io-streams network
             tcp-streams
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/didi-FP/tcp-streams";
           description = "Tcp streams using openssl for tls support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tdigest" = callPackage
        ({ mkDerivation, base, base-compat, binary, Cabal, cabal-doctest
         , deepseq, reducers, semigroupoids, semigroups, stdenv, vector
         , vector-algorithms
         }:
         mkDerivation {
           pname = "tdigest";
           version = "0.1";
           sha256 = "0036b3aebe6556ced3a108579846346c9123d65c9dcd09c1d44435a64e3dc54b";
           revision = "2";
           editedCabalFile = "0g54mzya141wllmsv977san1qz08lz2z36znkv6cqxh8z4vyfwdk";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base base-compat binary deepseq reducers semigroupoids semigroups
             vector vector-algorithms
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/futurice/haskell-tdigest#readme";
           description = "On-line accumulation of rank-based statistics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "teardown" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, deepseq, exceptions
         , protolude, safe-exceptions, stdenv, text, time
         }:
         mkDerivation {
           pname = "teardown";
           version = "0.3.0.0";
           sha256 = "82354f49f7a32d86cd53cf999abe95324fc3ddd904f306f05cd694568741876c";
           libraryHaskellDepends = [
             ansi-wl-pprint base deepseq exceptions protolude safe-exceptions
             text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/roman/Haskell-teardown#readme";
           description = "Build composable components for your application with clear teardown semantics";
           license = stdenv.lib.licenses.mit;
         }) {};
      "template" = callPackage
        ({ mkDerivation, base, mtl, stdenv, text }:
         mkDerivation {
           pname = "template";
           version = "0.2.0.10";
           sha256 = "8fd5a321b1c62f8ca5ed68c098e676917a5dac4d65809fceaed4b52c22b4ac82";
           libraryHaskellDepends = [ base mtl text ];
           doHaddock = false;
           doCheck = false;
           description = "Simple string substitution";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "temporary" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, stdenv
         , transformers, unix
         }:
         mkDerivation {
           pname = "temporary";
           version = "1.2.1.1";
           sha256 = "55772471e59529f4bde9555f6abb21d19a611c7d70b13befe114dc1a0ecb00f3";
           libraryHaskellDepends = [
             base directory exceptions filepath transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/temporary";
           description = "Portable temporary file and directory support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "temporary-rc" = callPackage
        ({ mkDerivation, base, directory, exceptions, filepath, stdenv
         , transformers, unix
         }:
         mkDerivation {
           pname = "temporary-rc";
           version = "1.2.0.3";
           sha256 = "1a4f8dd65f7db92316a68ef64c3518873799115babce92ef9869103d318011db";
           libraryHaskellDepends = [
             base directory exceptions filepath transformers unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/feuerbach/temporary";
           description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tensorflow-test" = callPackage
        ({ mkDerivation, base, HUnit, stdenv, vector }:
         mkDerivation {
           pname = "tensorflow-test";
           version = "0.1.0.0";
           sha256 = "378217dde895daf6599a8d3fb07ed59de5e2d8024958277558faca190bb44afc";
           libraryHaskellDepends = [ base HUnit vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tensorflow/haskell#readme";
           description = "Some common functions for test suites";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "termcolor" = callPackage
        ({ mkDerivation, base, cli, stdenv }:
         mkDerivation {
           pname = "termcolor";
           version = "0.2.0.0";
           sha256 = "b09d399a733d867cb05dc51de4ee31d5db73cd453099e342973da91c30f21a90";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base cli ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mdibaiee/termcolor#readme";
           description = "Composable terminal colors";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "terminal-progress-bar" = callPackage
        ({ mkDerivation, base, stdenv, stm, stm-chans }:
         mkDerivation {
           pname = "terminal-progress-bar";
           version = "0.1.1.1";
           sha256 = "d7a112a15de1ab587d1d66cdfec3e8abadb521c7ec60ac965f4b04b66cbd35f9";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base stm stm-chans ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/roelvandijk/terminal-progress-bar";
           description = "A simple progress bar in the terminal";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "terminal-size" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "terminal-size";
           version = "0.3.2.1";
           sha256 = "b5c23e964756bc13914649a67d63233f59ad0a813abe7cadeb2fc9d586dc9658";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Get terminal window height and width";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-fixture" = callPackage
        ({ mkDerivation, base, data-default-class, exceptions
         , haskell-src-exts, haskell-src-meta, mtl, stdenv, template-haskell
         , th-orphans
         }:
         mkDerivation {
           pname = "test-fixture";
           version = "0.5.1.0";
           sha256 = "9b1bd8e6984146679f8a86f8d83069fd7a9461107417b657d4fb1d2eba3d5ed6";
           libraryHaskellDepends = [
             base data-default-class exceptions haskell-src-exts
             haskell-src-meta mtl template-haskell th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/cjdev/test-fixture#readme";
           description = "Test monadic side-effects";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework" = callPackage
        ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
         , hostname, old-locale, random, regex-posix, stdenv, time, xml
         }:
         mkDerivation {
           pname = "test-framework";
           version = "0.8.1.1";
           sha256 = "7883626a5aebb1df327bf26dbd382208946250a79f9cc3bf9a9eb0b0767bb273";
           revision = "3";
           editedCabalFile = "1b6pi4j1dpcbiyx1bpfks29x293j02z7ashs2sdc8fhzbwsr9lxj";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal ansi-wl-pprint base containers hostname old-locale
             random regex-posix time xml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://batterseapower.github.io/test-framework/";
           description = "Framework for running and organising tests, with HUnit and QuickCheck support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-hunit" = callPackage
        ({ mkDerivation, base, extensible-exceptions, HUnit, stdenv
         , test-framework
         }:
         mkDerivation {
           pname = "test-framework-hunit";
           version = "0.3.0.2";
           sha256 = "95cb8ee02a850b164bfdabdf4dbc839d621361f3ac770ad21ea43a8bde360bf8";
           revision = "3";
           editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
           libraryHaskellDepends = [
             base extensible-exceptions HUnit test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://batterseapower.github.io/test-framework/";
           description = "HUnit support for the test-framework package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-quickcheck2" = callPackage
        ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
         , stdenv, test-framework
         }:
         mkDerivation {
           pname = "test-framework-quickcheck2";
           version = "0.3.0.4";
           sha256 = "d763afb99fa14cffaccbfad259534a656be129329ba12246fed2e4330619486e";
           libraryHaskellDepends = [
             base extensible-exceptions QuickCheck random test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://haskell.github.io/test-framework/";
           description = "QuickCheck-2 support for the test-framework package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-smallcheck" = callPackage
        ({ mkDerivation, base, smallcheck, stdenv, test-framework
         , transformers
         }:
         mkDerivation {
           pname = "test-framework-smallcheck";
           version = "0.2";
           sha256 = "6081c4f35967b0d0cb92ac09a915fa9e2da01c401266b20ce18793fbc2bceff6";
           libraryHaskellDepends = [
             base smallcheck test-framework transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/smallcheck";
           description = "Support for SmallCheck tests in test-framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "test-framework-th" = callPackage
        ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
         , regex-posix, stdenv, template-haskell, test-framework
         }:
         mkDerivation {
           pname = "test-framework-th";
           version = "0.2.4";
           sha256 = "8b780d9e3edd8d91e24f72d9fa1f80420e52959428ad7c22d0694901a43f9c8a";
           libraryHaskellDepends = [
             base haskell-src-exts language-haskell-extract regex-posix
             template-haskell test-framework
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/finnsson/test-generator";
           description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "texmath" = callPackage
        ({ mkDerivation, base, containers, mtl, network-uri, pandoc-types
         , parsec, stdenv, syb, xml
         }:
         mkDerivation {
           pname = "texmath";
           version = "0.10.1.1";
           sha256 = "52c9638e06ea66a6b75d1d3cce4eb0ebad66af5ce3e53c6c90a6b1564ba34e60";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers mtl pandoc-types parsec syb xml
           ];
           executableHaskellDepends = [ network-uri ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/texmath";
           description = "Conversion between formats used to represent mathematics";
           license = "GPL";
         }) {};
      "text" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, deepseq, ghc-prim
         , integer-gmp, stdenv
         }:
         mkDerivation {
           pname = "text";
           version = "1.2.2.2";
           sha256 = "31465106360a7d7e214d96f1d1b4303a113ffce1bde44a4e614053a1e5072df9";
           libraryHaskellDepends = [
             array base binary bytestring deepseq ghc-prim integer-gmp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text";
           description = "An efficient packed Unicode text type";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "text-all" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, text-format
         , utf8-string
         }:
         mkDerivation {
           pname = "text-all";
           version = "0.4.1.1";
           sha256 = "fc7842805af0cf61d7c581cef600b7b3d18c4e68dacd7a6123cf6da3090daea4";
           libraryHaskellDepends = [
             base bytestring text text-format utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/aelve/text-all";
           description = "Everything Data.Text related in one package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-binary" = callPackage
        ({ mkDerivation, base, binary, stdenv, text }:
         mkDerivation {
           pname = "text-binary";
           version = "0.2.1.1";
           sha256 = "b697b2bd09080643d4686705c779122129638904870df5c1d41c8fc72f08f4a1";
           libraryHaskellDepends = [ base binary text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kawu/text-binary";
           description = "Binary instances for text types";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "text-conversions" = callPackage
        ({ mkDerivation, base, base16-bytestring, base64-bytestring
         , bytestring, errors, stdenv, text
         }:
         mkDerivation {
           pname = "text-conversions";
           version = "0.3.0";
           sha256 = "1756be2f6b515fea9e00b383c00d1ee851f8b25ddbc2901dd6be27d9b6292c21";
           libraryHaskellDepends = [
             base base16-bytestring base64-bytestring bytestring errors text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cjdev/text-conversions#readme";
           description = "Safe conversions between textual types";
           license = stdenv.lib.licenses.isc;
         }) {};
      "text-format" = callPackage
        ({ mkDerivation, array, base, double-conversion, ghc-prim
         , integer-gmp, old-locale, stdenv, text, time, transformers
         }:
         mkDerivation {
           pname = "text-format";
           version = "0.3.1.1";
           sha256 = "6de112764446a65370204f35a5fc4b1831106049f90918545d5dcd2ddd7fee0b";
           libraryHaskellDepends = [
             array base double-conversion ghc-prim integer-gmp old-locale text
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text-format";
           description = "Text formatting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-generic-pretty" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, groom, ixset-typed
         , protolude, QuickCheck, stdenv, string-conversions, text, time
         , unordered-containers, wl-pprint-text
         }:
         mkDerivation {
           pname = "text-generic-pretty";
           version = "1.2.1";
           sha256 = "cff331fdea2f695cf9a2583f4bd7393935b4a6ffa2bd47eb7dd983c6184752c7";
           libraryHaskellDepends = [
             base containers ghc-prim groom ixset-typed protolude QuickCheck
             string-conversions text time unordered-containers wl-pprint-text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joe9/GenericPretty";
           description = "A generic, derivable, haskell pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-icu" = callPackage
        ({ mkDerivation, base, bytestring, deepseq, icu, stdenv, text }:
         mkDerivation {
           pname = "text-icu";
           version = "0.7.0.1";
           sha256 = "e2764c2749033706eed5b9fb3cda11177ad15cdf11912028f551eca39a2c7f78";
           libraryHaskellDepends = [ base bytestring deepseq text ];
           librarySystemDepends = [ icu ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/text-icu";
           description = "Bindings to the ICU library";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) icu;};
      "text-latin1" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, data-checked
         , hashable, stdenv, text
         }:
         mkDerivation {
           pname = "text-latin1";
           version = "0.3";
           sha256 = "892bbccaed95502faf33dfda612358f24fcaaee521ffa926b34b5236394e40b3";
           libraryHaskellDepends = [
             base bytestring case-insensitive data-checked hashable text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/text-latin1";
           description = "Latin-1 (including ASCII) utility functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-ldap" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, containers, dlist
         , memory, stdenv, transformers
         }:
         mkDerivation {
           pname = "text-ldap";
           version = "0.1.1.11";
           sha256 = "daddf33568e290014eda3ea101c382bbddb5977807e8a721b06c4f95706341a4";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base bytestring containers dlist memory transformers
           ];
           executableHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           description = "Parser and Printer for LDAP text data stream";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-manipulate" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "text-manipulate";
           version = "0.2.0.1";
           sha256 = "e0e9c71d9b1cfb7d3bca3d0a500d939b3efc6684515c0d7bd685503aa4f49d2f";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/brendanhay/text-manipulate";
           description = "Case conversion, word boundary manipulation, and textual subjugation";
           license = "unknown";
         }) {};
      "text-metrics" = callPackage
        ({ mkDerivation, base, containers, stdenv, text, vector }:
         mkDerivation {
           pname = "text-metrics";
           version = "0.3.0";
           sha256 = "3874af74060e35f01702640b353ac2180d93bb5d292a204e0ee3cadd26efbfa2";
           revision = "1";
           editedCabalFile = "0jl0vlx9y0n7x4j5zspx6zmbbnmlf5p2bg6v9k2afdfc02fmhasm";
           libraryHaskellDepends = [ base containers text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/text-metrics";
           description = "Calculate various string metrics efficiently";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-postgresql" = callPackage
        ({ mkDerivation, base, dlist, stdenv, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "text-postgresql";
           version = "0.0.2.3";
           sha256 = "e23c7563532ae93aac0bfa541fabb46979437f4bf3d68be3a33aa7368270e436";
           libraryHaskellDepends = [
             base dlist transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://khibino.github.io/haskell-relational-record/";
           description = "Parser and Printer of PostgreSQL extended types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-printer" = callPackage
        ({ mkDerivation, base, bytestring, pretty, semigroups, stdenv, text
         , text-latin1
         }:
         mkDerivation {
           pname = "text-printer";
           version = "0.5";
           sha256 = "8f0c01a6a15b4314c2d47ab5f0772d176ec38f1c1fe190b9fa7db5149a6c4a0b";
           libraryHaskellDepends = [
             base bytestring pretty semigroups text text-latin1
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/text-printer";
           description = "Abstract interface for text builders/printers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-region" = callPackage
        ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
         , groups, lens, stdenv, text
         }:
         mkDerivation {
           pname = "text-region";
           version = "0.3.0.0";
           sha256 = "cae9417e0ee0368d0c6e47d8c1a3b00446ae43d997c1d31451b41961dba5c977";
           libraryHaskellDepends = [
             aeson base base-unicode-symbols bytestring groups lens text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvoidex/text-region";
           description = "Marking text regions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-short" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, hashable
         , stdenv, text
         }:
         mkDerivation {
           pname = "text-short";
           version = "0.1.1";
           sha256 = "55eff9f33471393bfc9b12a790e18e9170c8f1c668359b8f781be31eac1521b1";
           libraryHaskellDepends = [
             base binary bytestring deepseq hashable text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Memory-efficient representation of Unicode text strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-show" = callPackage
        ({ mkDerivation, array, base, base-compat, bifunctors, bytestring
         , bytestring-builder, containers, contravariant, generic-deriving
         , ghc-boot-th, ghc-prim, integer-gmp, nats, semigroups, stdenv
         , tagged, template-haskell, text, th-abstraction, th-lift
         , transformers, transformers-compat, void
         }:
         mkDerivation {
           pname = "text-show";
           version = "3.7.1";
           sha256 = "29214d9016f384320a29d3ba1cf9c468d443e3487ff30aaf245ba4df2f1b6e3d";
           revision = "1";
           editedCabalFile = "1f30i7b45hq3m1hb7b6m8kc1fwz4i697m17wwiabjsyzbx4qiv98";
           libraryHaskellDepends = [
             array base base-compat bifunctors bytestring bytestring-builder
             containers contravariant generic-deriving ghc-boot-th ghc-prim
             integer-gmp nats semigroups tagged template-haskell text
             th-abstraction th-lift transformers transformers-compat void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/text-show";
           description = "Efficient conversion of values into Text";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-show-instances" = callPackage
        ({ mkDerivation, base, base-compat, bifunctors, binary, bytestring
         , containers, directory, ghc-boot-th, haskeline, hoopl, hpc
         , old-locale, old-time, pretty, process, random, semigroups, stdenv
         , tagged, template-haskell, terminfo, text, text-show, time
         , transformers, transformers-compat, unix, unordered-containers
         , vector, xhtml
         }:
         mkDerivation {
           pname = "text-show-instances";
           version = "3.6.2";
           sha256 = "259f90f83de40524a7e8563c25faa01a56e23c5134c3458a2350fcfbf78ac430";
           revision = "1";
           editedCabalFile = "04rkwk7c6zzl2ql22x66gn3amgq7cfqdndxyhh6ywlbksa9ljjsw";
           libraryHaskellDepends = [
             base base-compat bifunctors binary bytestring containers directory
             ghc-boot-th haskeline hoopl hpc old-locale old-time pretty process
             random semigroups tagged template-haskell terminfo text text-show
             time transformers transformers-compat unix unordered-containers
             vector xhtml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/RyanGlScott/text-show-instances";
           description = "Additional instances for text-show";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "text-zipper" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, text, vector }:
         mkDerivation {
           pname = "text-zipper";
           version = "0.10.1";
           sha256 = "9afaeb93d55b0bb6d0d6f495e3ff0789a60d0dee57fb6103f52e4c05ae64b14b";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base deepseq text vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/text-zipper/";
           description = "A text editor zipper library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "textlocal" = callPackage
        ({ mkDerivation, aeson, base, bytestring, http-client
         , http-client-tls, http-conduit, stdenv, text, unix-time
         }:
         mkDerivation {
           pname = "textlocal";
           version = "0.1.0.5";
           sha256 = "8954ff6270c9920fc390be6b9f398975ea06dd6808a411cbf8fa5fb4a9cf3087";
           libraryHaskellDepends = [
             aeson base bytestring http-client http-client-tls http-conduit text
             unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/just-chow/textlocal";
           description = "Haskell wrapper for textlocal SMS gateway";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tf-random" = callPackage
        ({ mkDerivation, base, primitive, random, stdenv, time }:
         mkDerivation {
           pname = "tf-random";
           version = "0.5";
           sha256 = "2e30cec027b313c9e1794d326635d8fc5f79b6bf6e7580ab4b00186dadc88510";
           libraryHaskellDepends = [ base primitive random time ];
           doHaddock = false;
           doCheck = false;
           description = "High-quality splittable pseudorandom number generator";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tfp" = callPackage
        ({ mkDerivation, base, stdenv, utility-ht }:
         mkDerivation {
           pname = "tfp";
           version = "1.0.0.2";
           sha256 = "9a817090cb91f78424affc3bfb6a7ea65b520087b779c9fd501fc9779e654cda";
           libraryHaskellDepends = [ base utility-ht ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Type_arithmetic";
           description = "Type-level integers, booleans, lists using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-abstraction" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, stdenv
         , template-haskell
         }:
         mkDerivation {
           pname = "th-abstraction";
           version = "0.2.6.0";
           sha256 = "e52e289a547d68f203d65f2e63ec2d87a3c613007d2fe873615c0969b981823c";
           revision = "1";
           editedCabalFile = "0k4s4nbg9jlgaza38842jnzs8s01ig85fzmjgd10k9hl02gc3r44";
           libraryHaskellDepends = [
             base containers ghc-prim template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/glguy/th-abstraction";
           description = "Nicer interface for reified information about data types";
           license = stdenv.lib.licenses.isc;
         }) {};
      "th-data-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-data-compat";
           version = "0.0.2.5";
           sha256 = "1aafbc567069748daf49334cf3ee91e673e5dc2fac0238ac9e49a71fd97b4fe0";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Compatibility for data definition template of TH";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-desugar" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, syb
         , template-haskell, th-expand-syns, th-lift, th-orphans
         }:
         mkDerivation {
           pname = "th-desugar";
           version = "1.7";
           sha256 = "52b31ca68f27cd9d73c4def58ce12350ec525c6bbeed00d37e5085ae9ac214c7";
           libraryHaskellDepends = [
             base containers mtl syb template-haskell th-expand-syns th-lift
             th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/goldfirere/th-desugar";
           description = "Functions to desugar Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-expand-syns" = callPackage
        ({ mkDerivation, base, containers, stdenv, syb, template-haskell }:
         mkDerivation {
           pname = "th-expand-syns";
           version = "0.4.4.0";
           sha256 = "cc0f52d1364ace9ba56f51afd9106a5fe01ed3f5ae45c958c1b0f83be0a6f906";
           libraryHaskellDepends = [ base containers syb template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/DanielSchuessler/th-expand-syns";
           description = "Expands type synonyms in Template Haskell ASTs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-extras" = callPackage
        ({ mkDerivation, base, stdenv, syb, template-haskell }:
         mkDerivation {
           pname = "th-extras";
           version = "0.0.0.4";
           sha256 = "8feff450aaf28ec4f08c45a5656c62879861a8e7f45591cb367d5351ddc3fbed";
           libraryHaskellDepends = [ base syb template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mokus0/th-extras";
           description = "A grab bag of functions for use with Template Haskell";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "th-lift" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-lift";
           version = "0.7.8";
           sha256 = "2cf83385e848d9136a1d6e49ca845fd1d09935f2ff658c6f4e268d8ece02c12b";
           libraryHaskellDepends = [ base ghc-prim template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mboes/th-lift";
           description = "Derive Template Haskell's Lift class for datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-lift-instances" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv
         , template-haskell, text, th-lift, vector
         }:
         mkDerivation {
           pname = "th-lift-instances";
           version = "0.1.11";
           sha256 = "1da46afabdc73c86f279a0557d5a8f9af1296f9f6043264ba354b1c9cc65a6b8";
           libraryHaskellDepends = [
             base bytestring containers template-haskell text th-lift vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/bennofs/th-lift-instances/";
           description = "Lift instances for template-haskell for common data types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-orphans" = callPackage
        ({ mkDerivation, base, mtl, stdenv, template-haskell, th-lift
         , th-lift-instances, th-reify-many
         }:
         mkDerivation {
           pname = "th-orphans";
           version = "0.13.5";
           sha256 = "95644d4b7914317e1dd31095947b8371f1a18be0c09e75f0e29203eb774a25ad";
           libraryHaskellDepends = [
             base mtl template-haskell th-lift th-lift-instances th-reify-many
           ];
           doHaddock = false;
           doCheck = false;
           description = "Orphan instances for TH datatypes";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-reify-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-reify-compat";
           version = "0.0.1.3";
           sha256 = "1f41be23a2935c9ffcd1d832749ef2ec23bef91227a8e9a7e8bb14498115d42f";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/khibino/haskell-th-reify-compat/";
           description = "Compatibility for the result type of TH reify";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-reify-many" = callPackage
        ({ mkDerivation, base, containers, mtl, safe, stdenv
         , template-haskell, th-expand-syns
         }:
         mkDerivation {
           pname = "th-reify-many";
           version = "0.1.8";
           sha256 = "cecaae187df911de515d08929e1394d6d6f7ce129795be8189a6b10d3734fe43";
           libraryHaskellDepends = [
             base containers mtl safe template-haskell th-expand-syns
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mgsloan/th-reify-many";
           description = "Recurseively reify template haskell datatype info";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "th-strict-compat" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-strict-compat";
           version = "0.1.0.1";
           sha256 = "c3fad31e4b657047d8dd248803e2206c6a5b7375e22d3940714d0cc42d93aa4a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/igrep/th-strict-compat";
           description = "Compatibility shim for Bang and Strict in Template Haskell";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "th-to-exp" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "th-to-exp";
           version = "0.0.1.1";
           sha256 = "867f213987ed37798e209fd7adf2d29f1eb7789dc605e0f362cf67f576965825";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lexi-lambda/th-to-exp#readme";
           description = "Provides a way to persist data from compile-time to runtime";
           license = stdenv.lib.licenses.isc;
         }) {};
      "th-utilities" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , primitive, stdenv, syb, template-haskell, text, th-orphans
         }:
         mkDerivation {
           pname = "th-utilities";
           version = "0.2.0.1";
           sha256 = "65c64cee69c0d9bf8d0d5d4590aaea7dcf4177f97818526cbb3fac20901671d6";
           libraryHaskellDepends = [
             base bytestring containers directory filepath primitive syb
             template-haskell text th-orphans
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/th-utilities#readme";
           description = "Collection of useful functions for use with Template Haskell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "these" = callPackage
        ({ mkDerivation, aeson, base, bifunctors, binary, containers
         , data-default-class, deepseq, hashable, keys, mtl, profunctors
         , QuickCheck, semigroupoids, stdenv, transformers
         , transformers-compat, unordered-containers, vector
         , vector-instances
         }:
         mkDerivation {
           pname = "these";
           version = "0.7.4";
           sha256 = "dcf37d7bab1780fc56663dac1f2eeee7890a4511f66e268aafbf786def8d884a";
           revision = "5";
           editedCabalFile = "1jx0p6z91nz5dagw4bcvb7lr9a15ahjnx0nhyv8cmd8p056m5515";
           libraryHaskellDepends = [
             aeson base bifunctors binary containers data-default-class deepseq
             hashable keys mtl profunctors QuickCheck semigroupoids transformers
             transformers-compat unordered-containers vector vector-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/isomorphism/these";
           description = "An either-or-both data type & a generalized 'zip with padding' typeclass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "thread-hierarchy" = callPackage
        ({ mkDerivation, base, containers, stdenv, stm }:
         mkDerivation {
           pname = "thread-hierarchy";
           version = "0.3.0.0";
           sha256 = "e8879653bbe54b5134eed23186f98688c4e9819ce9ef4f2e2d01d0f1ae219a18";
           libraryHaskellDepends = [ base containers stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nshimaza/thread-hierarchy#readme";
           description = "Simple Haskel thread management in hierarchical manner";
           license = stdenv.lib.licenses.mit;
         }) {};
      "thread-local-storage" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "thread-local-storage";
           version = "0.1.2";
           sha256 = "85c271438bb702698cb010ec1fb9c63641b1b6519208a4520a5f34f05204d459";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/rrnewton/thread-local-storage";
           description = "Several options for thread-local-storage (TLS) in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threads" = callPackage
        ({ mkDerivation, base, Cabal, stdenv, stm }:
         mkDerivation {
           pname = "threads";
           version = "0.5.1.5";
           sha256 = "a15d7ef6b4914e1e97e212c8abadcc84cde137638d9a0d8de1668a89ead50b5e";
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [ base stm ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/threads";
           description = "Fork threads and wait for their result";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threads-extras" = callPackage
        ({ mkDerivation, base, stdenv, stm, threads }:
         mkDerivation {
           pname = "threads-extras";
           version = "0.1.0.2";
           sha256 = "4defab98b8a767b9580413d530e6823e53f6169671e53b6f8b6bfea89fde2575";
           libraryHaskellDepends = [ base stm threads ];
           doHaddock = false;
           doCheck = false;
           description = "Extends the threads package with a bounded thread group";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threepenny-editors" = callPackage
        ({ mkDerivation, base, bifunctors, casing, containers, generics-sop
         , profunctors, stdenv, text, threepenny-gui
         }:
         mkDerivation {
           pname = "threepenny-editors";
           version = "0.5.6";
           sha256 = "dc56e12c5ecc7cfcc862461747a9cdfe6bfb79b07615d6919bd3f7a186fbcb3e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bifunctors casing containers generics-sop profunctors text
             threepenny-gui
           ];
           executableHaskellDepends = [
             base bifunctors casing containers generics-sop profunctors text
             threepenny-gui
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/pepeiborra/threepenny-editors";
           description = "Composable algebraic editors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threepenny-gui" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, containers
         , data-default, deepseq, exceptions, file-embed, filepath, hashable
         , network-uri, safe, snap-core, snap-server, stdenv, stm
         , template-haskell, text, transformers, unordered-containers, vault
         , vector, websockets, websockets-snap
         }:
         mkDerivation {
           pname = "threepenny-gui";
           version = "0.8.2.2";
           sha256 = "5599ad16e9918f5b6b0e26f890b0040f436d1d5317c75e9e9020d7d5efb1468f";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson async base bytestring containers data-default deepseq
             exceptions file-embed filepath hashable network-uri safe snap-core
             snap-server stm template-haskell text transformers
             unordered-containers vault vector websockets websockets-snap
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://wiki.haskell.org/Threepenny-gui";
           description = "GUI framework that uses the web browser as a display";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "threepenny-gui-flexbox" = callPackage
        ({ mkDerivation, base, clay, stdenv, text, threepenny-gui }:
         mkDerivation {
           pname = "threepenny-gui-flexbox";
           version = "0.4.2";
           sha256 = "86862538c0e8448ee7fc9b0b8c47e912587f26db6d1178660d74bf44dca9f0f5";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base clay text threepenny-gui ];
           executableHaskellDepends = [ base threepenny-gui ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/barischj/threepenny-gui-flexbox";
           description = "Flexbox layouts for Threepenny-gui";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "throttle-io-stream" = callPackage
        ({ mkDerivation, async, base, clock, stdenv, stm, stm-chans }:
         mkDerivation {
           pname = "throttle-io-stream";
           version = "0.2.0.1";
           sha256 = "e897a869062bcb4bcef372cfcf2a1e86699647fab8c721cfb22dbe6c47cf2c8e";
           libraryHaskellDepends = [ async base clock stm stm-chans ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/throttle-io-stream#readme";
           description = "Throttler between arbitrary IO producer and consumer functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "through-text" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, stdenv, text
         }:
         mkDerivation {
           pname = "through-text";
           version = "0.1.0.0";
           sha256 = "933225da128906e61865ccd1da73463781b890d742cbb38f52524d94ac19b4cd";
           revision = "2";
           editedCabalFile = "1qbzxll2zfc2y9r17yk2077lyq6f2dw1745kxn5f4r33970128k6";
           libraryHaskellDepends = [ base bytestring case-insensitive text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://www.github.com/bergmark/through-text";
           description = "Convert textual types through Text without needing O(n^2) instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "throwable-exceptions" = callPackage
        ({ mkDerivation, base, safe-exceptions, stdenv, template-haskell }:
         mkDerivation {
           pname = "throwable-exceptions";
           version = "0.1.0.9";
           sha256 = "3ab23c1dd24036a5d1229bed2b140ef50259e365e74c97face9d837c50c769a9";
           libraryHaskellDepends = [ base safe-exceptions template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aiya000/hs-throwable-exceptions#README.md";
           description = "throwable-exceptions gives the easy way to throw exceptions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "thumbnail-plus" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-extra
         , data-default, directory, either, gd, imagesize-conduit, resourcet
         , stdenv, temporary, transformers
         }:
         mkDerivation {
           pname = "thumbnail-plus";
           version = "1.0.5";
           sha256 = "81907f62a172f044dbc5c17feb18adee3512eb39c0fd54fb3af42b6d9ff3400c";
           libraryHaskellDepends = [
             base bytestring conduit conduit-extra data-default directory either
             gd imagesize-conduit resourcet temporary transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/prowdsponsor/thumbnail-plus";
           description = "Generate thumbnails easily and safely";
           license = stdenv.lib.licenses.mit;
         }) {};
      "thyme" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, containers
         , cpphs, deepseq, mtl, old-locale, profunctors, QuickCheck, random
         , stdenv, text, time, vector, vector-space, vector-th-unbox
         }:
         mkDerivation {
           pname = "thyme";
           version = "0.3.5.5";
           sha256 = "84c6701fb7b40841d22582202382c362fd9e0d6e5f1c959b7e0f2f91a85c796c";
           libraryHaskellDepends = [
             aeson attoparsec base bytestring containers deepseq mtl old-locale
             profunctors QuickCheck random text time vector vector-space
             vector-th-unbox
           ];
           libraryToolDepends = [ cpphs ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liyang/thyme";
           description = "A faster time library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tibetan-utils" = callPackage
        ({ mkDerivation, base, composition, either, megaparsec, stdenv
         , text, text-show
         }:
         mkDerivation {
           pname = "tibetan-utils";
           version = "0.1.1.4";
           sha256 = "55c93613c6dcfc179e64b431c20b3f2e5f594b61209587912a216160fc0d2377";
           libraryHaskellDepends = [
             base composition either megaparsec text text-show
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vmchale/tibetan-utils#readme";
           description = "Parse and display tibetan numerals";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tidal" = callPackage
        ({ mkDerivation, base, colour, containers, hashable, hosc
         , mersenne-random-pure64, mtl, parsec, safe, stdenv, text, time
         , websockets
         }:
         mkDerivation {
           pname = "tidal";
           version = "0.9.6";
           sha256 = "a6eba0ff11b056a95ba9ba4efba167b8c295bfd3140fab462fc958f73c888dae";
           libraryHaskellDepends = [
             base colour containers hashable hosc mersenne-random-pure64 mtl
             parsec safe text time websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://tidalcycles.org/";
           description = "Pattern language for improvised music";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "tidal-midi" = callPackage
        ({ mkDerivation, base, containers, PortMidi, stdenv, tidal, time
         , transformers
         }:
         mkDerivation {
           pname = "tidal-midi";
           version = "0.9.5.2";
           sha256 = "0cff6a95a2eb1674b1616789290f213a44a32b5946024fc5e846722a9ece4b7a";
           libraryHaskellDepends = [
             base containers PortMidi tidal time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://tidal.lurk.org/";
           description = "MIDI support for tidal";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "tile" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "tile";
           version = "0.3.0.0";
           sha256 = "15ed186360bea0bfc64dd4e6fc27b4e4aed9ba2cc344f1d8ea69687933cc65f0";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/caneroj1/tile#readme";
           description = "Slippy map tile functionality";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-compat" = callPackage
        ({ mkDerivation, base, old-time, stdenv, time }:
         mkDerivation {
           pname = "time-compat";
           version = "0.1.0.3";
           sha256 = "590711214510c0d2d09780c7fe3b21748bc4802e9053f78ccd6658e951fe0f7f";
           libraryHaskellDepends = [ base old-time time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/dag/time-compat";
           description = "Compatibility with old-time for the time package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-lens" = callPackage
        ({ mkDerivation, base, data-lens-light, stdenv, time }:
         mkDerivation {
           pname = "time-lens";
           version = "0.4.0.2";
           sha256 = "d8cbb8fcb79867d4a5fe6bc024d0badd68fad8986f6cdc1161b0f41afa49d01e";
           libraryHaskellDepends = [ base data-lens-light time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/feuerbach/time-lens";
           description = "Lens-based interface to Data.Time data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-locale-compat" = callPackage
        ({ mkDerivation, base, old-locale, stdenv, time }:
         mkDerivation {
           pname = "time-locale-compat";
           version = "0.1.1.3";
           sha256 = "9144bf68b47791a2ac73f45aeadbc5910be2da9ad174909e1a10a70b4576aced";
           libraryHaskellDepends = [ base old-locale time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/khibino/haskell-time-locale-compat";
           description = "Compatibility of TimeLocale between old-locale and time-1.5";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-locale-vietnamese" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "time-locale-vietnamese";
           version = "1.0.0.0";
           sha256 = "96062db31c2a858c20c8e3eb10aaff93e87f6514f335c14d0243429a7f730b76";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tungd/time-locale-vietnamese#readme";
           description = "Vietnamese locale for date and time format";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "time-parsers" = callPackage
        ({ mkDerivation, base, parsers, stdenv, template-haskell, time }:
         mkDerivation {
           pname = "time-parsers";
           version = "0.1.2.0";
           sha256 = "4e50d40f13f8e6c5175be22b91586f909607ecb631f8209ff45bce2031bb3c24";
           revision = "1";
           editedCabalFile = "1fvk31ab241v4ib7lg718q6qwrc3w7axq9kinccbdnn7b7d259gj";
           libraryHaskellDepends = [ base parsers template-haskell time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/time-parsers#readme";
           description = "Parsers for types in `time`";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "time-units" = callPackage
        ({ mkDerivation, base, fetchgit, stdenv }:
         mkDerivation {
           pname = "time-units";
           version = "1.0.0";
           src = fetchgit {
             url = "https://github.com/serokell/time-units.git";
             sha256 = "0psdr1if0rgnn24698x3583m0603rwd3sd7yb9whj03hskmkwpgs";
             rev = "6c3747c1ac794f952de996dd7ba8a2f6d63bf132";
           };
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/acw/time-units";
           description = "A basic library for defining units of time as types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timeit" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "timeit";
           version = "1.0.0.0";
           sha256 = "bd48d90bf96802580d0fa4e9c99150ef3c32cdf97bf345bf40e83633cc5d7236";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Time a computation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timelens" = callPackage
        ({ mkDerivation, base, lens, stdenv, time }:
         mkDerivation {
           pname = "timelens";
           version = "0.2.0.2";
           sha256 = "f4e6fa016ec37f79c96a62cff174929f04152831c308ab1f9a797f5b5674a764";
           libraryHaskellDepends = [ base lens time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/massysett/timelens";
           description = "Lenses for the time package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timemap" = callPackage
        ({ mkDerivation, base, containers, focus, hashable, list-t, stdenv
         , stm, stm-containers, time, unordered-containers
         }:
         mkDerivation {
           pname = "timemap";
           version = "0.0.6";
           sha256 = "f7176a9396cd0dba21e6491f775b043c6108d21ea6afb33587cad2ebc00a6f01";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base containers focus hashable list-t stm stm-containers time
             unordered-containers
           ];
           executableHaskellDepends = [
             base containers focus hashable list-t stm stm-containers time
             unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "A mutable hashmap, implicitly indexed by UTCTime";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timerep" = callPackage
        ({ mkDerivation, attoparsec, base, monoid-subclasses, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "timerep";
           version = "2.0.0.2";
           sha256 = "1d4e417f3ca08921941c16791680e13b66fb1844d94759068846ede78c965339";
           libraryHaskellDepends = [
             attoparsec base monoid-subclasses text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HugoDaniel/timerep";
           description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timespan" = callPackage
        ({ mkDerivation, base, stdenv, time }:
         mkDerivation {
           pname = "timespan";
           version = "0.3.0.0";
           sha256 = "46a51e1e0d776d65d0094bf8158c938255491fbaa4d4f39b0a1477806312851f";
           libraryHaskellDepends = [ base time ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/timespan#readme";
           description = "Useful timespan datatype and functions";
           license = stdenv.lib.licenses.mit;
         }) {};
      "timezone-olson" = callPackage
        ({ mkDerivation, base, binary, bytestring, extensible-exceptions
         , stdenv, time, timezone-series
         }:
         mkDerivation {
           pname = "timezone-olson";
           version = "0.1.8";
           sha256 = "b96b01015ae5191a56d6bbdbbc3d084f0afb9acd72d84c301792f07871dd3747";
           libraryHaskellDepends = [
             base binary bytestring extensible-exceptions time timezone-series
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/time-ng/";
           description = "A pure Haskell parser and renderer for binary Olson timezone files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "timezone-series" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, time }:
         mkDerivation {
           pname = "timezone-series";
           version = "0.1.8";
           sha256 = "8119d90e4e78fdb662e83f2a350e30678e5e9078737ee90b6c121b62c1a3cdf6";
           libraryHaskellDepends = [ base deepseq time ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://projects.haskell.org/time-ng/";
           description = "Enhanced timezone handling for Data.Time";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tinylog" = callPackage
        ({ mkDerivation, base, bytestring, containers, double-conversion
         , fast-logger, stdenv, text, transformers, unix-time
         }:
         mkDerivation {
           pname = "tinylog";
           version = "0.14.0";
           sha256 = "322f56178011707436a8e5234a879c5254a468f789ad8db635c98adf752a73ea";
           libraryHaskellDepends = [
             base bytestring containers double-conversion fast-logger text
             transformers unix-time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/tinylog/";
           description = "Simplistic logging using fast-logger";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "tinytemplate" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "tinytemplate";
           version = "0.1.2.0";
           sha256 = "30c73964f575bd139ccb214b1123caa99bc330d1904c4d3a5e31e33c31d17d0a";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/dicomgrid/tinytemplate";
           description = "A tiny text templating library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "titlecase" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "titlecase";
           version = "1.0.1";
           sha256 = "e7731c29509d2b41b1d94b89484edffa10b86689a755c4019617a6c9485e49cc";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/peti/titlecase#readme";
           description = "Convert English Words to Title Case";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tldr" = callPackage
        ({ mkDerivation, ansi-terminal, base, bytestring, cmark, directory
         , filepath, optparse-applicative, semigroups, shell-conduit, stdenv
         , text
         }:
         mkDerivation {
           pname = "tldr";
           version = "0.2.5";
           sha256 = "fc3ff2744e17d8fa2018d23c37dae25503813581b808d77381e71f21f9fc072d";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             ansi-terminal base bytestring cmark text
           ];
           executableHaskellDepends = [
             base directory filepath optparse-applicative semigroups
             shell-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/tldr-hs#readme";
           description = "Haskell tldr client";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tls" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, async, base, bytestring
         , cereal, cryptonite, data-default-class, memory, mtl, network
         , stdenv, transformers, x509, x509-store, x509-validation
         }:
         mkDerivation {
           pname = "tls";
           version = "1.4.1";
           sha256 = "bbead1afc0b808bd5cff7bddaeae84ade37f18bbe72bd78d45a2fa4ac41908f8";
           libraryHaskellDepends = [
             asn1-encoding asn1-types async base bytestring cereal cryptonite
             data-default-class memory mtl network transformers x509 x509-store
             x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-tls";
           description = "TLS/SSL protocol native implementation (Server and Client)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tls-debug" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, data-default-class
         , network, pem, stdenv, time, tls, x509, x509-store, x509-system
         , x509-validation
         }:
         mkDerivation {
           pname = "tls-debug";
           version = "0.4.5";
           sha256 = "a345c4863bf923829d73abb8e2b706dab8058b12cdf73859d3860eaf7223eb9b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base bytestring cryptonite data-default-class network pem time tls
             x509 x509-store x509-system x509-validation
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-tls";
           description = "Set of programs for TLS testing and debugging";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tls-session-manager" = callPackage
        ({ mkDerivation, auto-update, base, clock, psqueues, stdenv, tls }:
         mkDerivation {
           pname = "tls-session-manager";
           version = "0.0.0.2";
           sha256 = "c586ccfd8da578ed2174352bea1952f55fe38023e476f851d7f0ed428aa57567";
           libraryHaskellDepends = [ auto-update base clock psqueues tls ];
           doHaddock = false;
           doCheck = false;
           description = "In-memory TLS session manager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tmapchan" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, stm
         , unordered-containers
         }:
         mkDerivation {
           pname = "tmapchan";
           version = "0.0.3";
           sha256 = "e86db4c2e6cdd373b0cbe91e01d2a223c95d5d36930f5a6c484c1586ae5011e0";
           libraryHaskellDepends = [
             base containers hashable stm unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/tmapchan#readme";
           description = "An insert-ordered multimap (indexed FIFO) which consumes values as you lookup";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tmapmvar" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, stm
         , unordered-containers
         }:
         mkDerivation {
           pname = "tmapmvar";
           version = "0.0.3";
           sha256 = "6ebb205344ed65317d0da31ada7346456288dfaff5556c16978c807da075aaf0";
           libraryHaskellDepends = [
             base containers hashable stm unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/tmapmvar#readme";
           description = "A single-entity stateful Map in STM, similar to tmapchan";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tmp-postgres" = callPackage
        ({ mkDerivation, base, bytestring, directory, network
         , postgresql-simple, process, stdenv, temporary, unix
         }:
         mkDerivation {
           pname = "tmp-postgres";
           version = "0.1.1.1";
           sha256 = "2c5d557c53f60179d5e5e8c7fb6e393ff703e45b55c126359b308ab7a82be863";
           libraryHaskellDepends = [
             base bytestring directory network postgresql-simple process
             temporary unix
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jfischoff/tmp-postgres#readme";
           description = "Start and stop a temporary postgres for testing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "token-bucket" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "token-bucket";
           version = "0.1.0.1";
           sha256 = "312609c0037271b1091f23c2edf467e9449edca5bbed0cfb45c2c93c1bee6ad0";
           revision = "2";
           editedCabalFile = "03kkavw01mlgaxgc0ifvldn8pkq2dfncrwqrf0r33ldggfzm6qm3";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/token-bucket";
           description = "Rate limiter using lazy bucket algorithm";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "torrent" = callPackage
        ({ mkDerivation, base, bencode, binary, bytestring, containers
         , filepath, stdenv, syb
         }:
         mkDerivation {
           pname = "torrent";
           version = "10000.1.1";
           sha256 = "2009964210e229ee67254a73fead3413f60299415238887fa7ef30e40e06fa54";
           libraryHaskellDepends = [
             base bencode binary bytestring containers filepath syb
           ];
           doHaddock = false;
           doCheck = false;
           description = "BitTorrent file parser and generater";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tostring" = callPackage
        ({ mkDerivation, base, case-insensitive, stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "tostring";
           version = "0.2.1.1";
           sha256 = "efa700d44aec57c82be60c0eabd610f62f2df0d9b06cf41b5fc35a2b77502531";
           libraryHaskellDepends = [ base case-insensitive text utf8-string ];
           doHaddock = false;
           doCheck = false;
           description = "The ToString class";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "transformers";
           version = "0.5.5.0";
           sha256 = "b11eb8827cfd48a801516adec27e2de4091f424386e4c99846c587fc108b19a5";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Concrete functor and monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-base" = callPackage
        ({ mkDerivation, base, stdenv, stm, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "transformers-base";
           version = "0.4.4";
           sha256 = "6aa3494fc70659342fbbb163035d5827ecfd8079e3c929e2372adf771fd52387";
           revision = "1";
           editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
           libraryHaskellDepends = [
             base stm transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/transformers-base";
           description = "Lift computations from the bottom of a transformer stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-bifunctors" = callPackage
        ({ mkDerivation, base, mmorph, stdenv, transformers }:
         mkDerivation {
           pname = "transformers-bifunctors";
           version = "0.1";
           sha256 = "3c25d3d76361f62b4c7c37d4bc4b7497af691d000fcd8e5fe9cbb3544d284807";
           libraryHaskellDepends = [ base mmorph transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jystic/transformers-bifunctors";
           description = "Bifunctors over monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-compat" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv, transformers }:
         mkDerivation {
           pname = "transformers-compat";
           version = "0.5.1.4";
           sha256 = "d881ef4ec164b631591b222efe7ff555af6d5397c9d86475b309ba9402a8ca9f";
           libraryHaskellDepends = [ base ghc-prim transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/transformers-compat/";
           description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transformers-lift" = callPackage
        ({ mkDerivation, base, stdenv, transformers
         , writer-cps-transformers
         }:
         mkDerivation {
           pname = "transformers-lift";
           version = "0.2.0.1";
           sha256 = "0bd8bf23fb29874daf9ff990bf25035e21208cfa292f9f18e8cfdb0b4b1ee09d";
           libraryHaskellDepends = [
             base transformers writer-cps-transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Ad-hoc type classes for lifting";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "transient" = callPackage
        ({ mkDerivation, atomic-primops, base, bytestring, containers
         , directory, mtl, random, stdenv, stm, time, transformers
         }:
         mkDerivation {
           pname = "transient";
           version = "0.5.9.2";
           sha256 = "22b7e4da2f0855c44d642880bfb876f55ffe74afa51973a5ddc9d21f18f34346";
           libraryHaskellDepends = [
             atomic-primops base bytestring containers directory mtl random stm
             time transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.fpcomplete.com/user/agocorona";
           description = "composing programs with multithreading, events and distributed computing";
           license = stdenv.lib.licenses.mit;
         }) {};
      "transient-universe" = callPackage
        ({ mkDerivation, base, bytestring, case-insensitive, containers
         , directory, filepath, hashable, HTTP, iproute, mtl, network
         , network-info, network-uri, process, random, stdenv, stm, TCache
         , text, time, transformers, transient, vector, websockets
         }:
         mkDerivation {
           pname = "transient-universe";
           version = "0.4.6.1";
           sha256 = "36cab01053b99b3503ac1a3cbbd8ef5178e442b3169d9f794f49fbb980325daf";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring case-insensitive containers directory filepath
             hashable HTTP iproute mtl network network-info network-uri process
             random stm TCache text time transformers transient vector
             websockets
           ];
           executableHaskellDepends = [
             base bytestring case-insensitive containers directory filepath
             hashable HTTP mtl network network-info network-uri process random
             stm TCache text time transformers transient vector websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.fpcomplete.com/user/agocorona";
           description = "Remote execution and map-reduce: distributed computing for Transient";
           license = stdenv.lib.licenses.mit;
         }) {};
      "traverse-with-class" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, transformers }:
         mkDerivation {
           pname = "traverse-with-class";
           version = "1.0.0.0";
           sha256 = "65a220f1652b68269dfe8cc283a6e9292941eb12bdbd79344e073ba766191fbb";
           libraryHaskellDepends = [ base template-haskell transformers ];
           doHaddock = false;
           doCheck = false;
           description = "Generic applicative traversals";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tree-diff" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, ansi-wl-pprint, base
         , base-compat, bytestring, containers, generics-sop, hashable
         , MemoTrie, parsec, parsers, pretty, QuickCheck, scientific, stdenv
         , tagged, text, time, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "tree-diff";
           version = "0.0.1";
           sha256 = "bfe23e4c17c0cdbffa9f159b7adaaeb20e48575b3b5bda591c5e025118213b11";
           revision = "1";
           editedCabalFile = "0d3kbs32q816vlrbj17lwl1bmmv7lvwi2c2i3k3agm2a8h0psx6s";
           libraryHaskellDepends = [
             aeson ansi-terminal ansi-wl-pprint base base-compat bytestring
             containers generics-sop hashable MemoTrie parsec parsers pretty
             QuickCheck scientific tagged text time unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phadej/tree-diff";
           description = "Diffing of (expression) trees";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tree-fun" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv }:
         mkDerivation {
           pname = "tree-fun";
           version = "0.8.1.0";
           sha256 = "2ae925f198e9700dedbf809c2b77086fef32f58b4a4adb6c398dca49f4d56f1f";
           libraryHaskellDepends = [ base containers mtl ];
           doHaddock = false;
           doCheck = false;
           description = "Library for functions pertaining to tree exploration and manipulation";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "tries" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-trie, composition
         , composition-extra, containers, deepseq, hashable, keys
         , QuickCheck, quickcheck-instances, rose-trees, semigroups, sets
         , stdenv, unordered-containers
         }:
         mkDerivation {
           pname = "tries";
           version = "0.0.4.2";
           sha256 = "164c26a8d5efbd669545e1028f06c090554cabbe005a377827cc9a3b9ed15994";
           libraryHaskellDepends = [
             base bytestring bytestring-trie composition composition-extra
             containers deepseq hashable keys QuickCheck quickcheck-instances
             rose-trees semigroups sets unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Various trie implementations in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "trifecta" = callPackage
        ({ mkDerivation, ansi-terminal, ansi-wl-pprint, array, base
         , blaze-builder, blaze-html, blaze-markup, bytestring, Cabal
         , cabal-doctest, charset, comonad, containers, deepseq, fingertree
         , ghc-prim, hashable, lens, mtl, parsers, profunctors, reducers
         , semigroups, stdenv, transformers, unordered-containers
         , utf8-string
         }:
         mkDerivation {
           pname = "trifecta";
           version = "1.7.1.1";
           sha256 = "61f8753368fa0c7673b44c4e4c4dede00916f68b3f3b68a5fef6d9dedc50c68e";
           revision = "3";
           editedCabalFile = "18n50vn8znpwci2f333wsqzr8zkj35ki5z8bs9a2717yhzyha4k8";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             ansi-terminal ansi-wl-pprint array base blaze-builder blaze-html
             blaze-markup bytestring charset comonad containers deepseq
             fingertree ghc-prim hashable lens mtl parsers profunctors reducers
             semigroups transformers unordered-containers utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/trifecta/";
           description = "A modern parser combinator library with convenient diagnostics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "triplesec" = callPackage
        ({ mkDerivation, base, cryptonite, memory, mtl, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "triplesec";
           version = "0.1.2.0";
           sha256 = "86b8749e708fd288a874d23ebeb9ff5e3a584ada13bc22c3a9b596418bd57063";
           libraryHaskellDepends = [
             base cryptonite memory mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/SamProtas/hs-triplesec";
           description = "TripleSec is a simple, triple-paranoid, symmetric encryption library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "true-name" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "true-name";
           version = "0.1.0.3";
           sha256 = "c630ef80687e12c092a797229be96e930819c1042c7cc9f755637ef74774e468";
           revision = "1";
           editedCabalFile = "0x56r3wyrrsckx6kdvr4v9janrby5qa21fjqwg9k211765c9ddj6";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/liyang/true-name";
           description = "Template Haskell hack to violate module abstractions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tsv2csv" = callPackage
        ({ mkDerivation, base, HUnit, split, stdenv }:
         mkDerivation {
           pname = "tsv2csv";
           version = "0.1.0.2";
           sha256 = "2c082f8bac93a5d47e312148493d0b8f078e2e0d0e919caa0fa24cab63dd3397";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base HUnit split ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Convert tsv to csv";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ttrie" = callPackage
        ({ mkDerivation, atomic-primops, base, hashable, primitive, stdenv
         , stm
         }:
         mkDerivation {
           pname = "ttrie";
           version = "0.1.2.1";
           sha256 = "50444fe989559a0b16120df72765321ffd9de2fd97c943104513d894f21f4a68";
           libraryHaskellDepends = [
             atomic-primops base hashable primitive stm
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/mcschroeder/ttrie";
           description = "Contention-free STM hash map";
           license = stdenv.lib.licenses.mit;
         }) {};
      "tuple" = callPackage
        ({ mkDerivation, base, OneTuple, stdenv }:
         mkDerivation {
           pname = "tuple";
           version = "0.3.0.2";
           sha256 = "2fcb068ffafbe64170e02094a363f83d1725f44f8af963d9dad943a592e89624";
           libraryHaskellDepends = [ base OneTuple ];
           doHaddock = false;
           doCheck = false;
           description = "Various functions on tuples";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tuple-th" = callPackage
        ({ mkDerivation, base, containers, stdenv, template-haskell }:
         mkDerivation {
           pname = "tuple-th";
           version = "0.2.5";
           sha256 = "56ea37dcede07b5cf5385108540ae626db163f9df0387583d3c7afdaf72634d7";
           libraryHaskellDepends = [ base containers template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Generate (non-recursive) utility functions for tuples of statically known size";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "tuples-homogenous-h98" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "tuples-homogenous-h98";
           version = "0.1.1.0";
           sha256 = "025afc8f0fe9c92fb43cebedfa6a764f744d3dc3a3d52935d0a01bc80d111f3a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ppetr/tuples-homogenous-h98";
           description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "turtle" = callPackage
        ({ mkDerivation, ansi-wl-pprint, async, base, bytestring, clock
         , containers, directory, foldl, hostname, managed, optional-args
         , optparse-applicative, process, semigroups, stdenv, stm
         , system-fileio, system-filepath, temporary, text, time
         , transformers, unix, unix-compat
         }:
         mkDerivation {
           pname = "turtle";
           version = "1.4.5";
           sha256 = "7da2fa3b628e9db218774390121880ecb59873c96655f733de3b38b6c0dc5a20";
           libraryHaskellDepends = [
             ansi-wl-pprint async base bytestring clock containers directory
             foldl hostname managed optional-args optparse-applicative process
             semigroups stm system-fileio system-filepath temporary text time
             transformers unix unix-compat
           ];
           doHaddock = false;
           doCheck = false;
           description = "Shell programming, Haskell-style";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "turtle-options" = callPackage
        ({ mkDerivation, base, optional-args, parsec, stdenv, text, turtle
         }:
         mkDerivation {
           pname = "turtle-options";
           version = "0.1.0.4";
           sha256 = "c2c76b0bc0bc93397827c12b6f049e682afe702f9f662a1b0818e8e221d51ace";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base optional-args parsec text turtle ];
           executableHaskellDepends = [ base turtle ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/elaye/turtle-options#readme";
           description = "Collection of command line options and parsers for these options";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "twitter-conduit" = callPackage
        ({ mkDerivation, aeson, attoparsec, authenticate-oauth, base
         , bytestring, Cabal, cabal-doctest, conduit, conduit-extra
         , containers, data-default, exceptions, http-client, http-conduit
         , http-types, lens, lens-aeson, resourcet, stdenv, template-haskell
         , text, time, transformers, transformers-base, twitter-types
         , twitter-types-lens
         }:
         mkDerivation {
           pname = "twitter-conduit";
           version = "0.2.3";
           sha256 = "69c70d99c44125e3539356b32f9c15ecd78f9a046918077ceac21f245ef457f7";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec authenticate-oauth base bytestring conduit
             conduit-extra containers data-default exceptions http-client
             http-conduit http-types lens lens-aeson resourcet template-haskell
             text time transformers transformers-base twitter-types
             twitter-types-lens
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/twitter-conduit";
           description = "Twitter API package with conduit interface and Streaming API support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "twitter-types" = callPackage
        ({ mkDerivation, aeson, base, stdenv, text, time
         , unordered-containers
         }:
         mkDerivation {
           pname = "twitter-types";
           version = "0.7.2.2";
           sha256 = "768ee869fc5dc95cf4073ec27862060e6dc6ad7234511d0c6b59cc49841c6d58";
           libraryHaskellDepends = [
             aeson base text time unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/twitter-types";
           description = "Twitter JSON parser and types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "twitter-types-lens" = callPackage
        ({ mkDerivation, base, lens, stdenv, template-haskell, text, time
         , twitter-types
         }:
         mkDerivation {
           pname = "twitter-types-lens";
           version = "0.7.2";
           sha256 = "4ffeabee70234e0969a0581489473380ebf93de504f7b24f9bc024571acfb212";
           revision = "1";
           editedCabalFile = "0rag7vz1irirnqxh18xwvp8rg7ysx4lwrb9ysv5wcfjdggp6b6gs";
           libraryHaskellDepends = [
             base lens template-haskell text time twitter-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/himura/twitter-types";
           description = "Twitter JSON types (lens powered)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-aligned" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-aligned";
           version = "0.9.6";
           sha256 = "1b877271cbfc365563f2dc779dc2ee4820be144e1708318882a3cd11786ade55";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/atzeus/type-aligned";
           description = "Various type-aligned sequence data structures";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-assertions" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-assertions";
           version = "0.1.0.0";
           sha256 = "aac74571c99fa0170970716385570cf0e0bbb18fc93f1d7ad372824fe7a679bb";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lexi-lambda/type-assertions#readme";
           description = "Runtime type assertions for testing";
           license = stdenv.lib.licenses.isc;
         }) {};
      "type-combinators" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-combinators";
           version = "0.2.4.3";
           sha256 = "1f0ccb6929f53b676e6582141c9423458468eec98be62acc8dc3bab0d52337f6";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kylcarte/type-combinators";
           description = "A collection of data types for type-level programming";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-combinators-singletons" = callPackage
        ({ mkDerivation, base, singletons, stdenv, type-combinators }:
         mkDerivation {
           pname = "type-combinators-singletons";
           version = "0.1.0.0";
           sha256 = "b00a14cf74372f151e4b85f33fe4d19c30d47fdf64ae32bc2be3de4ba5034c87";
           libraryHaskellDepends = [ base singletons type-combinators ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/type-combinators-singletons";
           description = "Interop between /type-combinators/ and /singletons/";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-fun" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-fun";
           version = "0.1.1";
           sha256 = "df5ec7428a101235df46c0b819a9ab3562d1d27991cc3b04303643952c555da1";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/s9gf4ult/type-fun";
           description = "Collection of widely reimplemented type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-hint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-hint";
           version = "0.1";
           sha256 = "1161cdbf4b4b43c2953ee60438e948737604193e1bfe2c880ff178538faa99b9";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mvv/type-hint";
           description = "Guide type inference with proxy values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-level-integers" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-level-integers";
           version = "0.0.1";
           sha256 = "118be3a4b3ab65bb1d31220738079013bd14fc77db674a9a1577f5582ffcc7ba";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mtesseract/type-level-integers";
           description = "Provides integers lifted to the type level";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-level-kv-list" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "type-level-kv-list";
           version = "1.1.0";
           sha256 = "4ff032e59108edc7dd27309ac0ee8987cc41ffba695d9699700bd37c6e7f7d73";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/arowM/type-level-kv-list#readme";
           description = "A module for hash map like object with type level keys";
           license = stdenv.lib.licenses.mit;
         }) {};
      "type-level-numbers" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell }:
         mkDerivation {
           pname = "type-level-numbers";
           version = "0.1.1.1";
           sha256 = "5b56ef5f6e0b6476b9aba46055c3919e67823cbc1b87ed8e6ed70113b1f2318a";
           libraryHaskellDepends = [ base template-haskell ];
           doHaddock = false;
           doCheck = false;
           description = "Type level numbers implemented using type families";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-of-html" = callPackage
        ({ mkDerivation, base, bytestring, double-conversion, ghc-prim
         , stdenv, text
         }:
         mkDerivation {
           pname = "type-of-html";
           version = "1.3.3.0";
           sha256 = "5b471b9c6a1ca78ef00e1b0f32f7e78f4c853b28081b8e003ddb0e936b147960";
           libraryHaskellDepends = [
             base bytestring double-conversion ghc-prim text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/knupfer/type-of-html";
           description = "High performance type driven html generation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-operators" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "type-operators";
           version = "0.1.0.4";
           sha256 = "dbbcedf368c23c46abac04f157cb4f2c812099a4f75d606b24f1ac1116d40b74";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Shou/type-operators#readme";
           description = "Various type-level operators";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "type-spec" = callPackage
        ({ mkDerivation, base, pretty, stdenv }:
         mkDerivation {
           pname = "type-spec";
           version = "0.3.0.1";
           sha256 = "aecd1a319efc13eb42b73b489cf374f94bf126f19fdc28b2f5cd6f73dda3a241";
           libraryHaskellDepends = [ base pretty ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sheyll/type-spec#readme";
           description = "Type Level Specification by Example";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "typed-process" = callPackage
        ({ mkDerivation, async, base, bytestring, process, stdenv, stm
         , transformers
         }:
         mkDerivation {
           pname = "typed-process";
           version = "0.2.1.0";
           sha256 = "d214d88575dc0fe919d23eacd91a212ed7bf5b1dbb4360038e99926ff9bcdcd0";
           libraryHaskellDepends = [
             async base bytestring process stm transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://haskell-lang.org/library/typed-process";
           description = "Run external processes, with strong typing of streams";
           license = stdenv.lib.licenses.mit;
         }) {};
      "typelits-witnesses" = callPackage
        ({ mkDerivation, base, base-compat, constraints, reflection, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "typelits-witnesses";
           version = "0.2.3.0";
           sha256 = "a56e92f9c1be1a3063ae3ba3c55c9715ad298b8c5ff8fcf293cf6eabc6ff210c";
           libraryHaskellDepends = [
             base base-compat constraints reflection transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/typelits-witnesses";
           description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
           license = stdenv.lib.licenses.mit;
         }) {};
      "typography-geometry" = callPackage
        ({ mkDerivation, base, containers, parallel, polynomials-bernstein
         , stdenv, vector
         }:
         mkDerivation {
           pname = "typography-geometry";
           version = "1.0.0.1";
           sha256 = "edaeafb60126be19f0e4fdda54be89b92317dd03b59e9d8b6f119064c1642ad7";
           libraryHaskellDepends = [
             base containers parallel polynomials-bernstein vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Drawings for printed text documents";
           license = "GPL";
         }) {};
      "tz" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, data-default
         , deepseq, stdenv, template-haskell, time, tzdata, vector
         }:
         mkDerivation {
           pname = "tz";
           version = "0.1.3.0";
           sha256 = "9710886137db6cbd32d5f7337f23d23b2cb7a19def76306abbdf2ec7f54d5cc0";
           libraryHaskellDepends = [
             base binary bytestring containers data-default deepseq
             template-haskell time tzdata vector
           ];
           doHaddock = false;
           doCheck = false;
           preConfigure = "export TZDIR=${pkgs.tzdata}/share/zoneinfo";
           homepage = "https://github.com/nilcons/haskell-tz";
           description = "Efficient time zone handling";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "tzdata" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, stdenv
         , vector
         }:
         mkDerivation {
           pname = "tzdata";
           version = "0.1.20180122.0";
           sha256 = "a31bd845e94fd50d0e97d6d23a0ae39511cdf144075f4978579ede55b714db9d";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers deepseq vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nilcons/haskell-tzdata";
           description = "Time zone database (as files and as a module)";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "ua-parser" = callPackage
        ({ mkDerivation, aeson, base, bytestring, data-default, file-embed
         , pcre-light, stdenv, text, yaml
         }:
         mkDerivation {
           pname = "ua-parser";
           version = "0.7.4.1";
           sha256 = "2ed79b0ae9f3d60d1aeeeb45a9229840708f009ca34752a9787134b8b0d094df";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             aeson base bytestring data-default file-embed pcre-light text yaml
           ];
           doHaddock = false;
           doCheck = false;
           description = "A library for parsing User-Agent strings, official Haskell port of ua-parser";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uglymemo" = callPackage
        ({ mkDerivation, base, containers, stdenv }:
         mkDerivation {
           pname = "uglymemo";
           version = "0.1.0.1";
           sha256 = "fe89ef49c0cb15867c58815b050b33f17d394d4c48a9b7240a39780a5a79b847";
           libraryHaskellDepends = [ base containers ];
           doHaddock = false;
           doCheck = false;
           description = "A simple (but internally ugly) memoization function";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "unagi-chan" = callPackage
        ({ mkDerivation, atomic-primops, base, ghc-prim, primitive, stdenv
         }:
         mkDerivation {
           pname = "unagi-chan";
           version = "0.4.1.0";
           sha256 = "6bab58226a7647fb18bb58274f1175c686135ba5388e1a2508ee48abb336ca5b";
           libraryHaskellDepends = [ atomic-primops base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           description = "Fast concurrent queues with a Chan-like API, and more";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unbound-generics" = callPackage
        ({ mkDerivation, base, containers, contravariant, deepseq, mtl
         , profunctors, stdenv, template-haskell, transformers
         , transformers-compat
         }:
         mkDerivation {
           pname = "unbound-generics";
           version = "0.3.1";
           sha256 = "1f85672c8edfc8cbea638bcbf1e29d04934d79470177cb59e6dba0f9bb7a6440";
           libraryHaskellDepends = [
             base containers contravariant deepseq mtl profunctors
             template-haskell transformers transformers-compat
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/lambdageek/unbound-generics";
           description = "Support for programming with names and binders using GHC Generics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unbounded-delays" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unbounded-delays";
           version = "0.1.1.0";
           sha256 = "8aa7f7d10a8d0073518804db76c3ef4c313359994ef175122341b0bce07329c7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/basvandijk/unbounded-delays";
           description = "Unbounded thread delays and timeouts";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unboxed-ref" = callPackage
        ({ mkDerivation, base, ghc-prim, primitive, stdenv }:
         mkDerivation {
           pname = "unboxed-ref";
           version = "0.4.0.0";
           sha256 = "64eba8d550035a3a90cf9179e52f79877b426f0a6337cc216fdef45fcbb8773f";
           libraryHaskellDepends = [ base ghc-prim primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/unboxed-ref";
           description = "Fast unboxed references for ST and IO monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uncertain" = callPackage
        ({ mkDerivation, ad, base, base-compat, containers, free
         , mwc-random, primitive, stdenv, transformers
         }:
         mkDerivation {
           pname = "uncertain";
           version = "0.3.1.0";
           sha256 = "6f67855ed4799e0c3465dfaef062b637efc61fbea40ebc44ced163028a996ff2";
           libraryHaskellDepends = [
             ad base base-compat containers free mwc-random primitive
             transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mstksg/uncertain";
           description = "Manipulating numbers with inherent experimental/measurement uncertainty";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unexceptionalio" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unexceptionalio";
           version = "0.3.0";
           sha256 = "927e2be6bb9ced73c1c17d79c981cadef4039d9ee45d2d3d6b4c133ff93ff0b8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/unexceptionalio";
           description = "IO without any non-error, synchronous exceptions";
           license = "unknown";
         }) {};
      "unfoldable" = callPackage
        ({ mkDerivation, base, containers, ghc-prim, one-liner, QuickCheck
         , random, stdenv, transformers
         }:
         mkDerivation {
           pname = "unfoldable";
           version = "0.9.5";
           sha256 = "766979eb6db59fdcd0c8468ce3445e0987b5dee7bf666631c410c11f774b8252";
           libraryHaskellDepends = [
             base containers ghc-prim one-liner QuickCheck random transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sjoerdvisscher/unfoldable";
           description = "Class of data structures that can be unfolded";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unfoldable-restricted" = callPackage
        ({ mkDerivation, base, constraints, containers, hashable, stdenv
         , transformers, unfoldable, unit-constraint, unordered-containers
         }:
         mkDerivation {
           pname = "unfoldable-restricted";
           version = "0.0.3";
           sha256 = "0b19287719453617f3883863f32be75ba62aad68151cb79aea3a5fa90dc7836e";
           libraryHaskellDepends = [
             base constraints containers hashable transformers unfoldable
             unit-constraint unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "An alternative to the Unfoldable typeclass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unicode" = callPackage
        ({ mkDerivation, base, containers, semigroups, stdenv }:
         mkDerivation {
           pname = "unicode";
           version = "0.0.1";
           sha256 = "49bde95d4df4ebed755b10860aeb92f9cf0a3be8127d39a95f480036e6449b81";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base containers semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hub.darcs.net/thielema/unicode/";
           description = "Construct and transform unicode characters";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unicode-show" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unicode-show";
           version = "0.1.0.2";
           sha256 = "7ee394879b345ee397aef87ca058628cd79d59cbfc1cec81aeda7fea65f53943";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nushio3/unicode-show#readme";
           description = "print and show in unicode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unicode-transforms" = callPackage
        ({ mkDerivation, base, bitarray, bytestring, stdenv, text }:
         mkDerivation {
           pname = "unicode-transforms";
           version = "0.3.3";
           sha256 = "59748accedb5d8eacf787781c681371ae5fae0955acc38783aa2a7af6133ea11";
           libraryHaskellDepends = [ base bitarray bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/harendra-kumar/unicode-transforms";
           description = "Unicode normalization";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unification-fd" = callPackage
        ({ mkDerivation, base, containers, logict, mtl, stdenv }:
         mkDerivation {
           pname = "unification-fd";
           version = "0.10.0.1";
           sha256 = "5bf46760e6db104c57f915322b32744f7604323281f5c7dd20185f905fb51996";
           libraryHaskellDepends = [ base containers logict mtl ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Simple generic unification algorithms";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "union" = callPackage
        ({ mkDerivation, base, deepseq, profunctors, stdenv, tagged, vinyl
         }:
         mkDerivation {
           pname = "union";
           version = "0.1.1.2";
           sha256 = "7ce28e082940e184a255459b29356b7d39e3421cb37b01ee1ed067437165d382";
           revision = "2";
           editedCabalFile = "088dcgyg9bzm5qczcddssjfwywk9lsj10lq7byh4f9rnsf0jppna";
           libraryHaskellDepends = [ base deepseq profunctors tagged vinyl ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible type-safe unions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "union-find" = callPackage
        ({ mkDerivation, base, containers, stdenv, transformers }:
         mkDerivation {
           pname = "union-find";
           version = "0.2";
           sha256 = "e6c2682bb8c06e8c43e360f45658d0eea17209cce84953e2a7d2f0240591f0ec";
           revision = "1";
           editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
           libraryHaskellDepends = [ base containers transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/nominolo/union-find";
           description = "Efficient union and equivalence testing of sets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uniplate" = callPackage
        ({ mkDerivation, base, containers, hashable, stdenv, syb
         , unordered-containers
         }:
         mkDerivation {
           pname = "uniplate";
           version = "1.6.12";
           sha256 = "fcc60bc6b3f6e925f611646db90e6db9f05286a9363405f844df1dc15572a8b7";
           libraryHaskellDepends = [
             base containers hashable syb unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://community.haskell.org/~ndm/uniplate/";
           description = "Help writing simple, concise and fast generic operations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uniq-deep" = callPackage
        ({ mkDerivation, base, bytestring, containers, stdenv }:
         mkDerivation {
           pname = "uniq-deep";
           version = "1.1.0.0";
           sha256 = "f8953f91cbf90c5073ca90d4e9235dbe0a399ff811709d051b037a8a7db0d38e";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [ base bytestring containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/uniq-deep";
           description = "uniq-deep";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "unique" = callPackage
        ({ mkDerivation, base, ghc-prim, hashable, stdenv }:
         mkDerivation {
           pname = "unique";
           version = "0";
           sha256 = "e3fb171b7b1787683863934df0fc082fb47c0da6972bb1839c2ee8ceb64a0a90";
           revision = "1";
           editedCabalFile = "0pq3a5y8ddgd37x21vafwxpyi079ir7k9g96y99pygmxwibkg4v8";
           libraryHaskellDepends = [ base ghc-prim hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/unique/";
           description = "Fully concurrent unique identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unit-constraint" = callPackage
        ({ mkDerivation, base, constraints, stdenv }:
         mkDerivation {
           pname = "unit-constraint";
           version = "0.0.0";
           sha256 = "446de8480016c9db75676445477b5ce1ff5c6d486d6708c55b06de7cbd845e59";
           libraryHaskellDepends = [ base constraints ];
           doHaddock = false;
           doCheck = false;
           description = "Extremely simple typeclass";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "units-parser" = callPackage
        ({ mkDerivation, base, containers, mtl, multimap, parsec, stdenv }:
         mkDerivation {
           pname = "units-parser";
           version = "0.1.1.2";
           sha256 = "0a63f8b62a5d48e6c7126970cc0c6c350711b1d55ccb8182567a47ca35ce751a";
           libraryHaskellDepends = [ base containers mtl multimap parsec ];
           doHaddock = false;
           doCheck = false;
           description = "A parser for units of measure";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe" = callPackage
        ({ mkDerivation, stdenv, universe-instances-base
         , universe-instances-extended, universe-instances-trans
         , universe-reverse-instances
         }:
         mkDerivation {
           pname = "universe";
           version = "1.0";
           sha256 = "1f80e4788d348d53e39a32c8514940418a71c49c5423eb70b94e1786d94ff9a7";
           libraryHaskellDepends = [
             universe-instances-base universe-instances-extended
             universe-instances-trans universe-reverse-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Classes for types where we know all the values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-base" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "universe-base";
           version = "1.0.2.1";
           sha256 = "07c48350afacdc0b5569f72e3d6a27a8ff3c208b7a6f22d00e149a201798bb51";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-base" = callPackage
        ({ mkDerivation, base, containers, stdenv, universe-base }:
         mkDerivation {
           pname = "universe-instances-base";
           version = "1.0";
           sha256 = "a21150ee3bb71283522a573bf092c8d96b2e28a95336a95505aa4c2a067dd212";
           revision = "1";
           editedCabalFile = "13s8gxsvkw6phwvd79h9f3xaqbyzsx1svpysbmq72z1hv3mqyz8a";
           libraryHaskellDepends = [ base containers universe-base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from the base package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-extended" = callPackage
        ({ mkDerivation, adjunctions, base, comonad, stdenv
         , universe-instances-base, void
         }:
         mkDerivation {
           pname = "universe-instances-extended";
           version = "1.0.0.1";
           sha256 = "665b272701b16a6bb8d40a5396aa1dcb038f002452ebdc29d353e3be2070c997";
           revision = "2";
           editedCabalFile = "1di3jk3ciikjrxzr76i0mqqza26mclnbxxak7ybkk4l06yqanj38";
           libraryHaskellDepends = [
             adjunctions base comonad universe-instances-base void
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from select extra packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-instances-trans" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers, universe-base
         , universe-instances-base
         }:
         mkDerivation {
           pname = "universe-instances-trans";
           version = "1.0.0.1";
           sha256 = "0d047cf1eb4af9f2052f44f487e7d2d44c86f51b54a3cc1fc5243ad816e8310e";
           revision = "1";
           editedCabalFile = "0dcwgbgmbkjwzbxlncpl1b5hgjrmkl73djknjkhbnh02pysbwv69";
           libraryHaskellDepends = [
             base mtl transformers universe-base universe-instances-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "Universe instances for types from the transformers and mtl packages";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universe-reverse-instances" = callPackage
        ({ mkDerivation, base, containers, stdenv, universe-instances-base
         }:
         mkDerivation {
           pname = "universe-reverse-instances";
           version = "1.0";
           sha256 = "e9d41cbf26eabd77587fddf69493d7ad23028303d1c1d1d2ee1de1bf3d3e8d49";
           revision = "1";
           editedCabalFile = "0rq6h7yghnzrnv56pxnlfr6cfih8dbnhc6hh5416pgy5bxsa0ydj";
           libraryHaskellDepends = [
             base containers universe-instances-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/dmwit/universe";
           description = "instances of standard classes that are made possible by enumerations";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "universum" = callPackage
        ({ mkDerivation, base, bytestring, containers, deepseq, ghc-prim
         , hashable, microlens, microlens-mtl, mtl, safe-exceptions, stdenv
         , stm, text, text-format, transformers, type-operators
         , unordered-containers, utf8-string, vector
         }:
         mkDerivation {
           pname = "universum";
           version = "1.1.0";
           sha256 = "177635a009f38edb8fc764bf9504077fb41af033c49b2a0ae2c725b55a9a2f4c";
           libraryHaskellDepends = [
             base bytestring containers deepseq ghc-prim hashable microlens
             microlens-mtl mtl safe-exceptions stm text text-format transformers
             type-operators unordered-containers utf8-string vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/serokell/universum";
           description = "Custom prelude used in Serokell";
           license = stdenv.lib.licenses.mit;
         }) {};
      "unix-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "unix-bytestring";
           version = "0.3.7.3";
           sha256 = "a3ec273da411988b7d9eb7317f6d84ce47f4b7fd39bdc721acd5229e7cff808c";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~wren/";
           description = "Unix/Posix-specific functions for ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unix-compat" = callPackage
        ({ mkDerivation, base, stdenv, unix }:
         mkDerivation {
           pname = "unix-compat";
           version = "0.5.0.1";
           sha256 = "c2f299e0439c15d93d5700911c922fd2b35543c19ba053779cd52f3b051caebd";
           libraryHaskellDepends = [ base unix ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jystic/unix-compat";
           description = "Portable POSIX-compatibility layer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unix-time" = callPackage
        ({ mkDerivation, base, binary, bytestring, old-time, stdenv }:
         mkDerivation {
           pname = "unix-time";
           version = "0.3.8";
           sha256 = "dca1bd332f4690f667570868c91c1270083428067e0e20b88a9d9516efa33a14";
           libraryHaskellDepends = [ base binary bytestring old-time ];
           doHaddock = false;
           doCheck = false;
           description = "Unix time parser/formatter and utilities";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unliftio" = callPackage
        ({ mkDerivation, async, base, deepseq, directory, filepath, stdenv
         , stm, transformers, unix, unliftio-core
         }:
         mkDerivation {
           pname = "unliftio";
           version = "0.2.4.0";
           sha256 = "3ff5fe8b0627dcfeac17ca769a819f08d7fe1a26da3a1cff32eb17ac7865f66e";
           libraryHaskellDepends = [
             async base deepseq directory filepath stm transformers unix
             unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/unliftio/tree/master/unliftio#readme";
           description = "The MonadUnliftIO typeclass for unlifting monads to IO (batteries included)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "unliftio-core" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "unliftio-core";
           version = "0.1.1.0";
           sha256 = "7550b017d87af53ae3e0d3b8524e24a77faf739073f35e40663454a9e9752385";
           revision = "1";
           editedCabalFile = "16bjwcsaghqqmyi69rq65dn3ydifyfaabq3ns37apdm00mwqbcj2";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/unliftio/tree/master/unliftio-core#readme";
           description = "The MonadUnliftIO typeclass for unlifting monads to IO";
           license = stdenv.lib.licenses.mit;
         }) {};
      "unlit" = callPackage
        ({ mkDerivation, base, directory, stdenv, text }:
         mkDerivation {
           pname = "unlit";
           version = "0.4.0.0";
           sha256 = "489ecde4843f1911ebdaac3099241d703bb1161f3d386e2b5143f2fd6c355515";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base directory text ];
           executableHaskellDepends = [ base directory text ];
           doHaddock = false;
           doCheck = false;
           description = "Tool to convert literate code between styles or to code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unordered-containers" = callPackage
        ({ mkDerivation, base, deepseq, hashable, stdenv }:
         mkDerivation {
           pname = "unordered-containers";
           version = "0.2.8.0";
           sha256 = "a4a188359ff28640359131061953f7dbb8258da8ecf0542db0d23f08bfa6eea8";
           libraryHaskellDepends = [ base deepseq hashable ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tibbe/unordered-containers";
           description = "Efficient hashing-based container types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unordered-intmap" = callPackage
        ({ mkDerivation, base, deepseq, primitive, stdenv }:
         mkDerivation {
           pname = "unordered-intmap";
           version = "0.1.0.0";
           sha256 = "99cb542dcd38400b83acc3462c8984c7df8969a2a2f896f4c05c8ae19dfa8a2c";
           libraryHaskellDepends = [ base deepseq primitive ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ethercrow/unordered-intmap";
           description = "A specialization of `HashMap Int v`";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "unsafe" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "unsafe";
           version = "0.0";
           sha256 = "df0a74ccf7b43956c1b5decd5580e235317d1f96a1bbd75e117fc21143ee8641";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~thielema/unsafe/";
           description = "Unified interface to unsafe functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-bytestring" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
         , containers, fail, stdenv, template-haskell, th-lift-instances
         }:
         mkDerivation {
           pname = "uri-bytestring";
           version = "0.3.1.1";
           sha256 = "7f789452877d28799672c5bf9901fdcfdeaf4434d39a62849fd36cfc85e355fb";
           libraryHaskellDepends = [
             attoparsec base blaze-builder bytestring containers fail
             template-haskell th-lift-instances
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Soostone/uri-bytestring";
           description = "Haskell URI parsing as ByteStrings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-bytestring-aeson" = callPackage
        ({ mkDerivation, aeson, base, bytestring, stdenv, text
         , uri-bytestring
         }:
         mkDerivation {
           pname = "uri-bytestring-aeson";
           version = "0.1.0.4";
           sha256 = "888ce719e3188df28b3471ad500db4653a85ac3818093fdf93399b82fb68a9da";
           libraryHaskellDepends = [
             aeson base bytestring text uri-bytestring
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/reactormonk/uri-bytestring-aeson";
           description = "Aeson instances for URI Bytestring";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-encode" = callPackage
        ({ mkDerivation, base, bytestring, network-uri, stdenv, text
         , utf8-string
         }:
         mkDerivation {
           pname = "uri-encode";
           version = "1.5.0.5";
           sha256 = "e82b588aad63112d34f6bad6f1ef72489b9edebfe14f2f523dc1dabdcbe2b186";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base bytestring network-uri text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           description = "Unicode aware uri-encoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uri-templater" = callPackage
        ({ mkDerivation, ansi-wl-pprint, base, bytestring, charset
         , containers, dlist, HTTP, mtl, parsers, stdenv, template-haskell
         , text, time, trifecta, unordered-containers, uuid-types, vector
         }:
         mkDerivation {
           pname = "uri-templater";
           version = "0.3.1.0";
           sha256 = "21e665ff2600b3de42b6ad01ef342b6165859dc6e66897f84a9075649f1c49c2";
           revision = "1";
           editedCabalFile = "0vl1nv40yzns9fnaz6h34x72vpfaaws8f0zm8qlr82333pxg2scw";
           libraryHaskellDepends = [
             ansi-wl-pprint base bytestring charset containers dlist HTTP mtl
             parsers template-haskell text time trifecta unordered-containers
             uuid-types vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/iand675/uri-templater";
           description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
           license = stdenv.lib.licenses.mit;
         }) {};
      "url" = callPackage
        ({ mkDerivation, base, stdenv, utf8-string }:
         mkDerivation {
           pname = "url";
           version = "2.1.3";
           sha256 = "5af27e3f8c0a27e52d0dcb98ef06a0fdd01efe8bb21242c29432e1bc380a4f61";
           libraryHaskellDepends = [ base utf8-string ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.haskell.org/haskellwiki/Url";
           description = "A library for working with URLs";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "urlpath" = callPackage
        ({ mkDerivation, attoparsec-uri, base, exceptions, mmorph
         , monad-control, monad-control-aligned, monad-logger, mtl
         , path-extra, resourcet, split, stdenv, strict, text, transformers
         , transformers-base, vector
         }:
         mkDerivation {
           pname = "urlpath";
           version = "7.0.1";
           sha256 = "ff6690f68602df8bf12efaf27b950da4c0ace58963e5079fa0e1b4865aa5c116";
           libraryHaskellDepends = [
             attoparsec-uri base exceptions mmorph monad-control
             monad-control-aligned monad-logger mtl path-extra resourcet split
             strict text transformers transformers-base vector
           ];
           doHaddock = false;
           doCheck = false;
           description = "Painfully simple URL deployment";
           license = stdenv.lib.licenses.mit;
         }) {};
      "userid" = callPackage
        ({ mkDerivation, aeson, base, boomerang, cereal, safecopy, stdenv
         , web-routes, web-routes-th
         }:
         mkDerivation {
           pname = "userid";
           version = "0.1.3.1";
           sha256 = "695947ef255f9bcfce062363230c796570e73a2a91edf54aab25fc00ffce5489";
           libraryHaskellDepends = [
             aeson base boomerang cereal safecopy web-routes web-routes-th
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.github.com/Happstack/userid";
           description = "The UserId type and useful instances for web development";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "users" = callPackage
        ({ mkDerivation, aeson, base, bcrypt, path-pieces, stdenv, text
         , time
         }:
         mkDerivation {
           pname = "users";
           version = "0.5.0.0";
           sha256 = "6761ac937b0d4c13c5158239a0c51199c394facb72cc734ada90a391f01e53d4";
           revision = "1";
           editedCabalFile = "1x26g7k6kmq2vng9y5qkz82z06rs322s2y8bs9y6r4vayvg07q9v";
           libraryHaskellDepends = [
             aeson base bcrypt path-pieces text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A library simplifying user management for web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-persistent" = callPackage
        ({ mkDerivation, base, bytestring, esqueleto, mtl, persistent
         , persistent-template, stdenv, text, time, transformers, users
         , uuid
         }:
         mkDerivation {
           pname = "users-persistent";
           version = "0.5.0.2";
           sha256 = "f860936c9eaca82353979c70344576964319d241e3c74caf0a55cd3c9918944c";
           libraryHaskellDepends = [
             base bytestring esqueleto mtl persistent persistent-template text
             time transformers users uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A persistent backend for the users package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-postgresql-simple" = callPackage
        ({ mkDerivation, base, bytestring, mtl, postgresql-simple, stdenv
         , text, time, users, uuid
         }:
         mkDerivation {
           pname = "users-postgresql-simple";
           version = "0.5.0.2";
           sha256 = "051b5d2c9c6cdeaacb6271a50ee4084cc1473de8d873825dc6d98023e96ec100";
           libraryHaskellDepends = [
             base bytestring mtl postgresql-simple text time users uuid
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "A PostgreSQL backend for the users package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "users-test" = callPackage
        ({ mkDerivation, base, hspec, stdenv, text, users }:
         mkDerivation {
           pname = "users-test";
           version = "0.5.0.1";
           sha256 = "f68549fa0cc002b16dc55f23a73b1a423aa2e64ab584c4041252a3bb6a5cac3e";
           libraryHaskellDepends = [ base hspec text users ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/users";
           description = "Library to test backends for the users library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "utf8-light" = callPackage
        ({ mkDerivation, base, bytestring, ghc-prim, stdenv }:
         mkDerivation {
           pname = "utf8-light";
           version = "0.4.2";
           sha256 = "184c428ce7896d702da46f6f107e6873ff100dbc1af40b49b5ce87317e619e67";
           libraryHaskellDepends = [ base bytestring ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Unicode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "utf8-string" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "utf8-string";
           version = "1.0.1.1";
           sha256 = "fb0b9e3acbe0605bcd1c63e51f290a7bbbe6628dfa3294ff453e4235fbaef140";
           revision = "3";
           editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/glguy/utf8-string/";
           description = "Support for reading and writing UTF8 Strings";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "utility-ht" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "utility-ht";
           version = "0.0.14";
           sha256 = "69c2eee1330839cdff40fad4f68f8c7ce41ae3b46a9e1d575f589fcdcf7ceba8";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uuid" = callPackage
        ({ mkDerivation, base, binary, bytestring, cryptohash-md5
         , cryptohash-sha1, entropy, network-info, random, stdenv, text
         , time, uuid-types
         }:
         mkDerivation {
           pname = "uuid";
           version = "1.3.13";
           sha256 = "dfac808a7026217d018b408eab18facc6a85c6183be308d4ac7877e80599b027";
           revision = "1";
           editedCabalFile = "0yp01hzsw07d9ismqqkkzwqllfnyyhzhjmwhbhgmkb6v7y7iqrbm";
           libraryHaskellDepends = [
             base binary bytestring cryptohash-md5 cryptohash-sha1 entropy
             network-info random text time uuid-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hvr/uuid";
           description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "uuid-types" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, hashable
         , random, stdenv, text
         }:
         mkDerivation {
           pname = "uuid-types";
           version = "1.0.3";
           sha256 = "9276517ab24a9b06f39d6e3c33c6c2b4ace1fc2126dbc1cd9806866a6551b3fd";
           revision = "1";
           editedCabalFile = "0iwwj07gp28g357hv76k4h8pvlzamvchnw003cv3qk778pcpx201";
           libraryHaskellDepends = [
             base binary bytestring deepseq hashable random text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/aslatter/uuid";
           description = "Type definitions for Universally Unique Identifiers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vado" = callPackage
        ({ mkDerivation, attoparsec, base, directory, filepath, process
         , stdenv, text
         }:
         mkDerivation {
           pname = "vado";
           version = "0.0.9";
           sha256 = "5ae8e162eba0f2ef45bebea623ea0497ae048a922e1bf1ad6cbea3b379b48878";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base directory filepath process text
           ];
           executableHaskellDepends = [
             attoparsec base directory filepath process text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hamishmack/vado";
           description = "Runs commands on remote machines using ssh";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validate-input" = callPackage
        ({ mkDerivation, base, bytestring, either, mtl, pcre-heavy
         , semigroups, stdenv, string-conversions, text
         }:
         mkDerivation {
           pname = "validate-input";
           version = "0.4.0.0";
           sha256 = "20fae24b17429df923b835968720b76c581dc2c5037a2df9374b98a3fa41a1f9";
           libraryHaskellDepends = [
             base bytestring either mtl pcre-heavy semigroups string-conversions
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/agrafix/validate-input";
           description = "Input validation combinator library";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validation" = callPackage
        ({ mkDerivation, base, bifunctors, deepseq, lens, semigroupoids
         , semigroups, stdenv
         }:
         mkDerivation {
           pname = "validation";
           version = "0.6.3";
           sha256 = "c62889016db203decaed401910f947d929b21e4d773a09ec5f1ba40355b7441e";
           libraryHaskellDepends = [
             base bifunctors deepseq lens semigroupoids semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qfpl/validation";
           description = "A data-type like Either but with an accumulating Applicative";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "validationt" = callPackage
        ({ mkDerivation, aeson, base, containers, exceptions, lens
         , monad-control, mtl, QuickCheck, stdenv, text, transformers
         , transformers-base, transformers-lift, vector
         }:
         mkDerivation {
           pname = "validationt";
           version = "0.2.0.0";
           sha256 = "3e665cedffa1e45632ee9b1439e6a86e97a5f037be941c9b6fdba192663d513f";
           libraryHaskellDepends = [
             aeson base containers exceptions lens monad-control mtl QuickCheck
             text transformers transformers-base transformers-lift vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "typeable.io";
           description = "Straightforward validation monad. Convenient solution for validating web forms and APIs.";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "validity" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "validity";
           version = "0.4.0.4";
           sha256 = "9dae58e3a22dd953002ccdcb4544370998a7f7d4868b5566e3d362e534306ac7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity typeclass";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-aeson" = callPackage
        ({ mkDerivation, aeson, base, stdenv, validity, validity-scientific
         , validity-text, validity-unordered-containers, validity-vector
         }:
         mkDerivation {
           pname = "validity-aeson";
           version = "0.1.0.0";
           sha256 = "2f4eb3a1ab7817bd6311b89ac9df97f8d443697506ac5d2bd676e48298f1f8af";
           libraryHaskellDepends = [
             aeson base validity validity-scientific validity-text
             validity-unordered-containers validity-vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for aeson";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-bytestring" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, validity }:
         mkDerivation {
           pname = "validity-bytestring";
           version = "0.2.0.0";
           sha256 = "873e9a37af525591a1895751d6d63af47dae7730c4e3d0225f6ecf11b43a0f85";
           libraryHaskellDepends = [ base bytestring validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for bytestring";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-containers" = callPackage
        ({ mkDerivation, base, containers, stdenv, validity }:
         mkDerivation {
           pname = "validity-containers";
           version = "0.2.0.0";
           sha256 = "f0e991152eb3dceb11cbeeaa75630403b6e66b8fd4edaf4b87e3ce88cecf7f0a";
           libraryHaskellDepends = [ base containers validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-path" = callPackage
        ({ mkDerivation, base, filepath, path, stdenv, validity }:
         mkDerivation {
           pname = "validity-path";
           version = "0.2.0.2";
           sha256 = "de6c96c98c0fa85f7f5037b52a80002112a443bae6b716e7edcfa194dab70130";
           libraryHaskellDepends = [ base filepath path validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for Path";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-scientific" = callPackage
        ({ mkDerivation, base, scientific, stdenv, validity }:
         mkDerivation {
           pname = "validity-scientific";
           version = "0.1.0.0";
           sha256 = "ec17870364bfaf40f2d9adfed314379a5577cec87c28bc7946925bb49a9ca55d";
           libraryHaskellDepends = [ base scientific validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for scientific";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-text" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, validity }:
         mkDerivation {
           pname = "validity-text";
           version = "0.2.0.1";
           sha256 = "64e282a5658ce214b5659cf02afe7ae703930cb2c3cd747c22f5c1e381b526e5";
           libraryHaskellDepends = [ base bytestring text validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for text";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-time" = callPackage
        ({ mkDerivation, base, stdenv, time, validity }:
         mkDerivation {
           pname = "validity-time";
           version = "0.1.0.0";
           sha256 = "5f8cdd1fc63891306dc5cb38f204bd1bf3bdb9f20e6f52aed0054bb745829ed7";
           libraryHaskellDepends = [ base time validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-unordered-containers" = callPackage
        ({ mkDerivation, base, hashable, stdenv, unordered-containers
         , validity
         }:
         mkDerivation {
           pname = "validity-unordered-containers";
           version = "0.1.0.0";
           sha256 = "2dbd007dc722a48a8296b838b02233dc742bd9d57af553ade888e623c8ece5b3";
           libraryHaskellDepends = [
             base hashable unordered-containers validity
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for unordered-containers";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-uuid" = callPackage
        ({ mkDerivation, base, stdenv, uuid, validity }:
         mkDerivation {
           pname = "validity-uuid";
           version = "0.0.0.0";
           sha256 = "6ee5f62bbe400afd7e972cc1c08bde5611a16890780e8d9a658acca945ca618b";
           libraryHaskellDepends = [ base uuid validity ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for uuid";
           license = stdenv.lib.licenses.mit;
         }) {};
      "validity-vector" = callPackage
        ({ mkDerivation, base, hashable, stdenv, validity, vector }:
         mkDerivation {
           pname = "validity-vector";
           version = "0.1.0.0";
           sha256 = "011e1104312392997914567b2804a5cef4b0e7baaf7f5382494e249e55a8e47c";
           libraryHaskellDepends = [ base hashable validity vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/NorfairKing/validity#readme";
           description = "Validity instances for vector";
           license = stdenv.lib.licenses.mit;
         }) {};
      "varying" = callPackage
        ({ mkDerivation, base, stdenv, time, transformers }:
         mkDerivation {
           pname = "varying";
           version = "0.7.0.3";
           sha256 = "6cd417fad6b30d8f9bd5a01dd21d059ecbc26cd1faf27bb7973eea43b5640309";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base transformers ];
           executableHaskellDepends = [ base time transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/schell/varying";
           description = "FRP through value streams and monadic splines";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vault" = callPackage
        ({ mkDerivation, base, containers, hashable, semigroups, stdenv
         , unordered-containers
         }:
         mkDerivation {
           pname = "vault";
           version = "0.3.1.0";
           sha256 = "d960a843c3dae1f6073f50e980dcdbbe2e46e9911273c9f122ba96494c4c979f";
           libraryHaskellDepends = [
             base containers hashable semigroups unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/HeinrichApfelmus/vault";
           description = "a persistent store for values of arbitrary types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vcswrapper" = callPackage
        ({ mkDerivation, base, containers, directory, filepath, hxt, mtl
         , parsec, process, split, stdenv, text
         }:
         mkDerivation {
           pname = "vcswrapper";
           version = "0.1.6";
           sha256 = "2eba26a2fd5bc53fff4a7d1bb3ba831f3d188c6f9cd8a2ca97d59b7002b53b3e";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers directory filepath hxt mtl parsec process split
             text
           ];
           executableHaskellDepends = [
             base containers directory filepath hxt mtl parsec process split
             text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/forste/haskellVCSWrapper";
           description = "Wrapper for source code management systems";
           license = "GPL";
         }) {};
      "vector" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, primitive, semigroups
         , stdenv
         }:
         mkDerivation {
           pname = "vector";
           version = "0.12.0.1";
           sha256 = "b100ee79b9da2651276278cd3e0f08a3c152505cc52982beda507515af173d7b";
           revision = "2";
           editedCabalFile = "0vzr8kra73anchp86knkmkq2afkd1hw6hirldn9vn69frynb1n6y";
           libraryHaskellDepends = [
             base deepseq ghc-prim primitive semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/vector";
           description = "Efficient Arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-algorithms" = callPackage
        ({ mkDerivation, base, bytestring, mtl, mwc-random, primitive
         , stdenv, vector
         }:
         mkDerivation {
           pname = "vector-algorithms";
           version = "0.7.0.1";
           sha256 = "ed460a41ca068f568bc2027579ab14185fbb72c7ac469b5179ae5f8a52719070";
           revision = "1";
           editedCabalFile = "1996aj239vasr4hd5c0pi9i0bd08r6clzr76nqvf3hc5kjs7vml2";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring primitive vector ];
           executableHaskellDepends = [ base mtl mwc-random vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.haskell.org/~dolio/";
           description = "Efficient algorithms for vector arrays";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-binary-instances" = callPackage
        ({ mkDerivation, base, binary, stdenv, vector }:
         mkDerivation {
           pname = "vector-binary-instances";
           version = "0.2.4";
           sha256 = "2b2f783e414dcf2e7dc34ad14264e5af83e5cd4784d5a0a64e4b4571963443f8";
           libraryHaskellDepends = [ base binary vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bos/vector-binary-instances";
           description = "Instances of Data.Binary and Data.Serialize for vector";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-buffer" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, vector }:
         mkDerivation {
           pname = "vector-buffer";
           version = "0.4.1";
           sha256 = "9b5a9b57488267a765d9e7a8f2aa387ee0d3153989c169952da1e1229a60fd9b";
           libraryHaskellDepends = [ base deepseq vector ];
           doHaddock = false;
           doCheck = false;
           description = "A buffer compatible with Data.Vector.*";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-builder" = callPackage
        ({ mkDerivation, base, base-prelude, semigroups, stdenv, vector }:
         mkDerivation {
           pname = "vector-builder";
           version = "0.3.4.1";
           sha256 = "d1649096abdcc96894031292a63dfc0b36be4ab004a00f91f08aa5bc4c65ebb7";
           libraryHaskellDepends = [ base base-prelude semigroups vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/nikita-volkov/vector-builder";
           description = "Vector builder";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vector-fftw" = callPackage
        ({ mkDerivation, base, fftw, primitive, stdenv, storable-complex
         , vector
         }:
         mkDerivation {
           pname = "vector-fftw";
           version = "0.1.3.8";
           sha256 = "e64a333a46c323aa69f5cce08a6e45cb4a93d41066e66fe3b5d440684c219976";
           libraryHaskellDepends = [ base primitive storable-complex vector ];
           librarySystemDepends = [ fftw ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://hackage.haskell.org/package/vector-fftw";
           description = "A binding to the fftw library for one-dimensional vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) fftw;};
      "vector-instances" = callPackage
        ({ mkDerivation, base, comonad, hashable, keys, pointed
         , semigroupoids, semigroups, stdenv, vector
         }:
         mkDerivation {
           pname = "vector-instances";
           version = "3.4";
           sha256 = "1b0246ef0cf8372d61d5c7840d857f49299af2304b5107510377255ed4dd5381";
           libraryHaskellDepends = [
             base comonad hashable keys pointed semigroupoids semigroups vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/vector-instances";
           description = "Orphan Instances for 'Data.Vector'";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-mmap" = callPackage
        ({ mkDerivation, base, mmap, primitive, stdenv, vector }:
         mkDerivation {
           pname = "vector-mmap";
           version = "0.0.3";
           sha256 = "e539ddb02190ab5d04ba2605ac24317360919f99c332af470aafd0b78d9a868a";
           libraryHaskellDepends = [ base mmap primitive vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/pumpkin/vector-mmap";
           description = "Memory map immutable and mutable vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-sized" = callPackage
        ({ mkDerivation, base, deepseq, finite-typelits, stdenv, vector }:
         mkDerivation {
           pname = "vector-sized";
           version = "0.6.1.0";
           sha256 = "4d6e3e1292955778b6fa14b2f57f3417c7884e90d56b494b5d6b09dde7f67821";
           libraryHaskellDepends = [ base deepseq finite-typelits vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/expipiplus1/vector-sized#readme";
           description = "Size tagged vectors";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-space" = callPackage
        ({ mkDerivation, base, Boolean, MemoTrie, NumInstances, stdenv }:
         mkDerivation {
           pname = "vector-space";
           version = "0.12";
           sha256 = "237e4f1581b2c0fd72a8507098a76cf2c804804a9b94da8eb878b16baab8df9a";
           libraryHaskellDepends = [ base Boolean MemoTrie NumInstances ];
           doHaddock = false;
           doCheck = false;
           description = "Vector & affine spaces, linear maps, and derivatives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vector-split" = callPackage
        ({ mkDerivation, base, stdenv, vector }:
         mkDerivation {
           pname = "vector-split";
           version = "1.0.0.2";
           sha256 = "b4aeeea50fec52e594b2d3c05aca3a112b2095d1e5238ced065cecf2d89bbd16";
           libraryHaskellDepends = [ base vector ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fhaust/vector-split";
           description = "Combinator library for splitting vectors";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vector-th-unbox" = callPackage
        ({ mkDerivation, base, stdenv, template-haskell, vector }:
         mkDerivation {
           pname = "vector-th-unbox";
           version = "0.2.1.6";
           sha256 = "be87d4a6f1005ee2d0de6adf521e05c9e83c441568a8a8b60c79efe24ae90235";
           libraryHaskellDepends = [ base template-haskell vector ];
           doHaddock = false;
           doCheck = false;
           description = "Deriver for Data.Vector.Unboxed using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vectortiles" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers, deepseq
         , protobuf, stdenv, text, transformers, vector
         }:
         mkDerivation {
           pname = "vectortiles";
           version = "1.2.0.6";
           sha256 = "c7f6d58441ae7d14a691d9ab7ebee8c87dea9ab5c97fc770a7a9b3cb426b7ad0";
           libraryHaskellDepends = [
             base bytestring cereal containers deepseq protobuf text
             transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fosskers/vectortiles";
           description = "GIS Vector Tiles, as defined by Mapbox";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "verbosity" = callPackage
        ({ mkDerivation, base, binary, data-default-class, deepseq, stdenv
         }:
         mkDerivation {
           pname = "verbosity";
           version = "0.2.3.0";
           sha256 = "8b4ce5ab48aab17b6752dec4efba259964b7084ce10330198ae3ff7ea090f264";
           libraryHaskellDepends = [ base binary data-default-class deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/trskop/verbosity";
           description = "Simple enum that encodes application verbosity";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "versions" = callPackage
        ({ mkDerivation, base, deepseq, hashable, megaparsec, stdenv, text
         }:
         mkDerivation {
           pname = "versions";
           version = "3.3.1";
           sha256 = "0482876527577fac5cceb6a074c70fcb6b5f376f5117c02b193c2cd4e17c2435";
           libraryHaskellDepends = [ base deepseq hashable megaparsec text ];
           doHaddock = false;
           doCheck = false;
           description = "Types and parsers for software version numbers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vhd" = callPackage
        ({ mkDerivation, base, byteable, bytestring, cereal, cipher-aes
         , cryptohash, directory, filepath, mmap, random, stdenv
         , storable-endian, text, time
         }:
         mkDerivation {
           pname = "vhd";
           version = "0.2.2";
           sha256 = "7c678f076395f44d853f87a4538635bc83d7a10319933dec9e06b40ce409ea7c";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base byteable bytestring cereal cipher-aes cryptohash directory
             filepath mmap random storable-endian text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/vincenthz/hs-vhd";
           description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "viewprof" = callPackage
        ({ mkDerivation, base, brick, containers, directory, ghc-prof, lens
         , scientific, stdenv, text, vector, vector-algorithms, vty
         }:
         mkDerivation {
           pname = "viewprof";
           version = "0.0.0.13";
           sha256 = "9f9c78da656a1ac0fd38dc3a096d9ea2743f768f3a80895972618a009c6390c5";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             base brick containers directory ghc-prof lens scientific text
             vector vector-algorithms vty
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/maoe/viewprof";
           description = "Text-based interactive GHC .prof viewer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vinyl" = callPackage
        ({ mkDerivation, base, ghc-prim, stdenv }:
         mkDerivation {
           pname = "vinyl";
           version = "0.7.0";
           sha256 = "fa3a1628d6c459a709de35c942cbf052a73734e8041fe99990c610103a0b90bd";
           libraryHaskellDepends = [ base ghc-prim ];
           doHaddock = false;
           doCheck = false;
           description = "Extensible Records";
           license = stdenv.lib.licenses.mit;
         }) {};
      "vivid" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , hashable, MonadRandom, mtl, network, process, random
         , random-shuffle, split, stdenv, stm, time, transformers
         , utf8-string, vivid-osc, vivid-supercollider
         }:
         mkDerivation {
           pname = "vivid";
           version = "0.3.0.2";
           sha256 = "00e0941c018fc467424d10a94ed568b48bf1fd226cd81a00ced319817d79bb99";
           libraryHaskellDepends = [
             base bytestring containers directory filepath hashable MonadRandom
             mtl network process random random-shuffle split stm time
             transformers utf8-string vivid-osc vivid-supercollider
           ];
           doHaddock = false;
           doCheck = false;
           description = "Sound synthesis with SuperCollider";
           license = "GPL";
         }) {};
      "vivid-osc" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, stdenv, time }:
         mkDerivation {
           pname = "vivid-osc";
           version = "0.3.0.0";
           sha256 = "a728f85c60f6b8361d6b973f45c854485a2b061431869934df72c172a4884a94";
           libraryHaskellDepends = [ base binary bytestring cereal time ];
           doHaddock = false;
           doCheck = false;
           description = "Open Sound Control encode/decode";
           license = "GPL";
         }) {};
      "vivid-supercollider" = callPackage
        ({ mkDerivation, base, binary, bytestring, cereal, split, stdenv
         , utf8-string, vivid-osc
         }:
         mkDerivation {
           pname = "vivid-supercollider";
           version = "0.3.0.0";
           sha256 = "83b79ebc06b4e6db34c91c850191e11488e108b4bf64aa85110c3a389cc4d395";
           libraryHaskellDepends = [
             base binary bytestring cereal split utf8-string vivid-osc
           ];
           doHaddock = false;
           doCheck = false;
           description = "Implementation of SuperCollider server specifications";
           license = "GPL";
         }) {};
      "void" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "void";
           version = "0.7.2";
           sha256 = "d3fffe66a03e4b53db1e459edf75ad8402385a817cae415d857ec0b03ce0cf2b";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/void";
           description = "A Haskell 98 logically uninhabited data type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "vty" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , deepseq, directory, filepath, hashable, microlens, microlens-mtl
         , microlens-th, mtl, parallel, parsec, stdenv, stm, terminfo, text
         , transformers, unix, utf8-string, vector
         }:
         mkDerivation {
           pname = "vty";
           version = "5.19.2";
           sha256 = "bf1f88e97439f3c176d484867a88b6f7f7940e4662cac3e5f20773f61f730a95";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring containers deepseq directory filepath
             hashable microlens microlens-mtl microlens-th mtl parallel parsec
             stm terminfo text transformers unix utf8-string vector
           ];
           executableHaskellDepends = [
             base containers microlens microlens-mtl mtl
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/vty";
           description = "A simple terminal UI library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring
         , bytestring-builder, http-types, network, stdenv, text
         , transformers, vault
         }:
         mkDerivation {
           pname = "wai";
           version = "3.2.1.1";
           sha256 = "5d80a68f5d8806682d8267b7dacc383d094e3ef7ecd705f20e42c91cad564e21";
           libraryHaskellDepends = [
             base blaze-builder bytestring bytestring-builder http-types network
             text transformers vault
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "Web Application Interface";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-app-static" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
         , bytestring, containers, cryptonite, directory, file-embed
         , filepath, http-date, http-types, memory, mime-types, old-locale
         , optparse-applicative, stdenv, template-haskell, text, time
         , transformers, unix-compat, unordered-containers, wai, wai-extra
         , warp, zlib
         }:
         mkDerivation {
           pname = "wai-app-static";
           version = "3.1.6.1";
           sha256 = "b318acf31e2e809411f119744a016ba0a78f52554ac7321a3a1410a218886668";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder blaze-html blaze-markup bytestring containers
             cryptonite directory file-embed filepath http-date http-types
             memory mime-types old-locale optparse-applicative template-haskell
             text time transformers unix-compat unordered-containers wai
             wai-extra warp zlib
           ];
           executableHaskellDepends = [
             base bytestring containers directory mime-types text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/web-application-interface";
           description = "WAI application for static serving";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-cli" = callPackage
        ({ mkDerivation, ansi-terminal, base, http-types, monads-tf
         , network, options, socket-activation, stdenv, stm
         , streaming-commons, unix, wai, wai-extra, warp, warp-tls
         }:
         mkDerivation {
           pname = "wai-cli";
           version = "0.1.1";
           sha256 = "0643ebd8cbd4fcedd2076450b635d020aa2101b26e80f69ade10acd2c3252862";
           libraryHaskellDepends = [
             ansi-terminal base http-types monads-tf network options
             socket-activation stm streaming-commons unix wai wai-extra warp
             warp-tls
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/myfreeweb/wai-cli";
           description = "Command line runner for Wai apps (using Warp) with TLS, CGI, socket activation & graceful shutdown";
           license = stdenv.lib.licenses.publicDomain;
         }) {};
      "wai-conduit" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, conduit
         , http-types, stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "wai-conduit";
           version = "3.0.0.3";
           sha256 = "e49720a7c7b58e78a56991e42fa550a722936af274dc27755a735781258f7aff";
           libraryHaskellDepends = [
             base blaze-builder bytestring conduit http-types transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/wai";
           description = "conduit wrappers for WAI";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-cors" = callPackage
        ({ mkDerivation, attoparsec, base, base-unicode-symbols, bytestring
         , case-insensitive, http-types, mtl, stdenv, transformers, wai
         }:
         mkDerivation {
           pname = "wai-cors";
           version = "0.2.6";
           sha256 = "cac61023184404ba5abf8d3739e51c4862561ba56f829f6f5e69dd64216aa986";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             attoparsec base base-unicode-symbols bytestring case-insensitive
             http-types mtl transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/larskuhtz/wai-cors";
           description = "CORS for WAI";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-eventsource" = callPackage
        ({ mkDerivation, stdenv, wai }:
         mkDerivation {
           pname = "wai-eventsource";
           version = "3.0.0";
           sha256 = "785005f23bf9bf4e1dfaae0705472c0e3ea4c3843ff6a8625db8d1e327a6bfc0";
           libraryHaskellDepends = [ wai ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/book/web-application-interface";
           description = "WAI support for server-sent events (deprecated)";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-extra" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, base, base64-bytestring
         , blaze-builder, bytestring, case-insensitive, containers, cookie
         , data-default-class, deepseq, directory, fast-logger, http-types
         , iproute, lifted-base, network, old-locale, resourcet, stdenv
         , streaming-commons, stringsearch, text, time, transformers, unix
         , unix-compat, vault, void, wai, wai-logger, word8, zlib
         }:
         mkDerivation {
           pname = "wai-extra";
           version = "3.0.22.0";
           sha256 = "62943d71071cbc557686ccb00b4c64383c24b8839b838841686fc2290bd59367";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-terminal base base64-bytestring blaze-builder bytestring
             case-insensitive containers cookie data-default-class deepseq
             directory fast-logger http-types iproute lifted-base network
             old-locale resourcet streaming-commons stringsearch text time
             transformers unix unix-compat vault void wai wai-logger word8 zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "Provides some basic WAI handlers and middleware";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-handler-launch" = callPackage
        ({ mkDerivation, async, base, blaze-builder, bytestring, http-types
         , process, stdenv, streaming-commons, transformers, wai, warp
         }:
         mkDerivation {
           pname = "wai-handler-launch";
           version = "3.0.2.3";
           sha256 = "6dd00e0b703fad0880c69a40f39daff61a3106d7242d9bd0f7ff9f7e97ef61d3";
           libraryHaskellDepends = [
             async base blaze-builder bytestring http-types process
             streaming-commons transformers wai warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Launch a web app in the default browser";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-logger" = callPackage
        ({ mkDerivation, base, blaze-builder, byteorder, bytestring
         , case-insensitive, fast-logger, http-types, network, stdenv, unix
         , unix-time, wai
         }:
         mkDerivation {
           pname = "wai-logger";
           version = "2.3.1";
           sha256 = "3736875b91eb1da4714167e83f8d26d61caf65e13abcac2913ea8183a34cbd51";
           libraryHaskellDepends = [
             base blaze-builder byteorder bytestring case-insensitive
             fast-logger http-types network unix unix-time wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "A logging system for WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-auth" = callPackage
        ({ mkDerivation, aeson, base, base64-bytestring, binary
         , blaze-builder, blaze-html, bytestring, case-insensitive, cereal
         , clientsession, cookie, exceptions, hoauth2, http-client
         , http-client-tls, http-conduit, http-reverse-proxy, http-types
         , optparse-simple, regex-posix, safe-exceptions, shakespeare
         , stdenv, text, unix-compat, unordered-containers, uri-bytestring
         , vault, wai, wai-app-static, wai-extra, warp, yaml
         }:
         mkDerivation {
           pname = "wai-middleware-auth";
           version = "0.1.2.1";
           sha256 = "4199220758290dd22136fd9f53a8e0a856c217c0b8b26eb6dbf41d2ad81e7d74";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base base64-bytestring binary blaze-builder blaze-html
             bytestring case-insensitive cereal clientsession cookie exceptions
             hoauth2 http-client http-client-tls http-conduit http-reverse-proxy
             http-types regex-posix safe-exceptions shakespeare text unix-compat
             unordered-containers uri-bytestring vault wai wai-app-static
             wai-extra yaml
           ];
           executableHaskellDepends = [
             base bytestring cereal clientsession optparse-simple warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Authentication middleware that secures WAI application";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-middleware-caching" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types
         , stdenv, wai
         }:
         mkDerivation {
           pname = "wai-middleware-caching";
           version = "0.1.0.2";
           sha256 = "15b5fb9c92599d5ecb6a70ba40bad024488f9eca7139abe23b961ba21602d78d";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
           description = "WAI Middleware to cache things";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-caching-lru" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, http-types
         , lrucache, stdenv, text, wai, wai-middleware-caching
         }:
         mkDerivation {
           pname = "wai-middleware-caching-lru";
           version = "0.1.0.0";
           sha256 = "377dc842f5ad77b98e8a817e092c891ccfd0da978fb9f69a380f001a95da28d3";
           libraryHaskellDepends = [
             base blaze-builder bytestring http-types lrucache text wai
             wai-middleware-caching
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-lru#readme";
           description = "Initial project template from stack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-caching-redis" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, hedis, http-types
         , stdenv, text, wai, wai-middleware-caching
         }:
         mkDerivation {
           pname = "wai-middleware-caching-redis";
           version = "0.2.0.0";
           sha256 = "6ff53783db20d8f0ff00514ea2679f7022ca59eb20ffad22628ac17c13bf7c4c";
           libraryHaskellDepends = [
             base blaze-builder bytestring hedis http-types text wai
             wai-middleware-caching
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-redis#readme";
           description = "Cache Wai Middleware using Redis backend";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-consul" = callPackage
        ({ mkDerivation, async, base, base-prelude, bytestring, conduit
         , conduit-extra, consul-haskell, enclosed-exceptions, http-client
         , http-types, monad-control, monad-logger, network, process
         , resourcet, stdenv, text, transformers, void, wai, wai-app-static
         , wai-conduit, wai-extra, warp
         }:
         mkDerivation {
           pname = "wai-middleware-consul";
           version = "0.1.0.2";
           sha256 = "d89d5a5bf0b08cf4fcd300d9e16c351a146119c34a9f31949498a874699c0763";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             async base base-prelude bytestring conduit conduit-extra
             consul-haskell enclosed-exceptions http-client http-types
             monad-control monad-logger network process resourcet text
             transformers void wai wai-conduit
           ];
           executableHaskellDepends = [
             async base base-prelude monad-logger transformers wai
             wai-app-static wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/wai-middleware-consul";
           description = "Wai Middleware for Consul";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-middleware-crowd" = callPackage
        ({ mkDerivation, authenticate, base, base64-bytestring, binary
         , blaze-builder, bytestring, case-insensitive, clientsession
         , containers, cookie, gitrev, http-client, http-client-tls
         , http-reverse-proxy, http-types, optparse-applicative, resourcet
         , stdenv, template-haskell, text, time, transformers, unix-compat
         , vault, wai, wai-app-static, wai-extra, warp
         }:
         mkDerivation {
           pname = "wai-middleware-crowd";
           version = "0.1.4.2";
           sha256 = "1136b61a6ce7729093664b63a4ab70de73e356d34b0c7a8114b639b18626b058";
           revision = "1";
           editedCabalFile = "0qvh92p9s80kmzg5w7rga54kfqbwcrkkv5p03pd92px04j2h5lbm";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             authenticate base base64-bytestring binary blaze-builder bytestring
             case-insensitive clientsession containers cookie http-client
             http-client-tls http-types resourcet text time unix-compat vault
             wai
           ];
           executableHaskellDepends = [
             base bytestring clientsession gitrev http-client http-client-tls
             http-reverse-proxy http-types optparse-applicative template-haskell
             text transformers wai wai-app-static wai-extra warp
           ];
           doHaddock = false;
           doCheck = false;
           description = "Middleware and utilities for using Atlassian Crowd authentication";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wai-middleware-metrics" = callPackage
        ({ mkDerivation, base, ekg-core, http-types, stdenv, text, time
         , wai
         }:
         mkDerivation {
           pname = "wai-middleware-metrics";
           version = "0.2.4";
           sha256 = "e73685a748f0ba6d16956b500cdc23f3802f794f5259a3d6b8a5b885e928ec74";
           libraryHaskellDepends = [ base ekg-core http-types text time wai ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Helkafen/wai-middleware-metrics";
           description = "A WAI middleware to collect EKG request metrics";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-prometheus" = callPackage
        ({ mkDerivation, base, bytestring, clock, data-default, http-types
         , prometheus-client, stdenv, text, wai
         }:
         mkDerivation {
           pname = "wai-middleware-prometheus";
           version = "0.3.0";
           sha256 = "cec4403e54456e0b885d7ace402ea1eb64f0eb50e1db35de0366dee09752d513";
           libraryHaskellDepends = [
             base bytestring clock data-default http-types prometheus-client
             text wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fimad/prometheus-haskell";
           description = "WAI middlware for exposing http://prometheus.io metrics.";
           license = stdenv.lib.licenses.asl20;
         }) {};
      "wai-middleware-rollbar" = callPackage
        ({ mkDerivation, aeson, base, bytestring, case-insensitive
         , hostname, http-client, http-conduit, http-types, network, stdenv
         , text, time, unordered-containers, uuid, wai
         }:
         mkDerivation {
           pname = "wai-middleware-rollbar";
           version = "0.8.4";
           sha256 = "3c86c5d8792e4cf12e19bab95410d9d0230ea4c0966a6936ad08cbc3d85cccfb";
           libraryHaskellDepends = [
             aeson base bytestring case-insensitive hostname http-client
             http-conduit http-types network text time unordered-containers uuid
             wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/joneshf/wai-middleware-rollbar#readme";
           description = "Middleware that communicates to Rollbar";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-static" = callPackage
        ({ mkDerivation, base, bytestring, containers, cryptonite
         , directory, expiring-cache-map, filepath, http-types, memory
         , mime-types, mtl, old-locale, semigroups, stdenv, text, time, wai
         }:
         mkDerivation {
           pname = "wai-middleware-static";
           version = "0.8.1";
           sha256 = "e0b5f13f410f81897759acf43198a08101d2af4c9d506164367c7d1a96d55375";
           revision = "5";
           editedCabalFile = "1lb4whil5x1arjb3503x8j9i3wmf678ii1dx0paqqx7dchs6cfwl";
           libraryHaskellDepends = [
             base bytestring containers cryptonite directory expiring-cache-map
             filepath http-types memory mime-types mtl old-locale semigroups
             text time wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/scotty-web/wai-middleware-static";
           description = "WAI middleware that serves requests to static files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-middleware-throttle" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-builder, containers
         , hashable, http-types, mtl, network, stdenv, stm, text
         , token-bucket, transformers, wai
         }:
         mkDerivation {
           pname = "wai-middleware-throttle";
           version = "0.2.2.0";
           sha256 = "6ab783fa8ad1fe16fa69edd532140783efc94934bd859a1dd3eb181cff36b84c";
           libraryHaskellDepends = [
             base bytestring bytestring-builder containers hashable http-types
             mtl network stm text token-bucket transformers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "WAI Middleware for Request Throttling";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-predicates" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, case-insensitive, cookie, http-types
         , singletons, stdenv, text, transformers, vault, vector, wai
         }:
         mkDerivation {
           pname = "wai-predicates";
           version = "0.10.0";
           sha256 = "b7b3f6d147bbbf7a959c84235d0533763eda8fc4973b42f131fd47fe8ffbd7c2";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion case-insensitive
             cookie http-types singletons text transformers vault vector wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/wai-predicates/";
           description = "WAI request predicates";
           license = "unknown";
         }) {};
      "wai-route" = callPackage
        ({ mkDerivation, base, bytestring, http-types, stdenv
         , unordered-containers, wai
         }:
         mkDerivation {
           pname = "wai-route";
           version = "0.3.1.2";
           sha256 = "01517d2cb005deeead0e3e99ffe33b7b105bb6b5f651ed9466f128856ec131ae";
           libraryHaskellDepends = [
             base bytestring http-types unordered-containers wai
           ];
           doHaddock = false;
           doCheck = false;
           description = "Minimalistic, efficient routing for WAI";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "wai-routing" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring
         , bytestring-conversion, case-insensitive, cookie, http-types
         , stdenv, transformers, wai, wai-predicates, wai-route
         }:
         mkDerivation {
           pname = "wai-routing";
           version = "0.13.0";
           sha256 = "f4841b028e20f49e3617d13247c04f457c850421321a92e7ab4e372ee85cde8f";
           libraryHaskellDepends = [
             attoparsec base bytestring bytestring-conversion case-insensitive
             cookie http-types transformers wai wai-predicates wai-route
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/wai-routing/";
           description = "Declarative routing for WAI";
           license = stdenv.lib.licenses.mpl20;
         }) {};
      "wai-session" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers
         , cookie, http-types, StateVar, stdenv, time, transformers, vault
         , wai
         }:
         mkDerivation {
           pname = "wai-session";
           version = "0.3.2";
           sha256 = "83739ca93cf1db1e5b54dec7e2590dabfcc77a97ac1388f2f2f18840917c8326";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers cookie http-types StateVar
             time transformers vault wai
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/singpolyma/wai-session";
           description = "Flexible session middleware for WAI";
           license = "unknown";
         }) {};
      "wai-session-postgresql" = callPackage
        ({ mkDerivation, base, bytestring, cereal, cookie, data-default
         , entropy, postgresql-simple, resource-pool, stdenv, text, time
         , transformers, wai, wai-session
         }:
         mkDerivation {
           pname = "wai-session-postgresql";
           version = "0.2.1.2";
           sha256 = "39d570dd99b4dc38e7803b60b4da4bc804244ed83b3fb250a6e2191a1419ac83";
           libraryHaskellDepends = [
             base bytestring cereal cookie data-default entropy
             postgresql-simple resource-pool text time transformers wai
             wai-session
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/hce/postgresql-session#readme";
           description = "PostgreSQL backed Wai session store";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-slack-middleware" = callPackage
        ({ mkDerivation, aeson, base, http-client, http-types, stdenv, wai
         }:
         mkDerivation {
           pname = "wai-slack-middleware";
           version = "0.2.0";
           sha256 = "d14482f43147e16f05c7282f5b478e76a803dc7398d73dbf6cd2d9be83695750";
           libraryHaskellDepends = [ aeson base http-client http-types wai ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/wai-slack-middleware#readme";
           description = "A Slack middleware for WAI";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-transformers" = callPackage
        ({ mkDerivation, base, exceptions, stdenv, transformers, wai
         , wai-websockets, websockets
         }:
         mkDerivation {
           pname = "wai-transformers";
           version = "0.0.7";
           sha256 = "1a1801a2048eb84808a09e44cb899d6cc689948619eeeea005e312ea5a2fe32c";
           libraryHaskellDepends = [
             base exceptions transformers wai wai-websockets websockets
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple parameterization of Wai's Application type";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wai-websockets" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
         , file-embed, http-types, network, stdenv, text, transformers, wai
         , wai-app-static, warp, websockets
         }:
         mkDerivation {
           pname = "wai-websockets";
           version = "3.0.1.1";
           sha256 = "6abeafea574d9e8f4d41de091afec4594489877aa8717f97e91af5543fd38a31";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base blaze-builder bytestring case-insensitive http-types network
             transformers wai websockets
           ];
           executableHaskellDepends = [
             base blaze-builder bytestring case-insensitive file-embed
             http-types network text transformers wai wai-app-static warp
             websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "Provide a bridge between WAI and the websockets package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "warp" = callPackage
        ({ mkDerivation, array, async, auto-update, base, blaze-builder
         , bytestring, bytestring-builder, case-insensitive, containers
         , ghc-prim, hashable, http-date, http-types, http2, iproute
         , network, simple-sendfile, stdenv, stm, streaming-commons, text
         , unix, unix-compat, vault, wai, word8
         }:
         mkDerivation {
           pname = "warp";
           version = "3.2.13";
           sha256 = "92395bf42d012e5c4deaea7f9e1fc2271a63c5380b4c5bc1cf16b7c53aa2c424";
           revision = "1";
           editedCabalFile = "0i8x4hv5j5l3lz2m0abxik05xq1lzcilw8mhw5f5paiar6csqmg7";
           libraryHaskellDepends = [
             array async auto-update base blaze-builder bytestring
             bytestring-builder case-insensitive containers ghc-prim hashable
             http-date http-types http2 iproute network simple-sendfile stm
             streaming-commons text unix unix-compat vault wai word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "A fast, light-weight web server for WAI applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "warp-tls" = callPackage
        ({ mkDerivation, base, bytestring, cryptonite, data-default-class
         , network, stdenv, streaming-commons, tls, tls-session-manager, wai
         , warp
         }:
         mkDerivation {
           pname = "warp-tls";
           version = "3.2.4";
           sha256 = "05d1aad58fa1a16a652369d7247d4c68b86af0b8febaea9ab7969c121f956e17";
           libraryHaskellDepends = [
             base bytestring cryptonite data-default-class network
             streaming-commons tls tls-session-manager wai warp
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/wai";
           description = "HTTP over TLS support for Warp via the TLS package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wave" = callPackage
        ({ mkDerivation, base, bytestring, cereal, containers
         , data-default-class, stdenv, transformers
         }:
         mkDerivation {
           pname = "wave";
           version = "0.1.5";
           sha256 = "250a08b0c36870fb7fd0de7714818784eed0c4ff74377746dc1842967965fe0f";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring cereal containers data-default-class transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/wave";
           description = "Work with WAVE and RF64 files";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wavefront" = callPackage
        ({ mkDerivation, attoparsec, base, dlist, filepath, mtl, stdenv
         , text, transformers, vector
         }:
         mkDerivation {
           pname = "wavefront";
           version = "0.7.1.1";
           sha256 = "dc1dee258bf97fd7e22b07ba626ebc0f51c6c6e598dae405598bbb11f58030b5";
           libraryHaskellDepends = [
             attoparsec base dlist filepath mtl text transformers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/wavefront";
           description = "Wavefront OBJ loader";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-plugins" = callPackage
        ({ mkDerivation, base, containers, mtl, stdenv, stm, text }:
         mkDerivation {
           pname = "web-plugins";
           version = "0.2.9";
           sha256 = "e63bfd7f666b40c7ff962a070c64dc5bef4a5c490af745fa7ee8f964284a7a50";
           libraryHaskellDepends = [ base containers mtl stm text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/clckwrks/web-plugins";
           description = "dynamic plugin system for web applications";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, exceptions
         , ghc-prim, http-types, mtl, parsec, split, stdenv, text
         , utf8-string
         }:
         mkDerivation {
           pname = "web-routes";
           version = "0.27.14";
           sha256 = "53e523a6b4eb6c3270ae07957251780cb77f0061f867bf3c3a6427263ce6bed4";
           revision = "1";
           editedCabalFile = "061kp8rpmbpr9f9n3kja8160z209hwz42yy3kikn6b446rdc4pdr";
           libraryHaskellDepends = [
             base blaze-builder bytestring exceptions ghc-prim http-types mtl
             parsec split text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
           description = "portable, type-safe URL routing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-boomerang" = callPackage
        ({ mkDerivation, base, boomerang, mtl, parsec, stdenv, text
         , web-routes
         }:
         mkDerivation {
           pname = "web-routes-boomerang";
           version = "0.28.4.2";
           sha256 = "7ea892cd6e8c25e4adabf999d2332248a7b458662479a28a812bafd8dd2b7827";
           libraryHaskellDepends = [
             base boomerang mtl parsec text web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Use boomerang for type-safe URL parsers/printers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-happstack" = callPackage
        ({ mkDerivation, base, bytestring, happstack-server, stdenv, text
         , web-routes
         }:
         mkDerivation {
           pname = "web-routes-happstack";
           version = "0.23.11";
           sha256 = "3ef98ced2c3f198ac4a91072cbe338343b489237882f0939f1c59b372067fd4b";
           libraryHaskellDepends = [
             base bytestring happstack-server text web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Adds support for using web-routes with Happstack";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-hsp" = callPackage
        ({ mkDerivation, base, hsp, stdenv, text, web-routes }:
         mkDerivation {
           pname = "web-routes-hsp";
           version = "0.24.6.1";
           sha256 = "ca7cf5bf026c52fee5b6af3ca173c7341cd991dcd38508d07589cc7ea8102cab";
           libraryHaskellDepends = [ base hsp text web-routes ];
           doHaddock = false;
           doCheck = false;
           description = "Adds XMLGenerator instance for RouteT monad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-th" = callPackage
        ({ mkDerivation, base, parsec, split, stdenv, template-haskell
         , text, web-routes
         }:
         mkDerivation {
           pname = "web-routes-th";
           version = "0.22.6.2";
           sha256 = "48bec573204c12f6b2edd3b471ad979fa9bf7c4b28eafd045067d942db0ac6c8";
           libraryHaskellDepends = [
             base parsec split template-haskell text web-routes
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/happstack/web-routes-th";
           description = "Support for deriving PathInfo using Template Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "web-routes-wai" = callPackage
        ({ mkDerivation, base, bytestring, http-types, stdenv, text, wai
         , web-routes
         }:
         mkDerivation {
           pname = "web-routes-wai";
           version = "0.24.3.1";
           sha256 = "8e1fd187686452af39929bc6b6a31319001859930744e22e2eee1fa9ad103049";
           libraryHaskellDepends = [
             base bytestring http-types text wai web-routes
           ];
           doHaddock = false;
           doCheck = false;
           description = "Library for maintaining correctness of URLs within an application";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "webdriver" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
         , bytestring, data-default-class, directory, directory-tree
         , exceptions, filepath, http-client, http-types, lifted-base
         , monad-control, network, network-uri, scientific, stdenv
         , temporary, text, time, transformers, transformers-base
         , unordered-containers, vector, zip-archive
         }:
         mkDerivation {
           pname = "webdriver";
           version = "0.8.5";
           sha256 = "a8167a8b147411a929e81727a77bc31fcd7d93424442268913fb522e1932c1be";
           libraryHaskellDepends = [
             aeson attoparsec base base64-bytestring bytestring
             data-default-class directory directory-tree exceptions filepath
             http-client http-types lifted-base monad-control network
             network-uri scientific temporary text time transformers
             transformers-base unordered-containers vector zip-archive
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kallisti-dev/hs-webdriver";
           description = "a Haskell client for the Selenium WebDriver protocol";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "webdriver-angular" = callPackage
        ({ mkDerivation, aeson, base, language-javascript, stdenv
         , template-haskell, text, transformers, unordered-containers
         , webdriver
         }:
         mkDerivation {
           pname = "webdriver-angular";
           version = "0.1.11";
           sha256 = "5ebb650cdd9d0815ec897b4972cb0ab7f93d223e8f810e9bf30d6e1fd2ff49f6";
           libraryHaskellDepends = [
             aeson base language-javascript template-haskell text transformers
             unordered-containers webdriver
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
           description = "Webdriver actions to assist with testing a webpage which uses Angular.Js";
           license = stdenv.lib.licenses.mit;
         }) {};
      "webpage" = callPackage
        ({ mkDerivation, base, blaze-html, data-default, lucid, stdenv
         , text
         }:
         mkDerivation {
           pname = "webpage";
           version = "0.0.5";
           sha256 = "213e92ff931d7f58becb532a70cb958a691b216fa85c43f950b429ffad3d1aad";
           libraryHaskellDepends = [
             base blaze-html data-default lucid text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Organized and simple web page scaffold for blaze and lucid";
           license = stdenv.lib.licenses.mit;
         }) {};
      "webrtc-vad" = callPackage
        ({ mkDerivation, base, primitive, stdenv, vector }:
         mkDerivation {
           pname = "webrtc-vad";
           version = "0.1.0.3";
           sha256 = "89cc6691d314c8c2ae7801bf56e1cca0252617536af4ac94acb92ad6d560d453";
           libraryHaskellDepends = [ base primitive vector ];
           doHaddock = false;
           doCheck = false;
           description = "Easy voice activity detection";
           license = stdenv.lib.licenses.mit;
         }) {};
      "websockets" = callPackage
        ({ mkDerivation, attoparsec, base, base64-bytestring, binary
         , blaze-builder, bytestring, case-insensitive, containers, entropy
         , network, random, SHA, stdenv, text
         }:
         mkDerivation {
           pname = "websockets";
           version = "0.10.0.0";
           sha256 = "3ee56fa6683912928a7d336d591c43e4948886037b5aa72cbab2f33fb43fa2eb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             attoparsec base base64-bytestring binary blaze-builder bytestring
             case-insensitive containers entropy network random SHA text
           ];
           executableHaskellDepends = [
             attoparsec base base64-bytestring binary blaze-builder bytestring
             case-insensitive containers entropy network random SHA text
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://jaspervdj.be/websockets";
           description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "websockets-rpc" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, containers
         , exceptions, hashable, monad-control, MonadRandom, mtl, QuickCheck
         , stdenv, stm, text, transformers, unordered-containers, uuid
         , wai-transformers, websockets, websockets-simple
         }:
         mkDerivation {
           pname = "websockets-rpc";
           version = "0.6.0";
           sha256 = "efcd5b6d39506fc591863d10d2e179603a004f7730bc1424920c69d7412b31ce";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson async base bytestring containers exceptions hashable
             monad-control mtl QuickCheck stm text transformers
             unordered-containers uuid wai-transformers websockets
             websockets-simple
           ];
           executableHaskellDepends = [
             aeson async base exceptions MonadRandom mtl wai-transformers
             websockets websockets-simple
           ];
           doHaddock = false;
           doCheck = false;
           description = "Simple streaming RPC mechanism using WebSockets";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "websockets-simple" = callPackage
        ({ mkDerivation, aeson, async, base, bytestring, every, exceptions
         , monad-control, stdenv, stm, transformers, wai-transformers
         , websockets
         }:
         mkDerivation {
           pname = "websockets-simple";
           version = "0.0.6.3";
           sha256 = "2f71348c842ca065df3da61cd1005182dc430977242a0debcaa4635b0aaaef14";
           libraryHaskellDepends = [
             aeson async base bytestring every exceptions monad-control stm
             transformers wai-transformers websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/athanclark/websockets-simple#readme";
           description = "Simpler interface to the websockets api";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "websockets-snap" = callPackage
        ({ mkDerivation, base, bytestring, bytestring-builder, io-streams
         , mtl, snap-core, snap-server, stdenv, websockets
         }:
         mkDerivation {
           pname = "websockets-snap";
           version = "0.10.2.4";
           sha256 = "294d9b4f774659318197a37c0d25862ba858e799da68af76ba41c96365ba7600";
           libraryHaskellDepends = [
             base bytestring bytestring-builder io-streams mtl snap-core
             snap-server websockets
           ];
           doHaddock = false;
           doCheck = false;
           description = "Snap integration for the websockets library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "weeder" = callPackage
        ({ mkDerivation, aeson, base, bytestring, cmdargs, deepseq
         , directory, extra, filepath, foundation, hashable, process, stdenv
         , text, unordered-containers, vector, yaml
         }:
         mkDerivation {
           pname = "weeder";
           version = "0.1.13";
           sha256 = "de1dc36c3b635ad2c7f59af93f0b1e404eeb802a5a8646f64803d6f2c2751f28";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             aeson base bytestring cmdargs deepseq directory extra filepath
             foundation hashable process text unordered-containers vector yaml
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ndmitchell/weeder#readme";
           description = "Detect dead code";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "weigh" = callPackage
        ({ mkDerivation, base, deepseq, mtl, process, split, stdenv
         , template-haskell, temporary
         }:
         mkDerivation {
           pname = "weigh";
           version = "0.0.7";
           sha256 = "e3d270b95c86c2345ea93a692ad48d04833c9d26330219180d5d20cbc0ecb5cc";
           libraryHaskellDepends = [
             base deepseq mtl process split template-haskell temporary
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/weigh#readme";
           description = "Measure allocations of a Haskell functions/values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wide-word" = callPackage
        ({ mkDerivation, base, deepseq, ghc-prim, stdenv }:
         mkDerivation {
           pname = "wide-word";
           version = "0.1.0.5";
           sha256 = "ad523811267cf915d2f846eec09ad59bb3ca84a1e6b0d6f66fce102ee495402a";
           libraryHaskellDepends = [ base deepseq ghc-prim ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/erikd/wide-word";
           description = "Data types for large but fixed width signed and unsigned integers";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "wikicfp-scraper" = callPackage
        ({ mkDerivation, attoparsec, base, bytestring, scalpel-core, stdenv
         , text, time
         }:
         mkDerivation {
           pname = "wikicfp-scraper";
           version = "0.1.0.9";
           sha256 = "9e3cfd6dae669c34c8037cfc0996f371799297f4d08588702399413d8a4242e2";
           libraryHaskellDepends = [
             attoparsec base bytestring scalpel-core text time
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/wikicfp-scraper";
           description = "Scrape WikiCFP web site";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wild-bind" = callPackage
        ({ mkDerivation, base, containers, stdenv, text, transformers }:
         mkDerivation {
           pname = "wild-bind";
           version = "0.1.1.0";
           sha256 = "3aea009877701655f52cd9595813fa3dda7769699775666474dd0e45178e32fd";
           libraryHaskellDepends = [ base containers text transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/wild-bind";
           description = "Dynamic key binding framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wild-bind-x11" = callPackage
        ({ mkDerivation, base, containers, fold-debounce, stdenv, stm, text
         , transformers, wild-bind, X11
         }:
         mkDerivation {
           pname = "wild-bind-x11";
           version = "0.1.0.7";
           sha256 = "0d015d316e78299af919d807ef22581ebe420ceb0a67887b103c017fa7acb06d";
           libraryHaskellDepends = [
             base containers fold-debounce stm text transformers wild-bind X11
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/debug-ito/wild-bind";
           description = "X11-specific implementation for WildBind";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wire-streams" = callPackage
        ({ mkDerivation, base, binary, binary-parsers, bytestring
         , io-streams, stdenv
         }:
         mkDerivation {
           pname = "wire-streams";
           version = "0.1.1.0";
           sha256 = "96dffb70c08c89589881c96f199d271b55e4a5b3cc5be0f3e24e101858e2fb27";
           revision = "1";
           editedCabalFile = "1j7gpk3k82h0kxnhpv40jmnqxpnr0v0m4lj6bhpga81vlmznr088";
           libraryHaskellDepends = [
             base binary binary-parsers bytestring io-streams
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/wire-streams";
           description = "Fast binary io-streams adapter";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "with-location" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "with-location";
           version = "0.1.0";
           sha256 = "2c91d70cb28d39d6d5fbb37800c7d984aed4254cdcbf03ffa0787404bddefde7";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sol/with-location#readme";
           description = "Use ImplicitParams-based source locations in a backward compatible way";
           license = stdenv.lib.licenses.mit;
         }) {};
      "withdependencies" = callPackage
        ({ mkDerivation, base, conduit, containers, mtl, profunctors
         , stdenv
         }:
         mkDerivation {
           pname = "withdependencies";
           version = "0.2.4.2";
           sha256 = "ff51ed5d94ec0051d61458ef38264e0c21119606377d27cc0d9a5a8ae32bf312";
           libraryHaskellDepends = [
             base conduit containers mtl profunctors
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/bartavelle/withdependencies";
           description = "Run computations that depend on one or more elements in a stream";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "witherable" = callPackage
        ({ mkDerivation, base, base-orphans, containers, hashable, stdenv
         , transformers, unordered-containers, vector
         }:
         mkDerivation {
           pname = "witherable";
           version = "0.2";
           sha256 = "9ddb5a2b02fe0f7950742461dfabc9fc4aba245eddeec6afa9e1cd35fa16ea2d";
           libraryHaskellDepends = [
             base base-orphans containers hashable transformers
             unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/witherable";
           description = "filterable traversable";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "witness" = callPackage
        ({ mkDerivation, base, constraints, semigroupoids, stdenv
         , transformers
         }:
         mkDerivation {
           pname = "witness";
           version = "0.4";
           sha256 = "93c6c83681a3ab94f53e49c07d0d1474e21169f779c917a896c9d6ed1bf01ea0";
           libraryHaskellDepends = [
             base constraints semigroupoids transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/AshleyYakeley/witness";
           description = "values that witness types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wizards" = callPackage
        ({ mkDerivation, base, containers, control-monad-free, haskeline
         , mtl, stdenv, transformers
         }:
         mkDerivation {
           pname = "wizards";
           version = "1.0.2";
           sha256 = "4ba12c726d60688b8173db3891aa1dce7f57c6364c40ba2f1c2c8d16404bd30b";
           revision = "1";
           editedCabalFile = "15vwynd5v6xm92dxkxf125grd8sv599n5bnj92qqmhlc89psxhxk";
           libraryHaskellDepends = [
             base containers control-monad-free haskeline mtl transformers
           ];
           doHaddock = false;
           doCheck = false;
           description = "High level, generic library for interrogative user interfaces";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "wl-pprint";
           version = "1.2";
           sha256 = "198003fa7edd3a2d625ec54402cdc5645434b60ad5983e93525f58fec9dcdf98";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "The Wadler/Leijen Pretty Printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-annotated" = callPackage
        ({ mkDerivation, base, containers, deepseq, stdenv, text }:
         mkDerivation {
           pname = "wl-pprint-annotated";
           version = "0.1.0.0";
           sha256 = "b7ce310688626b25c19e2c93c3546ce5f6a3a6c5943b0a687031b757ba494930";
           libraryHaskellDepends = [ base containers deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/wl-pprint-annotated#readme";
           description = "Wadler/Leijen pretty printer with annotations and slightly modernized API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-console" = callPackage
        ({ mkDerivation, base, bytestring, colorful-monoids, stdenv, text
         , wl-pprint-annotated
         }:
         mkDerivation {
           pname = "wl-pprint-console";
           version = "0.1.0.1";
           sha256 = "a7c7f6aa14f78bf6a8aae1a629433872f8bfb377b1392f08047520cdcb3b70fc";
           revision = "1";
           editedCabalFile = "1mlbjjk5mhv3jxzqvfspm07di09pns0xfalhx68k2r39z4lj1fa5";
           libraryHaskellDepends = [
             base bytestring colorful-monoids text wl-pprint-annotated
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/wl-pprint-console#readme";
           description = "Wadler/Leijen pretty printer supporting colorful console output";
           license = stdenv.lib.licenses.mit;
         }) {};
      "wl-pprint-extras" = callPackage
        ({ mkDerivation, base, containers, nats, semigroupoids, semigroups
         , stdenv, text, utf8-string
         }:
         mkDerivation {
           pname = "wl-pprint-extras";
           version = "3.5.0.5";
           sha256 = "a9c21a85a729191fc422938a1f785d61be52f3a2923d8d79dade9b21e8e98d8f";
           libraryHaskellDepends = [
             base containers nats semigroupoids semigroups text utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/wl-pprint-extras/";
           description = "A free monad based on the Wadler/Leijen pretty printer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-terminfo" = callPackage
        ({ mkDerivation, base, bytestring, containers, nats, semigroups
         , stdenv, terminfo, text, transformers, wl-pprint-extras
         }:
         mkDerivation {
           pname = "wl-pprint-terminfo";
           version = "3.7.1.4";
           sha256 = "3cdaba571fc3f8c51e39d14773b23f0f8237bb2d33dbaf9230a98d4b2f388d20";
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base bytestring containers nats semigroups terminfo text
             transformers wl-pprint-extras
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
           description = "A color pretty printer with terminfo support";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wl-pprint-text" = callPackage
        ({ mkDerivation, base, base-compat, stdenv, text }:
         mkDerivation {
           pname = "wl-pprint-text";
           version = "1.1.1.0";
           sha256 = "2960c8201c05d912a1df748a3ceeadc7525905ff1c371d7b4972f4011eca0acd";
           libraryHaskellDepends = [ base base-compat text ];
           doHaddock = false;
           doCheck = false;
           description = "A Wadler/Leijen Pretty Printer for Text values";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "word-trie" = callPackage
        ({ mkDerivation, base, binary, containers, stdenv }:
         mkDerivation {
           pname = "word-trie";
           version = "0.3.0";
           sha256 = "a3f3c2c088c64219ae35f7383a5dc1a368217183ba603e98785c110ac3f29282";
           revision = "1";
           editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
           libraryHaskellDepends = [ base binary containers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/word-trie";
           description = "Implementation of a finite trie over words";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "word-wrap" = callPackage
        ({ mkDerivation, base, stdenv, text }:
         mkDerivation {
           pname = "word-wrap";
           version = "0.4.1";
           sha256 = "eb72f91947c0c62cb862feb33cad9efdc5e720f456fa9ca68ef8ac9d1ec42c97";
           revision = "1";
           editedCabalFile = "1k4w4g053vhmpp08542hrqaw81p3p35i567xgdarqmpghfrk68pp";
           libraryHaskellDepends = [ base text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jtdaugherty/word-wrap/";
           description = "A library for word-wrapping";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "word24" = callPackage
        ({ mkDerivation, base, deepseq, stdenv }:
         mkDerivation {
           pname = "word24";
           version = "2.0.1";
           sha256 = "c34ba17cc88df314151ef27dea192102ed73d5f0678f1359a5fe59799dc3a086";
           libraryHaskellDepends = [ base deepseq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/winterland1989/word24";
           description = "24-bit word and int types for GHC";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "word8" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "word8";
           version = "0.1.3";
           sha256 = "2630934c75728bfbf390c1f0206b225507b354f68d4047b06c018a36823b5d8a";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Word8 library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wrap" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "wrap";
           version = "0.0.0";
           sha256 = "f8bbc4b417b2291532784d0c7940c0f1a24d054e6012963f7d727ad13977f50e";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Wrap a function's return value with another function";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wrecker" = callPackage
        ({ mkDerivation, aeson, ansi-terminal, ansigraph, array
         , authenticate-oauth, base, base64-bytestring, blaze-builder
         , bytestring, case-insensitive, clock, clock-extras, connection
         , containers, cookie, cryptonite, data-default, data-default-class
         , deepseq, exceptions, filepath, http-client, http-client-tls
         , http-types, immortal, lens, markdown-unlit, memory, mime-types
         , network, network-uri, next-ref, optparse-applicative, random
         , statistics, stdenv, stm, stm-chans, streaming-commons, tabular
         , tdigest, text, threads, threads-extras, time, tls, transformers
         , unagi-chan, unix, unordered-containers, vector, vty, wreq
         }:
         mkDerivation {
           pname = "wrecker";
           version = "1.2.4.0";
           sha256 = "c89b388a1dbe0cfe6210b751cac8fafd722a8f7acff9a92c6bbc730f6bc832fb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson ansi-terminal ansigraph array authenticate-oauth base
             base64-bytestring blaze-builder bytestring case-insensitive clock
             clock-extras connection containers cookie cryptonite data-default
             data-default-class deepseq exceptions filepath http-client
             http-client-tls http-types immortal memory mime-types network
             network-uri next-ref optparse-applicative random statistics stm
             stm-chans streaming-commons tabular tdigest text threads
             threads-extras time tls transformers unagi-chan unix
             unordered-containers vector vty wreq
           ];
           executableHaskellDepends = [
             base http-client http-client-tls lens markdown-unlit
             optparse-applicative transformers wreq
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/lorenzo/wrecker#readme";
           description = "An HTTP Performance Benchmarker";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wreq" = callPackage
        ({ mkDerivation, aeson, attoparsec, authenticate-oauth, base
         , base16-bytestring, byteable, bytestring, Cabal, cabal-doctest
         , case-insensitive, containers, cryptohash, exceptions, ghc-prim
         , hashable, http-client, http-client-tls, http-types, lens
         , lens-aeson, mime-types, psqueues, stdenv, template-haskell, text
         , time, time-locale-compat, unordered-containers
         }:
         mkDerivation {
           pname = "wreq";
           version = "0.5.2.0";
           sha256 = "713a60156fec01b5bb131145eeda291f742696a0db8108b20e971e686f03671b";
           revision = "1";
           editedCabalFile = "01x430yrqiv02pq7h55h3y70hvz7n62882vnw1m53qqxp667i580";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             aeson attoparsec authenticate-oauth base base16-bytestring byteable
             bytestring case-insensitive containers cryptohash exceptions
             ghc-prim hashable http-client http-client-tls http-types lens
             lens-aeson mime-types psqueues template-haskell text time
             time-locale-compat unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.serpentine.com/wreq";
           description = "An easy-to-use HTTP client library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wreq-stringless" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text, utf8-string, wreq
         }:
         mkDerivation {
           pname = "wreq-stringless";
           version = "0.5.9.1";
           sha256 = "502cd16163ff3356f5477ed7ab1b67147aa6bb445238055450df12b69697f235";
           libraryHaskellDepends = [ base bytestring text utf8-string wreq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/j-keck/wreq-stringless#readme";
           description = "Simple wrapper to use wreq without Strings";
           license = stdenv.lib.licenses.mit;
         }) {};
      "writer-cps-full" = callPackage
        ({ mkDerivation, base, stdenv, writer-cps-lens, writer-cps-morph
         , writer-cps-mtl, writer-cps-transformers
         }:
         mkDerivation {
           pname = "writer-cps-full";
           version = "0.1.0.0";
           sha256 = "ba51df5149470be6d70fd179f2af4cae30824a3a63528f1549a97f57610a5e95";
           libraryHaskellDepends = [
             base writer-cps-lens writer-cps-morph writer-cps-mtl
             writer-cps-transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/writer-cps-full#readme";
           description = "WriteT and RWST monad transformers (Reexport with all dependencies)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "writer-cps-lens" = callPackage
        ({ mkDerivation, base, lens, profunctors, stdenv, transformers
         , writer-cps-mtl, writer-cps-transformers
         }:
         mkDerivation {
           pname = "writer-cps-lens";
           version = "0.1.0.1";
           sha256 = "2d6b8b6f4f86dcb3cc75bdd25d4ab186d09c2859023f3a6ef2171576b0d306ef";
           libraryHaskellDepends = [
             base lens profunctors transformers writer-cps-mtl
             writer-cps-transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/writer-cps-lens#readme";
           description = "Lens instances for the stricter CPS WriterT and RWST";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "writer-cps-morph" = callPackage
        ({ mkDerivation, base, mmorph, stdenv, writer-cps-transformers }:
         mkDerivation {
           pname = "writer-cps-morph";
           version = "0.1.0.2";
           sha256 = "e91d07b7dce83973c8ad8f489e161ea8092bd3c7d161f4e57cddeedd2f3fd5d8";
           revision = "1";
           editedCabalFile = "0dqpbpaidwa7ahk0n7pv397mv7ncr26p3vcrjh1xzl6vk26bdah5";
           libraryHaskellDepends = [ base mmorph writer-cps-transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/louispan/writer-cps-morph#readme";
           description = "MFunctor instance for CPS style WriterT and RWST";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "writer-cps-mtl" = callPackage
        ({ mkDerivation, base, mtl, stdenv, transformers
         , writer-cps-transformers
         }:
         mkDerivation {
           pname = "writer-cps-mtl";
           version = "0.1.1.4";
           sha256 = "62a3b3b76a5dc0dc6e8b9837afc8c5fc83fb334a034f89fab6a4a544fe204870";
           libraryHaskellDepends = [
             base mtl transformers writer-cps-transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/writer-cps-mtl#readme";
           description = "MonadWriter orphan instances for writer-cps-transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "writer-cps-transformers" = callPackage
        ({ mkDerivation, base, stdenv, transformers }:
         mkDerivation {
           pname = "writer-cps-transformers";
           version = "0.1.1.3";
           sha256 = "8aa22832fdb413c706a6862b83ad4a4ef8dd61ae8658aca6e5076cf2a5cd4aae";
           libraryHaskellDepends = [ base transformers ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/minad/writer-cps-transformers#readme";
           description = "WriteT and RWST monad transformers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "wuss" = callPackage
        ({ mkDerivation, base, bytestring, connection, network, stdenv
         , websockets
         }:
         mkDerivation {
           pname = "wuss";
           version = "1.1.6";
           sha256 = "3e7917beb72938dbf8026200b5e9416b2026d3c8b2c6b999c90ebd672b2253bc";
           libraryHaskellDepends = [
             base bytestring connection network websockets
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/tfausak/wuss#readme";
           description = "Secure WebSocket (WSS) clients";
           license = stdenv.lib.licenses.mit;
         }) {};
      "x11-xim" = callPackage
        ({ mkDerivation, base, stdenv, utf8-string, X11 }:
         mkDerivation {
           pname = "x11-xim";
           version = "0.0.9.0";
           sha256 = "3ccb05847f7eacd607db095e4f655984607f46313d6b70130d09fd096442c76a";
           revision = "1";
           editedCabalFile = "1c561z9xvfcd7ddbiw3r0frhjvsrklachd38s66fzwjdgw1sl124";
           libraryHaskellDepends = [ base utf8-string X11 ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/YoshikuniJujo/x11-xim_haskell/wiki/";
           description = "A binding to the xim of X11 graphics library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
         , bytestring, containers, cryptonite, hourglass, memory, mtl, pem
         , stdenv
         }:
         mkDerivation {
           pname = "x509";
           version = "1.7.3";
           sha256 = "41740f949bb773dc721d342a85587a512658c81ee8cd38f102473b315e127356";
           libraryHaskellDepends = [
             asn1-encoding asn1-parse asn1-types base bytestring containers
             cryptonite hourglass memory mtl pem
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X509 reader and writer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-store" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , containers, cryptonite, directory, filepath, mtl, pem, stdenv
         , x509
         }:
         mkDerivation {
           pname = "x509-store";
           version = "1.6.6";
           sha256 = "6a276f595cf91c9688129cad4c9c6be9c349ffc0de22300eeb3dfa6a2b6e7635";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring containers cryptonite
             directory filepath mtl pem x509
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X.509 collection accessing and storing methods";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-system" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory, filepath
         , mtl, pem, process, stdenv, x509, x509-store
         }:
         mkDerivation {
           pname = "x509-system";
           version = "1.6.6";
           sha256 = "40dcdaae3ec67f38c08d96d4365b901eb8ac0c590bd7972eb429d37d58aa4419";
           libraryHaskellDepends = [
             base bytestring containers directory filepath mtl pem process x509
             x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "Handle per-operating-system X.509 accessors and storage";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "x509-validation" = callPackage
        ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
         , containers, cryptonite, data-default-class, hourglass, memory
         , mtl, pem, stdenv, x509, x509-store
         }:
         mkDerivation {
           pname = "x509-validation";
           version = "1.6.10";
           sha256 = "761c9d77322528259b690508e829cb360feb1fc542951a99f3af51ae980e45d7";
           libraryHaskellDepends = [
             asn1-encoding asn1-types base bytestring containers cryptonite
             data-default-class hourglass memory mtl pem x509 x509-store
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/vincenthz/hs-certificate";
           description = "X.509 Certificate and CRL validation";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xdg-basedir" = callPackage
        ({ mkDerivation, base, directory, filepath, stdenv }:
         mkDerivation {
           pname = "xdg-basedir";
           version = "0.2.2";
           sha256 = "e461c3a5c6007c55ceaea03be3be0ef3a92aa0ea1aea936da0c43671bbfaf42b";
           libraryHaskellDepends = [ base directory filepath ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/willdonnelly/xdg-basedir";
           description = "A basic implementation of the XDG Base Directory specification";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xeno" = callPackage
        ({ mkDerivation, array, base, bytestring, deepseq, mtl
         , mutable-containers, stdenv, vector
         }:
         mkDerivation {
           pname = "xeno";
           version = "0.3.2";
           sha256 = "e9de672191e7c2e8a2d7749265d7ed615b4bc0a97b51f97505eaf6ece0747c93";
           libraryHaskellDepends = [
             array base bytestring deepseq mtl mutable-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ocramz/xeno";
           description = "A fast event-based XML parser in pure Haskell";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xenstore" = callPackage
        ({ mkDerivation, base, bytestring, cereal, mtl, network, stdenv }:
         mkDerivation {
           pname = "xenstore";
           version = "0.1.1";
           sha256 = "c2b538c9ce6716f4a1b4c0cb63ed5c6e5ee3e69e80dbb7826ee7f5392f45e874";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bytestring cereal mtl network ];
           doHaddock = false;
           doCheck = false;
           description = "Xenstore client access";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xhtml" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "xhtml";
           version = "3000.2.2";
           sha256 = "e47c0d0b75ed973928ffb423fa8b571138dfc4ad66ce80b2c4dfcbed64a9647c";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell/xhtml";
           description = "An XHTML combinator library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xls" = callPackage
        ({ mkDerivation, base, conduit, filepath, getopt-generics
         , resourcet, stdenv, transformers
         }:
         mkDerivation {
           pname = "xls";
           version = "0.1.1";
           sha256 = "097711246a78389bdde19484d422ffb2248d46ab62248e4ca653c50e12ff0928";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base conduit filepath resourcet transformers
           ];
           executableHaskellDepends = [
             base conduit getopt-generics resourcet transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/harendra-kumar/xls";
           description = "Parse Microsoft Excel xls files (BIFF/Excel 97-2004)";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xlsx" = callPackage
        ({ mkDerivation, base, base64-bytestring, binary-search, bytestring
         , conduit, containers, data-default, errors, extra, filepath, lens
         , mtl, mtl-compat, network-uri, old-locale, safe, stdenv, text
         , time, transformers, vector, xml-conduit, zip-archive, zlib
         }:
         mkDerivation {
           pname = "xlsx";
           version = "0.6.0";
           sha256 = "93f8636732ff2be1669c3e2dc7feb49aa03ff24e078970eac85853b0d0dcdda8";
           libraryHaskellDepends = [
             base base64-bytestring binary-search bytestring conduit containers
             data-default errors extra filepath lens mtl mtl-compat network-uri
             old-locale safe text time transformers vector xml-conduit
             zip-archive zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/qrilka/xlsx";
           description = "Simple and incomplete Excel file parser/writer";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xlsx-tabular" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, data-default
         , lens, stdenv, text, xlsx
         }:
         mkDerivation {
           pname = "xlsx-tabular";
           version = "0.2.2";
           sha256 = "d4d95c3f6ead3af2185f22d7bd1ab0f0fb972864553f1edde6eb2fbb4ef75556";
           libraryHaskellDepends = [
             aeson base bytestring containers data-default lens text xlsx
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/kkazuo/xlsx-tabular";
           description = "Xlsx table cell value extraction utility";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, text }:
         mkDerivation {
           pname = "xml";
           version = "1.3.14";
           sha256 = "32d1a1a9f21a59176d84697f96ae3a13a0198420e3e4f1c48abbab7d2425013d";
           libraryHaskellDepends = [ base bytestring text ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://code.galois.com";
           description = "A simple XML library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-basic" = callPackage
        ({ mkDerivation, base, containers, data-accessor
         , explicit-exception, semigroups, stdenv, utility-ht
         }:
         mkDerivation {
           pname = "xml-basic";
           version = "0.1.3";
           sha256 = "98d8d1263462c7880afefff15957affe969d202bd3716f5bb553c6ada55c4355";
           libraryHaskellDepends = [
             base containers data-accessor explicit-exception semigroups
             utility-ht
           ];
           doHaddock = false;
           doCheck = false;
           description = "Basics for XML/HTML representation and processing";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-conduit" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
         , blaze-markup, bytestring, conduit, conduit-extra, containers
         , data-default-class, deepseq, monad-control, resourcet, stdenv
         , text, transformers, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit";
           version = "1.7.1.2";
           sha256 = "5a40e6273e5c3b5ef8ef1ef16b7a999ee2581feaab27b9db4c8c159970069358";
           libraryHaskellDepends = [
             attoparsec base blaze-builder blaze-html blaze-markup bytestring
             conduit conduit-extra containers data-default-class deepseq
             monad-control resourcet text transformers xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/xml";
           description = "Pure-Haskell utilities for dealing with XML with the conduit package";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-conduit-parse" = callPackage
        ({ mkDerivation, base, conduit, conduit-parse, containers
         , exceptions, parsers, stdenv, text, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit-parse";
           version = "0.3.1.2";
           sha256 = "c1aae117720128195dbbf2ce196271e4ca2973163c6a03a1b0ead3b32f936308";
           libraryHaskellDepends = [
             base conduit conduit-parse containers exceptions parsers text
             xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/k0ral/xml-conduit-parse";
           description = "Streaming XML parser based on conduits";
           license = "unknown";
         }) {};
      "xml-conduit-writer" = callPackage
        ({ mkDerivation, base, containers, data-default, dlist, mtl, stdenv
         , text, xml-conduit, xml-types
         }:
         mkDerivation {
           pname = "xml-conduit-writer";
           version = "0.1.1.2";
           sha256 = "0891c05ad2a2de68183868de8f66230d02f209446ee91bca772cbf22b599ae58";
           libraryHaskellDepends = [
             base containers data-default dlist mtl text xml-conduit xml-types
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
           description = "Warm and fuzzy creation of XML documents";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-hamlet" = callPackage
        ({ mkDerivation, base, containers, parsec, shakespeare, stdenv
         , template-haskell, text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-hamlet";
           version = "0.4.1.1";
           sha256 = "4d6c5d2229b4bee69040b0c04954b7cedd552df8cfa7585e48129cd7e098d02d";
           libraryHaskellDepends = [
             base containers parsec shakespeare template-haskell text
             xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Hamlet-style quasiquoter for XML content";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-html-qq" = callPackage
        ({ mkDerivation, base, blaze-markup, conduit, data-default
         , from-sum, heterocephalus, html-conduit, resourcet, stdenv
         , template-haskell, text, th-lift, th-lift-instances, xml-conduit
         }:
         mkDerivation {
           pname = "xml-html-qq";
           version = "0.1.0.1";
           sha256 = "1a2ebb1f4ca58a4f442c470db6d3271e6b1069d41860f8683b5da9082329235a";
           libraryHaskellDepends = [
             base blaze-markup conduit data-default from-sum heterocephalus
             html-conduit resourcet template-haskell text th-lift
             th-lift-instances xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/xml-html-qq";
           description = "Quasi-quoters for XML and HTML Documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-indexed-cursor" = callPackage
        ({ mkDerivation, base, bytestring, containers, data-default, stdenv
         , text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-indexed-cursor";
           version = "0.1.1.0";
           sha256 = "46d622fc738e8cc1513f598207ee5e6cda790c79e0697fe02d2da6ad02a6da74";
           libraryHaskellDepends = [
             base bytestring containers data-default text xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/cdepillabout/xml-indexed-cursor";
           description = "Indexed XML cursors similar to 'Text.XML.Cursor' from xml-conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-isogen" = callPackage
        ({ mkDerivation, base, dom-parser, lens, mtl, QuickCheck
         , semigroups, stdenv, template-haskell, text, xml-conduit
         , xml-conduit-writer
         }:
         mkDerivation {
           pname = "xml-isogen";
           version = "0.2.1";
           sha256 = "d4d86df194a5b4efa867ec9c015d9cf2432c2246c1c45548c3cda43f7d02dbcd";
           libraryHaskellDepends = [
             base dom-parser lens mtl QuickCheck semigroups template-haskell
             text xml-conduit xml-conduit-writer
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeable/xml-isogen";
           description = "Generate XML-isomorphic types";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-lens" = callPackage
        ({ mkDerivation, base, case-insensitive, containers, lens, stdenv
         , text, xml-conduit
         }:
         mkDerivation {
           pname = "xml-lens";
           version = "0.1.6.3";
           sha256 = "4dd7f1a91fbb12ae52d5a14badd9f38c0f0d7556f08ee77d79a67cc546dcb1e8";
           revision = "1";
           editedCabalFile = "1fbk4wv7zr10wsh8a0svd799im64fybnlb09rjpfl2pvb6i6h1qs";
           libraryHaskellDepends = [
             base case-insensitive containers lens text xml-conduit
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fumieval/xml-lens";
           description = "Lenses, traversals, and prisms for xml-conduit";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-picklers" = callPackage
        ({ mkDerivation, base, containers, stdenv, text, xml-types }:
         mkDerivation {
           pname = "xml-picklers";
           version = "0.3.6";
           sha256 = "d1b802cd9543a228c6699928e6695539c28f6cbd8e7859a65ca874543ef1d1a4";
           libraryHaskellDepends = [ base containers text xml-types ];
           doHaddock = false;
           doCheck = false;
           description = "XML picklers based on xml-types, ported from hexpat-pickle";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xml-to-json" = callPackage
        ({ mkDerivation, aeson, base, bytestring, containers, curl
         , hashable, hxt, hxt-curl, hxt-expat, hxt-tagsoup, regex-posix
         , stdenv, tagsoup, text, unordered-containers, vector
         }:
         mkDerivation {
           pname = "xml-to-json";
           version = "2.0.1";
           sha256 = "ad1a2501828052a1798178c309638a9b8e4fe66ad24dae9c76de939c156d2e2f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring containers curl hashable hxt hxt-curl
             hxt-expat hxt-tagsoup regex-posix tagsoup text unordered-containers
             vector
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sinelaw/xml-to-json";
           description = "Library and command line tool for converting XML files to json";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-to-json-fast" = callPackage
        ({ mkDerivation, base, directory, process, stdenv, tagsoup, text }:
         mkDerivation {
           pname = "xml-to-json-fast";
           version = "2.0.0";
           sha256 = "dd852fe1aa54db3c6d87a2e74b5345b0f14effdd49bad5b73d79571e1b47563f";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base tagsoup text ];
           executableHaskellDepends = [ base directory process ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/sinelaw/xml-to-json-fast";
           description = "Fast, light converter of xml to json capable of handling huge xml files";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xml-types" = callPackage
        ({ mkDerivation, base, deepseq, stdenv, text }:
         mkDerivation {
           pname = "xml-types";
           version = "0.3.6";
           sha256 = "9937d440072552c03c6d8ad79f61e61467dc28dcd5adeaad81038b9b94eef8c9";
           libraryHaskellDepends = [ base deepseq text ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://john-millikin.com/software/haskell-xml/";
           description = "Basic types for representing XML";
           license = stdenv.lib.licenses.mit;
         }) {};
      "xmlgen" = callPackage
        ({ mkDerivation, base, blaze-builder, bytestring, containers, mtl
         , stdenv, text
         }:
         mkDerivation {
           pname = "xmlgen";
           version = "0.6.2.1";
           sha256 = "9027a17e7ae648997a0e8279d7c01aa6615adda8b93f753b907a01dd797abae6";
           libraryHaskellDepends = [
             base blaze-builder bytestring containers mtl text
           ];
           doHaddock = false;
           doCheck = false;
           description = "Fast XML generation library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmlhtml" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
         , bytestring, bytestring-builder, containers, parsec, stdenv, text
         , unordered-containers
         }:
         mkDerivation {
           pname = "xmlhtml";
           version = "0.2.5.2";
           sha256 = "64818617644bfc7c3c9fe561435af9929ef60310627b0796c78b4b99240b5bdc";
           libraryHaskellDepends = [
             base blaze-builder blaze-html blaze-markup bytestring
             bytestring-builder containers parsec text unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snapframework/xmlhtml";
           description = "XML parser and renderer with HTML 5 quirks mode";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmonad" = callPackage
        ({ mkDerivation, base, containers, data-default, directory
         , extensible-exceptions, filepath, mtl, process, setlocale, stdenv
         , unix, utf8-string, X11
         }:
         mkDerivation {
           pname = "xmonad";
           version = "0.13";
           sha256 = "f9f81b63569f18c777a939741024ec3ae34e4ec84015e5cc50f6622034a303ca";
           isLibrary = true;
           isExecutable = true;
           enableSeparateDataOutput = true;
           libraryHaskellDepends = [
             base containers data-default directory extensible-exceptions
             filepath mtl process setlocale unix utf8-string X11
           ];
           executableHaskellDepends = [ base mtl unix X11 ];
           doHaddock = false;
           doCheck = false;
           postInstall = ''
             shopt -s globstar
             mkdir -p $doc/share/man/man1
             mv "$data/"**"/man/"*[0-9] $doc/share/man/man1/
             rm "$data/"**"/man/"*
           '';
           homepage = "http://xmonad.org";
           description = "A tiling window manager";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmonad-contrib" = callPackage
        ({ mkDerivation, base, bytestring, containers, directory
         , extensible-exceptions, filepath, mtl, old-locale, old-time
         , process, random, stdenv, unix, utf8-string, X11, X11-xft, xmonad
         }:
         mkDerivation {
           pname = "xmonad-contrib";
           version = "0.13";
           sha256 = "a760827fe5b1f99d783f52ccbb72b272d02d53daa26757363cde3ceba014476e";
           libraryHaskellDepends = [
             base bytestring containers directory extensible-exceptions filepath
             mtl old-locale old-time process random unix utf8-string X11 X11-xft
             xmonad
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://xmonad.org/";
           description = "Third party extensions for xmonad";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xmonad-extras" = callPackage
        ({ mkDerivation, alsa-mixer, base, bytestring, containers, hint
         , libmpd, mtl, network, regex-posix, stdenv, X11, xmonad
         , xmonad-contrib
         }:
         mkDerivation {
           pname = "xmonad-extras";
           version = "0.13.2";
           sha256 = "5d9222b7d4a424bc6ca29419d566517daa9df3ce229b6a967aa9fafaccc9b6c7";
           libraryHaskellDepends = [
             alsa-mixer base bytestring containers hint libmpd mtl network
             regex-posix X11 xmonad xmonad-contrib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/xmonad/xmonad-extras";
           description = "Third party extensions for xmonad with wacky dependencies";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xss-sanitize" = callPackage
        ({ mkDerivation, attoparsec, base, containers, css-text
         , network-uri, stdenv, tagsoup, text, utf8-string
         }:
         mkDerivation {
           pname = "xss-sanitize";
           version = "0.3.5.7";
           sha256 = "955856413e70375c794766d04ac9ab7f0d3337dbb04a412c9b7ff5c415acac00";
           libraryHaskellDepends = [
             attoparsec base containers css-text network-uri tagsoup text
             utf8-string
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
           description = "sanitize untrusted HTML to prevent XSS attacks";
           license = stdenv.lib.licenses.bsd2;
         }) {};
      "xturtle" = callPackage
        ({ mkDerivation, base, convertible, Imlib, setlocale, stdenv, X11
         , X11-xft, x11-xim, yjsvg, yjtools
         }:
         mkDerivation {
           pname = "xturtle";
           version = "0.2.0.0";
           sha256 = "43180537377db24e446f83bddd6f0c7ceadeb871c793e046bddeab433e24ce22";
           libraryHaskellDepends = [
             base convertible Imlib setlocale X11 X11-xft x11-xim yjsvg yjtools
           ];
           doHaddock = false;
           doCheck = false;
           description = "turtle like LOGO";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xxhash" = callPackage
        ({ mkDerivation, base, bytestring, crypto-api, stdenv, tagged }:
         mkDerivation {
           pname = "xxhash";
           version = "0.0.2";
           sha256 = "4f5cc71564d71b7ab1e9f70ce9b8d32a3d73cb0b1e08ff96bc54298b21eb2f27";
           libraryHaskellDepends = [ base bytestring crypto-api tagged ];
           doHaddock = false;
           doCheck = false;
           description = "A Haskell implementation of the xxHash algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "xxhash-ffi" = callPackage
        ({ mkDerivation, base, bytestring, stdenv }:
         mkDerivation {
           pname = "xxhash-ffi";
           version = "0.2.0.0";
           sha256 = "fc2e63ea54531e2888a9ddd6816cb113bd5fd0e01192156e9f1459d88af92e6b";
           libraryHaskellDepends = [ base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/haskell-haskey/xxhash-ffi#readme";
           description = "Bindings to the C implementation the xxHash algorithm";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yaml" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , containers, directory, filepath, resourcet, scientific
         , semigroups, stdenv, template-haskell, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "yaml";
           version = "0.8.28";
           sha256 = "f702b6a489ad94cda3c0cb15db34a30356d7b2cdc86a4d0f5340f2ece69f8f6b";
           revision = "1";
           editedCabalFile = "0f8vb5v0xfpsc02zqh9pzgv4fir93sgijk342lz5k872gscfjn62";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit containers directory
             filepath resourcet scientific semigroups template-haskell text
             transformers unordered-containers vector
           ];
           executableHaskellDepends = [ aeson base bytestring ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/yaml/";
           description = "Support for parsing and rendering YAML documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yes-precure5-command" = callPackage
        ({ mkDerivation, base, Cabal, containers, mtl, parsec, random
         , stdenv
         }:
         mkDerivation {
           pname = "yes-precure5-command";
           version = "5.5.3";
           sha256 = "27f2f2dcd81923a18450cda21a31585d0d3887afde504190667cb7dbf0a0af7e";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             base Cabal containers mtl parsec random
           ];
           executableHaskellDepends = [
             base Cabal containers mtl parsec random
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/igrep/yes-precure5-command/";
           description = "Extended yes command to reproduce phrases in Yes! Precure 5";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yeshql" = callPackage
        ({ mkDerivation, base, containers, convertible, filepath, HDBC
         , parsec, stdenv, template-haskell
         }:
         mkDerivation {
           pname = "yeshql";
           version = "3.0.1.3";
           sha256 = "376126afd611d84599fd9c0f9f50c27bea8b9b8630e608bda424555829765b13";
           libraryHaskellDepends = [
             base containers convertible filepath HDBC parsec template-haskell
           ];
           doHaddock = false;
           doCheck = false;
           description = "YesQL-style SQL database abstraction";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod" = callPackage
        ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
         , conduit, conduit-extra, data-default-class, directory
         , fast-logger, monad-control, monad-logger, resourcet, semigroups
         , shakespeare, stdenv, streaming-commons, template-haskell, text
         , transformers, unix, unordered-containers, wai, wai-extra
         , wai-logger, warp, yaml, yesod-core, yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod";
           version = "1.4.5";
           sha256 = "267c8780b27cc0ae8199f80b3063683fb2cd62eeb9696c4b155a298fb035e6e9";
           libraryHaskellDepends = [
             aeson base blaze-html blaze-markup bytestring conduit conduit-extra
             data-default-class directory fast-logger monad-control monad-logger
             resourcet semigroups shakespeare streaming-commons template-haskell
             text transformers unix unordered-containers wai wai-extra
             wai-logger warp yaml yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Creation of type-safe, RESTful web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-alerts" = callPackage
        ({ mkDerivation, alerts, base, blaze-html, blaze-markup, safe
         , stdenv, text, yesod-core
         }:
         mkDerivation {
           pname = "yesod-alerts";
           version = "0.1.2.0";
           sha256 = "8e52c8a7ec9cdbe7cdc06f39ea4e27b852be0391cf78652e349f0f2c169b146f";
           libraryHaskellDepends = [
             alerts base blaze-html blaze-markup safe text yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/alx741/yesod-alerts#readme";
           description = "Alert messages for the Yesod framework";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-auth" = callPackage
        ({ mkDerivation, aeson, authenticate, base, base16-bytestring
         , base64-bytestring, binary, blaze-builder, blaze-html
         , blaze-markup, byteable, bytestring, conduit, conduit-extra
         , containers, cryptonite, data-default, email-validate, file-embed
         , http-client, http-conduit, http-types, lifted-base, memory
         , mime-mail, network-uri, nonce, persistent, persistent-template
         , random, resourcet, safe, shakespeare, stdenv, template-haskell
         , text, time, transformers, unordered-containers, wai, yesod-core
         , yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth";
           version = "1.4.21";
           sha256 = "0811e2f21121f599c85ccf70c1c45d2b978561b42b64f0111d38d562687a1ce3";
           libraryHaskellDepends = [
             aeson authenticate base base16-bytestring base64-bytestring binary
             blaze-builder blaze-html blaze-markup byteable bytestring conduit
             conduit-extra containers cryptonite data-default email-validate
             file-embed http-client http-conduit http-types lifted-base memory
             mime-mail network-uri nonce persistent persistent-template random
             resourcet safe shakespeare template-haskell text time transformers
             unordered-containers wai yesod-core yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Authentication for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-auth-basic" = callPackage
        ({ mkDerivation, base, base64-bytestring, bytestring, exceptions
         , stdenv, text, wai, word8, yesod
         }:
         mkDerivation {
           pname = "yesod-auth-basic";
           version = "0.1.0.2";
           sha256 = "aaaf330bc05b86ddd53cf092d48df1279e4bea47f67cbc6a8b67f1308ef39b2c";
           libraryHaskellDepends = [
             base base64-bytestring bytestring exceptions text wai word8 yesod
           ];
           doHaddock = false;
           doCheck = false;
           description = "Yesod Middleware for HTTP Basic Authentication";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-auth-fb" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, fb, http-conduit
         , lifted-base, shakespeare, stdenv, text, time, transformers, wai
         , yesod-auth, yesod-core, yesod-fb
         }:
         mkDerivation {
           pname = "yesod-auth-fb";
           version = "1.8.1";
           sha256 = "efb7196b4e8d1df83cde8913a3d139661441010aea426176e3820f1843a2fb78";
           libraryHaskellDepends = [
             aeson base bytestring conduit fb http-conduit lifted-base
             shakespeare text time transformers wai yesod-auth yesod-core
             yesod-fb
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/yesod-auth-fb";
           description = "Authentication backend for Yesod using Facebook";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-auth-hashdb" = callPackage
        ({ mkDerivation, aeson, base, bytestring, persistent, stdenv, text
         , yesod-auth, yesod-core, yesod-form, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-auth-hashdb";
           version = "1.6.2";
           sha256 = "ae85e0df9d48d1cda57a86153559da908e6b41c7c3ce318bf2e197883cbfcdb3";
           libraryHaskellDepends = [
             aeson base bytestring persistent text yesod-auth yesod-core
             yesod-form yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
           description = "Authentication plugin for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-bin" = callPackage
        ({ mkDerivation, async, attoparsec, base, base64-bytestring
         , blaze-builder, bytestring, Cabal, conduit, conduit-extra
         , containers, data-default-class, deepseq, directory, file-embed
         , filepath, fsnotify, http-client, http-client-tls
         , http-reverse-proxy, http-types, lifted-base, network
         , optparse-applicative, parsec, process, project-template
         , resourcet, safe-exceptions, say, shakespeare, split, stdenv, stm
         , streaming-commons, tar, template-haskell, text, time
         , transformers, transformers-compat, unix-compat
         , unordered-containers, wai, wai-extra, warp, warp-tls, yaml, zlib
         }:
         mkDerivation {
           pname = "yesod-bin";
           version = "1.5.3";
           sha256 = "b8ee66539c027716de15522ea53cd596abf4c59d7499e644a517223cb2a5011b";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             async attoparsec base base64-bytestring blaze-builder bytestring
             Cabal conduit conduit-extra containers data-default-class deepseq
             directory file-embed filepath fsnotify http-client http-client-tls
             http-reverse-proxy http-types lifted-base network
             optparse-applicative parsec process project-template resourcet
             safe-exceptions say shakespeare split stm streaming-commons tar
             template-haskell text time transformers transformers-compat
             unix-compat unordered-containers wai wai-extra warp warp-tls yaml
             zlib
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "The yesod helper executable";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-core" = callPackage
        ({ mkDerivation, aeson, auto-update, base, blaze-builder
         , blaze-html, blaze-markup, byteable, bytestring, case-insensitive
         , cereal, clientsession, conduit, conduit-extra, containers, cookie
         , data-default, deepseq, deepseq-generics, directory, exceptions
         , fast-logger, http-types, lifted-base, monad-control, monad-logger
         , mtl, mwc-random, old-locale, parsec, path-pieces, primitive
         , random, resourcet, safe, semigroups, shakespeare, stdenv
         , template-haskell, text, time, transformers, transformers-base
         , unix-compat, unordered-containers, vector, wai, wai-extra
         , wai-logger, warp, word8
         }:
         mkDerivation {
           pname = "yesod-core";
           version = "1.4.37.3";
           sha256 = "e06997fdf9314c8f1140c19e922e0ccbd83b8c4cef77f8faf132e972051881cb";
           libraryHaskellDepends = [
             aeson auto-update base blaze-builder blaze-html blaze-markup
             byteable bytestring case-insensitive cereal clientsession conduit
             conduit-extra containers cookie data-default deepseq
             deepseq-generics directory exceptions fast-logger http-types
             lifted-base monad-control monad-logger mtl mwc-random old-locale
             parsec path-pieces primitive random resourcet safe semigroups
             shakespeare template-haskell text time transformers
             transformers-base unix-compat unordered-containers vector wai
             wai-extra wai-logger warp word8
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Creation of type-safe, RESTful web applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-csp" = callPackage
        ({ mkDerivation, attoparsec, base, case-insensitive
         , mono-traversable, network-uri, semigroups, stdenv, syb
         , template-haskell, text, wai, yesod, yesod-core
         }:
         mkDerivation {
           pname = "yesod-csp";
           version = "0.2.4.0";
           sha256 = "e05d31857d6d0e8aececdd83b6a896267ecab2c29426d559e3dafb259eac92a5";
           libraryHaskellDepends = [
             attoparsec base case-insensitive mono-traversable network-uri
             semigroups syb template-haskell text wai yesod yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "Add CSP headers to Yesod apps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-eventsource" = callPackage
        ({ mkDerivation, base, blaze-builder, conduit, stdenv, transformers
         , wai, wai-eventsource, wai-extra, yesod-core
         }:
         mkDerivation {
           pname = "yesod-eventsource";
           version = "1.4.1";
           sha256 = "4019782d074ed5c23719e8e96f604b63990d9fd49255e14b7f5b769e7f3d3e13";
           libraryHaskellDepends = [
             base blaze-builder conduit transformers wai wai-eventsource
             wai-extra yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Server-sent events support for Yesod apps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-fb" = callPackage
        ({ mkDerivation, aeson, base, bytestring, conduit, crypto-api, fb
         , http-conduit, stdenv, text, wai, yesod-core
         }:
         mkDerivation {
           pname = "yesod-fb";
           version = "0.4.0";
           sha256 = "95dd01bf20fc5eed60960106621d5f8212bdab985a6e92b05f51fabf7f267310";
           libraryHaskellDepends = [
             aeson base bytestring conduit crypto-api fb http-conduit text wai
             yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/psibi/yesod-fb";
           description = "Useful glue functions between the fb library and Yesod";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-form" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
         , blaze-markup, byteable, bytestring, containers, data-default
         , email-validate, network-uri, persistent, resourcet, semigroups
         , shakespeare, stdenv, template-haskell, text, time, transformers
         , wai, xss-sanitize, yesod-core, yesod-persistent
         }:
         mkDerivation {
           pname = "yesod-form";
           version = "1.4.16";
           sha256 = "52dcd4ab2b6c73c1ec01a37ef565e5b2d63ec0842d6484bc81db22bb4b1d3252";
           libraryHaskellDepends = [
             aeson attoparsec base blaze-builder blaze-html blaze-markup
             byteable bytestring containers data-default email-validate
             network-uri persistent resourcet semigroups shakespeare
             template-haskell text time transformers wai xss-sanitize yesod-core
             yesod-persistent
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Form handling support for Yesod Web Framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-form-bootstrap4" = callPackage
        ({ mkDerivation, base, classy-prelude-yesod, stdenv, yesod-form }:
         mkDerivation {
           pname = "yesod-form-bootstrap4";
           version = "0.1.0.2";
           sha256 = "8e191fcdc948b890701ab1ab010f9eb59ce13c74543142f28dc7eb3e86de4d53";
           libraryHaskellDepends = [ base classy-prelude-yesod yesod-form ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/yesod-form-bootstrap4#readme";
           description = "renderBootstrap4";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-form-richtext" = callPackage
        ({ mkDerivation, base, blaze-builder, blaze-html, shakespeare
         , stdenv, text, xss-sanitize, yesod-core, yesod-form
         }:
         mkDerivation {
           pname = "yesod-form-richtext";
           version = "0.1.0.2";
           sha256 = "96794a462402b50c66873faad7897102bb70fb45d07a562c04a6370dbcf3a346";
           libraryHaskellDepends = [
             base blaze-builder blaze-html shakespeare text xss-sanitize
             yesod-core yesod-form
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/geraldus/yesod-form-richtext#readme";
           description = "Various rich-text WYSIWYG editors for Yesod forms";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-gitrepo" = callPackage
        ({ mkDerivation, base, directory, enclosed-exceptions, http-types
         , lifted-base, process, stdenv, temporary, text, wai, yesod-core
         }:
         mkDerivation {
           pname = "yesod-gitrepo";
           version = "0.2.1.0";
           sha256 = "6e6e0f37771f888c687bbc2dff24228ea0461829de8c1b714da10dbe9f6987ec";
           libraryHaskellDepends = [
             base directory enclosed-exceptions http-types lifted-base process
             temporary text wai yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/snoyberg/yesod-gitrepo";
           description = "Host content provided by a Git repo";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-gitrev" = callPackage
        ({ mkDerivation, aeson, base, gitrev, stdenv, template-haskell
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-gitrev";
           version = "0.1.0.0";
           sha256 = "30e63c0ea5aec72eed0cd1d9e4dccf242e749c9740e5d67887cac02728628f49";
           libraryHaskellDepends = [
             aeson base gitrev template-haskell yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "A subsite for displaying git information";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yesod-newsfeed" = callPackage
        ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
         , containers, shakespeare, stdenv, text, time, xml-conduit
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-newsfeed";
           version = "1.6";
           sha256 = "4e6dbc06002fe7fd13701941c036c51cf9407c35b28473ed509424bfc0b67516";
           libraryHaskellDepends = [
             base blaze-html blaze-markup bytestring containers shakespeare text
             time xml-conduit yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Helper functions and data types for producing News feeds";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-persistent" = callPackage
        ({ mkDerivation, base, blaze-builder, conduit, persistent
         , persistent-template, resource-pool, resourcet, stdenv
         , transformers, yesod-core
         }:
         mkDerivation {
           pname = "yesod-persistent";
           version = "1.4.3";
           sha256 = "48ce484db879e14875dd1064ad3474a6a17e6f9e1709caa34f9c236608d7334e";
           libraryHaskellDepends = [
             base blaze-builder conduit persistent persistent-template
             resource-pool resourcet transformers yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Some helpers for using Persistent from Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-recaptcha2" = callPackage
        ({ mkDerivation, base, classy-prelude-yesod, http-conduit, stdenv
         , yesod-auth
         }:
         mkDerivation {
           pname = "yesod-recaptcha2";
           version = "0.2.3";
           sha256 = "3686e459c1cddef30f331bbed09cfdf3e1fa42b3c4a8554cdf9fd9a4e9b5eae0";
           libraryHaskellDepends = [
             base classy-prelude-yesod http-conduit yesod-auth
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/ncaq/yesod-recaptcha2#readme";
           description = "yesod recaptcha2";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-sitemap" = callPackage
        ({ mkDerivation, base, conduit, containers, data-default, stdenv
         , text, time, xml-conduit, xml-types, yesod-core
         }:
         mkDerivation {
           pname = "yesod-sitemap";
           version = "1.4.0.1";
           sha256 = "008449fd90899f1988f32a1341f5be87a73cb6b0e100494525f659e9473e2666";
           libraryHaskellDepends = [
             base conduit containers data-default text time xml-conduit
             xml-types yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Generate XML sitemaps";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-static" = callPackage
        ({ mkDerivation, async, attoparsec, base, base64-bytestring
         , blaze-builder, byteable, bytestring, conduit, conduit-extra
         , containers, cryptonite, cryptonite-conduit, css-text
         , data-default, directory, exceptions, file-embed, filepath
         , hashable, hjsmin, http-types, memory, mime-types, old-time
         , process, resourcet, stdenv, template-haskell, text, transformers
         , unix-compat, unordered-containers, wai, wai-app-static
         , yesod-core
         }:
         mkDerivation {
           pname = "yesod-static";
           version = "1.5.3.1";
           sha256 = "544bf84638c8cb1f2d1a869800516bdb826cc1a4f534e15a5f558299cafb3937";
           libraryHaskellDepends = [
             async attoparsec base base64-bytestring blaze-builder byteable
             bytestring conduit conduit-extra containers cryptonite
             cryptonite-conduit css-text data-default directory exceptions
             file-embed filepath hashable hjsmin http-types memory mime-types
             old-time process resourcet template-haskell text transformers
             unix-compat unordered-containers wai wai-app-static yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com/";
           description = "Static file serving subsite for Yesod Web Framework";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-static-angular" = callPackage
        ({ mkDerivation, aeson, base, blaze-builder, blaze-markup
         , bytestring, data-default, directory, filepath, hamlet
         , language-javascript, mime-types, shakespeare, stdenv
         , template-haskell, text, yesod, yesod-core, yesod-static
         }:
         mkDerivation {
           pname = "yesod-static-angular";
           version = "0.1.8";
           sha256 = "97b3ef260a7e6c70b811cbf3b2b3532a003c5028bd6a0df52fc14bd45ce03beb";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base blaze-builder blaze-markup bytestring data-default
             directory filepath hamlet language-javascript mime-types
             shakespeare template-haskell text yesod-core yesod-static
           ];
           executableHaskellDepends = [
             base data-default shakespeare yesod yesod-static
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://bitbucket.org/wuzzeb/yesod-static-angular";
           description = "Yesod generators for embedding AngularJs code into yesod-static at compile time";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-table" = callPackage
        ({ mkDerivation, base, bytestring, containers, contravariant
         , semigroups, stdenv, text, yesod-core
         }:
         mkDerivation {
           pname = "yesod-table";
           version = "2.0.3";
           sha256 = "363a70fe6def770776e1e0e777651c66e4849e4d95e853956a2f2ae1be80189b";
           libraryHaskellDepends = [
             base bytestring containers contravariant semigroups text yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/andrewthad/yesod-table";
           description = "HTML tables for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-test" = callPackage
        ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
         , blaze-markup, bytestring, case-insensitive, containers, cookie
         , hspec-core, html-conduit, http-types, HUnit, monad-control
         , network, persistent, pretty-show, stdenv, text, time
         , transformers, wai, wai-extra, xml-conduit, xml-types, yesod-core
         }:
         mkDerivation {
           pname = "yesod-test";
           version = "1.5.9.1";
           sha256 = "7ee4d486765d8d9044d672ac6079fec5c51460f8bb9fa877c806aeaf90b08516";
           libraryHaskellDepends = [
             attoparsec base blaze-builder blaze-html blaze-markup bytestring
             case-insensitive containers cookie hspec-core html-conduit
             http-types HUnit monad-control network persistent pretty-show text
             time transformers wai wai-extra xml-conduit xml-types yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://www.yesodweb.com";
           description = "integration testing for WAI/Yesod Applications";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yesod-websockets" = callPackage
        ({ mkDerivation, async, base, conduit, enclosed-exceptions
         , monad-control, stdenv, transformers, wai, wai-websockets
         , websockets, yesod-core
         }:
         mkDerivation {
           pname = "yesod-websockets";
           version = "0.2.6";
           sha256 = "98111901a0f33f4c43459a20310dbf20a3fda142c5d42c30cfe9c53eeabeee29";
           libraryHaskellDepends = [
             async base conduit enclosed-exceptions monad-control transformers
             wai wai-websockets websockets yesod-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yesodweb/yesod";
           description = "WebSockets support for Yesod";
           license = stdenv.lib.licenses.mit;
         }) {};
      "yi-core" = callPackage
        ({ mkDerivation, array, attoparsec, base, binary, bytestring
         , containers, data-default, directory, dlist, dynamic-state
         , exceptions, filepath, hashable, ListLike, microlens-platform, mtl
         , old-locale, oo-prototypes, parsec, pointedlist, process
         , process-extras, split, stdenv, text, time, transformers-base
         , unix, unix-compat, unordered-containers, xdg-basedir, yi-language
         , yi-rope
         }:
         mkDerivation {
           pname = "yi-core";
           version = "0.17.1";
           sha256 = "17d0b84a1db3d122d76c5658ad9c5dd80df38f0cbd877376b75cce93ed3768e3";
           libraryHaskellDepends = [
             array attoparsec base binary bytestring containers data-default
             directory dlist dynamic-state exceptions filepath hashable ListLike
             microlens-platform mtl old-locale oo-prototypes parsec pointedlist
             process process-extras split text time transformers-base unix
             unix-compat unordered-containers xdg-basedir yi-language yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Yi editor core library";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-frontend-vty" = callPackage
        ({ mkDerivation, base, containers, data-default, dlist
         , microlens-platform, pointedlist, stdenv, stm, text, vty, yi-core
         , yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-frontend-vty";
           version = "0.17.1";
           sha256 = "06a6eb58d438bdb2404da48818c6d2ce318ebfe0d97174e0c3ddc87ffea80044";
           libraryHaskellDepends = [
             base containers data-default dlist microlens-platform pointedlist
             stm text vty yi-core yi-language yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Vty frontend for Yi editor";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-fuzzy-open" = callPackage
        ({ mkDerivation, base, binary, containers, data-default, directory
         , filepath, mtl, pointedlist, stdenv, text, transformers-base
         , vector, yi-core, yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-fuzzy-open";
           version = "0.17.1";
           sha256 = "506e2cc5420c58339cf9f6a6bbc3c280c0e75cb50c8c30662e77c2635ae0a1f1";
           libraryHaskellDepends = [
             base binary containers data-default directory filepath mtl
             pointedlist text transformers-base vector yi-core yi-language
             yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Fuzzy open plugin for yi";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-ireader" = callPackage
        ({ mkDerivation, base, binary, bytestring, containers, data-default
         , microlens-platform, stdenv, text, yi-core, yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-ireader";
           version = "0.17.1";
           sha256 = "fec8c8d03976e20c8a4e17443f50417fd69d396388a37f561dfc644ce15c6a89";
           libraryHaskellDepends = [
             base binary bytestring containers data-default microlens-platform
             text yi-core yi-language yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Yi editor incremental reader";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-keymap-cua" = callPackage
        ({ mkDerivation, base, microlens-platform, stdenv, text, yi-core
         , yi-keymap-emacs, yi-rope
         }:
         mkDerivation {
           pname = "yi-keymap-cua";
           version = "0.17.1";
           sha256 = "52f128c4a75fd1a0fbf17b10ba5071a01f38e3581b21448caa5c2072c3227c14";
           libraryHaskellDepends = [
             base microlens-platform text yi-core yi-keymap-emacs yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Cua keymap for Yi editor";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-keymap-emacs" = callPackage
        ({ mkDerivation, base, containers, filepath, Hclip
         , microlens-platform, mtl, oo-prototypes, stdenv, text
         , transformers-base, yi-core, yi-language, yi-misc-modes, yi-rope
         }:
         mkDerivation {
           pname = "yi-keymap-emacs";
           version = "0.17.1";
           sha256 = "3ceb457c7c78edb5f0ab8a32f2aa332a2fc6dd202b089df3b828817d2edca7cb";
           libraryHaskellDepends = [
             base containers filepath Hclip microlens-platform mtl oo-prototypes
             text transformers-base yi-core yi-language yi-misc-modes yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Emacs keymap for Yi editor";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-keymap-vim" = callPackage
        ({ mkDerivation, attoparsec, base, binary, containers, data-default
         , directory, filepath, Hclip, microlens-platform, mtl
         , oo-prototypes, pointedlist, safe, stdenv, text, transformers-base
         , unordered-containers, yi-core, yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-keymap-vim";
           version = "0.17.1";
           sha256 = "1c916d810d270edc0e9ce6d6695b5cb45c2a687c93746054c7cc94a98c076dff";
           libraryHaskellDepends = [
             attoparsec base binary containers data-default directory filepath
             Hclip microlens-platform mtl oo-prototypes pointedlist safe text
             transformers-base unordered-containers yi-core yi-language yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Vim keymap for Yi editor";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-language" = callPackage
        ({ mkDerivation, alex, array, base, binary, containers
         , data-default, hashable, microlens-platform, oo-prototypes
         , pointedlist, regex-base, regex-tdfa, stdenv, template-haskell
         , transformers-base, unordered-containers
         }:
         mkDerivation {
           pname = "yi-language";
           version = "0.17.1";
           sha256 = "4aee628b278e9d6b2b2e92a8974696ce6de10c30ef137ababb709bdca193b69e";
           libraryHaskellDepends = [
             array base binary containers data-default hashable
             microlens-platform oo-prototypes pointedlist regex-base regex-tdfa
             template-haskell transformers-base unordered-containers
           ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Collection of language-related Yi libraries";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-misc-modes" = callPackage
        ({ mkDerivation, alex, array, base, binary, data-default, filepath
         , microlens-platform, stdenv, text, yi-core, yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-misc-modes";
           version = "0.17.1";
           sha256 = "e0a9cf8541370407dccfc4afe13f1d10e2b5d0025dfd7b9294ecc25dcc45db7b";
           libraryHaskellDepends = [
             array base binary data-default filepath microlens-platform text
             yi-core yi-language yi-rope
           ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Yi editor miscellaneous modes";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-mode-haskell" = callPackage
        ({ mkDerivation, alex, array, base, binary, data-default, filepath
         , microlens-platform, stdenv, text, yi-core, yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-mode-haskell";
           version = "0.17.1";
           sha256 = "dddff698eae295238fd599ddcd684c50fa673df5e730636f65801123769d89ba";
           libraryHaskellDepends = [
             array base binary data-default filepath microlens-platform text
             yi-core yi-language yi-rope
           ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Yi editor haskell mode";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-mode-javascript" = callPackage
        ({ mkDerivation, alex, array, base, binary, data-default, dlist
         , filepath, microlens-platform, mtl, stdenv, text, yi-core
         , yi-language, yi-rope
         }:
         mkDerivation {
           pname = "yi-mode-javascript";
           version = "0.17.1";
           sha256 = "2448556c225eec9b707aa0ee3c0fdbbc3e53e5e110bc9c18db440ea73bf77e1c";
           libraryHaskellDepends = [
             array base binary data-default dlist filepath microlens-platform
             mtl text yi-core yi-language yi-rope
           ];
           libraryToolDepends = [ alex ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Yi editor javascript mode";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-rope" = callPackage
        ({ mkDerivation, base, binary, bytestring, deepseq, fingertree
         , stdenv, text
         }:
         mkDerivation {
           pname = "yi-rope";
           version = "0.10";
           sha256 = "4933721b7ca34068035d13485097012da7dabc9b8dabbc9a697f476b85626a52";
           libraryHaskellDepends = [
             base binary bytestring deepseq fingertree text
           ];
           doHaddock = false;
           doCheck = false;
           description = "A rope data structure used by Yi";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yi-snippet" = callPackage
        ({ mkDerivation, base, binary, containers, data-default, free
         , microlens-platform, mtl, stdenv, text, vector, yi-core, yi-rope
         }:
         mkDerivation {
           pname = "yi-snippet";
           version = "0.17.1";
           sha256 = "cbbc4f742e0a0b4f3fbeae72f342a3e499021c3a48356df0bc16d72f59fc2cdf";
           libraryHaskellDepends = [
             base binary containers data-default free microlens-platform mtl
             text vector yi-core yi-rope
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/yi-editor/yi#readme";
           description = "Snippet support for yi";
           license = stdenv.lib.licenses.gpl2;
         }) {};
      "yjsvg" = callPackage
        ({ mkDerivation, base, HaXml, stdenv }:
         mkDerivation {
           pname = "yjsvg";
           version = "0.2.0.1";
           sha256 = "f737b7d43b7b3fd3237d07761c672569a2b5d0c1e1b26d48097b9e96b1262e7e";
           libraryHaskellDepends = [ base HaXml ];
           doHaddock = false;
           doCheck = false;
           description = "make SVG string from Haskell data";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yjtools" = callPackage
        ({ mkDerivation, base, stdenv }:
         mkDerivation {
           pname = "yjtools";
           version = "0.9.18";
           sha256 = "9b121c6fcece8241d87aec737458d49c0b76313e9e5e1e70f72b5f71cfc0eb8f";
           libraryHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
           description = "some tools for Monad, List, Tuple and so on";
           license = "LGPL";
         }) {};
      "yoga" = callPackage
        ({ mkDerivation, base, bindings-DSL, ieee754, stdenv }:
         mkDerivation {
           pname = "yoga";
           version = "0.0.0.2";
           sha256 = "2ce82bd1e87ea37cd8ad1e1bb3886bb3535ce583aea2841d07f0b47658a278be";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [ base bindings-DSL ieee754 ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           description = "Bindings to Facebook's Yoga layout library";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "youtube" = callPackage
        ({ mkDerivation, base, bytestring, process, stdenv, utility-ht }:
         mkDerivation {
           pname = "youtube";
           version = "0.2.1.1";
           sha256 = "2e396a785f3d8f504f0e39ed8c87d0a748111ed40b26b950595d83c3fd840e25";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [ base bytestring process utility-ht ];
           doHaddock = false;
           doCheck = false;
           description = "Upload video to YouTube via YouTube API";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zero" = callPackage
        ({ mkDerivation, base, semigroups, stdenv }:
         mkDerivation {
           pname = "zero";
           version = "0.1.4";
           sha256 = "38cdc62d9673b8b40999de69da2ec60dab7a65fb1c22133ecd54e0a2ec61d5d5";
           libraryHaskellDepends = [ base semigroups ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/phaazon/zero";
           description = "Semigroups with absorption";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zeromq4-haskell" = callPackage
        ({ mkDerivation, async, base, bytestring, containers, exceptions
         , monad-control, semigroups, stdenv, transformers
         , transformers-base, zeromq
         }:
         mkDerivation {
           pname = "zeromq4-haskell";
           version = "0.7.0";
           sha256 = "58d4504ee607cb681fc3da2474ed92afaefdb2dc34752b145aa9f746ab29079f";
           libraryHaskellDepends = [
             async base bytestring containers exceptions monad-control
             semigroups transformers transformers-base
           ];
           libraryPkgconfigDepends = [ zeromq ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://gitlab.com/twittner/zeromq-haskell/";
           description = "Bindings to ZeroMQ 4.x";
           license = stdenv.lib.licenses.mit;
         }) {inherit (pkgs) zeromq;};
      "zim-parser" = callPackage
        ({ mkDerivation, array, base, base-compat, binary, binary-conduit
         , bytestring, conduit, conduit-extra, lzma, stdenv
         }:
         mkDerivation {
           pname = "zim-parser";
           version = "0.2.1.0";
           sha256 = "b27f6a395c54e0dac6926a5ea18b582aa21c5d91e31b53f8749f063947a15789";
           libraryHaskellDepends = [
             array base base-compat binary binary-conduit bytestring conduit
             conduit-extra lzma
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/robbinch/zim-parser#readme";
           description = "Read and parse ZIM files";
           license = stdenv.lib.licenses.gpl3;
         }) {};
      "zip" = callPackage
        ({ mkDerivation, base, bytestring, bzlib-conduit, case-insensitive
         , cereal, conduit, conduit-extra, containers, digest, exceptions
         , filepath, monad-control, mtl, path, path-io, plan-b, resourcet
         , stdenv, text, time, transformers, transformers-base
         }:
         mkDerivation {
           pname = "zip";
           version = "0.2.0";
           sha256 = "59ef91fa09f56976a401b5e423c752f1563b48fe872c06c775c8324570b023a3";
           revision = "2";
           editedCabalFile = "0vwbgpk6arp1hfndsm9n0f91yhagyqa0byiwvpl77gbiirbzrlwj";
           libraryHaskellDepends = [
             base bytestring bzlib-conduit case-insensitive cereal conduit
             conduit-extra containers digest exceptions filepath monad-control
             mtl path path-io plan-b resourcet text time transformers
             transformers-base
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/mrkkrp/zip";
           description = "Operations on zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zip-archive" = callPackage
        ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
         , digest, directory, filepath, mtl, old-time, pretty, stdenv, text
         , time, unix, unzip, zlib
         }:
         mkDerivation {
           pname = "zip-archive";
           version = "0.3.2.4";
           sha256 = "20612ed34d8d14deef120440c75f951a5c92c9f39f0de1b82ebac6d5923b3785";
           isLibrary = true;
           isExecutable = true;
           setupHaskellDepends = [ base Cabal ];
           libraryHaskellDepends = [
             array base binary bytestring containers digest directory filepath
             mtl old-time pretty text time unix zlib
           ];
           libraryToolDepends = [ unzip ];
           executableHaskellDepends = [ base bytestring directory ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/jgm/zip-archive";
           description = "Library for creating and modifying zip archives";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zippers" = callPackage
        ({ mkDerivation, base, Cabal, cabal-doctest, lens, profunctors
         , semigroupoids, semigroups, stdenv
         }:
         mkDerivation {
           pname = "zippers";
           version = "0.2.5";
           sha256 = "2d127772564655df0cb99d5191b91a555797e66e535d0b8b4f5ed4d54097c085";
           revision = "1";
           editedCabalFile = "0nndhvgkv1v8zg906cblnxb5xiz0ghmvwdwnsn85pyp0rjplcv1k";
           setupHaskellDepends = [ base Cabal cabal-doctest ];
           libraryHaskellDepends = [
             base lens profunctors semigroupoids semigroups
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/ekmett/zippers/";
           description = "Traversal based zippers";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ziptastic-client" = callPackage
        ({ mkDerivation, base, base-compat, http-client
         , iso3166-country-codes, servant, servant-client, stdenv, text
         , ziptastic-core
         }:
         mkDerivation {
           pname = "ziptastic-client";
           version = "0.3.0.3";
           sha256 = "af089d94fff3245377d696bd9723f4e93fa07694e4a799d65ac8d4d50e111c5e";
           libraryHaskellDepends = [
             base base-compat http-client iso3166-country-codes servant
             servant-client text ziptastic-core
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Ziptastic/ziptastic-haskell#readme";
           description = "A type-safe client for the Ziptastic API for doing forward and reverse geocoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ziptastic-core" = callPackage
        ({ mkDerivation, aeson, base, base-compat, bytestring
         , http-api-data, iso3166-country-codes, servant, stdenv, text, tz
         }:
         mkDerivation {
           pname = "ziptastic-core";
           version = "0.2.0.3";
           sha256 = "8e63eecfb02a86575a6ea5ee7d2ac8c3ea78246878f002c2c08d4c0ce9824ab0";
           libraryHaskellDepends = [
             aeson base base-compat bytestring http-api-data
             iso3166-country-codes servant text tz
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/Ziptastic/ziptastic-haskell#readme";
           description = "Core Servant specification for the Ziptastic API for doing forward and reverse geocoding";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zlib" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "zlib";
           version = "0.6.1.2";
           sha256 = "e4eb4e636caf07a16a9730ce469a00b65d5748f259f43edd904dd457b198a2bb";
           libraryHaskellDepends = [ base bytestring ];
           librarySystemDepends = [ zlib ];
           doHaddock = false;
           doCheck = false;
           description = "Compression and decompression in the gzip and zlib formats";
           license = stdenv.lib.licenses.bsd3;
         }) {inherit (pkgs) zlib;};
      "zlib-bindings" = callPackage
        ({ mkDerivation, base, bytestring, stdenv, zlib }:
         mkDerivation {
           pname = "zlib-bindings";
           version = "0.1.1.5";
           sha256 = "c83bb438f9b6c5fe860982731eb8ac7eff993e8b56cbc15ef5b471f229f79109";
           revision = "2";
           editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
           libraryHaskellDepends = [ base bytestring zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snapframework/zlib-bindings";
           description = "Low-level bindings to the zlib package";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zlib-lens" = callPackage
        ({ mkDerivation, base, bytestring, profunctors, stdenv, zlib }:
         mkDerivation {
           pname = "zlib-lens";
           version = "0.1.2.1";
           sha256 = "e5a563453899e0896cfa3aed22a2fbfc67012990ace6d14631f31b704ff766eb";
           libraryHaskellDepends = [ base bytestring profunctors zlib ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://lens.github.io/";
           description = "Lenses for zlib";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zm" = callPackage
        ({ mkDerivation, base, bytestring, containers, convertible
         , cryptonite, deepseq, either, flat, memory, model, pretty, stdenv
         , text, transformers
         }:
         mkDerivation {
           pname = "zm";
           version = "0.3.2";
           sha256 = "a03795ccdeb55022f3fd19b020d25237b05ee3b7b043c0cdbeadf64147c5c709";
           libraryHaskellDepends = [
             base bytestring containers convertible cryptonite deepseq either
             flat memory model pretty text transformers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/tittoassini/zm";
           description = "Language independent, reproducible, absolute types";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "zot" = callPackage
        ({ mkDerivation, base, monads-tf, stdenv }:
         mkDerivation {
           pname = "zot";
           version = "0.0.3";
           sha256 = "c8a9091b939e3f74aca6be3007a0066c8a1de69da4b62e22891bed543f8a2b32";
           revision = "1";
           editedCabalFile = "04gsbs6fvwpjjg1f6g1j17dxlfzsci9vmirk7mwqwmm9ha0a4hxm";
           isLibrary = false;
           isExecutable = true;
           enableSeparateDataOutput = true;
           executableHaskellDepends = [ base monads-tf ];
           doHaddock = false;
           doCheck = false;
           description = "Zot language";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "ztail" = callPackage
        ({ mkDerivation, array, base, bytestring, filepath, hinotify
         , process, regex-posix, stdenv, time, unix, unordered-containers
         }:
         mkDerivation {
           pname = "ztail";
           version = "1.2";
           sha256 = "13b314c992597118de1bfe0b866ef061237910f77bd35fb258e42d21182a3a4f";
           revision = "3";
           editedCabalFile = "0j22pyi86qw5y4fgxygg9fndlwk8j9c2671bbbk3nws5xzkda1sm";
           isLibrary = false;
           isExecutable = true;
           executableHaskellDepends = [
             array base bytestring filepath hinotify process regex-posix time
             unix unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           description = "Multi-file, colored, filtered log tailer";
           license = stdenv.lib.licenses.bsd3;
         }) {};
    };
in compiler.override {
  initialPackages = stackPackages;
  configurationCommon = { ... }: self: super: {};
  compilerConfig = self: super: {};
}

