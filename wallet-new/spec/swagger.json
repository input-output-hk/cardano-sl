{"swagger":"2.0","info":{"version":"cardano-sl:0","title":"Cardano Wallet API","license":{"url":"https://raw.githubusercontent.com/input-output-hk/cardano-sl/develop/lib/LICENSE","name":"MIT"},"description":"This is the specification for the Cardano Wallet API, automatically generated as a [Swagger](https://swagger.io/) spec from the [Servant](http://haskell-servant.readthedocs.io/en/stable/) API of [Cardano](https://github.com/input-output-hk/cardano-sl).\n\nSoftware Version   | Git Revision\n-------------------|-------------------\ncardano-sl:0 | e79fc3b7d7531e695d997ee54bb6b93fed5d5e03\n\n> **Warning**: This version is currently a **BETA-release** which is still under testing before its final stable release. Should you encounter any issues or have any remarks, please let us know; your feedback is highly appreciated.\n\n\nGetting Started\n===============\n\nIn the following examples, we will use *curl* to illustrate request to an API running on the default port **8090**.\n\nPlease note that wallet web API uses TLS for secure communication. Requests to the API need to send a client CA certificate that was used when launching the node and identifies the client as being permitted to invoke the server API.\n\nCreating a New Wallet\n---------------------\n\nYou can create your first wallet using the `POST /api/v1/wallets` endpoint as follow:\n\n```\ncurl -X POST https://localhost:8090/api/v1/wallets                     \\\n     -H \"Content-Type: application/json; charset=utf-8\"                \\\n     -H \"Accept: application/json; charset=utf-8\"                      \\\n     --cacert ./scripts/tls-files/ca.crt                               \\\n     -d '{                                                             \\\n  \"operation\": \"create\",                                               \\\n  \"backupPhrase\": [\"squirrel\", \"material\", \"silly\", \"twice\", \"direct\", \\\n    \"slush\", \"pistol\", \"razor\", \"become\", \"junk\", \"kingdom\", \"flee\"],  \\\n  \"assuranceLevel\": \"normal\",                                          \\\n  \"name\": \"MyFirstWallet\"                                              \\\n}'\n```\n\n> **Warning**: Those 12 mnemonic words given for the backup phrase act as an example. **Do not** use them on a production system. See the section below about mnemonic codes for more information.\n\nAs a response, the API provides you with a wallet `id` used in subsequent requests to uniquely identity the wallet. Make sure to store it / write it down. Note that every API response is [jsend-compliant](https://labs.omniti.com/labs/jsend); Cardano also augments responses with meta-data specific to pagination. More details in the section below about *Pagination*.\n\n```json\n{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"Ae2tdPwUPE...8V3AVTnqGZ\",\n        \"name\": \"MyFirstWallet\",\n        \"balance\": 0\n    },\n    \"meta\": {\n        \"pagination\": {\n            \"totalPages\": 1,\n            \"page\": 1,\n            \"perPage\": 1,\n            \"totalEntries\": 1\n        }\n    }\n}\n```\n\nYou have just created your first wallet. Information about this wallet can be retrieved using the `GET /api/v1/wallets/{walletId}` endpoint as follow:\n\n```\ncurl -X GET https://localhost:8090/api/v1/wallets/{{walletId}} \\\n     -H \"Accept: application/json; charset=utf-8\"              \\\n     --cacert ./scripts/tls-files/ca.crt                       \\\n```\n\nReceiving Money\n---------------\n\nTo receive money from other users you should provide your address. This address can be obtained from an account. Each wallet contains at least one account, you can think of account as a pocket inside of your wallet. Besides, you can view all existing accounts of a wallet by using the `GET /api/v1/wallets/{{walletId}}/accounts` endpoint as follow:\n\n```\ncurl -X GET https://localhost:8090/api/v1/wallets/{{walletId}}/accounts?page=1&per_page=10 \\\n     -H \"Accept: application/json; charset=utf-8\"                                          \\\n     --cacert ./scripts/tls-files/ca.crt                                                   \\\n```\n\nSince you have, for now, only a single wallet, you'll see something like this:\n\n```json\n{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"index\": 2147483648,\n            \"addresses\": [\n                \"DdzFFzCqrh...fXSru1pdFE\"\n            ],\n            \"amount\": 0,\n            \"name\": \"Initial account\",\n            \"walletId\": \"Ae2tdPwUPE...8V3AVTnqGZ\"\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"totalPages\": 1,\n            \"page\": 1,\n            \"perPage\": 10,\n            \"totalEntries\": 1\n        }\n    }\n}\n```\n\nEach account has at least one address, all listed under the `addresses` field. You can communicate one of these addresses to receive money on the associated account.\n\n\nSending Money\n-------------\n\nIn order to send money from one of your account to another address, you can create a new payment transaction using the `POST /api/v1/transactions` endpoint as follow:\n\n```\ncurl -X POST https://localhost:8090/api/v1/transactions \\\n     -H \"Content-Type: application/json; charset=utf-8\" \\\n     -H \"Accept: application/json; charset=utf-8\"       \\\n     --cacert ./scripts/tls-files/ca.crt                \\\n     -d '{                                              \\\n  \"destinations\": [{                                    \\\n    \"amount\": 14,                                       \\\n    \"address\": \"A7k5bz1QR2...Tx561NNmfF\"                \\\n  }],                                                   \\\n  \"source\": {                                           \\\n    \"accountIndex\": 0,                                  \\\n    \"walletId\": \"Ae2tdPwUPE...8V3AVTnqGZ\"               \\\n  }                                                     \\\n}'\n```\n\nNote that, in order to perform a transaction, you need to have some existing coins on the source account! Beside, the Cardano API is designed to accomodate multiple recipients payments out-of-the-box; notice how `destinations` is a list of addresses.\n\nWhen the transaction succeeds, funds are becomes unavailable from the sources addresses, and available to the destinations in a short delay.  Note that, you can at any time see the status of your wallets by using the `GET /api/v1/transactions/{{walletId}}` endpoint as follow:\n\n```\ncurl -X GET https://localhost:8090/api/v1/wallets/{{walletId}}?account_index=0  \\\n     -H \"Accept: application/json; charset=utf-8\"                               \\\n     --cacert ./scripts/tls-files/ca.crt                                        \\\n```\n\nWe have here constrainted the request to a specific account, with our previous transaction the output should look roughly similar to this:\n\n```json\n{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"amount\": 14,\n            \"inputs\": [{\n              \"amount\": 14,\n              \"address\": \"DdzFFzCqrh...fXSru1pdFE\"\n            }],\n            \"direction\": \"outgoing\",\n            \"outputs\": [{\n              \"amount\": 14,\n              \"address\": \"A7k5bz1QR2...Tx561NNmfF\"\n            }],\n            \"confirmations\": 42,\n            \"id\": \"43zkUzCVi7...TT31uDfEF7\",\n            \"type\": \"local\"\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"totalPages\": 1,\n            \"page\": 1,\n            \"perPage\": 10,\n            \"totalEntries\": 1\n        }\n    }\n}\n```\n\nIn addition, and because it is not possible to _preview_ a transaction, one can lookup a transaction's fees using the `POST /api/v1/transactions/fees` endpoint to get an estimation of those fees.\n\n\nPagination\n==========\n\n**All GET requests of the API are paginated by default**. Whilst this can be a source of surprise, is the best way of ensuring the performance of GET requests is not affected by the size of the data storage.\n\nVersion `V1` introduced a different way of requesting information to the API. In particular, GET requests which returns a _collection_ (i.e. typically a JSON array of resources) lists extra parameters which can be used to modify the shape of the response. In particular, those are:\n\n* `page`: (Default value: **1**).\n* `per_page`: (Default value: **10**)\n\nFor a more accurate description, see the section `Parameters` of each GET request, but as a brief overview the first two control how many results and which results to access in a paginated request.\n\n\nFiltering and sorting\n=====================\n\n`GET` endpoints which list collection of resources supports filters & sort operations, which are clearly marked in the swagger docs with the `FILTER` or `SORT` labels. The query format is quite simple, and it goes this way:\n\n\nFilter operators\n----------------\n\n| Operator | Description                                                               | Example                |\n|----------|---------------------------------------------------------------------------|------------------------|\n| -        | If **no operator** is passed, this is equivalent to `EQ` (see below).     | `balance=10`           |\n| `EQ`     | Retrieves the resources with index _equal_ to the one provided.           | `balance=EQ[10]`       |\n| `LT`     | Retrieves the resources with index _less than_ the one provided.          | `balance=LT[10]`       |\n| `LTE`    | Retrieves the resources with index _less than equal_ the one provided.    | `balance=LTE[10]`      |\n| `GT`     | Retrieves the resources with index _greater than_ the one provided.       | `balance=GT[10]`       |\n| `GTE`    | Retrieves the resources with index _greater than equal_ the one provided. | `balance=GTE[10]`      |\n| `RANGE`  | Retrieves the resources with index _within the inclusive range_ [k,k].    | `balance=RANGE[10,20]` |\n\nSort operators\n--------------\n\n| Operator | Description                                                               | Example                |\n|----------|---------------------------------------------------------------------------|------------------------|\n| `ASC`    | Sorts the resources with the given index in _ascending_ order.            | `sort_by=ASC[balance]` |\n| `DES`    | Sorts the resources with the given index in _descending_ order.           | `sort_by=DES[balance]` |\n| -        | If **no operator** is passed, this is equivalent to `DES` (see above).    | `sort_by=balance`      |\n\n\nErrors\n======\n\nIn case a request cannot be served by the API, a non-2xx HTTP response will be issue, together with a [JSend-compliant](https://labs.omniti.com/labs/jsend) JSON Object describing the error in detail together with a numeric error code which can be used by API consumers to implement proper error handling in their application. For example, here's a typical error which might be issued:\n\n``` json\n{\n    \"status\": \"error\",\n    \"diagnostic\": {},\n    \"message\": \"WalletNotFound\"\n}\n```\n\nExisting wallet errors\n----------------------\n\nError Name | HTTP Error code | Example\n-----------|-----------------|---------\n`NotEnoughMoney`|403|`{\"status\":\"error\",\"diagnostic\":{\"needMore\":1400},\"message\":\"NotEnoughMoney\"}`\n`OutputIsRedeem`|403|`{\"status\":\"error\",\"diagnostic\":{\"address\":\"b10b24203f1f0cadffcfd16277125cf7f3ad598983bef9123be80d93\"},\"message\":\"OutputIsRedeem\"}`\n`SomeOtherError`|418|`{\"status\":\"error\",\"diagnostic\":{\"foo\":\"foo\",\"bar\":14},\"message\":\"SomeOtherError\"}`\n`MigrationFailed`|422|`{\"status\":\"error\",\"diagnostic\":{\"description\":\"migration\"},\"message\":\"MigrationFailed\"}`\n`JSONValidationFailed`|400|`{\"status\":\"error\",\"diagnostic\":{\"validationError\":\"Expected String, found Null.\"},\"message\":\"JSONValidationFailed\"}`\n`UnkownError`|400|`{\"status\":\"error\",\"diagnostic\":{\"msg\":\"unknown\"},\"message\":\"UnkownError\"}`\n`WalletNotFound`|404|`{\"status\":\"error\",\"diagnostic\":{},\"message\":\"WalletNotFound\"}`\n\n\nMnemonic Codes\n==============\n\nThe full list of accepted mnemonic codes to secure a wallet is defined by the [BIP-39 specifications](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki). Note that picking up 12 random words from the list **is not enough** and leads to poor security. Make sure to carefully follow the steps described in the protocol when you generate words for a new wallet.\n\n\nVersioning & Legacy\n===================\n\nThe API is **versioned**, meaning that is possible to access different versions of the API by adding the _version number_ in the URL.\n\n**For the sake of backward compatibility, we expose the legacy version of the API, available simply as unversioned endpoints.**\n\nThis means that _omitting_ the version number would call the old version of the API. Deprecated endpoints are currently grouped under an appropriate section; they would be removed in upcoming released, if you're starting a new integration with Cardano-SL, please ignore these.\n\nNote that Compatibility between major versions is not _guaranteed_, i.e. the request & response formats might differ.\n\n\nDisable TLS (Not Recommended)\n-----------------------------\n\nIf needed, you can disable TLS by providing the `--no-tls` flag to the wallet or by running a wallet in debug mode with `--wallet-debug` turned on.\n"},"host":"127.0.0.1:8090","paths":{"/api/v1/addresses":{"get":{"tags":["Addresses"],"summary":"Returns a list of the addresses.","produces":["application/json;charset=utf-8"],"parameters":[{"default":1,"minimum":1,"in":"query","name":"page","type":"integer","description":"The page number to fetch for this request. The minimum is **1**.  If nothing is specified, **this value defaults to 1** and always shows the first entries in the requested collection.\n"},{"maximum":50,"default":10,"minimum":1,"in":"query","name":"per_page","type":"integer","description":"The number of entries to display for each page. The minimum is **1**, whereas the maximum is **50**. If nothing is specified, **this value defaults to 10**.\n"}],"responses":{"400":{"description":"Invalid `per_page` or `page`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<[WalletAddress]>"},"description":""}}},"post":{"tags":["Addresses"],"summary":"Creates a new Address.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/NewAddress"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<WalletAddress>"},"description":""}}}},"/api/v1/addresses/{address}/validity":{"get":{"tags":["Addresses"],"summary":"Checks the validity of an address.","produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"address","type":"string"}],"responses":{"404":{"description":"`address` not found"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<AddressValidity>"},"description":""}}}},"/api/v1/addresses/external":{"post":{"tags":["Addresses"],"summary":"Creates a new Address in external wallet.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/NewExternalAddress"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<WalletAddress>"},"description":""}}}},"/api/v1/wallets":{"get":{"tags":["Wallets"],"summary":"Returns a list of the available wallets.","produces":["application/json;charset=utf-8"],"parameters":[{"default":1,"minimum":1,"in":"query","name":"page","type":"integer","description":"The page number to fetch for this request. The minimum is **1**.  If nothing is specified, **this value defaults to 1** and always shows the first entries in the requested collection.\n"},{"maximum":50,"default":10,"minimum":1,"in":"query","name":"per_page","type":"integer","description":"The number of entries to display for each page. The minimum is **1**, whereas the maximum is **50**. If nothing is specified, **this value defaults to 10**.\n"},{"in":"query","name":"id","type":"string","description":"A **FILTER** operation on a Wallet. Filters support a variety of queries on the resource. These are: \n\n- `EQ[value]`    : only allow values equal to `value`\n- `LT[value]`    : allow resource with attribute less than the `value`\n- `GT[value]`    : allow objects with an attribute greater than the `value`\n- `GTE[value]`   : allow objects with an attribute at least the `value`\n- `LTE[value]`   : allow objects with an attribute at most the `value`\n- `RANGE[lo,hi]` : allow objects with the attribute in the range between `lo` and `hi`\n- `IN[a,b,c,d]`  : allow objects with the attribute belonging to one provided.\n\n"},{"in":"query","name":"balance","type":"string","description":"A **FILTER** operation on a Wallet. Filters support a variety of queries on the resource. These are: \n\n- `EQ[value]`    : only allow values equal to `value`\n- `LT[value]`    : allow resource with attribute less than the `value`\n- `GT[value]`    : allow objects with an attribute greater than the `value`\n- `GTE[value]`   : allow objects with an attribute at least the `value`\n- `LTE[value]`   : allow objects with an attribute at most the `value`\n- `RANGE[lo,hi]` : allow objects with the attribute in the range between `lo` and `hi`\n- `IN[a,b,c,d]`  : allow objects with the attribute belonging to one provided.\n\n"},{"required":false,"in":"query","name":"sort_by","allowEmptyValue":true,"type":"string","description":"A **SORT** operation on this Wallet. Allowed keys: `balance,created_at`.\n"}],"responses":{"400":{"description":"Invalid `per_page` or `page`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<[Wallet]>"},"description":""}}},"post":{"tags":["Wallets"],"summary":"Creates a new or restores an existing Wallet.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/NewWallet"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"201":{"schema":{"$ref":"#/definitions/WalletResponse<Wallet>"},"description":""}}}},"/api/v1/wallets/{walletId}/password":{"put":{"tags":["Wallets"],"summary":"Updates the password for the given Wallet.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"required":true,"schema":{"$ref":"#/definitions/PasswordUpdate"},"in":"body","name":"body"}],"responses":{"404":{"description":"`walletId` not found"},"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Wallet>"},"description":""}}}},"/api/v1/wallets/{walletId}":{"get":{"tags":["Wallets"],"summary":"Returns the Wallet identified by the given walletId.","produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"}],"responses":{"404":{"description":"`walletId` not found"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Wallet>"},"description":""}}},"put":{"tags":["Wallets"],"summary":"Update the Wallet identified by the given walletId.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"required":true,"schema":{"$ref":"#/definitions/WalletUpdate"},"in":"body","name":"body"}],"responses":{"404":{"description":"`walletId` not found"},"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Wallet>"},"description":""}}},"delete":{"tags":["Wallets"],"summary":"Deletes the given Wallet and all its accounts.","produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"}],"responses":{"404":{"description":"`walletId` not found"},"204":{"description":""}}}},"/api/v1/wallets/external":{"post":{"tags":["Wallets"],"summary":"Creates a new or restores an existing external wallet (mobile client or hardware wallet).","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/NewExternalWallet"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"201":{"schema":{"$ref":"#/definitions/WalletResponse<Wallet>"},"description":""}}}},"/api/v1/wallets/external/{walletId}/address-path":{"post":{"tags":["Wallets"],"summary":"Generates a new BIP44 derivation path for the given external wallet.","produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"}],"responses":{"404":{"description":"`walletId` not found"},"201":{"schema":{"$ref":"#/definitions/WalletResponse<AddressPath>"},"description":""}}}},"/api/v1/wallets/{walletId}/accounts/{accountId}":{"get":{"tags":["Accounts"],"summary":"Retrieves a specific Account.","produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"maximum":4294967295,"minimum":0,"required":true,"in":"path","name":"accountId","type":"integer"}],"responses":{"404":{"description":"`walletId` or `accountId` not found"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Account>"},"description":""}}},"put":{"tags":["Accounts"],"summary":"Update an Account for the given Wallet.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"maximum":4294967295,"minimum":0,"required":true,"in":"path","name":"accountId","type":"integer"},{"required":true,"schema":{"$ref":"#/definitions/AccountUpdate"},"in":"body","name":"body"}],"responses":{"404":{"description":"`walletId` or `accountId` not found"},"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Account>"},"description":""}}},"delete":{"tags":["Accounts"],"summary":"Deletes an Account.","produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"maximum":4294967295,"minimum":0,"required":true,"in":"path","name":"accountId","type":"integer"}],"responses":{"404":{"description":"`walletId` or `accountId` not found"},"204":{"description":""}}}},"/api/v1/wallets/{walletId}/accounts":{"get":{"tags":["Accounts"],"summary":"Retrieves the full list of Accounts.","produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"default":1,"minimum":1,"in":"query","name":"page","type":"integer","description":"The page number to fetch for this request. The minimum is **1**.  If nothing is specified, **this value defaults to 1** and always shows the first entries in the requested collection.\n"},{"maximum":50,"default":10,"minimum":1,"in":"query","name":"per_page","type":"integer","description":"The number of entries to display for each page. The minimum is **1**, whereas the maximum is **50**. If nothing is specified, **this value defaults to 10**.\n"}],"responses":{"404":{"description":"`walletId` not found"},"400":{"description":"Invalid `per_page` or `page`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<[Account]>"},"description":""}}},"post":{"tags":["Accounts"],"summary":"Creates a new Account for the given Wallet.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"required":true,"schema":{"$ref":"#/definitions/NewAccount"},"in":"body","name":"body"}],"responses":{"404":{"description":"`walletId` not found"},"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Account>"},"description":""}}}},"/api/v1/wallets/{walletId}/accounts/external":{"post":{"tags":["Accounts"],"summary":"Creates a new Account for the given external Wallet.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"in":"path","name":"walletId","type":"string"},{"required":true,"schema":{"$ref":"#/definitions/NewExternalAccount"},"in":"body","name":"body"}],"responses":{"404":{"description":"`walletId` not found"},"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Account>"},"description":""}}}},"/api/v1/transactions":{"get":{"tags":["Transactions"],"summary":"Returns the transaction history, i.e the list of all the past transactions.","produces":["application/json;charset=utf-8"],"parameters":[{"in":"query","name":"wallet_id","type":"string"},{"maximum":4294967295,"minimum":0,"in":"query","name":"account_index","type":"integer"},{"in":"query","name":"address","type":"string"},{"default":1,"minimum":1,"in":"query","name":"page","type":"integer","description":"The page number to fetch for this request. The minimum is **1**.  If nothing is specified, **this value defaults to 1** and always shows the first entries in the requested collection.\n"},{"maximum":50,"default":10,"minimum":1,"in":"query","name":"per_page","type":"integer","description":"The number of entries to display for each page. The minimum is **1**, whereas the maximum is **50**. If nothing is specified, **this value defaults to 10**.\n"},{"in":"query","name":"id","type":"string","description":"A **FILTER** operation on a Transaction. Filters support a variety of queries on the resource. These are: \n\n- `EQ[value]`    : only allow values equal to `value`\n- `LT[value]`    : allow resource with attribute less than the `value`\n- `GT[value]`    : allow objects with an attribute greater than the `value`\n- `GTE[value]`   : allow objects with an attribute at least the `value`\n- `LTE[value]`   : allow objects with an attribute at most the `value`\n- `RANGE[lo,hi]` : allow objects with the attribute in the range between `lo` and `hi`\n- `IN[a,b,c,d]`  : allow objects with the attribute belonging to one provided.\n\n"},{"in":"query","name":"created_at","type":"string","description":"A **FILTER** operation on a Transaction. Filters support a variety of queries on the resource. These are: \n\n- `EQ[value]`    : only allow values equal to `value`\n- `LT[value]`    : allow resource with attribute less than the `value`\n- `GT[value]`    : allow objects with an attribute greater than the `value`\n- `GTE[value]`   : allow objects with an attribute at least the `value`\n- `LTE[value]`   : allow objects with an attribute at most the `value`\n- `RANGE[lo,hi]` : allow objects with the attribute in the range between `lo` and `hi`\n- `IN[a,b,c,d]`  : allow objects with the attribute belonging to one provided.\n\n"},{"required":false,"in":"query","name":"sort_by","allowEmptyValue":true,"type":"string","description":"A **SORT** operation on this Transaction. Allowed keys: `created_at`.\n"}],"responses":{"400":{"description":"Invalid `per_page` or `page` or `address` or `account_index` or `wallet_id`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<[Transaction]>"},"description":""}}},"post":{"tags":["Transactions"],"summary":"Generates a new transaction from the source to one or multiple target addresses.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/Payment"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Transaction>"},"description":""}}}},"/api/v1/transactions/fees":{"post":{"tags":["Transactions"],"summary":"Estimate the fees which would originate from the payment.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/Payment"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<EstimatedFees>"},"description":""}}}},"/api/v1/transactions/unsigned":{"post":{"tags":["Transactions"],"summary":"Creates a new, raw, unsigned transaction.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/Payment"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Transaction>"},"description":""}}}},"/api/v1/transactions/external":{"post":{"tags":["Transactions"],"summary":"Publish an externally-signed transaction.","consumes":["application/json;charset=utf-8"],"produces":["application/json;charset=utf-8"],"parameters":[{"required":true,"schema":{"$ref":"#/definitions/SignedTransaction"},"in":"body","name":"body"}],"responses":{"400":{"description":"Invalid `body`"},"200":{"schema":{"$ref":"#/definitions/WalletResponse<Transaction>"},"description":""}}}},"/api/v1/node-settings":{"get":{"tags":["Settings"],"summary":"Retrieves the static settings for this node.","produces":["application/json;charset=utf-8"],"responses":{"200":{"schema":{"$ref":"#/definitions/WalletResponse<NodeSettings>"},"description":""}}}},"/api/v1/node-info":{"get":{"tags":["Info"],"summary":"Retrieves the dynamic information for this node.","produces":["application/json;charset=utf-8"],"responses":{"200":{"schema":{"$ref":"#/definitions/WalletResponse<NodeInfo>"},"description":""}}}}},"definitions":{"WalletResponse<[WalletAddress]>":{"required":["data","status","meta"],"properties":{"data":{"items":{"$ref":"#/definitions/WalletAddress"},"type":"array"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"WalletAddress":{"required":["id","balance","used","changeAddress"],"properties":{"id":{"type":"string","description":"Actual address"},"balance":{"maximum":45000000000000000,"type":"number","description":"Associated balance, in ADA"},"used":{"type":"boolean","description":"True if this address has been used"},"changeAddress":{"type":"boolean","description":"True if this address stores change from a previous transaction"}},"example":{"used":false,"changeAddress":true,"balance":11091176260625603,"id":"2reD6PLk2vQ44znyXUjiNZ6GBu4U4ibssQMv1f1B4sMhZecZ5yE2ZPtSZmFBqdA7QA88h337S9s4t6qBNeTYRsGsKPTP8xdxkFpXsJs4J9qPRX3zi1rCrvsuF2sF6s9TSKokGvigySsm73jRuusBaCyvYY4tiGdoY5X9XRihqR56PpgA2Ty5XCrb3gVhZyfxiJtn5ZpS1baxQMGrcJ8dFn76Ko8HXqo9C62EqdCiWcFEmkUPq15Kj5oUS9eZryU5izRCjp9EWmubNp3YgEgRJjFx6wr8aZxxFyphaUYueuRGzcjGDv8vaATXfTmLVtWrusjwc45QscHvPv6yk1"},"type":"object"},"V1Address":{"type":"string"},"V1Coin":{"maximum":45000000000000000,"type":"number"},"ResponseStatus":{"type":"string","enum":["success","fail","error"]},"Metadata":{"required":["pagination"],"properties":{"pagination":{"$ref":"#/definitions/PaginationMetadata"}},"type":"object"},"PaginationMetadata":{"required":["totalPages","page","perPage","totalEntries"],"properties":{"totalPages":{"maximum":9223372036854775807,"minimum":0,"type":"number"},"page":{"$ref":"#/definitions/Page"},"perPage":{"$ref":"#/definitions/PerPage"},"totalEntries":{"maximum":9223372036854775807,"minimum":0,"type":"number"}},"type":"object"},"Page":{"default":1,"minimum":1,"type":"integer"},"PerPage":{"maximum":50,"default":10,"minimum":1,"type":"integer"},"WalletResponse<WalletAddress>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/WalletAddress"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"NewAddress":{"required":["accountIndex","walletId"],"properties":{"spendingPassword":{"format":"hex|base16","type":"string","description":"Optional spending password to unlock funds."},"accountIndex":{"maximum":4294967295,"minimum":0,"type":"integer","description":"Target account's index to store this address in."},"walletId":{"type":"string","description":"Corresponding wallet identifier."}},"example":{"accountIndex":2,"walletId":"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg","spendingPassword":"0001010001010101010200020001010201000200010201020202000200010000"},"type":"object"},"V1PassPhrase":{"format":"hex|base16","type":"string"},"WalletId":{"type":"string"},"WalletResponse<AddressValidity>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/AddressValidity"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"AddressValidity":{"required":["valid"],"properties":{"valid":{"type":"boolean"}},"example":{"valid":false},"type":"object"},"NewExternalAddress":{"required":["accountIndex","walletId"],"properties":{"accountIndex":{"maximum":4294967295,"minimum":0,"type":"integer","description":"Target account's index to store this address in"},"walletId":{"type":"string","description":"Corresponding external wallet identifier"}},"example":{"accountIndex":1,"walletId":"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg"},"type":"object"},"WalletResponse<Wallet>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/Wallet"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"Wallet":{"required":["id","name","balance","hasSpendingPassword","spendingPasswordLastUpdate","createdAt","assuranceLevel"],"properties":{"id":{"type":"string","description":"Unique wallet identifier."},"name":{"type":"string","description":"Wallet's name."},"balance":{"maximum":45000000000000000,"type":"number","description":"Current balance, in ADA."},"hasSpendingPassword":{"type":"boolean","description":"Whether or not the wallet has a passphrase."},"spendingPasswordLastUpdate":{"type":"string","description":"The timestamp that the passphrase was last updated."},"createdAt":{"type":"string","description":"The timestamp that the wallet was created."},"assuranceLevel":{"type":"string","enum":["normal","strict"],"description":"The assurance level of the wallet."}},"example":{"createdAt":"1977-09-26T13:35:28.425218","balance":7328081618979461,"hasSpendingPassword":true,"assuranceLevel":"strict","name":"My wallet","id":"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg","spendingPasswordLastUpdate":"2032-07-26T13:46:01.035803"},"type":"object"},"Timestamp":{"description":"Time in ISO 8601 format","type":"string"},"AssuranceLevel":{"type":"string","enum":["normal","strict"]},"NewWallet":{"required":["backupPhrase","assuranceLevel","name","operation"],"properties":{"backupPhrase":{"items":{"type":"string"},"type":"array","description":"Backup phrase to restore the wallet."},"spendingPassword":{"format":"hex|base16","type":"string","description":"Optional spending password to encrypt / decrypt private keys."},"assuranceLevel":{"type":"string","enum":["normal","strict"],"description":"Desired assurance level based on the number of confirmations counter of each transaction."},"name":{"type":"string","description":"Wallet's name."},"operation":{"type":"string","enum":["create","restore"],"description":"Create a new wallet or Restore an existing one."}},"example":{"operation":"restore","backupPhrase":["shell","also","throw","ramp","grape","chest","setup","mandate","spare","verb","lemon","test"],"assuranceLevel":"strict","name":"My Wallet","spendingPassword":null},"type":"object"},"V1BackupPhrase":{"items":{"type":"string"},"type":"array"},"WalletOperation":{"type":"string","enum":["create","restore"]},"WalletResponse<[Wallet]>":{"required":["data","status","meta"],"properties":{"data":{"items":{"$ref":"#/definitions/Wallet"},"type":"array"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"PasswordUpdate":{"required":["old","new"],"properties":{"old":{"format":"hex|base16","type":"string","description":"Old password."},"new":{"format":"hex|base16","type":"string","description":"New passowrd."}},"example":{"old":"","new":"0000010001010101000001000202010200010202000102000000000100000100"},"type":"object"},"WalletUpdate":{"required":["assuranceLevel","name"],"properties":{"assuranceLevel":{"type":"string","enum":["normal","strict"],"description":"New assurance level."},"name":{"type":"string","description":"New wallet's name."}},"example":{"assuranceLevel":"normal","name":"My Wallet"},"type":"object"},"NewExternalWallet":{"required":["assuranceLevel","name","operation"],"properties":{"assuranceLevel":{"type":"string","enum":["normal","strict"],"description":"Desired assurance level based on the number of confirmations counter of each transaction."},"name":{"type":"string","description":"External Wallet's name"},"operation":{"type":"string","enum":["create","restore"],"description":"Create a new external wallet or Restore an existing one"}},"example":{"operation":"restore","assuranceLevel":"normal","name":"My external Wallet"},"type":"object"},"WalletResponse<AddressPath>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/AddressPath"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"AddressPath":{"required":["levels"],"properties":{"levels":{"items":{"maximum":4294967295,"minimum":0,"type":"integer"},"type":"array","description":"BIP44 derivation path's levels."}},"example":{"levels":[1,2]},"type":"object"},"WalletResponse<Account>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/Account"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"Account":{"required":["index","addresses","amount","name","walletId"],"properties":{"index":{"maximum":4294967295,"minimum":0,"type":"integer","description":"Account's index in the wallet, starting at 0."},"addresses":{"items":{"$ref":"#/definitions/WalletAddress"},"type":"array","description":"Public addresses pointing to this account."},"amount":{"maximum":45000000000000000,"type":"number","description":"Available funds, in ADA."},"name":{"type":"string","description":"Account's name."},"walletId":{"type":"string","description":"Id of the wallet this account belongs to."}},"example":{"amount":11091176260625603,"addresses":[{"used":true,"changeAddress":true,"balance":17678011959210499,"id":"FHnt4NL7yPYDH7Y1rrBhoj68GpmFpGnzhnr2tuAhQmxtJA7caUs8Fm79XV9we3L"}],"name":"My account","walletId":"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg","index":1},"type":"object"},"WalletResponse<[Account]>":{"required":["data","status","meta"],"properties":{"data":{"items":{"$ref":"#/definitions/Account"},"type":"array"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"NewAccount":{"required":["name"],"properties":{"spendingPassword":{"format":"hex|base16","type":"string","description":"Optional spending password to unlock funds."},"name":{"type":"string","description":"Account's name."}},"example":{"name":"¯","spendingPassword":""},"type":"object"},"AccountUpdate":{"required":["name"],"properties":{"name":{"type":"string","description":"New account's name."}},"example":{"name":"myAccount"},"type":"object"},"NewExternalAccount":{"required":["name"],"properties":{"name":{"type":"string","description":"External Account's name"}},"example":{"name":"_w"},"type":"object"},"WalletResponse<Transaction>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/Transaction"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"Transaction":{"required":["id","confirmations","amount","inputs","outputs","type","direction","creationTime","status"],"properties":{"id":{"type":"string","description":"Transaction's id."},"confirmations":{"maximum":18446744073709551615,"minimum":0,"type":"integer","description":"Number of confirmations."},"amount":{"maximum":45000000000000000,"type":"number","description":"Coins moved as part of the transaction, in ADA."},"inputs":{"minItems":1,"items":{"$ref":"#/definitions/PaymentDistribution"},"type":"array","description":"One or more input money distributions."},"outputs":{"minItems":1,"items":{"$ref":"#/definitions/PaymentDistribution"},"type":"array","description":"One or more ouputs money distributions."},"type":{"type":"string","enum":["local","foreign"],"description":"Whether the transaction is entirely local or foreign."},"direction":{"type":"string","enum":["outgoing","incoming"],"description":"Direction for this transaction."},"creationTime":{"type":"string","description":"Timestamp indicating when the transaction was created."},"status":{"required":["tag","data"],"type":"object","description":"Shows whether or not the transaction is accepted.","properties":{"tag":{"type":"string","enum":["applying","inNewestBlocks","persisted","wontApply","creating"]},"data":{"type":"object"}}}},"example":{"creationTime":"1977-09-26T13:35:28.425218","status":{"tag":"persisted","data":{}},"amount":28311699119270855,"inputs":[{"amount":13019322832706804,"address":"AL91N9VXRTCwikvJJVEQeGTH4wwxtSY8d7m26bFyWD7PmfqUpdYgCV1jigD5ivbzh88BR8FFvdpkU8P3uuispBsdZNXCurGREicGjMW74F7GitSX4oc"}],"direction":"outgoing","outputs":[{"amount":14984536053034711,"address":"2657WMsDfac6JxtEAjpN9KnwE9kfc6jUzhYXRyY3FFPwEyM5nNjPUBHDbFUwndGNx"},{"amount":13290197696443539,"address":"2657WMsDfac6VJfxAHRezMNbBhvYzrDVf5F2W7s7LGAgtp6m9B5Df8EQkwktLsEee"},{"amount":21095182977599617,"address":"Un4ZpTvXtoL29niUxfBPFJN3eR135cu799S3t8Pq1Vv48GwBuSEzUPHLDz6SwpewGafkin1iF6itRkKBK4VUiEDZeEH5EKBPg9agUUr9NNKKTsRm"}],"confirmations":4,"id":"848d6fadc04dcd9af1bc462df5938ecfbe810c5ecb50971db1cf7ae224bb5955","type":"foreign"},"type":"object"},"PaymentDistribution":{"required":["address","amount"],"properties":{"address":{"type":"string","description":"Address to map coins to."},"amount":{"maximum":45000000000000000,"type":"number","description":"Amount of coin to bind, in ADA."}},"example":{"amount":361333354208714,"address":"5FCjkr138i9tdQcx7jejtHoC1P9Nbqu571n2TUC13i3ev2DEbihcsX8hEt784zt4WUGLdCsxZkgeGk9Z8ZufUjh5VbUZgR7CN8Er5JW8LW5"},"type":"object"},"TransactionType":{"description":"A transaction is 'local' if all the inputs and outputs belong to the current wallet. A transaction is foreign if the transaction is not local to this wallet.","type":"string","enum":["local","foreign"]},"TransactionDirection":{"type":"string","enum":["outgoing","incoming"]},"TransactionStatus":{"required":["tag","data"],"properties":{"tag":{"type":"string","enum":["applying","inNewestBlocks","persisted","wontApply","creating"]},"data":{"type":"object"}},"type":"object"},"Payment":{"required":["source","destinations"],"properties":{"source":{"example":{"accountIndex":1,"walletId":"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg"},"required":["walletId","accountIndex"],"type":"object","description":"Source for the payment.","properties":{"accountIndex":{"maximum":4294967295,"minimum":0,"type":"integer","description":"Corresponding account's index on the wallet."},"walletId":{"type":"string","description":"Target wallet identifier to reach."}}},"destinations":{"minItems":1,"items":{"$ref":"#/definitions/PaymentDistribution"},"type":"array","description":"One or more destinations for the payment."},"groupingPolicy":{"type":"string","enum":["OptimizeForSecurity","OptimizeForHighThroughput"],"description":"Optional strategy to use for selecting the transaction inputs."},"spendingPassword":{"format":"hex|base16","type":"string","description":"Optional spending password to access funds."}},"example":{"groupingPolicy":null,"destinations":[{"amount":27889372662178400,"address":"7J1MaQmKydNdKZ8ASMptqTpSiq6k8QwjD5w8hsnMF6iGQSFLZNbjgVjDhKtAa2vWYNCXvRixXTeuxKAfSHUBcjoieTUHcDaFPMgUtnhVnwk2rbz"},{"amount":33829516096667581,"address":"2cWKMJemoBamMBMBYJWe5aQR3xitBLbjVbt4yxQUWUWC8KGGHvYF8BfUQwmAs5je5fSii"}],"source":{"accountIndex":2,"walletId":"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg"},"spendingPassword":"0200020002020202010000010101020100020001020201020001000101010101"},"type":"object"},"PaymentSource":{"required":["walletId","accountIndex"],"properties":{"walletId":{"type":"string","description":"Target wallet identifier to reach."},"accountIndex":{"maximum":4294967295,"minimum":0,"type":"integer","description":"Corresponding account's index on the wallet."}},"example":{"accountIndex":1,"walletId":"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg"},"type":"object"},"V1InputSelectionPolicy":{"type":"string","enum":["OptimizeForSecurity","OptimizeForHighThroughput"]},"WalletResponse<[Transaction]>":{"required":["data","status","meta"],"properties":{"data":{"items":{"$ref":"#/definitions/Transaction"},"type":"array"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"WalletResponse<EstimatedFees>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/EstimatedFees"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"EstimatedFees":{"required":["estimatedAmount"],"properties":{"estimatedAmount":{"maximum":45000000000000000,"type":"number","description":"Estimated fees, in ADA."}},"example":{"estimatedAmount":25132995790248024},"type":"object"},"SignedTransaction":{"required":["transaction","signature"],"properties":{"transaction":{"example":{"creationTime":"1977-09-26T13:35:28.425218","status":{"tag":"persisted","data":{}},"amount":28311699119270855,"inputs":[{"amount":13019322832706804,"address":"AL91N9VXRTCwikvJJVEQeGTH4wwxtSY8d7m26bFyWD7PmfqUpdYgCV1jigD5ivbzh88BR8FFvdpkU8P3uuispBsdZNXCurGREicGjMW74F7GitSX4oc"}],"direction":"outgoing","outputs":[{"amount":14984536053034711,"address":"2657WMsDfac6JxtEAjpN9KnwE9kfc6jUzhYXRyY3FFPwEyM5nNjPUBHDbFUwndGNx"},{"amount":13290197696443539,"address":"2657WMsDfac6VJfxAHRezMNbBhvYzrDVf5F2W7s7LGAgtp6m9B5Df8EQkwktLsEee"},{"amount":21095182977599617,"address":"Un4ZpTvXtoL29niUxfBPFJN3eR135cu799S3t8Pq1Vv48GwBuSEzUPHLDz6SwpewGafkin1iF6itRkKBK4VUiEDZeEH5EKBPg9agUUr9NNKKTsRm"}],"confirmations":4,"id":"848d6fadc04dcd9af1bc462df5938ecfbe810c5ecb50971db1cf7ae224bb5955","type":"foreign"},"required":["id","confirmations","amount","inputs","outputs","type","direction","creationTime","status"],"type":"object","description":"New transaction that wasn't published yet.","properties":{"creationTime":{"type":"string","description":"Timestamp indicating when the transaction was created."},"status":{"required":["tag","data"],"type":"object","description":"Shows whether or not the transaction is accepted.","properties":{"tag":{"type":"string","enum":["applying","inNewestBlocks","persisted","wontApply","creating"]},"data":{"type":"object"}}},"amount":{"maximum":45000000000000000,"type":"number","description":"Coins moved as part of the transaction, in ADA."},"inputs":{"minItems":1,"items":{"$ref":"#/definitions/PaymentDistribution"},"type":"array","description":"One or more input money distributions."},"direction":{"type":"string","enum":["outgoing","incoming"],"description":"Direction for this transaction."},"outputs":{"minItems":1,"items":{"$ref":"#/definitions/PaymentDistribution"},"type":"array","description":"One or more ouputs money distributions."},"confirmations":{"maximum":18446744073709551615,"minimum":0,"type":"integer","description":"Number of confirmations."},"id":{"type":"string","description":"Transaction's id."},"type":{"type":"string","enum":["local","foreign"],"description":"Whether the transaction is entirely local or foreign."}}},"signature":{"example":{"signature":"_w"},"required":["signature"],"type":"object","description":"Signature of this transaction.","properties":{"signature":{"type":"string","description":"Raw signature of new transaction."}}}},"example":{"signature":{"signature":"¯"},"transaction":{"creationTime":"2032-07-26T13:46:01.035803","status":{"tag":"persisted","data":{}},"amount":43665522219500065,"inputs":[{"amount":19912396522247871,"address":"2Wcg6zEnC1VpiYjSLjAqZhmPC6JwNKHcDJ4yaAGmKD7GK29iRrGWEHjtCN7KQBHTSovRfApFRuPPXAoTZ9Li9QKF7UoECf2GUbFJTHro4tDpD4NSYABde1LHdoYL7Tz7kJyoSfNtP7AQeXvztCihrqQRcK8P8AkuXk19PCqCcSkUEHxotK2ap"}],"direction":"outgoing","outputs":[{"amount":13019322832706804,"address":"AL91N9VXRTCwikvJJVEQeGTH4wwxtSY8d7m26bFyWD7PmfqUpdYgCV1jigD5ivbzh88BR8FFvdpkU8P3uuispBsdZNXCurGREicGjMW74F7GitSX4oc"}],"confirmations":1,"id":"848d6fadc04dcd9af1bc462df5938ecfbe810c5ecb50971db1cf7ae224bb5955","type":"local"}},"type":"object"},"TransactionSignature":{"required":["signature"],"properties":{"signature":{"type":"string","description":"Raw signature of new transaction."}},"example":{"signature":"_w"},"type":"object"},"WalletResponse<NodeSettings>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/NodeSettings"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"NodeSettings":{"required":["slotDuration","softwareInfo","projectVersion","gitRevision"],"properties":{"slotDuration":{"required":["quantity"],"type":"object","description":"Duration of a slot.","properties":{"quantity":{"type":"number"},"unit":{"type":"string","enum":["milliseconds"]}}},"softwareInfo":{"required":["applicationName","version"],"type":"object","description":"Various pieces of information about the current software.","properties":{"version":{"maximum":4294967295,"minimum":0,"type":"integer"},"applicationName":{"type":"string"}}},"projectVersion":{"type":"string","description":"Current project's version."},"gitRevision":{"type":"string","description":"Git revision of this deployment."}},"example":{"projectVersion":"2","gitRevision":"0e1c9322a","slotDuration":{"quantity":77,"unit":"milliseconds"},"softwareInfo":{"version":0,"applicationName":"1"}},"type":"object"},"SlotDuration":{"required":["quantity"],"properties":{"quantity":{"type":"number"},"unit":{"type":"string","enum":["milliseconds"]}},"type":"object"},"V1SoftwareVersion":{"required":["applicationName","version"],"properties":{"applicationName":{"type":"string"},"version":{"maximum":4294967295,"minimum":0,"type":"integer"}},"type":"object"},"Version":{"type":"string"},"WalletResponse<NodeInfo>":{"required":["data","status","meta"],"properties":{"data":{"$ref":"#/definitions/NodeInfo"},"status":{"$ref":"#/definitions/ResponseStatus"},"meta":{"$ref":"#/definitions/Metadata"}},"type":"object"},"NodeInfo":{"required":["syncProgress","localBlockchainHeight","localTimeDifference"],"properties":{"syncProgress":{"required":["quantity"],"type":"object","description":"Syncing progression, in percentage.","properties":{"quantity":{"maximum":100,"minimum":0,"type":"number"},"unit":{"type":"string","enum":["percent"]}}},"blockchainHeight":{"required":["quantity"],"type":"object","description":"If known, the current blockchain height, in number of blocks.","properties":{"quantity":{"maximum":18446744073709551615,"minimum":0,"type":"number"},"unit":{"type":"string","enum":["blocks"]}}},"localBlockchainHeight":{"required":["quantity"],"type":"object","description":"Local blockchain height, in number of blocks.","properties":{"quantity":{"maximum":18446744073709551615,"minimum":0,"type":"number"},"unit":{"type":"string","enum":["blocks"]}}},"localTimeDifference":{"required":["quantity"],"type":"object","description":"Local time difference, in number of blocks.","properties":{"quantity":{"type":"number"},"unit":{"type":"string","enum":["microseconds"]}}}},"example":{"blockchainHeight":{"quantity":12988764939106870466,"unit":"blocks"},"localTimeDifference":{"quantity":-1,"unit":"microseconds"},"syncProgress":{"quantity":77,"unit":"percent"},"localBlockchainHeight":{"quantity":14664872184249792035,"unit":"blocks"}},"type":"object"},"SyncProgress":{"required":["quantity"],"properties":{"quantity":{"maximum":100,"minimum":0,"type":"number"},"unit":{"type":"string","enum":["percent"]}},"type":"object"},"BlockchainHeight":{"required":["quantity"],"properties":{"quantity":{"maximum":18446744073709551615,"minimum":0,"type":"number"},"unit":{"type":"string","enum":["blocks"]}},"type":"object"},"LocalTimeDifference":{"required":["quantity"],"properties":{"quantity":{"type":"number"},"unit":{"type":"string","enum":["microseconds"]}},"type":"object"}}}