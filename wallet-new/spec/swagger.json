{
    "swagger": "2.0",
    "host": "127.0.0.1:8090",
    "info": {
        "version": "2.0",
        "title": "Cardano Wallet API",
        "license": {
            "url": "http://mit.com",
            "name": "MIT"
        },
        "description": "This is the specification for the Cardano Wallet API, automatically generated\nas a [Swagger](https://swagger.io/) spec from the [Servant](http://haskell-servant.readthedocs.io/en/stable/) API\nof [Cardano](https://github.com/input-output-hk/cardano-sl).\n\nGit revision: **0d4f79eea4e37942e51f176a0910f9a82927748a**\nSoftware version: **cardano-sl:0**\n\n\n## Request format (all versions)\n\nIssuing requests against this API is conceptually not very different from any other web service out there. The API\nis **versioned**, meaning that is possible to access different versions of the API by adding the _version number_\nin the URL.\n\n**For the sake of backward compatibility, we expose the legacy version of the API, available simply as\nunversioned endpoints.**\n\nThis means that _omitting_ the version number would call the old version of the API. Examples:\n\n```\n/api/version\n```\n\nCompatibility between major versions is not _guaranteed_, i.e. the request & response formats might differ.\n\n## Response format (V1 onwards)\n\n**All GET requests of the API are paginated by default**. Whilst this can be a source of surprise, is\nthe best way of ensuring the performance of GET requests is not affected by the size of the data storage.\n\nVersion `V1` introduced a different way of requesting information to the API. In particular, GET requests\nwhich returns a _collection_ (i.e. typically a JSON array of resources) lists extra parameters which can be\nused to modify the shape of the response. In particular, those are:\n\n* `page`: (Default value: **1**).\n* `per_page`: (Default value: **10**)\n\nFor a more accurate description, see the section `Parameters` of each GET request, but as a brief overview\nthe first two control how many results and which results to access in a paginated request.\n\nThis is an example of a typical (successful) response from the API:\n\n``` json\n{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"amount\": 29208924123228353,\n            \"addresses\": [\n                \"5FCjkr138i9qs2EEjvmXF37aSLiZdwQsALPMmvVDgx8PQ31nJTh9p35ZfnDFn6hfWdyY6XuFQXY23kfUjSuwBSEd4912knFgJSSZSBCt2yo\"\n            ],\n            \"name\": \"My account\",\n            \"walletId\": \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n            \"id\": 1\n        },\n        {\n            \"amount\": 28089727180413548,\n            \"addresses\": [\n                \"7J1MaQmKydNUyekmvgR3VNZLeLYkTNpDTKz4Z5SHfnJxDVgCN3tjixySxMNKNULKaV5XBBngc1e5BNzrePahs1Tuo7xcnKUyvkUm8HNcHuufC5q\",\n                \"7fiTbReGezWKbx8zhrjdMekrd8kziXqofdzzGPHWKgRXd24pDM7TZSFfnarpCsHy67ZW3AgFRAfFEGuRSd1VSYP5dDyNJJLwKB29vxsFnGq9GPB8x2RittGrrjNXPpgB8b4Y3yBFbpcXeDF7FG13u5gFHrcXwU86MN2CaCpLaaynjRvnitwGnd\"\n            ],\n            \"name\": \"My account\",\n            \"walletId\": \"J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg\",\n            \"id\": 0\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"page\": 1,\n            \"perPage\": 46,\n            \"totalPages\": 1,\n            \"totalEntries\": 2\n        }\n    }\n}\n```\n\n## Filtering and sorting\n\n`GET` endpoints which list collection of resources supports filters & sort operations, which are clearly marked\nin the swagger docs with the `FILTER` or `SORT` labels. The query format is quite simple, and it goes this way:\n\n### Filter operators\n\n| Operator | Description                                                               | Example                |\n|----------|---------------------------------------------------------------------------|------------------------|\n| -        | If **no operator** is passed, this is equivalent to `EQ` (see below).     | `balance=10`           |\n| `EQ`     | Retrieves the resources with index _equal to the one provided.            | `balance=EQ[10]`       |\n| `LT`     | Retrieves the resources with index _less than_ the one provided.          | `balance=LT[10]`       |\n| `LTE`    | Retrieves the resources with index _less than equal_ the one provided.    | `balance=LTE[10]`      |\n| `GT`     | Retrieves the resources with index _greater than_ the one provided.       | `balance=GT[10]`       |\n| `GTE`    | Retrieves the resources with index _greater than equal_ the one provided. | `balance=GTE[10]`      |\n| `RANGE`  | Retrieves the resources with index _within the inclusive range_ [k,k].    | `balance=RANGE[10,20]` |\n\n### Sort operators\n\n| Operator | Description                                                               | Example                |\n|----------|---------------------------------------------------------------------------|------------------------|\n| `ASC`    | Sorts the resources with the given index in _ascending_ order.            | `sort_by=ASC[balance]` |\n| `DES`    | Sorts the resources with the given index in _descending_ order.           | `sort_by=DES[balance]` |\n| -        | If **no operator** is passed, this is equivalent to `DES` (see above).    | `sort_by=balance`      |\n\n## Dealing with errors (V1 onwards)\n\nIn case a request cannot be served by the API, a non-2xx HTTP response will be issue, together with a\n[JSend-compliant](https://labs.omniti.com/labs/jsend) JSON Object describing the error in detail together\nwith a numeric error code which can be used by API consumers to implement proper error handling in their\napplication. For example, here's a typical error which might be issued:\n\n``` json\n{\n    \"status\": \"error\",\n    \"diagnostic\": {},\n    \"message\": \"WalletNotFound\"\n}\n```\n\n### Existing wallet errors\n\nError Name|HTTP Error code|Example\n---|---|---\n`NotEnoughMoney`|-|-\n`OutputIsRedeem`|-|-\n`SomeOtherError`|-|-\n`MigrationFailed`|-|-\n`JSONValidationFailed`|-|-\n`WalletNotFound`|-|-\n"
    },
    "definitions": {
        "CPtxCondition": {
            "type": "string",
            "enum": [
                "CPtxCreating",
                "CPtxApplying",
                "CPtxInBlocks",
                "CPtxWontApply",
                "CPtxNotTracked"
            ]
        },
        "PendingTxsSummary": {
            "type": "string"
        },
        "CUpdateInfo": {
            "required": [
                "cuiSoftwareVersion",
                "cuiBlockVesion",
                "cuiScriptVersion",
                "cuiImplicit",
                "cuiVotesFor",
                "cuiVotesAgainst",
                "cuiPositiveStake",
                "cuiNegativeStake"
            ],
            "type": "object",
            "properties": {
                "cuiNegativeStake": {
                    "$ref": "#/definitions/CCoin"
                },
                "cuiVotesFor": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "cuiSoftwareVersion": {
                    "$ref": "#/definitions/SoftwareVersion"
                },
                "cuiImplicit": {
                    "type": "boolean"
                },
                "cuiVotesAgainst": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "cuiPositiveStake": {
                    "$ref": "#/definitions/CCoin"
                },
                "cuiScriptVersion": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                },
                "cuiBlockVesion": {
                    "$ref": "#/definitions/BlockVersion"
                }
            }
        },
        "WalletResponse NodeInfo": {
            "example": {
                "status": "success",
                "data": {
                    "blockchainHeight": {
                        "quantity": 9631745999145585284,
                        "unit": "blocks"
                    },
                    "localTimeDifference": {
                        "quantity": 1.2988764939106870466e19,
                        "unit": "microseconds"
                    },
                    "syncProgress": {
                        "quantity": 77,
                        "unit": "percent"
                    },
                    "localBlockchainHeight": {
                        "quantity": 1.2513853667654321111e19,
                        "unit": "blocks"
                    }
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "blockchainHeight",
                        "localTimeDifference",
                        "syncProgress",
                        "localBlockchainHeight"
                    ],
                    "type": "object",
                    "properties": {
                        "blockchainHeight": {
                            "required": [
                                "quantity",
                                "unit"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "type": "number"
                                },
                                "unit": {
                                    "type": "string"
                                }
                            }
                        },
                        "localTimeDifference": {
                            "required": [
                                "quantity",
                                "unit"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "type": "number"
                                },
                                "unit": {
                                    "type": "string"
                                }
                            }
                        },
                        "syncProgress": {
                            "required": [
                                "quantity",
                                "unit"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "type": "number"
                                },
                                "unit": {
                                    "type": "string"
                                }
                            }
                        },
                        "localBlockchainHeight": {
                            "required": [
                                "quantity",
                                "unit"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "type": "number"
                                },
                                "unit": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CAccount": {
            "required": [
                "caId",
                "caMeta",
                "caAddresses",
                "caAmount"
            ],
            "type": "object",
            "properties": {
                "caAddresses": {
                    "items": {
                        "$ref": "#/definitions/CAddress"
                    },
                    "type": "array"
                },
                "caMeta": {
                    "$ref": "#/definitions/CAccountMeta"
                },
                "caId": {
                    "$ref": "#/definitions/CAccountId"
                },
                "caAmount": {
                    "$ref": "#/definitions/CCoin"
                }
            }
        },
        "NewAddress": {
            "example": {
                "accountId": 2,
                "walletId": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg",
                "spendingPassword": "0001010001010101010200020001010201000200010201020202000200010000"
            },
            "required": [
                "accountId",
                "walletId",
                "spendingPassword"
            ],
            "type": "object",
            "description": "A type represending an request for creating a(n) WalletAddress.",
            "properties": {
                "accountId": {
                    "type": "number"
                },
                "walletId": {
                    "type": "string"
                },
                "spendingPassword": {
                    "type": "string"
                }
            }
        },
        "CTxMeta": {
            "required": [
                "ctmDate"
            ],
            "type": "object",
            "properties": {
                "ctmDate": {
                    "type": "integer"
                }
            }
        },
        "ApiVersion": {
            "type": "string",
            "enum": [
                "ApiVersion0"
            ]
        },
        "Payment": {
            "example": {
                "sourceAccount": 2,
                "groupingPolicy": "OptimiseForHighThroughput",
                "destinations": [
                    {
                        "amount": 27889372662178400,
                        "address": "7J1MaQmKydNdKZ8ASMptqTpSiq6k8QwjD5w8hsnMF6iGQSFLZNbjgVjDhKtAa2vWYNCXvRixXTeuxKAfSHUBcjoieTUHcDaFPMgUtnhVnwk2rbz"
                    },
                    {
                        "amount": 33829516096667581,
                        "address": "2cWKMJemoBamMBMBYJWe5aQR3xitBLbjVbt4yxQUWUWC8KGGHvYF8BfUQwmAs5je5fSii"
                    }
                ],
                "sourceWallet": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg",
                "spendingPassword": "0000010001010101000001000202010200010202000102000000000100000100"
            },
            "required": [
                "sourceAccount",
                "groupingPolicy",
                "destinations",
                "sourceWallet",
                "spendingPassword"
            ],
            "type": "object",
            "description": "A transfer of `Coin`(s) from one source to one or more destinations.",
            "properties": {
                "sourceAccount": {
                    "type": "number"
                },
                "groupingPolicy": {
                    "type": "string"
                },
                "destinations": {
                    "items": {
                        "required": [
                            "amount",
                            "address"
                        ],
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "number"
                            },
                            "address": {
                                "type": "string"
                            }
                        }
                    },
                    "type": "array"
                },
                "sourceWallet": {
                    "type": "string"
                },
                "spendingPassword": {
                    "type": "string"
                }
            }
        },
        "CTxId": {
            "type": "string"
        },
        "WalletResponse Account": {
            "example": {
                "status": "success",
                "data": {
                    "amount": 7328081618979461,
                    "addresses": [
                        "NBimUZYpm3G6AbNtqWY4PEvRQCLjErwu3hj1DfmZSgUJXtrnyYHCcFGDnT1rr7mPWmx",
                        "Ae2tdPwUPEZJfGVFz1ugT1kJs2mbWp9692jB8BTzt7ZJRoHjrUQ2rEuBmLP"
                    ],
                    "name": "My account",
                    "walletId": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg",
                    "id": 1
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "amount",
                        "addresses",
                        "name",
                        "walletId",
                        "id"
                    ],
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number"
                        },
                        "addresses": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "name": {
                            "type": "string"
                        },
                        "walletId": {
                            "type": "string"
                        },
                        "id": {
                            "type": "number"
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "WalletResponse [Wallet]": {
            "example": {
                "status": "success",
                "data": [
                    {
                        "balance": 7893389421760074,
                        "name": "My wallet",
                        "id": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg"
                    },
                    {
                        "balance": 18464205877436744,
                        "name": "My wallet",
                        "id": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg"
                    }
                ],
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "items": {
                        "required": [
                            "balance",
                            "name",
                            "id"
                        ],
                        "type": "object",
                        "properties": {
                            "balance": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "type": "array"
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "WalletResponse WalletAddress": {
            "example": {
                "status": "success",
                "data": {
                    "used": true,
                    "changeAddress": true,
                    "balance": 7328081618979461,
                    "id": "7J1MaQmKydNVpjPB6LXvNnF933LckE2va7s53RGzRFX891nLfEcN5fGWjq9XU7JwSphzf6GAZ75WPkqEfFWJm4fktedfuzG2cVbMWKxJcvRkKjD"
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "used",
                        "changeAddress",
                        "balance",
                        "id"
                    ],
                    "type": "object",
                    "properties": {
                        "used": {
                            "type": "boolean"
                        },
                        "changeAddress": {
                            "type": "boolean"
                        },
                        "balance": {
                            "type": "number"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CAccountInit": {
            "required": [
                "caInitMeta",
                "caInitWId"
            ],
            "type": "object",
            "properties": {
                "caInitWId": {
                    "$ref": "#/definitions/CId"
                },
                "caInitMeta": {
                    "$ref": "#/definitions/CAccountMeta"
                }
            }
        },
        "WalletResponse AddressValidity": {
            "example": {
                "status": "success",
                "data": {
                    "valid": false
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "valid"
                    ],
                    "type": "object",
                    "properties": {
                        "valid": {
                            "type": "boolean"
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CProfile": {
            "required": [
                "cpLocale"
            ],
            "type": "object",
            "properties": {
                "cpLocale": {
                    "type": "string"
                }
            }
        },
        "FilePath": {
            "example": "keys/1.key",
            "type": "string",
            "description": "Path to file.\n Note that it is represented as JSON-string, one may need to properly escape content. For instance:\n curl ... -X \"\\\\\"1.key\"\\\\\".\nAlso, when on Windows, don't forget to double-escape  backslashes, e.g.  \"C:\\\\\\\\\\\\\\\\keys\\\\\\\\1.key\""
        },
        "CWalletAssurance": {
            "type": "string",
            "enum": [
                "CWAStrict",
                "CWANormal"
            ]
        },
        "WalletResponse Wallet": {
            "example": {
                "status": "success",
                "data": {
                    "balance": 11091176260625603,
                    "name": "My wallet",
                    "id": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg"
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "balance",
                        "name",
                        "id"
                    ],
                    "type": "object",
                    "properties": {
                        "balance": {
                            "type": "number"
                        },
                        "name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "BackupPhrase": {
            "required": [
                "bpToList"
            ],
            "type": "object",
            "properties": {
                "bpToList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "BlockVersion": {
            "required": [
                "bvMajor",
                "bvMinor",
                "bvAlt"
            ],
            "type": "object",
            "properties": {
                "bvAlt": {
                    "maximum": 255,
                    "minimum": 0,
                    "type": "integer"
                },
                "bvMajor": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                },
                "bvMinor": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "WalletResponse [Transaction]": {
            "example": {
                "status": "success",
                "data": [
                    {
                        "amount": 19321208996093113,
                        "inputs": [
                            {
                                "amount": 12068145532878000,
                                "address": "NBimUZYpm3GTGLq6w1Pc99wieJXwEWLJcGEhiQELFbvcDEzwohgssz8Zu5Lk3J82jrA"
                            },
                            {
                                "amount": 1825893375695764,
                                "address": "37btjrVyb4KBmXJFEfFDEj6fbs7oKaekei9eWBxWmZ3t5xw6Yup5tuceqJnF9zT8hpJHWNmuSWoqRRzrRFzgap3nXYKVTpRb7Pr8ihbT2GP4UCwafo"
                            },
                            {
                                "amount": 13134164389923293,
                                "address": "AL91N9VXRTCv6vVsbxTwceaCTzGS1Q393kVjyorVcgMQpKBUxsDcXw4rTvwBXgNkomv1R6vF3jYgendY3Z6YS2Z6yE7p74Anm77NhxzSbgVavLVhDAg"
                            }
                        ],
                        "direction": "outgoing",
                        "outputs": [
                            {
                                "amount": 18810694513310357,
                                "address": "2reD6PLk2vQ6SgGfupzB3MpyjmzfnfCnQyujonnorUR2k5PppWqTV4Tsb9yVpYrghCGyrfVEpJ2AaFnpmqQc5JN7mDk5b8kRc3aj2HWtXyNJmmawyDgws4GMzvdEDoPArwVGoeGaiZ8534juXyYEgFkwhJFpfqua3yiiSQvM5pNYJFDXRQr9aDiRtkyDPSt9VR3yXKRNkFsVY5x5YpGcb4sEUVCXBvy2wexfzXsEMuzUmaCJVsj7czfPvRzTQvEJC12mTv8ZXDE3yRCnRKTQPWeGGN6c7sZ3YrnyaeGgxg4jkjVWeXUwUv4VMSggVuDkD78AAxZP7fuei2Mzih"
                            },
                            {
                                "amount": 6214896163653048,
                                "address": "5oP9ib6ym3XZZWYoC4YVU4UXrw1AfVDhNMrHhCcK6HPbXKFx9Up9jBrmTrdDdvyHeH"
                            }
                        ],
                        "confirmations": 0,
                        "id": "b53fadd178f752271cfd079aeaf2b791870ede4ed1456d889e43273a8cef87fb",
                        "type": "foreign"
                    },
                    {
                        "amount": 34638161102038470,
                        "inputs": [
                            {
                                "amount": 37567904243452455,
                                "address": "42wmHXYSz61HK9W9Tj5fi9MbQQ8LCoaMDzQS1nt1n8gda3shKejNrjJGoud6Ttp4goj2VncciNsBUY8F7c6eY1Ny7EpLpSg6axJtPTKieQRKAC8bFabqUMqn1s8nfhaPQDiFFxPyV6J3c8AUxtcJcGmreBk11HMPLiZuDL8asqAhvY"
                            },
                            {
                                "amount": 11070649850752079,
                                "address": "2Fc9FhbWKyhDXPvLTSFAmwqPQst4arNECkBkfkkVyS7ZAf1MLJe1aZtsKZuspuD7pq4Bmv53yyTt9ZmgvbMmjsW6765BhALUKJ2wEz5pShXi3i7aYuscZtzcDsi7ZnTo4fpdfDX3jNG4AwhLWDFNNNZQSx9EKFYFxqfk7REfaCE4ebXYpEakkdnqx6NVXB8ULcE6sMiVeGWVXC7kHHuxFdvyoKCRm2J9Su7PzED8HH5R7HBnZuMkCwJ4L9XkVf9VWAe8aTzS9jdAexR8jRR7JhZXksyfEzDwFstMAfiBfX7VEaVJGUSmPNpBt5Kg9oaP4gUQFbsdKQhYac"
                            }
                        ],
                        "direction": "outgoing",
                        "outputs": [
                            {
                                "amount": 22593715837565850,
                                "address": "2Tp1cYozcWTniexFcd7XUHE1yZm6SXU99fxmKByYS9FW3EwQLwtcoYCoakitfGVfuVnDp5eng8a7UiLr2C7yMN41LtNYXsm7RAqsD15iMPwBShTL3zx1hQxBY8N4U6i3z2LhuTaPyjFKFAzVnuc7FGA6rwvnxZDqfbbCXg5yP5vSmCemyLcjBh7gdfSBnE87idrBDxrDwtmpd1owvW4n9Fs7uSYwk2UzHA58WAxRTwh51"
                            },
                            {
                                "amount": 118816001855782,
                                "address": "5FCjkr138i9v69ZJ5xnkLkmrnqL4TbBju6PbiYn6onnCSnjoq5hSc7b1Q31S1hYeCtd87wNAS42K1px6x2zybb9P6vNesVL4euu6PMx9s7k"
                            },
                            {
                                "amount": 10816341180192159,
                                "address": "5MVkCEKjiviVcj4o7aFLZfu4jXeZ3YcYg7WoydzH7tb9MRGeDPrwd5gGfyNGxYy7kYQ2YNt7UHAabDFs24b8rmKDgyKVoCqfz37N4qm3hNhjJybVLxP7doKU6UtWyFpbTNsdMwgz6KrDAWLfdcVrTC3VdoKJuSRkpri7YSnrdzMBANJSc3qRh2D1efmLU9TMp7CdZjBaFFdRFkEK4FfND6KDejiMbQTH64TwHMc1Yb"
                            },
                            {
                                "amount": 34537982561642603,
                                "address": "5oP9ib6ym3XkBSbZuy7Xhs1GTPwZ2xmUwiQHJuoPQmuyACkeEjS8YZvqErTFWt7tRh"
                            }
                        ],
                        "confirmations": 1,
                        "id": "1f434ae9e903ea86f420cd18160d2a6c4d5efa29a1004dfb0466f7a2ec643a6d",
                        "type": "local"
                    }
                ],
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "items": {
                        "required": [
                            "amount",
                            "inputs",
                            "direction",
                            "outputs",
                            "confirmations",
                            "id",
                            "type"
                        ],
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "number"
                            },
                            "inputs": {
                                "items": {
                                    "required": [
                                        "amount",
                                        "address"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "number"
                                        },
                                        "address": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "array"
                            },
                            "direction": {
                                "type": "string"
                            },
                            "outputs": {
                                "items": {
                                    "required": [
                                        "amount",
                                        "address"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "number"
                                        },
                                        "address": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "array"
                            },
                            "confirmations": {
                                "type": "number"
                            },
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    },
                    "type": "array"
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CWalletInit": {
            "required": [
                "cwInitMeta",
                "cwBackupPhrase"
            ],
            "type": "object",
            "properties": {
                "cwBackupPhrase": {
                    "$ref": "#/definitions/BackupPhrase"
                },
                "cwInitMeta": {
                    "$ref": "#/definitions/CWalletMeta"
                }
            }
        },
        "WalletUpdate": {
            "example": {
                "assuranceLevel": "normal",
                "name": "My Wallet"
            },
            "required": [
                "assuranceLevel",
                "name"
            ],
            "type": "object",
            "description": "A type represending an update for an existing Wallet.",
            "properties": {
                "assuranceLevel": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InputSelectionPolicy": {
            "example": {
                "groupingPolicy": "OptimizeForHighThroughput"
            },
            "type": "string",
            "enum": [
                "OptimizeForSecurity",
                "OptimizeForHighThroughput"
            ]
        },
        "CWalletMeta": {
            "required": [
                "cwName",
                "cwAssurance",
                "cwUnit"
            ],
            "type": "object",
            "properties": {
                "cwUnit": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "cwName": {
                    "type": "string"
                },
                "cwAssurance": {
                    "$ref": "#/definitions/CWalletAssurance"
                }
            }
        },
        "WalletResponse NodeSettings": {
            "example": {
                "status": "success",
                "data": {
                    "projectVersion": "1.1",
                    "gitRevision": "0e1c9322a",
                    "slotDuration": {
                        "quantity": 77,
                        "unit": "milliseconds"
                    },
                    "softwareInfo": {
                        "version": 2,
                        "applicationName": ""
                    }
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "projectVersion",
                        "gitRevision",
                        "slotDuration",
                        "softwareInfo"
                    ],
                    "type": "object",
                    "properties": {
                        "projectVersion": {
                            "type": "string"
                        },
                        "gitRevision": {
                            "type": "string"
                        },
                        "slotDuration": {
                            "required": [
                                "quantity",
                                "unit"
                            ],
                            "type": "object",
                            "properties": {
                                "quantity": {
                                    "type": "number"
                                },
                                "unit": {
                                    "type": "string"
                                }
                            }
                        },
                        "softwareInfo": {
                            "required": [
                                "version",
                                "applicationName"
                            ],
                            "type": "object",
                            "properties": {
                                "version": {
                                    "type": "number"
                                },
                                "applicationName": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "WalletResponse [Address]": {
            "example": {
                "status": "success",
                "data": [
                    "7J1MaQmKydNjjDZjGJbyjnSLtj6H6irfYqx3sxUd4a8L5umQi4UNa3Z88QECYEkCd4eShHE9Sd5fGR5xkz8sn6of5nrjEvS11WjiGSw37XV45v2",
                    "AL91N9VXRTCdEAuNHNij1dpotEjcotTHaAavVpXoR1ckgokd1g4owdYN2WCjyRs1u4ChP4fezGK5oviUge4nSaJUdiCFesqnSHcR8vPTepYsscTtgqm"
                ],
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CWallet": {
            "required": [
                "cwId",
                "cwMeta",
                "cwAccountsNumber",
                "cwAmount",
                "cwHasPassphrase",
                "cwPassphraseLU"
            ],
            "type": "object",
            "properties": {
                "cwAmount": {
                    "$ref": "#/definitions/CCoin"
                },
                "cwHasPassphrase": {
                    "type": "boolean"
                },
                "cwAccountsNumber": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "cwPassphraseLU": {
                    "type": "integer"
                },
                "cwMeta": {
                    "$ref": "#/definitions/CWalletMeta"
                },
                "cwId": {
                    "$ref": "#/definitions/CId"
                }
            }
        },
        "WalletStateSnapshot": {
            "type": "string"
        },
        "CAccountMeta": {
            "required": [
                "caName"
            ],
            "type": "object",
            "properties": {
                "caName": {
                    "type": "string"
                }
            }
        },
        "CAccountId": {
            "type": "string"
        },
        "CTx": {
            "required": [
                "ctId",
                "ctAmount",
                "ctConfirmations",
                "ctMeta",
                "ctInputs",
                "ctOutputs",
                "ctIsLocal",
                "ctIsOutgoing",
                "ctCondition"
            ],
            "type": "object",
            "properties": {
                "ctId": {
                    "$ref": "#/definitions/CTxId"
                },
                "ctMeta": {
                    "$ref": "#/definitions/CTxMeta"
                },
                "ctIsOutgoing": {
                    "type": "boolean"
                },
                "ctCondition": {
                    "$ref": "#/definitions/CPtxCondition"
                },
                "ctInputs": {
                    "items": {
                        "minItems": 2,
                        "items": [
                            {
                                "$ref": "#/definitions/CId"
                            },
                            {
                                "$ref": "#/definitions/CCoin"
                            }
                        ],
                        "maxItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                },
                "ctIsLocal": {
                    "type": "boolean"
                },
                "ctConfirmations": {
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                },
                "ctAmount": {
                    "$ref": "#/definitions/CCoin"
                },
                "ctOutputs": {
                    "items": {
                        "minItems": 2,
                        "items": [
                            {
                                "$ref": "#/definitions/CId"
                            },
                            {
                                "$ref": "#/definitions/CCoin"
                            }
                        ],
                        "maxItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                }
            }
        },
        "ClientInfo": {
            "required": [
                "ciApiVersion",
                "ciSoftwareVersion",
                "ciCabalVersion",
                "ciGitRevision"
            ],
            "type": "object",
            "properties": {
                "ciSoftwareVersion": {
                    "$ref": "#/definitions/SoftwareVersion"
                },
                "ciCabalVersion": {
                    "$ref": "#/definitions/Version"
                },
                "ciApiVersion": {
                    "$ref": "#/definitions/ApiVersion"
                },
                "ciGitRevision": {
                    "type": "string"
                }
            }
        },
        "CInitialized": {
            "required": [
                "cTotalTime",
                "cPreInit"
            ],
            "type": "object",
            "properties": {
                "cTotalTime": {
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                },
                "cPreInit": {
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "BlockCount": {
            "required": [
                "getBlockCount"
            ],
            "type": "object",
            "properties": {
                "getBlockCount": {
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "NewBatchPayment": {
            "example": {
                "to": [
                    {
                        "amount": 228,
                        "address": "<address>"
                    },
                    {
                        "amount": 701,
                        "address": "<address>"
                    }
                ],
                "from": "<walletId@accountId>",
                "policy": {
                    "groupingPolicy": "OptimizeForSecurity"
                }
            },
            "required": [
                "to",
                "from",
                "policy"
            ],
            "type": "object",
            "properties": {
                "to": {
                    "items": {
                        "required": [
                            "amount",
                            "address"
                        ],
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "number"
                            },
                            "address": {
                                "type": "string"
                            }
                        }
                    },
                    "type": "array"
                },
                "from": {
                    "type": "string"
                },
                "policy": {
                    "required": [
                        "groupingPolicy"
                    ],
                    "type": "object",
                    "properties": {
                        "groupingPolicy": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Version": {
            "required": [
                "versionBranch",
                "versionTags"
            ],
            "type": "object",
            "properties": {
                "versionTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "versionBranch": {
                    "items": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "WalletResponse WalletUpdate": {
            "example": {
                "status": "success",
                "data": {
                    "assuranceLevel": "normal",
                    "name": "My Wallet"
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "assuranceLevel",
                        "name"
                    ],
                    "type": "object",
                    "properties": {
                        "assuranceLevel": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CWalletRedeem": {
            "required": [
                "crWalletId",
                "crSeed"
            ],
            "type": "object",
            "properties": {
                "crWalletId": {
                    "$ref": "#/definitions/CAccountId"
                },
                "crSeed": {
                    "type": "string"
                }
            }
        },
        "SyncProgress": {
            "required": [
                "_spLocalCD",
                "_spPeers"
            ],
            "type": "object",
            "properties": {
                "_spPeers": {
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                },
                "_spNetworkCD": {
                    "$ref": "#/definitions/ChainDifficulty"
                },
                "_spLocalCD": {
                    "$ref": "#/definitions/ChainDifficulty"
                }
            }
        },
        "CAddress": {
            "required": [
                "cadId",
                "cadAmount",
                "cadIsUsed",
                "cadIsChange"
            ],
            "type": "object",
            "properties": {
                "cadId": {
                    "$ref": "#/definitions/CId"
                },
                "cadIsUsed": {
                    "type": "boolean"
                },
                "cadIsChange": {
                    "type": "boolean"
                },
                "cadAmount": {
                    "$ref": "#/definitions/CCoin"
                }
            }
        },
        "ApplicationName": {
            "required": [
                "getApplicationName"
            ],
            "type": "object",
            "properties": {
                "getApplicationName": {
                    "type": "string"
                }
            }
        },
        "SoftwareVersion": {
            "required": [
                "svAppName",
                "svNumber"
            ],
            "type": "object",
            "properties": {
                "svAppName": {
                    "$ref": "#/definitions/ApplicationName"
                },
                "svNumber": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "CPaperVendWalletRedeem": {
            "required": [
                "pvWalletId",
                "pvSeed",
                "pvBackupPhrase"
            ],
            "type": "object",
            "properties": {
                "pvBackupPhrase": {
                    "$ref": "#/definitions/BackupPhrase"
                },
                "pvSeed": {
                    "type": "string"
                },
                "pvWalletId": {
                    "$ref": "#/definitions/CAccountId"
                }
            }
        },
        "NewAccount": {
            "example": {
                "name": "¯",
                "spendingPassword": ""
            },
            "required": [
                "name",
                "spendingPassword"
            ],
            "type": "object",
            "description": "A type represending an request for creating a(n) Account.",
            "properties": {
                "name": {
                    "type": "string"
                },
                "spendingPassword": {
                    "type": "string"
                }
            }
        },
        "AccountUpdate": {
            "example": {
                "name": "myAccount"
            },
            "required": [
                "name"
            ],
            "type": "object",
            "description": "A type represending an update for an existing Account.",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "WalletResponse Transaction": {
            "example": {
                "status": "success",
                "data": {
                    "amount": 28311699119270855,
                    "inputs": [
                        {
                            "amount": 13019322832706804,
                            "address": "AL91N9VXRTCwikvJJVEQeGTH4wwxtSY8d7m26bFyWD7PmfqUpdYgCV1jigD5ivbzh88BR8FFvdpkU8P3uuispBsdZNXCurGREicGjMW74F7GitSX4oc"
                        }
                    ],
                    "direction": "outgoing",
                    "outputs": [
                        {
                            "amount": 14984536053034711,
                            "address": "2657WMsDfac6JxtEAjpN9KnwE9kfc6jUzhYXRyY3FFPwEyM5nNjPUBHDbFUwndGNx"
                        },
                        {
                            "amount": 13290197696443539,
                            "address": "2657WMsDfac6VJfxAHRezMNbBhvYzrDVf5F2W7s7LGAgtp6m9B5Df8EQkwktLsEee"
                        },
                        {
                            "amount": 21095182977599617,
                            "address": "Un4ZpTvXtoL29niUxfBPFJN3eR135cu799S3t8Pq1Vv48GwBuSEzUPHLDz6SwpewGafkin1iF6itRkKBK4VUiEDZeEH5EKBPg9agUUr9NNKKTsRm"
                        }
                    ],
                    "confirmations": 4,
                    "id": "b53fadd178f752271cfd079aeaf2b791870ede4ed1456d889e43273a8cef87fb",
                    "type": "foreign"
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "amount",
                        "inputs",
                        "direction",
                        "outputs",
                        "confirmations",
                        "id",
                        "type"
                    ],
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number"
                        },
                        "inputs": {
                            "items": {
                                "required": [
                                    "amount",
                                    "address"
                                ],
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "array"
                        },
                        "direction": {
                            "type": "string"
                        },
                        "outputs": {
                            "items": {
                                "required": [
                                    "amount",
                                    "address"
                                ],
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "array"
                        },
                        "confirmations": {
                            "type": "number"
                        },
                        "id": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "CCoin": {
            "required": [
                "getCCoin"
            ],
            "type": "object",
            "properties": {
                "getCCoin": {
                    "type": "string"
                }
            }
        },
        "NewWallet": {
            "example": {
                "backupPhrase": [
                    "entry",
                    "certain",
                    "tourist",
                    "palm",
                    "palm",
                    "rabbit",
                    "worry",
                    "swamp",
                    "plastic",
                    "night",
                    "tourist",
                    "mean"
                ],
                "assuranceLevel": "normal",
                "name": "My Wallet",
                "spendingPassword": "0001010001010101010200020001010201000200010201020202000200010000"
            },
            "required": [
                "backupPhrase",
                "assuranceLevel",
                "name",
                "spendingPassword"
            ],
            "type": "object",
            "description": "A type represending an request for creating a(n) Wallet.",
            "properties": {
                "backupPhrase": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "assuranceLevel": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "spendingPassword": {
                    "type": "string"
                }
            }
        },
        "WalletResponse EstimatedFees": {
            "example": {
                "status": "success",
                "data": {
                    "estimatedAmount": 25132995790248024
                },
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "required": [
                        "estimatedAmount"
                    ],
                    "type": "object",
                    "properties": {
                        "estimatedAmount": {
                            "type": "number"
                        }
                    }
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "WalletResponse [Account]": {
            "example": {
                "status": "success",
                "data": [
                    {
                        "amount": 29208924123228353,
                        "addresses": [
                            "5FCjkr138i9qs2EEjvmXF37aSLiZdwQsALPMmvVDgx8PQ31nJTh9p35ZfnDFn6hfWdyY6XuFQXY23kfUjSuwBSEd4912knFgJSSZSBCt2yo"
                        ],
                        "name": "My account",
                        "walletId": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg",
                        "id": 1
                    },
                    {
                        "amount": 28089727180413548,
                        "addresses": [
                            "7J1MaQmKydNUyekmvgR3VNZLeLYkTNpDTKz4Z5SHfnJxDVgCN3tjixySxMNKNULKaV5XBBngc1e5BNzrePahs1Tuo7xcnKUyvkUm8HNcHuufC5q",
                            "7fiTbReGezWKbx8zhrjdMekrd8kziXqofdzzGPHWKgRXd24pDM7TZSFfnarpCsHy67ZW3AgFRAfFEGuRSd1VSYP5dDyNJJLwKB29vxsFnGq9GPB8x2RittGrrjNXPpgB8b4Y3yBFbpcXeDF7FG13u5gFHrcXwU86MN2CaCpLaaynjRvnitwGnd"
                        ],
                        "name": "My account",
                        "walletId": "J7rQqaLLHBFPrgJXwpktaMB1B1kQBXAyc2uRSfRPzNVGiv6TdxBzkPNBUWysZZZdhFG9gRy3sQFfX5wfpLbi4XTFGFxTg",
                        "id": 0
                    }
                ],
                "meta": {
                    "pagination": {
                        "page": 1,
                        "perPage": 46,
                        "totalPages": 1,
                        "totalEntries": 2
                    }
                }
            },
            "required": [
                "status",
                "data",
                "meta"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "items": {
                        "required": [
                            "amount",
                            "addresses",
                            "name",
                            "walletId",
                            "id"
                        ],
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "number"
                            },
                            "addresses": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "name": {
                                "type": "string"
                            },
                            "walletId": {
                                "type": "string"
                            },
                            "id": {
                                "type": "number"
                            }
                        }
                    },
                    "type": "array"
                },
                "meta": {
                    "required": [
                        "pagination"
                    ],
                    "type": "object",
                    "properties": {
                        "pagination": {
                            "required": [
                                "page",
                                "perPage",
                                "totalPages",
                                "totalEntries"
                            ],
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "perPage": {
                                    "type": "number"
                                },
                                "totalPages": {
                                    "type": "number"
                                },
                                "totalEntries": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "PasswordUpdate": {
            "example": {
                "old": "",
                "new": "0000010001010101000001000202010200010202000102000000000100000100"
            },
            "required": [
                "old",
                "new"
            ],
            "type": "object",
            "description": "A PasswordUpdate incapsulate a request for changing a Wallet's password.",
            "properties": {
                "old": {
                    "type": "string"
                },
                "new": {
                    "type": "string"
                }
            }
        },
        "ChainDifficulty": {
            "required": [
                "getChainDifficulty"
            ],
            "type": "object",
            "properties": {
                "getChainDifficulty": {
                    "$ref": "#/definitions/BlockCount"
                }
            }
        },
        "CId": {
            "type": "string"
        }
    },
    "paths": {
        "/api/backup/import": {
            "post": {
                "summary": "Import full information about wallet from a given file.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilePath"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/pending/summary": {
            "get": {
                "summary": "Get the pending tx summaries.",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PendingTxsSummary"
                            },
                            "type": "array"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/password/{walletId}": {
            "post": {
                "summary": "Change passphrase of given wallet.",
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `new` or `old`"
                    },
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "old",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "new",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/addresses/{address}": {
            "get": {
                "summary": "Returns True if given address is valid, False otherwise.",
                "responses": {
                    "404": {
                        "description": "`address` not found"
                    },
                    "200": {
                        "schema": {
                            "type": "boolean"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "address",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/accounts/{accountId}": {
            "get": {
                "summary": "Get information about a account by its ID",
                "responses": {
                    "404": {
                        "description": "`accountId` not found"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CAccount"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "required": true,
                        "in": "path",
                        "name": "accountId",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "delete": {
                "summary": "Delete an account by ID.",
                "responses": {
                    "404": {
                        "description": "`accountId` not found"
                    },
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "required": true,
                        "in": "path",
                        "name": "accountId",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "put": {
                "summary": "Update account's meta information.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`accountId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CAccount"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "required": true,
                        "in": "path",
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CAccountMeta"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/redemptions/ada": {
            "post": {
                "summary": "Redeem ADA.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletRedeem"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/settings/sync/progress": {
            "get": {
                "summary": "Current sync progress",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SyncProgress"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "description": "Fetch info about local chain difficulty, network chain difficulty and connected peers.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/new": {
            "post": {
                "summary": "Create a new wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletInit"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/wallets/{walletId}": {
            "get": {
                "summary": "Returns the Wallet identified by the given walletId.",
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Wallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V1",
                    "Wallets"
                ]
            },
            "delete": {
                "summary": "Deletes the given Wallet and all its accounts.",
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "204": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V1",
                    "Wallets"
                ]
            },
            "put": {
                "summary": "Update the Wallet identified by the given walletId.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Wallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WalletUpdate"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V1",
                    "Wallets"
                ]
            }
        },
        "/api/settings/time/difference": {
            "get": {
                "summary": "Get local time difference in milliseconds.",
                "responses": {
                    "200": {
                        "schema": {
                            "maximum": 1.8446744073709551615e19,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/{walletId}": {
            "get": {
                "summary": "Get information about a wallet by its ID (address).",
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "delete": {
                "summary": "Delete given wallet with all contained accounts.",
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "put": {
                "summary": "Update wallet's meta information.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletMeta"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/wallets/{walletId}/accounts": {
            "post": {
                "summary": "Creates a new Account for the given Wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Account"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewAccount"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "Accounts",
                    "V1",
                    "Wallets"
                ]
            },
            "get": {
                "summary": "Retrieves the full list of Accounts.",
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `per_page` or `page`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse [Account]"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "minimum": 1,
                        "in": "query",
                        "name": "page",
                        "type": "integer",
                        "description": "The page number to fetch for this request. The minimum is **1**.\nIf nothing is specified, **this value defaults to 1** and always shows the first\nentries in the requested collection.\n"
                    },
                    {
                        "maximum": 50,
                        "default": 10,
                        "minimum": 1,
                        "in": "query",
                        "name": "per_page",
                        "type": "integer",
                        "description": "The number of entries to display for each page. The minimum is **1**, whereas the maximum\nis **50**. If nothing is specified, **this value defaults to 10**.\n"
                    }
                ],
                "tags": [
                    "Accounts",
                    "V1",
                    "Wallets"
                ]
            }
        },
        "/api/v1/updates": {
            "post": {
                "summary": "Applies the update. Returns info about the update being applied.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse WalletUpdate"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "Updates",
                    "V1"
                ]
            }
        },
        "/api/txs/resubmission/reset": {
            "get": {
                "summary": "Clear the 'do not resubmit' flag from transactions that have it.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "description": "For all transactions in CPtxWontApply condition, reset them to CPtxApplying condition so that they will be passed to resubmition",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/settings/version": {
            "get": {
                "summary": "Get current version of the node.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SoftwareVersion"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/resubmission/cancel": {
            "post": {
                "summary": "Cancel all transactions in CPtxApplying condition (unconfirmed).",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/info": {
            "get": {
                "summary": "Get general information about this service.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ClientInfo"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/fee/{from}/{to}/{amount}": {
            "post": {
                "summary": "Estimate fees for performing given transaction.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`from` or `to` or `amount` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CCoin"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "required": true,
                        "in": "path",
                        "name": "from",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "to",
                        "type": "string"
                    },
                    {
                        "maximum": 1.8446744073709551615e19,
                        "minimum": 0,
                        "required": true,
                        "in": "path",
                        "name": "amount",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InputSelectionPolicy"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "description": "Evaluate fee which would be used for transaction created with given parameters. Note that fee may change on any operation on wallet occurs. Transaction will not be actually created.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/backup/export/{walletId}": {
            "post": {
                "summary": "Export full information about wallet to a given file",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilePath"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "description": "Wallet may be later restored from this file with  endpoint above.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/update": {
            "get": {
                "summary": "Get information about the next update.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CUpdateInfo"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/payments/{from}/{to}/{amount}": {
            "post": {
                "summary": "Create a new payment transaction.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`from` or `to` or `amount` not found"
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "required": true,
                        "in": "path",
                        "name": "from",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "name": "to",
                        "type": "string"
                    },
                    {
                        "maximum": 1.8446744073709551615e19,
                        "minimum": 0,
                        "required": true,
                        "in": "path",
                        "name": "amount",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InputSelectionPolicy"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/histories": {
            "get": {
                "summary": "Get the history of transactions.",
                "responses": {
                    "400": {
                        "description": "Invalid `limit` or `skip` or `address` or `accountId` or `walletId`"
                    },
                    "200": {
                        "schema": {
                            "minItems": 2,
                            "items": [
                                {
                                    "items": {
                                        "$ref": "#/definitions/CTx"
                                    },
                                    "type": "array"
                                },
                                {
                                    "maximum": 1.8446744073709551615e19,
                                    "minimum": 0,
                                    "type": "integer"
                                }
                            ],
                            "maxItems": 2,
                            "type": "array"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "in": "query",
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "type": "string"
                    },
                    {
                        "maximum": 1.8446744073709551615e19,
                        "minimum": 0,
                        "in": "query",
                        "name": "skip",
                        "type": "integer"
                    },
                    {
                        "maximum": 1.8446744073709551615e19,
                        "minimum": 0,
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/wallets": {
            "post": {
                "summary": "Creates a new Wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Wallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewWallet"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V1",
                    "Wallets"
                ]
            },
            "get": {
                "summary": "Returns all the available wallets.",
                "responses": {
                    "400": {
                        "description": "Invalid `per_page` or `page`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse [Wallet]"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "default": 1,
                        "minimum": 1,
                        "in": "query",
                        "name": "page",
                        "type": "integer",
                        "description": "The page number to fetch for this request. The minimum is **1**.\nIf nothing is specified, **this value defaults to 1** and always shows the first\nentries in the requested collection.\n"
                    },
                    {
                        "maximum": 50,
                        "default": 10,
                        "minimum": 1,
                        "in": "query",
                        "name": "per_page",
                        "type": "integer",
                        "description": "The number of entries to display for each page. The minimum is **1**, whereas the maximum\nis **50**. If nothing is specified, **this value defaults to 10**.\n"
                    },
                    {
                        "in": "query",
                        "name": "wallet_id",
                        "type": "string",
                        "description": "A **FILTER** operation on a Wallet."
                    },
                    {
                        "in": "query",
                        "name": "balance",
                        "type": "string",
                        "description": "A **FILTER** operation on a Wallet."
                    },
                    {
                        "required": false,
                        "in": "query",
                        "name": "sort_by",
                        "allowEmptyValue": true,
                        "type": "string",
                        "description": "A **SORT** operation on this Wallet. Allowed keys: `balance`.\n"
                    }
                ],
                "tags": [
                    "V1",
                    "Wallets"
                ]
            }
        },
        "/api/test/reset": {
            "post": {
                "summary": "Clear wallet state and remove all secret key.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/transactions/{walletId}": {
            "get": {
                "summary": "Returns the transaction history, i.e the list of all the past transactions.",
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `per_page` or `page`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse [Transaction]"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "minimum": 1,
                        "in": "query",
                        "name": "page",
                        "type": "integer",
                        "description": "The page number to fetch for this request. The minimum is **1**.\nIf nothing is specified, **this value defaults to 1** and always shows the first\nentries in the requested collection.\n"
                    },
                    {
                        "maximum": 50,
                        "default": 10,
                        "minimum": 1,
                        "in": "query",
                        "name": "per_page",
                        "type": "integer",
                        "description": "The number of entries to display for each page. The minimum is **1**, whereas the maximum\nis **50**. If nothing is specified, **this value defaults to 10**.\n"
                    }
                ],
                "tags": [
                    "Transactions",
                    "V1"
                ]
            }
        },
        "/api/wallets": {
            "get": {
                "summary": "Get information about all available wallets.",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CWallet"
                            },
                            "type": "array"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/settings/slots/duration": {
            "get": {
                "summary": "Get blockchain slot duration in milliseconds.",
                "responses": {
                    "200": {
                        "schema": {
                            "maximum": 1.8446744073709551615e19,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/wallets/{walletId}/password": {
            "put": {
                "summary": "Updates the password for the given Wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`walletId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Wallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordUpdate"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V1",
                    "Wallets"
                ]
            }
        },
        "/api/v1/wallets/{walletId}/accounts/{accountId}": {
            "get": {
                "summary": "Retrieves a specific Account, given its Id.",
                "responses": {
                    "404": {
                        "description": "`walletId` or `accountId` not found"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Account"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "maximum": 4294967295,
                        "minimum": 0,
                        "required": true,
                        "in": "path",
                        "name": "accountId",
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Accounts",
                    "V1",
                    "Wallets"
                ]
            },
            "delete": {
                "summary": "Deletes an Account.",
                "responses": {
                    "404": {
                        "description": "`walletId` or `accountId` not found"
                    },
                    "204": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "maximum": 4294967295,
                        "minimum": 0,
                        "required": true,
                        "in": "path",
                        "name": "accountId",
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Accounts",
                    "V1",
                    "Wallets"
                ]
            },
            "put": {
                "summary": "Update an Account for the given Wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "404": {
                        "description": "`walletId` or `accountId` not found"
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Account"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "walletId",
                        "type": "string"
                    },
                    {
                        "maximum": 4294967295,
                        "minimum": 0,
                        "required": true,
                        "in": "path",
                        "name": "accountId",
                        "type": "integer"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountUpdate"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "Accounts",
                    "V1",
                    "Wallets"
                ]
            }
        },
        "/api/wallets/keys": {
            "post": {
                "summary": "Import user's secret key from the path to generate wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilePath"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/transactions": {
            "post": {
                "summary": "Generates a new transaction from the source to one or multiple target addresses.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse Transaction"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "Transactions",
                    "V1"
                ]
            }
        },
        "/api/papervend/redemptions/ada": {
            "post": {
                "summary": "Redeem ADA, paper vending.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CPaperVendWalletRedeem"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/update/postpone": {
            "post": {
                "summary": "Postpone last update.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/addresses/{address}/validity": {
            "get": {
                "summary": "Checks the validity of an address.",
                "responses": {
                    "404": {
                        "description": "`address` not found"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse AddressValidity"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "address",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Addresses",
                    "V1"
                ]
            }
        },
        "/api/txs/payments/batch": {
            "post": {
                "summary": "Create a new payment transaction (can send to multiple recipients).",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewBatchPayment"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/updates/next": {
            "get": {
                "summary": "Requests information about the next scheduled update.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse WalletUpdate"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "Updates",
                    "V1"
                ]
            }
        },
        "/api/system/shutdown": {
            "post": {
                "summary": "Request a shutdown from node.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/accounts": {
            "post": {
                "summary": "Create a new account in given wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CAccount"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CAccountInit"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "get": {
                "summary": "Get information about all available accounts.",
                "responses": {
                    "400": {
                        "description": "Invalid `accountId`"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CAccount"
                            },
                            "type": "array"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "accountId",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/update/apply": {
            "post": {
                "summary": "Apply last update.",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/transactions/fees": {
            "post": {
                "summary": "Estimate the fees which would originate from the payment.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse EstimatedFees"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "Transactions",
                    "V1"
                ]
            }
        },
        "/api/reporting/initialized": {
            "post": {
                "summary": "Send node's report on initialization time.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CInitialized"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/node-settings": {
            "get": {
                "summary": "Retrieves the static settings for this node.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse NodeSettings"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "Settings",
                    "V1"
                ]
            }
        },
        "/api/v1/addresses": {
            "post": {
                "summary": "Creates a new Address.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse WalletAddress"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewAddress"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "Addresses",
                    "V1"
                ]
            },
            "get": {
                "summary": "Returns all the addresses.",
                "responses": {
                    "400": {
                        "description": "Invalid `per_page` or `page`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse [Address]"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "default": 1,
                        "minimum": 1,
                        "in": "query",
                        "name": "page",
                        "type": "integer",
                        "description": "The page number to fetch for this request. The minimum is **1**.\nIf nothing is specified, **this value defaults to 1** and always shows the first\nentries in the requested collection.\n"
                    },
                    {
                        "maximum": 50,
                        "default": 10,
                        "minimum": 1,
                        "in": "query",
                        "name": "per_page",
                        "type": "integer",
                        "description": "The number of entries to display for each page. The minimum is **1**, whereas the maximum\nis **50**. If nothing is specified, **this value defaults to 10**.\n"
                    }
                ],
                "tags": [
                    "Addresses",
                    "V1"
                ]
            }
        },
        "/api/addresses": {
            "post": {
                "summary": "Create a new address in given account.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CAddress"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CAccountId"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/restore": {
            "post": {
                "summary": "Restore existing wallet.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "type": "string"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletInit"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/v1/node-info": {
            "get": {
                "summary": "Retrieves the dynamic information for this node.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletResponse NodeInfo"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "Info",
                    "V1"
                ]
            }
        },
        "/api/profile": {
            "post": {
                "summary": "Update user profile.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CProfile"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CProfile"
                        },
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "get": {
                "summary": "Get user profile's meta data.",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CProfile"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/test/state": {
            "get": {
                "summary": "Print wallet state as JSON",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/WalletStateSnapshot"
                        },
                        "description": ""
                    }
                },
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/resubmission/cancelsingle/{transaction}": {
            "post": {
                "summary": "Cancel specific transaction in CPtxApplying condition.",
                "responses": {
                    "404": {
                        "description": "`transaction` not found"
                    },
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "transaction",
                        "type": "string"
                    }
                ],
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        }
    }
}